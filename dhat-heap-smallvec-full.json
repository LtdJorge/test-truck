{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "target/release/test-truck",
"pid": 561357,
"tg": 425192,
"te": 562251,
"pps": [
{
"tb": 362976,
"tbk": 103,
"tl": 1467415,
"mb": 64704,
"mbk": 6,
"gb": 64704,
"gbk": 6,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
16,
17,
18,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 576,
"tbk": 3,
"tl": 48,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
60,
61,
62,
63,
64,
65,
66,
67,
68,
69,
70,
71,
72,
73,
74,
75,
76,
77,
78,
79,
80,
81
]
},
{
"tb": 384,
"tbk": 6,
"tl": 15939,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
94,
95,
96,
97,
98,
99,
100,
101,
102,
103,
103,
104,
105,
106,
107,
108,
109,
110,
111,
112,
113,
114,
115,
116,
117,
118,
119,
120,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 288,
"tbk": 1,
"tl": 10315,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
146,
147,
148,
149,
150,
151,
152,
153,
154,
155,
156,
157,
158,
159,
159,
160,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
177,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 288,
"tbk": 6,
"tl": 4,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
181,
182,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 856,
"tbk": 4,
"tl": 18877,
"mb": 428,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
197,
198,
199,
200,
201,
202,
203,
204,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143,
178
]
},
{
"tb": 524,
"tbk": 2,
"tl": 80,
"mb": 524,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
222,
223,
224,
225,
226,
227,
228,
229,
230,
231,
232,
233,
234,
235,
236,
237,
238,
239,
240,
241,
238,
242,
243,
244,
245,
246,
247,
248,
249,
250,
251,
252
]
},
{
"tb": 288,
"tbk": 1,
"tl": 16,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
261,
262,
263,
264,
265,
266,
267,
268,
268,
269,
270,
271,
272,
273,
274,
275,
276,
270,
271,
277,
278,
279,
273,
274,
275,
280,
281,
282,
283,
284,
285,
286,
287,
288
]
},
{
"tb": 61296,
"tbk": 1,
"tl": 72,
"mb": 61296,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
290,
291,
292,
293,
294,
295,
296,
297,
298,
299,
300,
301
]
},
{
"tb": 384,
"tbk": 2,
"tl": 2,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
60,
61,
62,
63,
64,
65,
66,
67,
68,
302,
303,
304,
305,
306,
307,
308,
309,
310,
311,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
322,
323,
324,
314,
315,
316,
325,
326
]
},
{
"tb": 192,
"tbk": 4,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143,
178
]
},
{
"tb": 240,
"tbk": 6,
"tl": 23974,
"mb": 120,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
332,
333,
334,
335,
336,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 384,
"tbk": 8,
"tl": 75381,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
339,
340,
341,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143,
178
]
},
{
"tb": 1344,
"tbk": 36,
"tl": 4084,
"mb": 112,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
182,
182,
181,
182,
181,
181
]
},
{
"tb": 1466528,
"tbk": 6547,
"tl": 43549,
"mb": 448,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
344,
345,
346,
347,
348,
349,
350,
351,
352,
353,
354,
355,
351,
356,
357,
358,
359,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42
]
},
{
"tb": 384,
"tbk": 3,
"tl": 818,
"mb": 384,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
381,
382,
383,
143,
178
]
},
{
"tb": 604,
"tbk": 4,
"tl": 63,
"mb": 464,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
384,
385,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
399,
400,
401,
402,
403,
404,
405,
406,
407,
401,
402,
408,
409,
410,
404,
405,
406,
411,
412,
413,
414,
415,
416,
417,
418
]
},
{
"tb": 96,
"tbk": 4,
"tl": 17,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436
]
},
{
"tb": 368,
"tbk": 1,
"tl": 122830,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
437,
438,
439,
440,
441,
442,
443,
444,
445,
446,
447,
448,
448,
449,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 13104,
"tbk": 78,
"tl": 18,
"mb": 1536,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
182,
182,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 440,
"tbk": 2,
"tl": 14493,
"mb": 440,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
467,
468,
469,
470,
471,
472,
473,
474,
475,
476,
477,
478,
479,
480,
481,
337,
338
]
},
{
"tb": 192,
"tbk": 2,
"tl": 0,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
482,
483,
484,
485,
486,
487,
488,
489,
490,
491,
492,
493,
490,
494,
495,
496,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
143,
144
]
},
{
"tb": 288,
"tbk": 2,
"tl": 224662,
"mb": 288,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
517,
518,
519,
520,
521,
522,
523,
524,
525,
526,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 144,
"tbk": 1,
"tl": 18341,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
527,
528,
529,
530,
531,
532,
533,
534,
535,
536,
537,
538,
539,
143,
178
]
},
{
"tb": 160,
"tbk": 4,
"tl": 13243,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
540,
541,
542,
543,
544,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 384,
"tbk": 1,
"tl": 562176,
"mb": 384,
"mbk": 1,
"gb": 384,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
546,
547,
548,
549,
550,
551,
552,
553,
554
]
},
{
"tb": 144,
"tbk": 1,
"tl": 59568,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
555,
556,
557,
558,
559,
560,
561,
562,
563,
564,
565,
566,
567,
143,
144
]
},
{
"tb": 6912,
"tbk": 108,
"tl": 89398,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
568,
569,
570,
571,
572,
573,
574,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 432,
"tbk": 18,
"tl": 16,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
181,
182,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 720,
"tbk": 6,
"tl": 14589,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
575,
576,
577,
578,
579,
580,
581,
582,
583,
584,
585,
586,
587,
588,
589,
590,
591,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 24,
"tbk": 1,
"tl": 0,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
592,
593,
594,
595,
596,
597,
598,
599,
600,
601,
602,
603,
604,
605,
606,
607,
608,
609,
610,
611,
612,
613,
610,
614,
615,
616,
617,
618,
619,
620,
621,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647
]
},
{
"tb": 1976,
"tbk": 118,
"tl": 163,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
648,
649,
650,
651,
652,
653,
654,
655,
656,
657,
658,
659,
660,
661,
662,
663,
664,
665,
666,
667,
668,
669,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 432,
"tbk": 6,
"tl": 2,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
182,
182,
181,
181,
182,
181
]
},
{
"tb": 200,
"tbk": 5,
"tl": 27,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
683,
684,
685,
686,
687,
688,
689,
690,
691,
692,
693,
694,
695,
696,
697,
698,
699,
700,
701,
702,
703,
704,
705,
706,
707,
252
]
},
{
"tb": 120,
"tbk": 3,
"tl": 5,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
708,
709,
710,
711,
712,
713,
714,
715,
716,
717,
718,
719,
720,
721,
722,
723,
724,
725,
726,
727,
728,
729,
730,
731,
716,
732,
733,
734,
143,
178
]
},
{
"tb": 288,
"tbk": 1,
"tl": 4,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
261,
262,
263,
264,
265,
266,
267,
268,
268,
269,
270,
271,
272,
273,
274,
275,
276,
270,
271,
277,
278,
279,
273,
274,
275,
280,
281,
282,
283,
284,
285,
286,
287,
735
]
},
{
"tb": 80,
"tbk": 2,
"tl": 5,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
708,
709,
710,
711,
712,
713,
714,
715,
716,
717,
718,
719,
720,
721,
722,
723,
724,
725,
726,
727,
728,
729,
730,
731,
716,
732,
736,
737,
143,
144
]
},
{
"tb": 192,
"tbk": 2,
"tl": 91891,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
738,
739,
740,
741,
742,
743,
744,
745,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 24,
"tbk": 1,
"tl": 71968,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
746,
747,
748,
749,
750,
751,
752,
753,
754,
755,
418
]
},
{
"tb": 192,
"tbk": 1,
"tl": 25,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
60,
61,
62,
63,
64,
65,
66,
67,
68,
756,
757,
758,
759,
760,
761,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
481,
337,
338
]
},
{
"tb": 288,
"tbk": 2,
"tl": 6312,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
94,
95,
96,
97,
756,
757,
758,
759,
760,
761,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
337,
338
]
},
{
"tb": 44928,
"tbk": 2808,
"tl": 2539,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
762,
763,
764,
765,
766,
767,
350,
351,
352,
353,
354,
355,
351,
356,
357,
358,
359,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 40,
"tbk": 1,
"tl": 2656,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
768,
769,
770,
771,
772,
773,
774,
775,
776,
777,
778,
778,
779,
780,
781,
782,
783,
784,
785,
786,
787,
788,
789,
790,
791,
792,
793,
794,
795,
796,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 784,
"tbk": 21,
"tl": 73,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
421,
422,
421,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 864,
"tbk": 12,
"tl": 1156,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143
]
},
{
"tb": 64,
"tbk": 1,
"tl": 4,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
797,
798,
799,
800,
801,
802,
803,
804,
805,
806,
807,
808,
809,
810,
811,
812,
813,
814,
815,
816,
817,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367
]
},
{
"tb": 428,
"tbk": 2,
"tl": 62,
"mb": 428,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
818,
819,
820,
821,
822,
823,
824,
825,
826,
827,
828,
829,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
841,
178
]
},
{
"tb": 576,
"tbk": 12,
"tl": 15,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
182,
181,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 32,
"tbk": 1,
"tl": 37,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
844,
845,
846,
847,
847,
848,
849,
850,
851,
852,
853,
854,
855,
849,
850,
856,
857,
858,
852,
853,
854,
859,
860,
861,
862,
863,
864,
865,
735
]
},
{
"tb": 672,
"tbk": 1,
"tl": 1705,
"mb": 672,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
874,
875,
876,
877,
878,
879,
880,
881,
882,
883,
337,
338
]
},
{
"tb": 44640,
"tbk": 2790,
"tl": 2426,
"mb": 32,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
762,
763,
764,
765,
766,
767,
350,
351,
352,
353,
354,
355,
351,
356,
357,
358,
359,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370
]
},
{
"tb": 80,
"tbk": 5,
"tl": 14,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
421,
423,
424,
425,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
337,
338
]
},
{
"tb": 696,
"tbk": 29,
"tl": 163,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
884,
885,
886,
887,
888,
889,
890,
891,
892,
893,
894,
895,
896,
897,
898,
899,
900,
901,
902,
903,
904,
901,
905,
906,
907,
908,
909,
910,
911,
912,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 32,
"tbk": 2,
"tl": 5,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
183,
184,
185,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
143,
178
]
},
{
"tb": 128,
"tbk": 1,
"tl": 5,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
913,
914,
915,
916,
917,
737,
143,
178
]
},
{
"tb": 80,
"tbk": 2,
"tl": 5058,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
768,
769,
770,
771,
772,
773,
774,
775,
776,
777,
778,
778,
779,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 576,
"tbk": 12,
"tl": 3,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
181,
182,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 288,
"tbk": 4,
"tl": 1,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
178
]
},
{
"tb": 336,
"tbk": 3,
"tl": 3965,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
421,
423,
424,
425,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
481,
143,
178
]
},
{
"tb": 768,
"tbk": 6,
"tl": 41028,
"mb": 640,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
920,
921,
922,
923,
924,
925,
926,
927,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 1196,
"tbk": 3,
"tl": 30,
"mb": 1016,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
928,
929,
930,
931,
932,
933,
934,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
937,
944,
945,
946,
939,
940,
941,
947,
948,
949,
950,
951,
952,
953,
954,
736,
737,
337,
338
]
},
{
"tb": 800,
"tbk": 40,
"tl": 5,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
967,
968,
969,
970,
971,
972,
973,
288
]
},
{
"tb": 128,
"tbk": 2,
"tl": 4,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
974,
975,
976,
977,
978,
976,
979,
980,
981,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 672,
"tbk": 1,
"tl": 1656,
"mb": 672,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
874,
875,
876,
877,
878,
879,
880,
881,
882,
883,
143,
144
]
},
{
"tb": 432,
"tbk": 9,
"tl": 7,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
182,
181,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 288,
"tbk": 9,
"tl": 327,
"mb": 288,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
982,
983,
984,
985,
986,
987,
988,
989,
986,
990,
991,
992,
993,
994,
995,
996,
997,
998,
999,
252
]
},
{
"tb": 624,
"tbk": 13,
"tl": 8,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
181,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 160,
"tbk": 1,
"tl": 77,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1000,
1001,
1002,
1003,
1004,
1005,
1006,
1007,
1008,
1009,
1010,
1011,
1012,
1013,
1014,
1015,
1006,
1007,
1009,
1016,
1017,
737,
143,
144
]
},
{
"tb": 1008,
"tbk": 7,
"tl": 194222,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
517,
518,
519,
520,
521,
522,
523,
524,
525,
526,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 1680,
"tbk": 6,
"tl": 18519,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1018,
1019,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
756,
757,
758,
759,
760,
761,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
178
]
},
{
"tb": 96,
"tbk": 2,
"tl": 2,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436
]
},
{
"tb": 480,
"tbk": 2,
"tl": 31733,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1030,
1031,
1032,
1033,
472,
473,
474,
475,
476,
477,
478,
479,
480,
221,
143,
144
]
},
{
"tb": 240,
"tbk": 6,
"tl": 24070,
"mb": 120,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
332,
333,
334,
335,
336,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 7200,
"tbk": 30,
"tl": 17789,
"mb": 240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
1047,
1048,
1049,
1050,
1051,
1052,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 160,
"tbk": 1,
"tl": 304,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1030,
1031,
1053,
1054,
1055,
737,
143,
178
]
},
{
"tb": 736,
"tbk": 2,
"tl": 6258,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1056,
1057,
1058,
1059,
1060,
1061,
756,
757,
758,
759,
760,
761,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
143,
144
]
},
{
"tb": 640,
"tbk": 6,
"tl": 160472,
"mb": 640,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
1062,
1063,
1064,
1065,
1066,
1067,
1068,
1069,
1070,
1071,
1072,
1073,
1074,
1075,
1076,
1077,
1078,
1079,
1069,
1070,
1071,
1080,
1081,
1082,
1083,
1084,
1085,
221,
143,
178
]
},
{
"tb": 1152,
"tbk": 6,
"tl": 12849,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1086,
1087,
1088,
1089,
1090,
1091,
1092,
1093,
1094,
1095,
1096,
1097,
1098,
1099,
1097,
1100,
1101,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 54192,
"tbk": 71,
"tl": 27282,
"mb": 11088,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1102,
1103,
1104,
1105,
1106,
1107,
1108,
1109,
1110,
1111,
1112,
1113,
1114,
1115,
1116,
1117,
1118,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 112,
"tbk": 7,
"tl": 34,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
421,
421,
421,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 800,
"tbk": 4,
"tl": 12938,
"mb": 400,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1119,
1120,
1121,
1122,
1123,
1124,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 1920,
"tbk": 30,
"tl": 54,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1125,
1126,
1127,
1128,
1129,
1130,
1131,
1132,
1133,
1134,
1135,
1136,
1137,
1138,
1139,
1140,
1141,
1142,
1143,
1144,
1145,
1146,
1147,
1148,
1149,
1150,
1151,
1152,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 120,
"tbk": 3,
"tl": 13205,
"mb": 120,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1163,
1164,
780,
781,
782,
783,
784,
785,
786,
787,
788,
789,
790,
791,
792,
793,
794,
795,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 240,
"tbk": 6,
"tl": 34419,
"mb": 200,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1166,
1167,
1168,
1169,
1170,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 160,
"tbk": 4,
"tl": 2134,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1171,
1172,
1173,
1174,
1175,
1176,
1177,
1178,
1178,
1179,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1191,
1192,
1193,
1194,
1195,
1196,
1197,
1198,
1199,
1200,
1201,
1202,
1203,
1204,
1205,
1206,
1207,
1208,
1209,
1210,
1211,
1212
]
},
{
"tb": 784,
"tbk": 21,
"tl": 12,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
421,
422,
421,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 336,
"tbk": 7,
"tl": 31,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
421,
421,
422,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 336,
"tbk": 7,
"tl": 9,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
421,
422,
422,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 3456,
"tbk": 54,
"tl": 1687494,
"mb": 3456,
"mbk": 54,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
1213,
1214,
1215,
1216,
1217,
1218,
1219,
1220,
1221,
1222,
1223,
1224,
1225,
1226,
1227,
1228,
1229,
1230,
481,
143,
178
]
},
{
"tb": 288,
"tbk": 6,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
181,
182,
182,
181,
181,
183,
184,
185
]
},
{
"tb": 40,
"tbk": 1,
"tl": 169881,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1231,
1232,
1233,
1234,
1235,
1236,
1237,
1238,
1239,
1240,
1241,
1242,
1243,
1244,
1245,
1245,
1246,
1247,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1191,
1192,
1193,
1194,
1195,
1196,
1197,
1198,
1199,
1200,
1201,
1248,
1249,
1250,
1251,
1252,
1253,
1254,
1255,
1256,
1257,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
1266,
1267,
1268,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
1266,
1267,
1268
]
},
{
"tb": 760,
"tbk": 19,
"tl": 5432,
"mb": 120,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1171,
1172,
1173,
1174,
1175,
1176,
1177,
1178,
1178,
1179,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1191,
1192,
1193,
1194,
1195,
1196,
1197,
1198,
1199,
1200,
1201,
1248,
1249,
1250,
1251,
1252,
1253,
1254,
1255,
1256,
1257,
1269,
1270,
1271,
1272,
1273,
1274,
1275,
1276,
1277,
1278
]
},
{
"tb": 1152,
"tbk": 18,
"tl": 1441770,
"mb": 1152,
"mbk": 18,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
94,
95,
96,
97,
443,
444,
445,
446,
447,
448,
448,
449,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 168,
"tbk": 2,
"tl": 23,
"mb": 84,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
1279,
1280,
1281,
1282,
1283,
1284,
1285,
1286,
1286,
1287,
1288,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
917,
734,
143,
144
]
},
{
"tb": 112,
"tbk": 3,
"tl": 0,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
421,
423,
424,
425,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
481,
143,
144
]
},
{
"tb": 11664,
"tbk": 30,
"tl": 17719,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1308,
1309,
1310,
1311,
1312,
1313,
1314,
1315,
1316,
1317,
1318,
1319,
1320,
1321,
1322,
1323,
1324,
1325,
1326,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 70560,
"tbk": 30,
"tl": 17808,
"mb": 3120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1319,
1320,
1321,
1322,
1323,
1324,
1325,
1326,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 64,
"tbk": 2,
"tl": 651,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
381,
382,
1335,
143,
178
]
},
{
"tb": 240,
"tbk": 4,
"tl": 7970,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
1338,
1339,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 96,
"tbk": 1,
"tl": 106367,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
1340,
1341,
1342,
1343,
1344,
1345,
1346,
1347,
1348,
1349,
1350,
1351,
1352,
1353,
1354,
1355,
1356,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647
]
},
{
"tb": 32,
"tbk": 1,
"tl": 562223,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1357,
1358,
1359,
1360,
1361
]
},
{
"tb": 8064,
"tbk": 18,
"tl": 12971,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1362,
1363,
1364,
1365,
1366,
1367,
1368,
1369,
1370,
1371,
1372,
1373,
1374,
1375,
1376,
1377,
1378,
1379,
1380,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 320,
"tbk": 4,
"tl": 450,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1381,
1382,
733,
737,
143,
178
]
},
{
"tb": 1328,
"tbk": 1,
"tl": 14,
"mb": 1328,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
1383,
1384,
1385,
1386,
1387,
1388,
1389,
1390,
1391,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
252
]
},
{
"tb": 16,
"tbk": 1,
"tl": 5,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1404,
1405,
1406,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 576,
"tbk": 12,
"tl": 5,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
181,
181,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 640,
"tbk": 14,
"tl": 21,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1407,
1408,
1409,
1410,
1411,
1412,
1413,
1414,
1415,
1416,
1417,
1418,
1419,
1420,
1421,
1422,
1423,
1424,
1425,
1426,
1427,
1428,
1429,
1430,
1431,
1432,
1433
]
},
{
"tb": 1104,
"tbk": 4,
"tl": 12401,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1018,
1019,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
756,
757,
758,
759,
760,
761,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143,
178
]
},
{
"tb": 972,
"tbk": 3,
"tl": 70,
"mb": 824,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
1442,
1443,
1444,
1445,
1446,
1447,
1448,
1449,
1449,
1450,
1451,
1452,
1453,
1454,
1455,
1456,
1457,
1458,
1459,
1460,
1461,
1462,
1463,
1017,
737,
143,
178
]
},
{
"tb": 768,
"tbk": 6,
"tl": 1736,
"mb": 768,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
1464,
1465,
1055,
734,
143,
178
]
},
{
"tb": 288,
"tbk": 9,
"tl": 317,
"mb": 288,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
1466,
1467,
1468,
1469,
1470,
1471,
1472,
1473,
1470,
1474,
1475,
1476,
1477,
1478,
1479,
1480,
1481,
1482,
1483,
178
]
},
{
"tb": 240,
"tbk": 1,
"tl": 63158,
"mb": 240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1484,
1485,
1486,
1487,
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
1497,
337,
338
]
},
{
"tb": 120,
"tbk": 3,
"tl": 1115,
"mb": 120,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1171,
1172,
1173,
1174,
1175,
1176,
1177,
1178,
1178,
1179,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42,
1508,
1509,
1188,
1189,
1190,
1191,
1192,
1193,
1194,
1195,
1196,
1197,
1198,
1199,
1200,
1201
]
},
{
"tb": 2352,
"tbk": 21,
"tl": 12,
"mb": 288,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
421,
422,
421,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 1152,
"tbk": 9,
"tl": 65693,
"mb": 1152,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
1062,
1063,
1064,
1065,
1066,
1067,
1068,
1069,
1070,
1071,
1072,
1073,
1074,
1075,
1076,
1077,
1078,
1079,
1069,
1070,
1071,
1080,
1081,
1082,
1083,
1084,
1085,
481,
143,
144
]
},
{
"tb": 832,
"tbk": 7,
"tl": 2449,
"mb": 352,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1510,
1511,
1512,
1513,
1514,
1515,
1516,
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
1525,
1526,
1527,
1528,
1529,
1530,
1531,
1532,
1533,
1534,
1535,
1536,
1537,
1538,
1539,
1540,
1541,
1542,
1543,
1544,
1545,
1546,
1547,
1548,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 604,
"tbk": 4,
"tl": 52,
"mb": 464,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
384,
385,
386,
387,
388,
389,
390,
391,
1549,
1550,
1551,
1552,
1553,
1554,
1555,
1556,
1556,
1557,
1558,
1559,
1560,
1561,
1562,
1563,
1564,
1558,
1559,
1565,
1566,
1567,
1561,
1562,
1563,
1568,
1569,
1570,
1571,
1572,
1573,
1574,
144
]
},
{
"tb": 240,
"tbk": 6,
"tl": 11,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1575,
1576,
1577,
1578,
1579,
1580,
1581,
1582,
1583,
1584,
1585,
1586,
1587,
1588,
1589,
1590,
1591,
1592,
1593,
1594,
1595,
1583,
1596,
1597,
1598,
1599,
735
]
},
{
"tb": 80,
"tbk": 2,
"tl": 1114862,
"mb": 80,
"mbk": 2,
"gb": 80,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
1600,
1601,
1602,
1603,
1604,
1605,
1606,
1607,
1608,
1609,
1610,
1611,
1612,
1613,
1614,
1615,
1616,
1617,
1618,
1619,
1620,
1621,
1622,
1623,
1624,
1625,
1626,
1627,
1628,
1629,
1630,
1631,
1632,
1633,
1618,
1619,
1620,
1621,
1622,
1623,
1624,
1628,
1634,
1635,
1636,
81
]
},
{
"tb": 96,
"tbk": 6,
"tl": 18,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143
]
},
{
"tb": 160,
"tbk": 4,
"tl": 13115,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
540,
541,
542,
543,
544,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 120,
"tbk": 3,
"tl": 13217,
"mb": 120,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1163,
1164,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
796,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 256,
"tbk": 8,
"tl": 4860,
"mb": 256,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
1464,
1465,
383,
337,
338
]
},
{
"tb": 384,
"tbk": 6,
"tl": 16697,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
94,
95,
96,
97,
98,
99,
100,
101,
102,
103,
103,
104,
105,
106,
107,
108,
109,
110,
111,
112,
113,
114,
115,
116,
117,
118,
119,
120,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 293664,
"tbk": 1311,
"tl": 19144,
"mb": 448,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1637,
1638,
1639,
1640,
1641,
1642,
1643,
1644,
1645,
1646,
1647,
1648,
1649,
1650,
1650,
1651,
1652,
1652,
1653,
1654,
1655,
1656,
1657,
1658,
1659,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 64,
"tbk": 2,
"tl": 40,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
1660,
1661,
1662,
1663,
1663,
1664,
1665,
1666,
1667,
1668,
1669,
1670,
1671,
1665,
1666,
1672,
1673,
1674,
1668,
1669,
1670,
1675,
1676,
1677,
1678,
1572,
1573,
1574,
178
]
},
{
"tb": 336,
"tbk": 42,
"tl": 1751,
"mb": 336,
"mbk": 42,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1679,
1680,
1681,
1682,
1681,
1683,
1684,
1685,
1686,
1687,
1688,
1689,
1690,
841,
144
]
},
{
"tb": 1472,
"tbk": 4,
"tl": 12478,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1056,
1057,
1058,
1059,
1060,
1061,
756,
757,
758,
759,
760,
761,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143,
178
]
},
{
"tb": 200,
"tbk": 1,
"tl": 122804,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1691,
1692,
1693,
1694,
1695,
1696,
1697,
1698,
1699,
1700,
1701,
1701,
1702,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 224,
"tbk": 3,
"tl": 0,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
1703,
1704,
1705,
1706,
1572,
1573,
1574,
144
]
},
{
"tb": 3024,
"tbk": 27,
"tl": 550431,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 1104,
"tbk": 3,
"tl": 436763,
"mb": 1104,
"mbk": 3,
"gb": 736,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
437,
438,
439,
440,
441,
442,
443,
444,
445,
446,
447,
448,
448,
449,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 168,
"tbk": 2,
"tl": 21,
"mb": 84,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
1279,
1280,
1281,
1282,
1283,
1284,
1285,
1286,
1286,
1287,
1288,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
917,
734,
337,
338
]
},
{
"tb": 128,
"tbk": 2,
"tl": 6,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
482,
483,
484,
485,
486,
487,
488,
489,
490,
491,
492,
493,
490,
494,
495,
496,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
481,
143,
178
]
},
{
"tb": 800,
"tbk": 4,
"tl": 99614,
"mb": 400,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1717,
1718,
1719,
1720,
1721,
1722,
1723,
1724,
1725,
1726,
1727,
1727,
1728,
105,
106,
107,
108,
109,
110,
111,
112,
113,
114,
115,
116,
117,
118,
119,
120,
981,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 32,
"tbk": 2,
"tl": 8,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436
]
},
{
"tb": 48,
"tbk": 3,
"tl": 10,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
181,
181,
182,
182,
181,
182
]
},
{
"tb": 256,
"tbk": 2,
"tl": 2625,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
1729,
1730,
1731,
1732,
1733,
1734,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
1266,
1267,
1268,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
1266,
1267,
1268,
1269,
1270,
1271,
1272,
1273,
1274,
1275,
1276,
1277,
1278,
40,
41,
42
]
},
{
"tb": 288,
"tbk": 2,
"tl": 6253,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
94,
95,
96,
97,
756,
757,
758,
759,
760,
761,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
143,
144
]
},
{
"tb": 48,
"tbk": 1,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
421,
423,
424,
425,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
481,
143,
144
]
},
{
"tb": 160,
"tbk": 2,
"tl": 9,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
708,
709,
710,
711,
712,
713,
714,
715,
716,
717,
718,
719,
720,
721,
722,
723,
724,
725,
726,
727,
728,
729,
730,
731,
716,
732,
733,
737,
143,
144
]
},
{
"tb": 96,
"tbk": 6,
"tl": 18,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
182,
182,
181,
181,
182,
183,
184,
185
]
},
{
"tb": 1296,
"tbk": 9,
"tl": 283424,
"mb": 1296,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
1213,
1214,
1215,
1216,
1217,
1218,
1219,
1220,
1221,
1222,
1223,
1224,
1225,
1226,
1227,
1228,
1229,
1230,
481,
143,
144
]
},
{
"tb": 480,
"tbk": 20,
"tl": 5,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143
]
},
{
"tb": 70560,
"tbk": 30,
"tl": 17733,
"mb": 3120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1319,
1320,
1321,
1322,
1323,
1324,
1325,
1326,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 160,
"tbk": 1,
"tl": 295,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1030,
1031,
1735,
1736,
1055,
737,
143,
144
]
},
{
"tb": 1216,
"tbk": 14,
"tl": 1,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1737,
1738,
1739,
1740,
1741,
1742,
1743,
1744,
1745,
1746,
1747,
1748,
1745,
1749,
1750,
1751,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
337,
338
]
},
{
"tb": 2016,
"tbk": 18,
"tl": 12545,
"mb": 384,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
144
]
},
{
"tb": 70560,
"tbk": 30,
"tl": 2313,
"mb": 3120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1752,
1753,
1754,
1755,
1756,
1757,
1758,
1759,
1760,
1761,
1762,
1763,
1764,
1765,
1766,
1767,
1768,
1769,
1770,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 200,
"tbk": 1,
"tl": 562229,
"mb": 200,
"mbk": 1,
"gb": 200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1771,
1772,
1773,
1774,
1775,
1776,
1777,
1778,
1779,
1780
]
},
{
"tb": 768,
"tbk": 6,
"tl": 40409,
"mb": 640,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
920,
921,
922,
923,
924,
925,
926,
927,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 112,
"tbk": 3,
"tl": 0,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
421,
423,
424,
425,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
481,
337,
338
]
},
{
"tb": 360,
"tbk": 1,
"tl": 384,
"mb": 360,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1781,
1782,
1783,
1784,
1785,
1786,
1787,
1788,
1789,
1790,
1791,
883,
143,
178
]
},
{
"tb": 120,
"tbk": 3,
"tl": 14,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1407,
1408,
1409,
1410,
1411,
1412,
1413,
1414,
1415,
1416,
1417,
1418,
1419,
1420,
1421,
1422,
1423,
1424,
1425,
1426,
1305,
1306,
1307,
733,
734,
337,
338
]
},
{
"tb": 524,
"tbk": 3,
"tl": 65,
"mb": 440,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
1279,
1280,
1281,
1282,
1283,
1284,
1285,
1286,
1286,
1287,
1288,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
736,
734,
337,
338
]
},
{
"tb": 2688,
"tbk": 18,
"tl": 2888,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1792,
1793,
1794,
1795,
1796,
1797,
1798,
1799,
1800,
1801,
1802,
1803,
1804,
1805,
1806,
1807,
1808,
1809,
1810,
1811,
1812,
1813,
1814,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 288,
"tbk": 18,
"tl": 401,
"mb": 32,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1815,
1816,
1817,
1818,
1819,
1820,
1821,
1822,
1823,
1824,
1825,
1826,
1827,
1828,
1829,
1830,
1831,
1832,
1822,
1823,
1833,
1834,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 288,
"tbk": 1,
"tl": 159,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1835,
1836,
1837,
1838,
1839,
1840,
1841,
1842,
1843,
1844,
1845,
1846,
1847,
1848,
1849,
1849,
1850,
1851,
1852,
1853,
1854,
1855,
1856,
1857,
1858,
1859,
1860,
1861,
1862,
1863,
1864,
1865,
1866,
177,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 560,
"tbk": 15,
"tl": 10,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
421,
422,
422,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 3360,
"tbk": 3,
"tl": 14,
"mb": 1920,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
1867,
1868,
1869,
1870,
1871,
1872,
1873,
1874,
1875,
1876,
1877,
1878,
1879,
1880,
1881,
1882
]
},
{
"tb": 192,
"tbk": 2,
"tl": 443,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
1883,
1884,
1055,
734,
337,
338
]
},
{
"tb": 524,
"tbk": 2,
"tl": 18,
"mb": 524,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
928,
929,
930,
931,
932,
933,
934,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
937,
944,
945,
946,
939,
940,
941,
947,
948,
949,
950,
951,
952,
953,
954,
736,
737,
143,
144
]
},
{
"tb": 272,
"tbk": 17,
"tl": 35,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1404,
1405,
1406,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
337,
338
]
},
{
"tb": 2636,
"tbk": 8,
"tl": 17008,
"mb": 824,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
197,
198,
199,
200,
201,
202,
203,
204,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
144
]
},
{
"tb": 864,
"tbk": 3,
"tl": 240268,
"mb": 864,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1018,
1019,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
443,
444,
445,
446,
447,
448,
448,
449,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 96,
"tbk": 2,
"tl": 5062,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1835,
1836,
1837,
1838,
1839,
1840,
1841,
1842,
1843,
1844,
1845,
1846,
1847,
1848,
1849,
1849,
1850,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 2208,
"tbk": 6,
"tl": 18791,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
437,
438,
439,
440,
441,
442,
756,
757,
758,
759,
760,
761,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
144
]
},
{
"tb": 624,
"tbk": 13,
"tl": 7,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
181,
182,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 2688,
"tbk": 18,
"tl": 2887,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1792,
1793,
1885,
1886,
1887,
1888,
1889,
1890,
1891,
1892,
1893,
1894,
1895,
1896,
1897,
1898,
1899,
1900,
1901,
1902,
1903,
1904,
1905,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 1104,
"tbk": 3,
"tl": 240340,
"mb": 1104,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
437,
438,
439,
440,
441,
442,
443,
444,
445,
446,
447,
448,
448,
449,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 1248,
"tbk": 6,
"tl": 2,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42
]
},
{
"tb": 256,
"tbk": 4,
"tl": 10,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
974,
975,
976,
977,
978,
976,
979,
980,
1124,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 4208,
"tbk": 258,
"tl": 492,
"mb": 176,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
648,
649,
650,
651,
652,
653,
654,
655,
656,
657,
658,
659,
660,
661,
662,
663,
664,
665,
666,
1906,
1907,
1908,
1909,
1910,
1911,
1912,
1913,
1914,
1915,
1916,
1917,
1918,
1919,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 2664,
"tbk": 24,
"tl": 586,
"mb": 240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
181,
182,
182,
182,
181,
183,
184,
185
]
},
{
"tb": 1152,
"tbk": 18,
"tl": 2620318,
"mb": 1152,
"mbk": 18,
"gb": 768,
"gbk": 12,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
94,
95,
96,
97,
443,
444,
445,
446,
447,
448,
448,
449,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 384,
"tbk": 6,
"tl": 107032,
"mb": 320,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1920,
1921,
1922,
1923,
1924,
1925,
1926,
1922,
1923,
1924,
1927,
221,
143,
178
]
},
{
"tb": 128,
"tbk": 1,
"tl": 36,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1928,
1929,
1930,
1931,
1932,
1933,
1934,
1935,
1936,
1937,
1938,
1939,
1940,
1941,
1942,
1943,
1944,
1945,
1946,
1947,
1948,
1949,
1950,
1951,
1952,
1953,
1954,
1955,
1956,
1957,
1958,
1958,
1959,
1960,
1961,
1962,
1963,
1964,
1965,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
735
]
},
{
"tb": 480,
"tbk": 60,
"tl": 2904,
"mb": 480,
"mbk": 60,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1679,
1680,
1681,
1682,
1681,
1683,
1684,
1685,
1686,
1687,
1688,
1689,
1690,
1966,
1967
]
},
{
"tb": 368,
"tbk": 1,
"tl": 212112,
"mb": 368,
"mbk": 1,
"gb": 368,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1056,
1057,
1058,
1059,
1060,
1061,
98,
99,
100,
101,
102,
103,
103,
104,
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1980,
1981,
1982,
1983,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 1368,
"tbk": 1,
"tl": 46,
"mb": 1368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1984,
1985,
1986,
1987,
1988,
1989,
1990,
1991,
1992,
1993,
1994,
1995,
1996,
1997,
1998,
1999,
2000,
2001,
2002,
2003,
2004,
2005,
2006,
2007,
2008,
2009,
2010,
2011,
2012,
2013,
2014,
2015,
2016,
2017,
2018,
2019,
2020,
2021,
2022,
2023,
2024,
2025,
2026,
2023,
2027,
2028,
2029,
2030,
2031,
2032,
2033,
2034,
2035,
2036,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42
]
},
{
"tb": 43464,
"tbk": 71,
"tl": 33386,
"mb": 6288,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1102,
1103,
1104,
1105,
1106,
1107,
1108,
1109,
1110,
1111,
1112,
1113,
1114,
1115,
1116,
1117,
1118,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 128,
"tbk": 8,
"tl": 25,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143
]
},
{
"tb": 336,
"tbk": 21,
"tl": 1947,
"mb": 32,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2037,
2038,
2039,
2040,
2041,
2042,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 96,
"tbk": 2,
"tl": 2,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
182,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 400,
"tbk": 2,
"tl": 8087,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1119,
1120,
1121,
1122,
1123,
981,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 672,
"tbk": 18,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
178
]
},
{
"tb": 18384,
"tbk": 23,
"tl": 3864,
"mb": 5664,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1102,
1103,
1104,
1105,
1106,
1107,
1108,
1109,
1110,
1111,
1112,
1113,
1114,
1115,
1116,
1117,
1118,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 128,
"tbk": 4,
"tl": 126109,
"mb": 128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
2043,
2044,
2045,
2046,
2047,
2048,
221,
337,
338
]
},
{
"tb": 98208,
"tbk": 10,
"tl": 3730,
"mb": 49152,
"mbk": 1,
"gb": 49152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
2049,
2050,
2051,
2052,
2053,
2054,
2055,
2056,
2057,
2058,
2059,
2060,
2061,
2062,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367
]
},
{
"tb": 428,
"tbk": 2,
"tl": 51,
"mb": 428,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
818,
819,
820,
821,
822,
823,
824,
825,
826,
827,
828,
829,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
1017,
737,
337,
338
]
},
{
"tb": 384,
"tbk": 1,
"tl": 562223,
"mb": 384,
"mbk": 1,
"gb": 384,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2063,
2064,
2065,
2066,
2067,
2068,
2069,
2070,
2071
]
},
{
"tb": 240,
"tbk": 5,
"tl": 19,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
422,
422,
421,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 1517280,
"tbk": 14,
"tl": 1017,
"mb": 242040,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2072,
2073,
2074,
2075,
2076,
2077,
2078,
2079,
2080,
2081,
2082,
2083,
2084,
2085,
2086,
2087,
2088,
2089,
2090
]
},
{
"tb": 1920,
"tbk": 12,
"tl": 5291,
"mb": 1120,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1484,
1485,
2091,
2092,
2093,
2094,
2095,
2096,
2097,
2098,
2099,
2100,
2101,
2102,
2103,
2104,
2105,
2106,
2107,
2108,
2109,
2110,
2111,
2112,
2113,
2114,
2115,
2116,
2117,
2118,
2119,
2120,
40,
41,
42,
2121,
2122,
2108,
2109,
2110
]
},
{
"tb": 240,
"tbk": 6,
"tl": 5,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2123,
2124,
2125,
2126,
2127,
2128,
2129,
2130,
2131,
2132,
2133,
2134,
2135,
2136,
2137,
2138,
2139,
2140,
2141,
2142,
2143,
2144,
2145,
736,
734,
143,
144
]
},
{
"tb": 360,
"tbk": 2,
"tl": 14,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
928,
929,
930,
931,
932,
933,
934,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
937,
944,
945,
946,
939,
940,
941,
947,
948,
949,
950,
951,
952,
953,
954,
917,
734,
143,
144
]
},
{
"tb": 416,
"tbk": 13,
"tl": 4661,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2146,
2147,
2148,
2149,
2150,
2151,
2152,
1531,
1532,
1533,
1534,
1535,
1536,
1537,
1538,
2153,
2154,
2155,
2156,
2157,
2158,
2159,
2160,
2161,
2162,
2163,
1539,
1540,
1541,
1542,
1543,
1544,
1545,
1546,
1547,
1548,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 192,
"tbk": 2,
"tl": 563,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
381,
382,
1055,
737,
143,
178
]
},
{
"tb": 200,
"tbk": 1,
"tl": 562240,
"mb": 200,
"mbk": 1,
"gb": 200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2164,
2165,
2166,
2167,
2168,
2169,
2170,
2171,
2172
]
},
{
"tb": 384,
"tbk": 6,
"tl": 1272597,
"mb": 384,
"mbk": 6,
"gb": 384,
"gbk": 6,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
94,
95,
96,
97,
98,
99,
100,
101,
102,
103,
103,
104,
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1980,
1981,
1982,
1983,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 2160,
"tbk": 54,
"tl": 17,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
181,
181,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 1680,
"tbk": 15,
"tl": 14552,
"mb": 384,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
421,
423,
424,
425,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
337,
338
]
},
{
"tb": 368,
"tbk": 1,
"tl": 36406,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
437,
438,
439,
440,
441,
442,
2173,
2174,
2175,
2176,
2177,
2178,
2179,
2180,
2181,
2182,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 480,
"tbk": 4,
"tl": 1,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
1703,
1704,
1705,
2183,
2184,
2185,
2186,
288
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1404,
1405,
1406,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
481,
143,
178
]
},
{
"tb": 524,
"tbk": 2,
"tl": 71,
"mb": 524,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
222,
223,
224,
225,
226,
227,
228,
229,
2187,
2188,
2189,
2190,
2191,
2192,
2193,
2194,
2195,
2196,
2197,
2198,
2195,
2199,
2200,
2201,
2202,
2203,
2204,
2205,
1481,
1482,
1483,
178
]
},
{
"tb": 2632,
"tbk": 9,
"tl": 8884,
"mb": 1448,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2206,
2207,
2208,
2209,
2210,
2211,
2212,
2213,
2214,
2215,
2216,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 120,
"tbk": 3,
"tl": 19,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1407,
1408,
1409,
1410,
1411,
1412,
1413,
1414,
1415,
1416,
1417,
1418,
1419,
1420,
1421,
1422,
1423,
1424,
1425,
1426,
1305,
1306,
1307,
733,
734,
143,
144
]
},
{
"tb": 4600,
"tbk": 115,
"tl": 1960007,
"mb": 680,
"mbk": 17,
"gb": 80,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
1231,
1232,
1233,
1234,
1235,
1236,
1237,
1238,
1239,
1240,
1241,
1242,
1243,
1244,
1245,
1245,
1246,
1247,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 640,
"tbk": 8,
"tl": 404,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1381,
1382,
736,
734,
143,
144
]
},
{
"tb": 320,
"tbk": 4,
"tl": 6,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1381,
1382,
917,
734,
143,
144
]
},
{
"tb": 400,
"tbk": 2,
"tl": 163666,
"mb": 400,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1691,
1692,
1693,
1694,
1695,
1696,
1697,
1698,
1699,
1700,
1701,
1701,
1702,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
1124,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 4176,
"tbk": 24,
"tl": 35122,
"mb": 1152,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2217,
2218,
2219,
2220,
2221,
2222,
2223,
2224,
2225,
2226,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 192,
"tbk": 2,
"tl": 501,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
381,
382,
1055,
737,
337,
338
]
},
{
"tb": 1200,
"tbk": 1,
"tl": 41543,
"mb": 1200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1781,
1782,
1783,
1784,
1785,
1786,
1787,
1788,
1789,
1790,
1791,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
288
]
},
{
"tb": 144,
"tbk": 6,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
182,
181,
181,
181,
182,
183,
184,
185
]
},
{
"tb": 67072,
"tbk": 1048,
"tl": 21227,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2227,
2228,
2229,
2230,
2231,
2232,
2233,
2234,
2235,
2236,
2237,
2238,
2239,
2240,
2241,
2242,
2243,
2244,
2245,
2246,
2247,
2248,
2238,
2249,
2240,
2241,
2242,
2243,
2244,
2250,
2246,
2247,
2251,
2252,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42
]
},
{
"tb": 80,
"tbk": 2,
"tl": 5,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
708,
709,
710,
711,
712,
713,
714,
715,
716,
717,
718,
719,
720,
721,
722,
723,
724,
725,
726,
727,
728,
729,
730,
731,
716,
732,
733,
737,
337,
338
]
},
{
"tb": 32768,
"tbk": 32,
"tl": 17975508,
"mb": 32768,
"mbk": 32,
"gb": 32768,
"gbk": 32,
"eb": 32768,
"ebk": 32,
"fs": [
2253,
2254,
2255,
2256,
2257,
2258,
2259,
2260,
2261,
2262,
2261,
2263,
2264,
2265,
2266,
2267,
2268,
2269,
2270,
2271,
1939,
1940,
1941,
1942,
1943,
1944,
1945,
1946,
1947,
1948,
1949,
1950,
1951,
1952,
1953,
1954,
1955,
1956,
1957,
1958,
1958,
1959,
1960,
1961,
1962,
1963,
1964,
1965,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
735
]
},
{
"tb": 16,
"tbk": 2,
"tl": 5,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2272,
2273,
2274,
2275,
1017,
734,
143,
144
]
},
{
"tb": 80,
"tbk": 5,
"tl": 18,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
182,
182,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 208,
"tbk": 13,
"tl": 392,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2276,
2277,
2278,
2279,
2280,
2281,
2282,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 432,
"tbk": 3,
"tl": 240326,
"mb": 432,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
94,
95,
96,
97,
443,
444,
445,
446,
447,
448,
448,
449,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 960,
"tbk": 5,
"tl": 132,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
60,
61,
62,
63,
64,
65,
66,
67,
68,
756,
757,
758,
759,
760,
761,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
144
]
},
{
"tb": 288,
"tbk": 1,
"tl": 10012,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
146,
147,
148,
149,
150,
151,
152,
153,
154,
155,
156,
157,
158,
159,
159,
160,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
177,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 896,
"tbk": 8,
"tl": 1671,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1510,
1511,
1512,
1513,
1514,
1515,
1516,
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
1525,
1526,
1527,
1528,
1529,
1530,
1531,
1532,
1533,
1534,
1535,
1536,
1537,
1538,
2153,
2154,
2155,
2156,
2157,
2158,
2159,
2160,
2161,
2162,
2163,
2153,
2154,
2155,
2156,
2157,
2158,
2159,
2160,
2283,
2284,
2285,
2286,
2287,
2288,
2289,
2290,
2291,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 368,
"tbk": 1,
"tl": 31841,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1056,
1057,
1058,
1059,
1060,
1061,
2173,
2174,
2175,
2176,
2177,
2178,
2179,
2180,
2181,
2182,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 80,
"tbk": 2,
"tl": 309,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1231,
1232,
1233,
1234,
1235,
1236,
1237,
1238,
1239,
1240,
1241,
1242,
1243,
1244,
1245,
1245,
1246,
1247,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42,
1508,
1509,
1188,
1189,
1190,
1191,
1192,
1193,
1194,
1195,
1196,
1197,
1198,
1199,
1200,
1201,
1248,
1249,
1250,
1251,
1252,
1253,
1254,
1255,
1256,
1257
]
},
{
"tb": 160,
"tbk": 1,
"tl": 33,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1030,
1031,
2292,
2293,
383,
143,
178
]
},
{
"tb": 976176,
"tbk": 49,
"tl": 256614,
"mb": 442368,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1637,
2294,
2295,
2296,
2297,
2298,
2299,
2300,
805,
806,
807,
808,
809,
810,
811,
812,
813,
814,
815,
816,
817,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370
]
},
{
"tb": 320,
"tbk": 4,
"tl": 8,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1381,
1382,
917,
737,
143,
144
]
},
{
"tb": 624,
"tbk": 26,
"tl": 15,
"mb": 80,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
182,
182,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 888,
"tbk": 6,
"tl": 255,
"mb": 888,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
2301,
2302,
2303,
2304,
2305,
2306,
2307,
2308,
2309,
2310,
2311,
2312,
2309,
2313,
2314,
2315,
2316,
2317,
2318,
2319,
1481,
1482,
1483,
178
]
},
{
"tb": 160,
"tbk": 4,
"tl": 1850,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1171,
1172,
1173,
1174,
1175,
1176,
1177,
1178,
1178,
1179,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42,
1508,
1509,
1188,
1189,
1190,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507
]
},
{
"tb": 362976,
"tbk": 103,
"tl": 1467720,
"mb": 64704,
"mbk": 6,
"gb": 64704,
"gbk": 6,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
2049,
2050,
2051,
2052,
2053,
2054,
2055,
2056,
2057,
2058,
2059,
2060,
2061,
2062,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 128,
"tbk": 4,
"tl": 272,
"mb": 128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2320,
2321,
2322,
2323,
2324,
2325,
2326,
2327,
2328,
2329,
2330,
2331,
2332,
2333,
2334,
2335,
2336,
2337,
2338,
2339,
2340,
2341,
2342,
2343,
2344,
2345,
2346,
2347,
2338,
2339,
2341,
2348,
1017,
737,
143,
144
]
},
{
"tb": 232,
"tbk": 4,
"tl": 0,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2349,
2350,
2351,
2183,
2184,
2185,
2186,
2352
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
144
]
},
{
"tb": 720,
"tbk": 10,
"tl": 2,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
422,
423,
424,
425,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
178
]
},
{
"tb": 320,
"tbk": 2,
"tl": 32952,
"mb": 160,
"mbk": 1,
"gb": 160,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2353,
2354,
2355,
2356,
2357,
2358,
2359,
2360,
2361,
2362,
2363,
2364,
2365,
2366,
2367,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 288,
"tbk": 1,
"tl": 212091,
"mb": 288,
"mbk": 1,
"gb": 288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1018,
1019,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
98,
99,
100,
101,
102,
103,
103,
104,
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1980,
1981,
1982,
1983,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 96,
"tbk": 2,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
183,
184,
185,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
337,
338
]
},
{
"tb": 112,
"tbk": 7,
"tl": 31,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
422,
422,
422,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 512,
"tbk": 4,
"tl": 1130,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
1883,
1884,
1055,
737,
143,
178
]
},
{
"tb": 2520,
"tbk": 63,
"tl": 14435,
"mb": 400,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2368,
2369,
2370,
2371,
2372,
2373,
2374,
2375,
2376,
2100,
2101,
2102,
2103,
2104,
2105,
2106,
2107,
2108,
2109,
2110,
2111,
2112,
2113,
2114,
2115,
2116,
2117,
2118,
2119,
2120,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 384,
"tbk": 1,
"tl": 557454,
"mb": 384,
"mbk": 1,
"gb": 384,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2377,
2378,
2379,
2380,
2381,
2382,
2383
]
},
{
"tb": 78552,
"tbk": 5,
"tl": 306,
"mb": 24648,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2384,
2385,
2386,
2387,
2388,
2389,
2390,
2391,
2392,
2393,
2394,
2395,
2396,
2397,
2398,
2399,
2400,
2401,
2402
]
},
{
"tb": 5992,
"tbk": 10,
"tl": 115,
"mb": 1312,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2403,
2404,
2405,
2406,
2407,
2408,
2409,
2410,
2411,
2412,
2413,
2414,
2415,
2416,
2417,
2418,
2419,
2420,
2421,
2422,
2423,
2424,
2425,
2426,
2427,
2428,
2429,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 7424,
"tbk": 118,
"tl": 1319,
"mb": 160,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1637,
2430,
2431,
2432,
2433,
2434,
2435,
2436,
2437,
2438,
2439,
2440,
2441,
2442,
2443,
1906,
1907,
1908,
1909,
1910,
1911,
1912,
1913,
1914,
1915,
1916,
1917,
1918,
1919,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 20496,
"tbk": 854,
"tl": 2213,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
884,
885,
886,
887,
888,
889,
890,
891,
892,
893,
894,
895,
896,
897,
605,
606,
607,
608,
609,
610,
611,
612,
613,
610,
614,
615,
616,
617,
618,
619,
620,
621,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 112,
"tbk": 7,
"tl": 25,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
421,
422,
422,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 600,
"tbk": 3,
"tl": 281157,
"mb": 600,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1691,
1692,
1693,
1694,
1695,
1696,
1697,
1698,
1699,
1700,
1701,
1701,
1702,
105,
106,
107,
108,
109,
110,
111,
112,
113,
114,
115,
116,
117,
118,
119,
120,
981,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 856,
"tbk": 4,
"tl": 18955,
"mb": 428,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
197,
198,
199,
200,
201,
202,
203,
204,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143,
144
]
},
{
"tb": 140,
"tbk": 2,
"tl": 35,
"mb": 140,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
384,
385,
386,
387,
388,
389,
390,
391,
2444,
2445,
2446,
2447,
2448,
2449,
2450,
2451,
2452,
2452,
2453,
2454,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
736,
737,
143,
144
]
},
{
"tb": 1056,
"tbk": 4,
"tl": 0,
"mb": 576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
182,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 2352,
"tbk": 21,
"tl": 428401,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42
]
},
{
"tb": 288,
"tbk": 9,
"tl": 318,
"mb": 288,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
2455,
2456,
2457,
2458,
2459,
2460,
2461,
2462,
2459,
2463,
2464,
2465,
2466,
2467,
2468,
2469,
1481,
1482,
1483,
178
]
},
{
"tb": 480,
"tbk": 2,
"tl": 31522,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1030,
1031,
1032,
1033,
472,
473,
474,
475,
476,
477,
478,
479,
480,
221,
337,
338
]
},
{
"tb": 320,
"tbk": 4,
"tl": 335,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1381,
1382,
736,
737,
143,
144
]
},
{
"tb": 2304,
"tbk": 36,
"tl": 111413,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
94,
95,
96,
97,
756,
757,
758,
759,
760,
761,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
178
]
},
{
"tb": 2864,
"tbk": 26,
"tl": 33628,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2470,
2471,
2472,
2473,
2474,
2475,
2476,
2477,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647
]
},
{
"tb": 24,
"tbk": 1,
"tl": 13,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2478,
2479,
2480,
2481,
2482,
2483,
2484,
2485,
2486,
2487,
2488
]
},
{
"tb": 560,
"tbk": 8,
"tl": 94706,
"mb": 480,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2489,
2490,
2491,
2492,
2493,
2494,
2495,
2496,
2497,
2498,
2499,
2500,
2501,
2502,
2503,
2504,
2505,
2506,
2507,
2495,
2496,
2498,
2508,
537,
538,
539,
337,
338
]
},
{
"tb": 664,
"tbk": 11,
"tl": 1935,
"mb": 200,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
182,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 128,
"tbk": 2,
"tl": 22,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2509,
2510,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 192,
"tbk": 1,
"tl": 26,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
60,
61,
62,
63,
64,
65,
66,
67,
68,
756,
757,
758,
759,
760,
761,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
481,
143,
178
]
},
{
"tb": 288,
"tbk": 4,
"tl": 387,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
143
]
},
{
"tb": 2088,
"tbk": 24,
"tl": 11,
"mb": 264,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
182,
181,
182,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 864,
"tbk": 6,
"tl": 18764,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
94,
95,
96,
97,
756,
757,
758,
759,
760,
761,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
144
]
},
{
"tb": 384,
"tbk": 6,
"tl": 743472,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
94,
95,
96,
97,
443,
444,
445,
446,
447,
448,
448,
449,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 240,
"tbk": 10,
"tl": 12,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
422,
421,
421,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 360,
"tbk": 1,
"tl": 36360,
"mb": 360,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1781,
1782,
1783,
1784,
1785,
1786,
1787,
1788,
1789,
1790,
1791,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
252
]
},
{
"tb": 96,
"tbk": 3,
"tl": 825,
"mb": 96,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
381,
382,
383,
143,
178
]
},
{
"tb": 448,
"tbk": 12,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143,
144
]
},
{
"tb": 1152,
"tbk": 16,
"tl": 1548,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143
]
},
{
"tb": 180,
"tbk": 1,
"tl": 121,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
2511,
2512,
2513,
2514,
2515,
2516,
2517,
2517,
2518,
105,
106,
107,
108,
109,
110,
111,
112,
113,
114,
115,
116,
117,
118,
119,
120,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 3456,
"tbk": 9,
"tl": 281165,
"mb": 3456,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2519,
2520,
2521,
2522,
2523,
2524,
2525,
2526,
2527,
2528,
2529,
2530,
2531,
2532,
2533,
2534,
2535,
2536,
2537,
2538,
2539,
2540,
481,
143,
178
]
},
{
"tb": 32,
"tbk": 2,
"tl": 17,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1404,
1405,
1406,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
2541,
2542,
434,
435,
436,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 1952,
"tbk": 122,
"tl": 79,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
2543,
2544,
2545,
2546,
2547,
2548,
2549,
2550,
2551,
2552,
2553,
2554,
2555,
2556,
2557,
2558,
2554,
2559,
2560,
2561,
2562,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370
]
},
{
"tb": 368,
"tbk": 1,
"tl": 123927,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
437,
438,
439,
440,
441,
442,
443,
444,
445,
446,
447,
448,
448,
449,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 384,
"tbk": 6,
"tl": 190628,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
94,
95,
96,
97,
2173,
2174,
2175,
2176,
2177,
2178,
2179,
2180,
2181,
2182,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
2563,
2564,
2565,
2566,
2567,
2568,
2569,
2570,
2571
]
},
{
"tb": 560,
"tbk": 1,
"tl": 170987,
"mb": 560,
"mbk": 1,
"gb": 560,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1000,
1001,
1002,
1003,
1004,
1005,
1006,
1007,
1008,
1009,
1010,
1011,
1012,
1013,
1014,
1015,
1006,
1007,
1009,
1016,
1966,
1967
]
},
{
"tb": 960,
"tbk": 30,
"tl": 3377,
"mb": 960,
"mbk": 30,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
2572,
2573,
2574,
2575,
2576,
2577,
2578,
2579,
2576,
2580,
2581,
2582,
2583,
2584,
2585,
2586,
2587,
2588,
2589,
288
]
},
{
"tb": 192,
"tbk": 2,
"tl": 0,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
482,
483,
484,
485,
486,
487,
488,
489,
490,
491,
492,
493,
490,
494,
495,
496,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
143,
178
]
},
{
"tb": 128,
"tbk": 2,
"tl": 585,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
1464,
1465,
1055,
737,
143,
178
]
},
{
"tb": 40,
"tbk": 1,
"tl": 72,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2368,
2369,
2370,
2371,
2372,
2373,
2374,
2375,
2376,
2100,
2101,
2102,
2103,
2104,
2105,
2106,
2107,
2108,
2109,
2110,
2111,
2112,
2113,
2114,
2115,
2116,
2117,
2118,
2119,
2120,
40,
41,
42,
2590,
2591,
2161,
2162,
2163,
2153,
2154,
2155,
2156,
2157,
2158,
2159,
2160
]
},
{
"tb": 160,
"tbk": 1,
"tl": 264,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1030,
1031,
2292,
2293,
1055,
737,
337,
338
]
},
{
"tb": 3600,
"tbk": 20,
"tl": 18,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
421,
421,
422,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 336,
"tbk": 7,
"tl": 14,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
422,
422,
422,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 4032,
"tbk": 63,
"tl": 24598,
"mb": 640,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
2592,
2593,
2594,
2595,
2596,
2597,
2598,
2599,
2600,
2600,
2601,
2602,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 576,
"tbk": 24,
"tl": 15,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
182,
181,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 200,
"tbk": 1,
"tl": 46503,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1484,
1485,
1486,
1487,
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
2352
]
},
{
"tb": 240,
"tbk": 1,
"tl": 1268,
"mb": 240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1484,
1485,
1486,
1487,
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
735
]
},
{
"tb": 1152,
"tbk": 6,
"tl": 53467,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2603,
2604,
2605,
2606,
2607,
2608,
2609,
2610,
2611,
2612,
2613,
2614,
2615,
2616,
2614,
2617,
2618,
1124,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 160,
"tbk": 4,
"tl": 17,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1407,
1408,
1409,
1410,
1411,
1412,
1413,
1414,
1415,
1416,
1417,
1418,
1419,
1420,
1421,
1422,
1423,
1424,
1425,
1426,
1305,
1306,
1307,
917,
737,
337,
338
]
},
{
"tb": 5728,
"tbk": 52,
"tl": 190639,
"mb": 1536,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2619,
2620,
2472,
2473,
2474,
2475,
2476,
2477,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42
]
},
{
"tb": 336,
"tbk": 7,
"tl": 56,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
421,
422,
421,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 4032,
"tbk": 18,
"tl": 252706,
"mb": 1152,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
2621,
2622,
2623,
2624,
2625,
2626,
2627,
2628,
2629,
2630,
2631,
2632,
2633,
2634,
2635,
2636,
2637,
2638,
2639,
2640,
2641,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 120,
"tbk": 3,
"tl": 5,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
708,
709,
710,
711,
712,
713,
714,
715,
716,
717,
718,
719,
720,
721,
722,
723,
724,
725,
726,
727,
728,
729,
730,
731,
716,
732,
733,
734,
143,
144
]
},
{
"tb": 448,
"tbk": 4,
"tl": 1027,
"mb": 448,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
1464,
1465,
1055,
737,
337,
338
]
},
{
"tb": 80,
"tbk": 5,
"tl": 30,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
422,
422,
421,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 960,
"tbk": 8,
"tl": 443,
"mb": 960,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
1464,
1465,
383,
143,
144
]
},
{
"tb": 720,
"tbk": 30,
"tl": 2875,
"mb": 96,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
181,
181,
181,
182,
181,
182
]
},
{
"tb": 200,
"tbk": 1,
"tl": 562230,
"mb": 200,
"mbk": 1,
"gb": 200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2642,
2643,
2644,
2645,
2646,
2647,
2648,
2649,
2650
]
},
{
"tb": 368,
"tbk": 1,
"tl": 31811,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
437,
438,
439,
440,
441,
442,
2173,
2174,
2175,
2176,
2177,
2178,
2179,
2180,
2181,
2182,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
2563,
2564,
2565,
2566,
2567,
2568,
2569,
2570,
2571,
40,
41,
42
]
},
{
"tb": 532800,
"tbk": 4,
"tl": 323,
"mb": 245400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2072,
2073,
2074,
2075,
2076,
2077,
2078,
2079,
2080,
2081,
2082,
2083,
2084,
2085,
2086,
2651,
2652,
2653,
2654
]
},
{
"tb": 2880,
"tbk": 36,
"tl": 18,
"mb": 264,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
181,
182,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 1196,
"tbk": 3,
"tl": 119,
"mb": 1016,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
222,
223,
224,
225,
226,
227,
228,
229,
230,
231,
232,
233,
234,
235,
236,
237,
238,
239,
240,
241,
238,
242,
243,
244,
245,
246,
247,
248,
249,
250,
251,
735
]
},
{
"tb": 672,
"tbk": 18,
"tl": 6,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
182,
181,
182,
181,
181,
181
]
},
{
"tb": 300,
"tbk": 3,
"tl": 52,
"mb": 248,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
384,
385,
386,
387,
388,
389,
390,
391,
2444,
2445,
2446,
2447,
2448,
2449,
2450,
2451,
2452,
2452,
2453,
2454,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
917,
737,
143,
144
]
},
{
"tb": 1512,
"tbk": 1,
"tl": 33,
"mb": 1512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2655,
2656,
2657,
2658,
2659,
2660,
2661,
2662,
2663,
2664,
2665,
2666,
2667,
2668,
2669,
2670,
2671,
2672,
2673,
2674,
2675,
2676,
2677,
2678,
2679,
2680,
2681,
2682,
2683,
2684,
2685,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647
]
},
{
"tb": 491040,
"tbk": 10,
"tl": 3175,
"mb": 245760,
"mbk": 1,
"gb": 245760,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2686,
2687,
2688,
2689,
2690,
2691,
2692,
2693,
2694,
2695,
2696,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647,
40,
41,
42
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 9,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
290,
291,
2697,
2698,
2699,
2700,
2701,
2702,
1876,
1877,
1878,
1879,
1880,
1881,
1882
]
},
{
"tb": 1872,
"tbk": 26,
"tl": 11,
"mb": 144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
181,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 672,
"tbk": 1,
"tl": 1642,
"mb": 672,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
874,
875,
876,
877,
878,
879,
880,
881,
882,
883,
143,
178
]
},
{
"tb": 336,
"tbk": 3,
"tl": 4005,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
421,
423,
424,
425,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
481,
143,
144
]
},
{
"tb": 64,
"tbk": 2,
"tl": 42,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2703,
2704,
2705,
2706,
2707,
2708,
2709,
2710,
2711,
2712,
2713,
2714,
2715,
2716,
2717,
2718,
2719,
2720,
2721,
2722,
2723,
2724,
2725,
2726,
2727,
2728,
2729,
2730,
2731,
2732,
2733,
2733,
2734,
2735,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187
]
},
{
"tb": 480,
"tbk": 8,
"tl": 13259,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
1338,
1339,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 288,
"tbk": 1,
"tl": 27,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
2736,
2737,
2738,
2739,
2740,
2741,
2742,
2743,
2743,
2744,
2745,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
917,
737,
337,
338
]
},
{
"tb": 4560,
"tbk": 25,
"tl": 1672,
"mb": 1488,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2655,
2656,
2657,
2658,
2659,
2660,
2661,
2662,
2663,
2664,
2665,
2666,
2667,
2668,
2669,
2670,
2671,
2672,
2673,
2674,
2675,
2676,
2677,
2678,
2679,
2680,
2681,
2682,
2683,
2684,
2685,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 80,
"tbk": 2,
"tl": 201401,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2746,
2747,
2748,
2749,
2750,
2751,
2752,
2753,
2754,
2755,
2756,
2757,
2758,
2759,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
2563,
2564,
2565,
2566,
2567,
2568,
2569,
2570,
2571
]
},
{
"tb": 480,
"tbk": 2,
"tl": 31580,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1030,
1031,
1032,
1033,
472,
473,
474,
475,
476,
477,
478,
479,
480,
221,
143,
178
]
},
{
"tb": 1680,
"tbk": 6,
"tl": 18659,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1018,
1019,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
756,
757,
758,
759,
760,
761,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
144
]
},
{
"tb": 5184,
"tbk": 25,
"tl": 530,
"mb": 1368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2655,
2656,
2657,
2658,
2659,
2660,
2661,
2662,
2663,
2664,
2665,
2666,
2667,
2668,
2669,
2670,
2671,
2672,
2673,
2674,
2675,
2676,
2677,
2678,
2679,
2680,
2681,
2682,
2683,
2684,
2685,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 384,
"tbk": 1,
"tl": 557516,
"mb": 384,
"mbk": 1,
"gb": 384,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
2760,
2761,
2762,
2763,
2764,
2765,
2766,
2767,
2768,
2769,
2770,
2771
]
},
{
"tb": 488,
"tbk": 5,
"tl": 2,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2272,
2273,
2274,
2275,
1966,
1967
]
},
{
"tb": 888,
"tbk": 24,
"tl": 585,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
181,
182,
182,
182,
181,
183,
184,
185
]
},
{
"tb": 2520,
"tbk": 63,
"tl": 1261086,
"mb": 400,
"mbk": 10,
"gb": 120,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
1231,
1232,
1233,
1234,
1235,
1236,
1237,
1238,
1239,
1240,
1241,
1242,
1243,
1244,
1245,
1245,
1246,
1247,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 148,
"tbk": 1,
"tl": 72,
"mb": 148,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
818,
819,
820,
821,
822,
823,
824,
825,
826,
827,
828,
829,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
1017,
734,
143,
178
]
},
{
"tb": 144,
"tbk": 6,
"tl": 2,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
182,
182,
181,
181,
182,
181
]
},
{
"tb": 64,
"tbk": 2,
"tl": 2642,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
1729,
1730,
1731,
1732,
1733,
1734,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
1266,
1267,
1268,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
1266,
1267,
1268,
1269,
1270,
1271,
1272,
1273,
1274,
1275,
1276,
1277,
1278,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 144,
"tbk": 3,
"tl": 19,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1984,
1985,
1986,
1987,
1988,
1989,
1990,
1991,
1992,
1993,
1994,
1995,
1996,
1997,
1998,
1999,
2000,
2001,
2002,
2003,
2674,
2675,
2676,
2677,
2678,
2679,
2680,
2681,
2682,
2683,
2684,
2685,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 152,
"tbk": 1,
"tl": 9702,
"mb": 152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
467,
468,
469,
470,
471,
2772,
2773,
2774,
2775,
2776,
221,
337,
338
]
},
{
"tb": 48,
"tbk": 1,
"tl": 167645,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
339,
340,
341,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
2541,
2542,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 180,
"tbk": 1,
"tl": 98,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
2511,
2512,
2513,
2514,
2515,
2516,
2517,
2517,
2518,
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1980,
1981,
1982,
1983,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 65512,
"tbk": 12,
"tl": 64937,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2777,
2778,
2779,
2780,
2781,
2782,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647,
40,
41,
42
]
},
{
"tb": 120,
"tbk": 3,
"tl": 3,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2123,
2124,
2125,
2126,
2127,
2128,
2129,
2130,
2131,
2132,
2133,
2134,
2135,
2136,
2137,
2138,
2139,
2140,
2141,
2142,
2143,
2144,
2145,
733,
737,
143,
178
]
},
{
"tb": 256,
"tbk": 6,
"tl": 630,
"mb": 256,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
1464,
1465,
1335,
143,
178
]
},
{
"tb": 192,
"tbk": 2,
"tl": 30,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2783,
2784,
2785,
2786,
2787,
2788,
2789,
2790,
2791,
2792,
2793,
2794,
2795,
2796,
2797,
221,
143,
144
]
},
{
"tb": 40,
"tbk": 1,
"tl": 557437,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1600,
1601,
1602,
1603,
1604,
1605,
1606,
1607,
1608,
2798,
2799,
2800,
2801,
2802,
2803,
2804,
2805,
1617,
1618,
1619,
1620,
1621,
1622,
1623,
1624,
1625,
1626,
1627,
1628,
1629,
1630,
1631,
1632,
1633,
1618,
1619,
1620,
1621,
1622,
1623,
1624,
1628,
1634,
1635,
1636,
81
]
},
{
"tb": 192,
"tbk": 2,
"tl": 18809,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
2806,
2807,
2808,
2809,
2810,
2811,
2812,
2808,
2809,
2810,
2813,
221,
143,
178
]
},
{
"tb": 80,
"tbk": 5,
"tl": 30,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
422,
421,
422,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 320,
"tbk": 8,
"tl": 791125,
"mb": 200,
"mbk": 5,
"gb": 160,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
1231,
1232,
1233,
1234,
1235,
1236,
1237,
1238,
1239,
1240,
1241,
1242,
1243,
1244,
1245,
1245,
1246,
1247,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42,
1508,
1509,
1188,
1189,
1190,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 800,
"tbk": 4,
"tl": 13077,
"mb": 400,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1119,
1120,
1121,
1122,
1123,
1124,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 2688,
"tbk": 18,
"tl": 2878,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1792,
1793,
1794,
1795,
1796,
1797,
1798,
1799,
1800,
1801,
1802,
1803,
1804,
1805,
1806,
1807,
1808,
1809,
1810,
1811,
1812,
1813,
1814,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 256,
"tbk": 8,
"tl": 474,
"mb": 256,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
1464,
1465,
383,
143,
178
]
},
{
"tb": 3168,
"tbk": 21,
"tl": 4015,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
182,
181,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 80,
"tbk": 5,
"tl": 15,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
337,
338
]
},
{
"tb": 288,
"tbk": 4,
"tl": 11,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436
]
},
{
"tb": 112,
"tbk": 7,
"tl": 42,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
422,
422,
421,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 576,
"tbk": 5,
"tl": 45211,
"mb": 576,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2814,
2815,
2816,
2817,
2818,
2819,
2820,
2821,
2822,
2823,
2824,
2825,
2826,
2827,
2828,
2829,
2830,
2831,
2832,
2833,
2821,
2822,
2823,
2824,
2825,
2826,
2827,
2828,
2829,
2831,
2834,
2835,
2836,
2837,
143,
144
]
},
{
"tb": 240,
"tbk": 6,
"tl": 1056,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1171,
1172,
1173,
1174,
1175,
1176,
1177,
1178,
1178,
1179,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1191,
1192,
1193,
1194,
1195,
1196,
1197,
1198,
1199,
1200,
1201,
1248,
1249,
1250,
1251,
1252,
1253,
1254,
1255,
1256,
1257,
1269,
1270,
1271,
1272,
1273,
1274,
1275,
1276,
1277,
1278,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 768,
"tbk": 4,
"tl": 2842,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1086,
1087,
1088,
1089,
1090,
1091,
1092,
1093,
1094,
1095,
2838,
2839,
2840,
2841,
2839,
2842,
2843,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 640,
"tbk": 6,
"tl": 161317,
"mb": 640,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
1062,
1063,
1064,
1065,
1066,
1067,
1068,
1069,
1070,
1071,
1072,
1073,
1074,
1075,
1076,
1077,
1078,
1079,
1069,
1070,
1071,
1080,
1081,
1082,
1083,
1084,
1085,
221,
143,
144
]
},
{
"tb": 32,
"tbk": 1,
"tl": 15,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2703,
2704,
2705,
2706,
2844,
2845,
2846,
2847,
2848,
2849,
2850,
2851,
2852,
2853,
2854,
2855,
2856,
2857,
2858,
2859,
2860,
2861,
2861,
2862,
2863,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 168,
"tbk": 2,
"tl": 23,
"mb": 84,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
1279,
1280,
1281,
1282,
1283,
1284,
1285,
1286,
1286,
1287,
1288,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
917,
734,
143,
178
]
},
{
"tb": 48,
"tbk": 3,
"tl": 10,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
181,
182,
181,
182,
182,
182
]
},
{
"tb": 61296,
"tbk": 8,
"tl": 244,
"mb": 26064,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2384,
2385,
2386,
2387,
2388,
2389,
2390,
2391,
2392,
2393,
2394,
2395,
2396,
2397,
2398,
2864,
2865,
2866,
2867
]
},
{
"tb": 264,
"tbk": 1,
"tl": 31556,
"mb": 264,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1018,
1019,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
2173,
2174,
2175,
2176,
2177,
2178,
2179,
2180,
2181,
2182,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 190968,
"tbk": 4,
"tl": 135,
"mb": 107808,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
290,
291,
2697,
2698,
2699,
2700,
2701,
2702,
1876,
1877,
1878,
2399,
2400,
2401,
2402
]
},
{
"tb": 112,
"tbk": 3,
"tl": 0,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
421,
423,
424,
425,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
481,
143,
178
]
},
{
"tb": 78552,
"tbk": 5,
"tl": 288,
"mb": 24648,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2868,
2869,
2870,
2871,
2872,
2873,
2874,
2875,
2876,
2877,
2878,
2879,
2880,
2881,
2882,
2399,
2400,
2401,
2402
]
},
{
"tb": 64,
"tbk": 8,
"tl": 132,
"mb": 64,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1679,
1680,
1681,
1682,
1681,
1683,
1684,
1685,
1686,
1687,
1688,
1689,
1690,
1017,
737,
337,
338
]
},
{
"tb": 928,
"tbk": 29,
"tl": 1701618,
"mb": 160,
"mbk": 5,
"gb": 128,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
2883,
2884,
2885,
2886,
2887,
2888,
2889,
2890,
2891,
2892,
2893,
2894,
2895,
2896,
2897,
2898,
2899,
2900,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 480,
"tbk": 2,
"tl": 19,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1030,
1031,
1053,
1054,
383,
337,
338
]
},
{
"tb": 288,
"tbk": 9,
"tl": 77224,
"mb": 288,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1920,
1921,
1922,
1923,
1924,
1925,
1926,
1922,
1923,
1924,
1927,
481,
337,
338
]
},
{
"tb": 2208,
"tbk": 6,
"tl": 446262,
"mb": 1104,
"mbk": 3,
"gb": 736,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
2901,
2902,
2903,
2904,
2905,
2906,
2907,
2908,
2909,
2910,
2911,
2912,
2913,
2914,
2915,
2916,
2917,
2918,
2919,
2920,
2921,
2922,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 640,
"tbk": 8,
"tl": 858,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1381,
1382,
733,
737,
143,
144
]
},
{
"tb": 40,
"tbk": 1,
"tl": 1133,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1231,
1232,
1233,
1234,
1235,
1236,
1237,
1238,
1239,
1240,
1241,
1242,
1243,
1244,
1245,
1245,
1246,
1247,
2923,
2924,
2925,
2926,
1188,
1189,
1190,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1191,
1192,
1193,
1194,
1195,
1196,
1197,
1198,
1199,
1200,
1201,
1248,
1249,
1250,
1251,
1252,
1253,
1254,
1255,
1256,
1257,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
1266,
1267,
1268
]
},
{
"tb": 73696,
"tbk": 329,
"tl": 3630,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1637,
1638,
1639,
1640,
1641,
1642,
1643,
1644,
1645,
1646,
1647,
1648,
1649,
1650,
1650,
1651,
1652,
1652,
1653,
1654,
1655,
1656,
1657,
1658,
1659,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647
]
},
{
"tb": 64,
"tbk": 2,
"tl": 22066,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
2043,
2044,
2045,
2046,
2047,
2048,
481,
143,
144
]
},
{
"tb": 96,
"tbk": 2,
"tl": 10345,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
146,
147,
148,
149,
150,
151,
152,
153,
154,
155,
156,
157,
158,
159,
159,
160,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 1104,
"tbk": 4,
"tl": 12428,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1018,
1019,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
756,
757,
758,
759,
760,
761,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143,
144
]
},
{
"tb": 972,
"tbk": 3,
"tl": 71,
"mb": 824,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
1442,
1443,
1444,
1445,
1446,
1447,
1448,
1449,
1449,
1450,
1451,
1452,
1453,
1454,
1455,
1456,
1457,
1458,
1459,
1460,
1461,
1462,
1463,
1017,
737,
143,
144
]
},
{
"tb": 768,
"tbk": 6,
"tl": 1510,
"mb": 768,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
1464,
1465,
1055,
734,
143,
144
]
},
{
"tb": 80,
"tbk": 2,
"tl": 11,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1407,
1408,
1409,
1410,
1411,
1412,
1413,
1414,
1415,
1416,
1417,
1418,
1419,
1420,
1421,
1422,
1423,
1424,
1425,
1426,
1305,
1306,
1307,
917,
734,
143,
178
]
},
{
"tb": 1664,
"tbk": 11,
"tl": 483,
"mb": 1408,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
913,
914,
2927,
2928,
2929,
2930,
2929,
2931,
2932,
2933,
2934,
2935,
2936,
2937,
2938,
841,
144
]
},
{
"tb": 560,
"tbk": 15,
"tl": 4,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
181,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 384,
"tbk": 6,
"tl": 24,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2939,
2940,
2941,
2942,
2943,
2944,
2945,
2946,
2947,
2948,
2949,
2950,
2951,
2952,
2953,
1879,
1880,
1881,
1882
]
},
{
"tb": 180,
"tbk": 1,
"tl": 73,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
2954,
2955,
2956,
2957,
2958,
2959,
2960,
2961,
2962,
2963,
2964,
2965,
2966,
2967,
81
]
},
{
"tb": 236,
"tbk": 2,
"tl": 16,
"mb": 236,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
1279,
1280,
1281,
1282,
1283,
1284,
1285,
1286,
1286,
1287,
1288,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
917,
737,
337,
338
]
},
{
"tb": 180,
"tbk": 1,
"tl": 107,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2968,
2969,
2970,
2971,
2972,
2973,
2974,
2975,
2976,
2977,
2978,
2979,
2980,
2981,
2982,
2982,
2983,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
177,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 672,
"tbk": 21,
"tl": 1703,
"mb": 672,
"mbk": 21,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
1466,
1467,
1468,
1469,
1470,
1471,
1472,
1473,
1470,
1474,
1475,
1476,
1477,
1478,
1479,
1480,
1481,
1482,
1483,
144
]
},
{
"tb": 128,
"tbk": 2,
"tl": 5,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2984,
2985,
2986,
2987,
2988,
2989,
2990,
2991,
2992,
2993,
2994,
2995,
2996,
2997,
2998,
2999,
2997,
3000,
3001,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 40,
"tbk": 1,
"tl": 261,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1231,
1232,
1233,
1234,
1235,
1236,
1237,
1238,
1239,
1240,
1241,
1242,
1243,
1244,
1245,
1245,
1246,
1247,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42,
1508,
1509,
1188,
1189,
1190,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1191,
1192,
1193,
1194,
1195,
1196,
1197,
1198,
1199,
1200,
1201,
1202,
1203,
1204,
1205,
1206,
1207,
1208,
1209
]
},
{
"tb": 217200,
"tbk": 4,
"tl": 48,
"mb": 121632,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
290,
291,
2697,
2698,
2699,
2700,
2701,
2702,
3002,
3003,
3004,
2864,
2865,
2866,
2867
]
},
{
"tb": 200,
"tbk": 1,
"tl": 557484,
"mb": 200,
"mbk": 1,
"gb": 200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3005,
3006,
3007,
3008,
3009,
3010,
3011,
3012,
3013,
3014
]
},
{
"tb": 5264,
"tbk": 1,
"tl": 60,
"mb": 5264,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
1383,
1384,
1385,
1386,
1387,
1388,
1389,
1390,
1391,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
288
]
},
{
"tb": 1520,
"tbk": 1,
"tl": 561597,
"mb": 1520,
"mbk": 1,
"gb": 1520,
"gbk": 1,
"eb": 1520,
"ebk": 1,
"fs": [
3015,
3016,
3017,
3018,
3019,
1939,
1940,
1941,
1942,
1943,
1944,
1945,
1946,
1947,
1948,
1949,
1950,
1951,
1952,
1953,
1954,
1955,
1956,
1957,
1958,
1958,
1959,
1960,
1961,
1962,
1963,
1964,
1965,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
735
]
},
{
"tb": 120,
"tbk": 3,
"tl": 13403,
"mb": 120,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1163,
1164,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
796,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 1680,
"tbk": 15,
"tl": 14589,
"mb": 384,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
421,
423,
424,
425,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
178
]
},
{
"tb": 96,
"tbk": 2,
"tl": 7975,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3020,
3021,
3022,
3023,
3024,
3025,
3026,
3027,
3028,
3029,
3030,
3031,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 144,
"tbk": 18,
"tl": 337,
"mb": 144,
"mbk": 18,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1679,
1680,
1681,
1682,
1681,
1683,
1684,
1685,
1686,
1687,
1688,
1689,
1690,
841,
178
]
},
{
"tb": 2208,
"tbk": 6,
"tl": 18639,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1056,
1057,
1058,
1059,
1060,
1061,
756,
757,
758,
759,
760,
761,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
178
]
},
{
"tb": 144,
"tbk": 2,
"tl": 1,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
182,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 40,
"tbk": 2,
"tl": 0,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2272,
2273,
2274,
2275,
1017,
737,
143,
144
]
},
{
"tb": 144,
"tbk": 6,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
337,
338
]
},
{
"tb": 144,
"tbk": 2,
"tl": 0,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
422,
423,
424,
425,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
481,
337,
338
]
},
{
"tb": 576,
"tbk": 8,
"tl": 2,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
182,
183,
184,
185,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
143
]
},
{
"tb": 96,
"tbk": 6,
"tl": 19,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
181,
182,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 4172,
"tbk": 5,
"tl": 170,
"mb": 3200,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
1442,
1443,
1444,
1445,
1446,
1447,
1448,
1449,
1449,
1450,
1451,
1452,
1453,
1454,
1455,
1456,
1457,
1458,
1459,
1460,
1461,
1462,
1463,
1966,
1967
]
},
{
"tb": 144,
"tbk": 9,
"tl": 31,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
182,
181,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 208,
"tbk": 13,
"tl": 42,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
181,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 256,
"tbk": 2,
"tl": 0,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
913,
914,
3032,
3033,
3034,
3035,
3036,
3037,
3038,
3034,
3035,
3036,
3039,
221,
143,
144
]
},
{
"tb": 128,
"tbk": 2,
"tl": 6,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
482,
483,
484,
485,
486,
487,
488,
489,
490,
491,
492,
493,
490,
494,
495,
496,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
481,
143,
144
]
},
{
"tb": 288,
"tbk": 2,
"tl": 6226,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
94,
95,
96,
97,
756,
757,
758,
759,
760,
761,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
143,
178
]
},
{
"tb": 48,
"tbk": 1,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
421,
423,
424,
425,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
481,
143,
178
]
},
{
"tb": 14272,
"tbk": 30,
"tl": 11971,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3040,
3041,
3042,
3043,
3044,
3045,
3046,
3047,
3048,
3049,
3050,
3051,
3048,
3052,
3053,
3054,
3055,
3056,
3057,
3058,
3059,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 144,
"tbk": 1,
"tl": 122826,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
94,
95,
96,
97,
443,
444,
445,
446,
447,
448,
448,
449,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 32,
"tbk": 1,
"tl": 926,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
3060,
3061,
3062,
3063,
3064,
3065,
2153,
2154,
2155,
2156,
2157,
2158,
2159,
2160,
2161,
2162,
2163,
2153,
2154,
2155,
2156,
2157,
2158,
2159,
2160,
2161,
2162,
2163,
2153,
2154,
2155,
2156,
2157,
2158,
2159,
2160,
2283,
2284,
2285,
2286,
2287,
2288,
2289,
2290,
2291,
40,
41,
42
]
},
{
"tb": 680,
"tbk": 8,
"tl": 278759,
"mb": 560,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3066,
3067,
3068,
3069,
3070,
3071,
3072,
3073,
3074,
3075,
3076,
3077,
3078,
3079,
3080,
3081,
3082,
3083,
3084,
3072,
3073,
3075,
3085,
3086,
3087,
3088,
337,
338
]
},
{
"tb": 70560,
"tbk": 30,
"tl": 17548,
"mb": 3120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1319,
1320,
1321,
1322,
1323,
1324,
1325,
1326,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 160,
"tbk": 1,
"tl": 289,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1030,
1031,
1735,
1736,
1055,
737,
143,
178
]
},
{
"tb": 144,
"tbk": 3,
"tl": 1,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
182,
182,
181,
182,
181,
183,
184,
185
]
},
{
"tb": 2016,
"tbk": 18,
"tl": 12487,
"mb": 384,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
178
]
},
{
"tb": 820680,
"tbk": 3,
"tl": 94,
"mb": 533040,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
1867,
1868,
1869,
1870,
1871,
1872,
1873,
1874,
1875,
1876,
1877,
1878,
2651,
2652,
2653,
2654
]
},
{
"tb": 200,
"tbk": 1,
"tl": 557490,
"mb": 200,
"mbk": 1,
"gb": 200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3089,
3090,
3091,
3092,
3093,
3094,
3095,
3096,
3097,
3098,
3099,
3100,
3101,
3102,
3103,
3104,
3105,
3106,
3107,
3108,
3109,
3110,
3111,
3112
]
},
{
"tb": 7776,
"tbk": 30,
"tl": 17913,
"mb": 304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3113,
3114,
3115,
3116,
3117,
3118,
3119,
3120,
3121,
3122,
3123,
1319,
1320,
1321,
1322,
1323,
1324,
1325,
1326,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 3472,
"tbk": 35,
"tl": 75,
"mb": 384,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
421,
421,
421,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 52368,
"tbk": 5,
"tl": 281,
"mb": 16432,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2939,
2940,
2941,
2942,
2943,
2944,
2945,
2946,
2947,
2948,
2949,
2950,
2951,
2952,
2953,
2399,
2400,
2401,
2402
]
},
{
"tb": 240,
"tbk": 12,
"tl": 2,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
967,
968,
969,
970,
971,
972,
973,
2352
]
},
{
"tb": 13760,
"tbk": 26,
"tl": 438139,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1792,
1793,
3124,
3125,
3126,
3127,
3128,
3129,
3130,
3131,
3132,
3133,
3134,
3135,
3136,
3137,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647,
40,
41,
42
]
},
{
"tb": 1296,
"tbk": 9,
"tl": 319242,
"mb": 576,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
94,
95,
96,
97,
2173,
2174,
2175,
2176,
2177,
2178,
2179,
2180,
2181,
2182,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 96,
"tbk": 6,
"tl": 21,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
181,
181,
182,
182,
181,
183,
184,
185
]
},
{
"tb": 208,
"tbk": 13,
"tl": 41,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
182,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 6912,
"tbk": 108,
"tl": 105672,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
3138,
3139,
3140,
3141,
3142,
3143,
3144,
3145,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 736,
"tbk": 2,
"tl": 6317,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1056,
1057,
1058,
1059,
1060,
1061,
756,
757,
758,
759,
760,
761,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
337,
338
]
},
{
"tb": 1920,
"tbk": 30,
"tl": 17899,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3113,
3114,
3115,
3116,
3117,
3118,
3119,
3120,
3121,
3122,
3123,
1045,
1046,
1047,
1048,
1049,
1050,
1051,
1052,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 126,
"tbk": 12,
"tl": 2252,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3146,
3147,
3148,
3149,
3150,
3151,
2472,
2473,
2474,
2475,
2476,
2477,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42
]
},
{
"tb": 864,
"tbk": 36,
"tl": 17,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
181,
181,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 960,
"tbk": 8,
"tl": 4561,
"mb": 960,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
381,
382,
1335,
143,
144
]
},
{
"tb": 864,
"tbk": 3,
"tl": 238195,
"mb": 864,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1018,
1019,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
443,
444,
445,
446,
447,
448,
448,
449,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 160,
"tbk": 1,
"tl": 244,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1030,
1031,
1735,
1736,
1055,
734,
337,
338
]
},
{
"tb": 240,
"tbk": 4,
"tl": 8116,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
1338,
1339,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 1328,
"tbk": 1,
"tl": 17,
"mb": 1328,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
1383,
1384,
1385,
1386,
1387,
1388,
1389,
1390,
1391,
883,
143,
178
]
},
{
"tb": 80,
"tbk": 2,
"tl": 11,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1407,
1408,
1409,
1410,
1411,
1412,
1413,
1414,
1415,
1416,
1417,
1418,
1419,
1420,
1421,
1422,
1423,
1424,
1425,
1426,
1305,
1306,
1307,
733,
737,
337,
338
]
},
{
"tb": 1104,
"tbk": 3,
"tl": 238267,
"mb": 1104,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
437,
438,
439,
440,
441,
442,
443,
444,
445,
446,
447,
448,
448,
449,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 288,
"tbk": 9,
"tl": 77935,
"mb": 288,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1920,
1921,
1922,
1923,
1924,
1925,
1926,
1922,
1923,
1924,
1927,
481,
143,
178
]
},
{
"tb": 32,
"tbk": 2,
"tl": 7,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
181,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 180,
"tbk": 1,
"tl": 129,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2968,
2969,
2970,
2971,
2972,
2973,
2974,
2975,
3152,
3153,
3154,
3155,
3156,
3157,
3158,
3158,
3159,
780,
781,
782,
783,
784,
785,
786,
787,
788,
789,
790,
791,
792,
793,
794,
795,
796,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 160,
"tbk": 2,
"tl": 19,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1407,
1408,
1409,
1410,
1411,
1412,
1413,
1414,
1415,
1416,
1417,
1418,
1419,
1420,
1421,
1422,
1423,
1424,
1425,
1426,
1305,
1306,
1307,
733,
737,
143,
144
]
},
{
"tb": 1440,
"tbk": 1,
"tl": 557512,
"mb": 1440,
"mbk": 1,
"gb": 1440,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
1867,
1868,
1869,
1870,
1871,
1872,
1873,
1874,
1875,
2768,
2769,
2770,
2771
]
},
{
"tb": 21536,
"tbk": 230,
"tl": 69289,
"mb": 1536,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2470,
2471,
2472,
2473,
2474,
2475,
2476,
2477,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 2784,
"tbk": 29,
"tl": 404320,
"mb": 288,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
1340,
1341,
1342,
1343,
1344,
1345,
1346,
1347,
1348,
1349,
1350,
1351,
1352,
1353,
1354,
1355,
1356,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 400,
"tbk": 2,
"tl": 1114792,
"mb": 400,
"mbk": 2,
"gb": 400,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
3160,
3161,
3162,
3163,
3164,
3165,
3166,
3167,
3168,
3169,
3170,
3171,
3172,
3173,
3174,
3175,
3176,
3177,
81
]
},
{
"tb": 640,
"tbk": 4,
"tl": 1952,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1484,
1485,
2091,
2092,
2093,
2094,
2095,
2096,
2097,
2098,
2099,
2100,
2101,
2102,
2103,
2104,
2105,
2106,
2107,
2108,
2109,
2110,
2100,
2101,
2102,
2103,
2104,
2105,
2106,
2107,
2108,
2109,
2110,
3178,
3179,
3180,
3181,
3182,
3183,
3184,
3185,
3186,
3187,
3188,
3189,
3190,
3191,
3192,
3193,
3194,
3195,
3196
]
},
{
"tb": 524,
"tbk": 3,
"tl": 53,
"mb": 440,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
1279,
1280,
1281,
1282,
1283,
1284,
1285,
1286,
1286,
1287,
1288,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
736,
737,
143,
178
]
},
{
"tb": 192,
"tbk": 2,
"tl": 0,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1737,
1738,
1739,
1740,
1741,
1742,
1743,
1744,
1745,
1746,
1747,
1748,
1745,
1749,
1750,
1751,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
337,
338
]
},
{
"tb": 200,
"tbk": 1,
"tl": 224607,
"mb": 200,
"mbk": 1,
"gb": 200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1691,
1692,
1693,
1694,
1695,
1696,
1697,
1698,
1699,
1700,
1701,
1701,
1702,
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1980,
1981,
1982,
1983,
981,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 64,
"tbk": 2,
"tl": 71,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2320,
2321,
2322,
2323,
2324,
2325,
2326,
2327,
2328,
2329,
2330,
2331,
2332,
2333,
2334,
2335,
2336,
2337,
2338,
2339,
2340,
2341,
2342,
2343,
2344,
2345,
2346,
2347,
2338,
2339,
2341,
2348,
1017,
734,
143,
178
]
},
{
"tb": 64,
"tbk": 2,
"tl": 559967,
"mb": 64,
"mbk": 2,
"gb": 32,
"gbk": 1,
"eb": 32,
"ebk": 1,
"fs": [
2703,
2704,
2705,
2706,
2707,
2708,
2709,
2710,
2711,
2712,
2713,
2714,
2715,
2716,
2717,
2718,
2719,
2720,
2721,
2722,
2723,
2724,
2725,
2726,
2727,
2728,
2729,
2730,
2731,
2732,
2733,
2733,
2734,
2735,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 864,
"tbk": 12,
"tl": 2,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143
]
},
{
"tb": 512,
"tbk": 4,
"tl": 78,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
913,
914,
2927,
2928,
2929,
2930,
2929,
2931,
2932,
2933,
2934,
2935,
2936,
2937,
2938,
1017,
737,
337,
338
]
},
{
"tb": 128,
"tbk": 4,
"tl": 126341,
"mb": 128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
2043,
2044,
2045,
2046,
2047,
2048,
221,
143,
178
]
},
{
"tb": 96,
"tbk": 6,
"tl": 20,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
182,
181,
181,
181,
182,
183,
184,
185
]
},
{
"tb": 19040,
"tbk": 119,
"tl": 31065,
"mb": 2880,
"mbk": 18,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1484,
1485,
2091,
2092,
2093,
2094,
2095,
2096,
2097,
2098,
2099,
2111,
2112,
2113,
2114,
2115,
2116,
2117,
2118,
2119,
2120,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 448,
"tbk": 4,
"tl": 1181,
"mb": 448,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
381,
382,
1055,
737,
143,
144
]
},
{
"tb": 256,
"tbk": 2,
"tl": 159968,
"mb": 128,
"mbk": 1,
"gb": 128,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3197,
3198,
3199,
3200,
3201,
3202,
3203,
3204,
3205,
3206,
3207,
3208,
3209,
3210,
3211,
3212,
3213,
3214,
3215,
3216,
3203,
3204,
3208,
3217,
3218,
3219,
3220,
3221,
3222,
3223,
3224,
3225,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 8520,
"tbk": 42,
"tl": 283,
"mb": 1560,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1984,
1985,
1986,
1987,
1988,
1989,
1990,
1991,
1992,
1993,
1994,
1995,
1996,
1997,
1998,
1999,
2000,
2001,
2002,
2003,
2004,
2005,
2006,
2007,
2008,
2009,
2010,
2011,
2012,
2013,
2014,
2015,
2016,
2017,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 384,
"tbk": 3,
"tl": 1672146,
"mb": 384,
"mbk": 3,
"gb": 384,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
3226,
3227,
3228,
3229,
3230,
3231,
3232,
3233,
3234,
3235,
3236,
81
]
},
{
"tb": 5952,
"tbk": 60,
"tl": 13,
"mb": 640,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
182,
182,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 192,
"tbk": 2,
"tl": 21881,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
2043,
2044,
2045,
2046,
2047,
2048,
481,
337,
338
]
},
{
"tb": 240,
"tbk": 5,
"tl": 27,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
421,
422,
422,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 2784,
"tbk": 29,
"tl": 197,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3237,
3238,
3239,
3240,
3241,
3242,
3243,
3244,
3245,
3246,
3247,
3248,
3245,
3249,
3250,
3251,
3252,
3253,
3254,
3255,
3256,
3257,
3258,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 600,
"tbk": 24,
"tl": 21,
"mb": 80,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
181,
182,
181,
182,
182,
183,
184,
185
]
},
{
"tb": 80,
"tbk": 2,
"tl": 69,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1000,
1001,
1002,
1003,
1004,
1005,
1006,
1007,
1008,
1009,
1010,
1011,
1012,
1013,
1014,
1015,
1006,
1007,
1009,
1016,
1017,
734,
337,
338
]
},
{
"tb": 368,
"tbk": 1,
"tl": 35140,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1056,
1057,
1058,
1059,
1060,
1061,
2173,
2174,
2175,
2176,
2177,
2178,
2179,
2180,
2181,
2182,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 3312,
"tbk": 9,
"tl": 319767,
"mb": 1472,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1056,
1057,
1058,
1059,
1060,
1061,
2173,
2174,
2175,
2176,
2177,
2178,
2179,
2180,
2181,
2182,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 288,
"tbk": 4,
"tl": 1,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
337,
338
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
181,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 152,
"tbk": 1,
"tl": 9707,
"mb": 152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
467,
468,
469,
470,
471,
2772,
2773,
2774,
2775,
2776,
221,
143,
178
]
},
{
"tb": 96,
"tbk": 3,
"tl": 655,
"mb": 96,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
381,
382,
1055,
734,
337,
338
]
},
{
"tb": 144,
"tbk": 1,
"tl": 113646,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
94,
95,
96,
97,
98,
99,
100,
101,
102,
103,
103,
104,
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1980,
1981,
1982,
1983,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 3632,
"tbk": 32,
"tl": 12429,
"mb": 736,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3259,
3260,
3261,
3262,
3263,
3264,
3265,
3266,
3262,
3263,
3264,
3267,
481,
143,
144
]
},
{
"tb": 384,
"tbk": 12,
"tl": 568,
"mb": 384,
"mbk": 12,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
982,
983,
984,
985,
986,
987,
988,
989,
986,
990,
991,
992,
993,
994,
995,
996,
997,
998,
999,
735
]
},
{
"tb": 20640,
"tbk": 26,
"tl": 438171,
"mb": 6144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
2049,
2050,
2051,
2052,
2053,
2054,
2055,
2056,
2057,
2058,
2059,
2060,
2061,
2062,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647,
40,
41,
42
]
},
{
"tb": 192,
"tbk": 12,
"tl": 37,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
181,
182,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 160,
"tbk": 2,
"tl": 18,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1407,
1408,
1409,
1410,
1411,
1412,
1413,
1414,
1415,
1416,
1417,
1418,
1419,
1420,
1421,
1422,
1423,
1424,
1425,
1426,
1305,
1306,
1307,
736,
737,
143,
178
]
},
{
"tb": 320,
"tbk": 3,
"tl": 2212,
"mb": 224,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1510,
1511,
1512,
1513,
1514,
1515,
1516,
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
1525,
1526,
1527,
1528,
1529,
1530,
1531,
1532,
1533,
1534,
1535,
1536,
1537,
1538,
2153,
2154,
2155,
2156,
2157,
2158,
2159,
2160,
2161,
2162,
2163,
2153,
2154,
2155,
2156,
2157,
2158,
2159,
2160,
2161,
2162,
2163,
1539,
1540,
1541,
1542,
1543,
1544,
1545,
1546,
1547,
1548,
40,
41,
42
]
},
{
"tb": 160,
"tbk": 5,
"tl": 115,
"mb": 160,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
3268,
3269,
3270,
3271,
3271,
3272,
3273,
3274,
3275,
3276,
3277,
3278,
3279,
3273,
3274,
3280,
3281,
3282,
3276,
3277,
3278,
3283,
3284,
3285,
3286,
3287,
3288,
3289,
2352
]
},
{
"tb": 288,
"tbk": 18,
"tl": 61,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
182,
182,
182,
181,
182,
181
]
},
{
"tb": 720,
"tbk": 15,
"tl": 12,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
182,
181,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 240,
"tbk": 10,
"tl": 12,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
182,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 1344,
"tbk": 12,
"tl": 16600,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
337,
338
]
},
{
"tb": 160,
"tbk": 1,
"tl": 228,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1030,
1031,
2292,
2293,
1055,
734,
337,
338
]
},
{
"tb": 160,
"tbk": 1,
"tl": 31,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1030,
1031,
2292,
2293,
383,
143,
144
]
},
{
"tb": 760,
"tbk": 19,
"tl": 872254,
"mb": 120,
"mbk": 3,
"gb": 80,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
1231,
1232,
1233,
1234,
1235,
1236,
1237,
1238,
1239,
1240,
1241,
1242,
1243,
1244,
1245,
1245,
1246,
1247,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1191,
1192,
1193,
1194,
1195,
1196,
1197,
1198,
1199,
1200,
1201,
1248,
1249,
1250,
1251,
1252,
1253,
1254,
1255,
1256,
1257,
1269,
1270,
1271,
1272,
1273,
1274,
1275,
1276,
1277,
1278,
40,
41,
42
]
},
{
"tb": 600,
"tbk": 3,
"tl": 306204,
"mb": 600,
"mbk": 3,
"gb": 200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1691,
1692,
1693,
1694,
1695,
1696,
1697,
1698,
1699,
1700,
1701,
1701,
1702,
105,
106,
107,
108,
109,
110,
111,
112,
113,
114,
115,
116,
117,
118,
119,
120,
981,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 3456,
"tbk": 54,
"tl": 124942,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
3290,
3291,
3292,
3293,
3294,
3295,
3296,
3297,
3293,
3294,
3295,
3298,
481,
143,
178
]
},
{
"tb": 1920,
"tbk": 30,
"tl": 1029495,
"mb": 1152,
"mbk": 18,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
94,
95,
96,
97,
2173,
2174,
2175,
2176,
2177,
2178,
2179,
2180,
2181,
2182,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 816,
"tbk": 17,
"tl": 33798,
"mb": 288,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
339,
340,
341,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
178
]
},
{
"tb": 816,
"tbk": 24,
"tl": 590,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
181,
181,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 480,
"tbk": 2,
"tl": 210,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1030,
1031,
1053,
1054,
1055,
734,
337,
338
]
},
{
"tb": 336,
"tbk": 7,
"tl": 9,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
422,
422,
421,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 720,
"tbk": 10,
"tl": 2,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
422,
423,
424,
425,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
144
]
},
{
"tb": 10464,
"tbk": 93,
"tl": 89862,
"mb": 1536,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
182,
182,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 10584,
"tbk": 3,
"tl": 6284,
"mb": 6048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1102,
1103,
1104,
1105,
1106,
1107,
1108,
1109,
1110,
1111,
1112,
1113,
1114,
1115,
1116,
1117,
1118,
2018,
2019,
2020,
2021,
2022,
2023,
2024,
2025,
2026,
2023,
2027,
2028,
2029,
2030,
2031,
2032,
2033,
2034,
2035,
2036,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 192,
"tbk": 4,
"tl": 3,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
182,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 8640,
"tbk": 48,
"tl": 15,
"mb": 960,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
182,
182,
181,
182,
181,
183,
184,
185
]
},
{
"tb": 768,
"tbk": 4,
"tl": 2844,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2603,
2604,
2605,
2606,
2607,
2608,
2609,
2610,
2611,
2612,
3299,
3300,
3301,
3302,
3300,
3303,
3304,
981,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 512,
"tbk": 32,
"tl": 17983198,
"mb": 512,
"mbk": 32,
"gb": 512,
"gbk": 32,
"eb": 512,
"ebk": 32,
"fs": [
3305,
3306,
3307,
3308,
3309,
3310,
3311,
3312,
3313,
3314,
3315,
3316,
3317,
3318,
1939,
1940,
1941,
1942,
1943,
1944,
1945,
1946,
1947,
1948,
1949,
1950,
1951,
1952,
1953,
1954,
1955,
1956,
1957,
1958,
1958,
1959,
1960,
1961,
1962,
1963,
1964,
1965,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
735
]
},
{
"tb": 368,
"tbk": 1,
"tl": 2795,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1056,
1057,
1058,
1059,
1060,
1061,
98,
99,
100,
101,
102,
103,
103,
104,
105,
106,
107,
108,
109,
110,
111,
112,
113,
114,
115,
116,
117,
118,
119,
120,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 3632,
"tbk": 32,
"tl": 12309,
"mb": 736,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3259,
3260,
3261,
3262,
3263,
3264,
3265,
3266,
3262,
3263,
3264,
3267,
481,
337,
338
]
},
{
"tb": 160,
"tbk": 10,
"tl": 31,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143
]
},
{
"tb": 362976,
"tbk": 103,
"tl": 190994,
"mb": 49152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1637,
3319,
3320,
3321,
3322,
3323,
3324,
3325,
3326,
3327,
3328,
3329,
3330,
3331,
3332,
3333,
3334,
3335,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 576,
"tbk": 6,
"tl": 12537,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
3336,
3337,
3338,
3339,
3340,
3341,
3342,
3343,
3344,
3345,
3346,
3347,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 640,
"tbk": 8,
"tl": 676,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1381,
1382,
736,
737,
143,
178
]
},
{
"tb": 288,
"tbk": 1,
"tl": 2675,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1835,
1836,
1837,
1838,
1839,
1840,
1841,
1842,
1843,
1844,
1845,
1846,
1847,
1848,
1849,
1849,
1850,
780,
781,
782,
783,
784,
785,
786,
787,
788,
789,
790,
791,
792,
793,
794,
795,
796,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 288,
"tbk": 1,
"tl": 2800,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1835,
1836,
1837,
1838,
1839,
1840,
1841,
1842,
1843,
1844,
1845,
1846,
1847,
1848,
1849,
1849,
1850,
780,
781,
782,
783,
784,
785,
786,
787,
788,
789,
790,
791,
792,
793,
794,
795,
796,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 7904,
"tbk": 8,
"tl": 108,
"mb": 1976,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2403,
2404,
2405,
2406,
2407,
2408,
2409,
2410,
2411,
2412,
2413,
2414,
2415,
3348,
3349,
3350,
3351,
3352,
3353,
3354,
3355,
3356,
3357,
3358,
3359,
3360,
3361,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 384,
"tbk": 6,
"tl": 1636,
"mb": 256,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
2592,
2593,
2594,
2595,
2596,
2597,
2598,
2599,
2600,
2600,
2601,
2602,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42,
1508,
1509,
1188,
1189,
1190,
1191,
1192,
1193,
1194,
1195,
1196,
1197,
1198,
1199,
1200,
1201,
1248,
1249,
1250,
1251,
1252,
1253,
1254,
1255,
1256,
1257
]
},
{
"tb": 2304,
"tbk": 36,
"tl": 112258,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
94,
95,
96,
97,
756,
757,
758,
759,
760,
761,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
144
]
},
{
"tb": 524,
"tbk": 2,
"tl": 16,
"mb": 524,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
928,
929,
930,
931,
932,
933,
934,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
937,
944,
945,
946,
939,
940,
941,
947,
948,
949,
950,
951,
952,
953,
954,
733,
734,
337,
338
]
},
{
"tb": 48,
"tbk": 1,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143,
178
]
},
{
"tb": 384,
"tbk": 6,
"tl": 1773,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
2592,
2593,
2594,
2595,
2596,
2597,
2598,
2599,
2600,
2600,
2601,
2602,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1191,
1192,
1193,
1194,
1195,
1196,
1197,
1198,
1199,
1200,
1201,
1248,
1249,
1250,
1251,
1252,
1253,
1254,
1255,
1256,
1257,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
1266,
1267,
1268
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 561601,
"mb": 4096,
"mbk": 1,
"gb": 4096,
"gbk": 1,
"eb": 4096,
"ebk": 1,
"fs": [
3362,
3363,
3364,
3365,
3366,
3367,
3368,
3369,
3370,
3371,
3372,
1939,
1940,
1941,
1942,
1943,
1944,
1945,
1946,
1947,
1948,
1949,
1950,
1951,
1952,
1953,
1954,
1955,
1956,
1957,
1958,
1958,
1959,
1960,
1961,
1962,
1963,
1964,
1965,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
735
]
},
{
"tb": 128,
"tbk": 2,
"tl": 23,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2509,
2510,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 1664,
"tbk": 13,
"tl": 5591,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1510,
1511,
1512,
1513,
1514,
1515,
1516,
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
1525,
1526,
1527,
1528,
1529,
1530,
3373,
3374,
3375,
3376,
3377,
3378,
3379,
3380,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
1266,
1267,
1268,
1269,
1270,
1271,
1272,
1273,
1274,
1275,
1276,
1277,
1278,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 22144,
"tbk": 247,
"tl": 3270,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
797,
798,
799,
800,
801,
3381,
3382,
3383,
805,
806,
807,
808,
809,
810,
811,
812,
813,
814,
815,
816,
817,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
913,
914,
915,
916,
917,
737,
337,
338
]
},
{
"tb": 48,
"tbk": 3,
"tl": 875,
"mb": 32,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1404,
1405,
1406,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 21168,
"tbk": 42,
"tl": 801209,
"mb": 6144,
"mbk": 4,
"gb": 6144,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
421,
421,
421,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 240,
"tbk": 6,
"tl": 4,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2123,
2124,
2125,
2126,
2127,
2128,
2129,
2130,
2131,
2132,
2133,
2134,
2135,
2136,
2137,
2138,
2139,
2140,
2141,
2142,
2143,
2144,
2145,
736,
734,
337,
338
]
},
{
"tb": 94464,
"tbk": 138,
"tl": 1432,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3384,
3385,
3386,
3387,
3388,
3389,
3390,
3391,
3392,
3393,
3394,
3395,
3396,
3397,
3398,
3399,
3400,
3401,
3402,
3403,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 480,
"tbk": 1,
"tl": 272,
"mb": 480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1484,
1485,
3404,
3405,
3406,
3407,
3408,
3409,
3410,
3411,
3412,
3413,
3414,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
735
]
},
{
"tb": 288,
"tbk": 6,
"tl": 5,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
182,
181,
182,
181,
181,
181
]
},
{
"tb": 840,
"tbk": 1,
"tl": 36318,
"mb": 840,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1781,
1782,
1783,
1784,
1785,
1786,
1787,
1788,
1789,
1790,
1791,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
418
]
},
{
"tb": 448,
"tbk": 12,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143,
178
]
},
{
"tb": 483,
"tbk": 60,
"tl": 5708,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3415,
3416,
3417,
3418,
3419,
3420,
2472,
2473,
2474,
2475,
2476,
2477,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 768,
"tbk": 6,
"tl": 111106,
"mb": 768,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2814,
2815,
2816,
2817,
2818,
2819,
2820,
2821,
2822,
2823,
2824,
2825,
2826,
2827,
2828,
2829,
2830,
2831,
2832,
2833,
2821,
2822,
2823,
2824,
2825,
2826,
2827,
2828,
2829,
2831,
2834,
537,
538,
539,
143,
144
]
},
{
"tb": 64,
"tbk": 2,
"tl": 508,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
1883,
1884,
1055,
734,
143,
144
]
},
{
"tb": 720,
"tbk": 10,
"tl": 2,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
337,
338
]
},
{
"tb": 640,
"tbk": 8,
"tl": 358,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1381,
1382,
736,
734,
337,
338
]
},
{
"tb": 96,
"tbk": 1,
"tl": 80,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
1729,
1730,
1731,
1732,
1733,
1734,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
1266,
1267,
1268,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
3421,
3422,
3423,
3424,
3425,
3426,
3427,
3428,
3429,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 2472,
"tbk": 25,
"tl": 3,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3430,
3431,
3432,
3433,
3434,
3435,
3436,
3437,
3438,
3439,
3440,
3441,
3442,
3443,
3444,
3442,
3445,
3446,
3447,
3448,
3449,
3450,
3451,
3452,
3453,
3447,
3448,
3454,
3455,
3456,
3457,
3458,
3459,
3460,
3461,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 128,
"tbk": 2,
"tl": 6,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2814,
2815,
2816,
2817,
2818,
3462,
3463,
3464,
3465,
3466,
3464,
3467,
3468,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 144,
"tbk": 9,
"tl": 359,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2037,
2038,
2039,
2040,
2041,
2042,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 32,
"tbk": 2,
"tl": 47,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436
]
},
{
"tb": 864,
"tbk": 12,
"tl": 1137,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
181,
181,
182,
182,
181,
181
]
},
{
"tb": 1472,
"tbk": 4,
"tl": 12450,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1056,
1057,
1058,
1059,
1060,
1061,
756,
757,
758,
759,
760,
761,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
337,
338
]
},
{
"tb": 960,
"tbk": 5,
"tl": 126,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
60,
61,
62,
63,
64,
65,
66,
67,
68,
756,
757,
758,
759,
760,
761,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
337,
338
]
},
{
"tb": 1328,
"tbk": 1,
"tl": 20,
"mb": 1328,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
1383,
1384,
1385,
1386,
1387,
1388,
1389,
1390,
1391,
1497,
143,
178
]
},
{
"tb": 288,
"tbk": 6,
"tl": 1,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
144
]
},
{
"tb": 480,
"tbk": 2,
"tl": 23,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1030,
1031,
1053,
1054,
383,
143,
178
]
},
{
"tb": 720,
"tbk": 10,
"tl": 13,
"mb": 144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
182,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 432,
"tbk": 9,
"tl": 19,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 160,
"tbk": 4,
"tl": 12983,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3469,
3470,
3471,
3472,
3473,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 210,
"tbk": 27,
"tl": 2909,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3415,
3416,
3417,
3418,
3419,
3420,
2472,
2473,
2474,
2475,
2476,
2477,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
421,
423,
424,
425,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
481,
143,
144
]
},
{
"tb": 96,
"tbk": 2,
"tl": 4745,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1835,
1836,
1837,
1838,
1839,
1840,
1841,
1842,
1843,
1844,
1845,
1846,
1847,
1848,
1849,
1849,
1850,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 64,
"tbk": 1,
"tl": 644,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
2592,
2593,
2594,
2595,
2596,
2597,
2598,
2599,
2600,
2600,
2601,
2602,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1191,
1192,
1193,
1194,
1195,
1196,
1197,
1198,
1199,
1200,
1201,
3474,
3475,
3476,
3477,
3478,
3479,
3480,
3481,
3482,
3483,
40,
41,
42,
1508,
1509
]
},
{
"tb": 624,
"tbk": 13,
"tl": 13,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
182,
182,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 80,
"tbk": 2,
"tl": 71060,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2746,
2747,
2748,
2749,
2750,
2751,
2752,
2753,
2754,
2755,
2756,
2757,
2758,
2759,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
2541,
2542,
434,
435,
436,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 144,
"tbk": 1,
"tl": 18556,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
527,
528,
529,
530,
531,
532,
533,
534,
535,
536,
537,
538,
539,
337,
338
]
},
{
"tb": 160,
"tbk": 1,
"tl": 257,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1030,
1031,
1735,
1736,
1055,
737,
337,
338
]
},
{
"tb": 972,
"tbk": 3,
"tl": 156,
"mb": 824,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
818,
819,
820,
821,
822,
823,
824,
825,
826,
827,
828,
829,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
1966,
1967
]
},
{
"tb": 1008,
"tbk": 12,
"tl": 4,
"mb": 168,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
182,
182,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 640,
"tbk": 20,
"tl": 8,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
3484,
3485,
3486,
3487,
3488,
3489,
3490,
3491,
3492,
3493,
3494,
966,
967,
968,
969,
970,
971,
972,
973,
288
]
},
{
"tb": 40,
"tbk": 1,
"tl": 638,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2368,
2369,
2370,
2371,
2372,
2373,
2374,
2375,
2376,
2111,
2112,
2113,
2114,
2115,
2116,
2117,
2118,
2119,
2120,
40,
41,
42,
2121,
2122,
2108,
2109,
2110,
3178,
3179,
3180,
3181,
3182,
3183,
3184,
3185,
3186,
3187,
3188,
3495,
3496,
3497,
3498,
3499,
3500,
3501,
3502,
3503,
3504,
1539,
1540,
1541,
1542,
1543,
1544,
1545,
1546,
1547,
1548
]
},
{
"tb": 300,
"tbk": 3,
"tl": 51,
"mb": 248,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
384,
385,
386,
387,
388,
389,
390,
391,
2444,
2445,
2446,
2447,
2448,
2449,
2450,
2451,
2452,
2452,
2453,
2454,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
917,
737,
143,
178
]
},
{
"tb": 160,
"tbk": 1,
"tl": 365,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1484,
1485,
2091,
2092,
2093,
2094,
2095,
2096,
2097,
2098,
2099,
2111,
2112,
2113,
2114,
2115,
2116,
2117,
2118,
2119,
2120,
40,
41,
42,
2121,
2122,
2108,
2109,
2110,
3178,
3179,
3180,
3181,
3182,
3183,
3184,
3185,
3186,
3187,
3188,
3505,
3506,
3507,
3508,
3509,
3510,
3511,
3512,
3513,
3514
]
},
{
"tb": 12288,
"tbk": 20,
"tl": 242265,
"mb": 6144,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3040,
3041,
3042,
3043,
3044,
3045,
3046,
3047,
3048,
3049,
3050,
3051,
3048,
3052,
3053,
3054,
3055,
3056,
3057,
3058,
3059,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 165648,
"tbk": 14,
"tl": 331,
"mb": 25392,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2868,
2869,
2870,
2871,
2872,
2873,
2874,
2875,
2876,
2877,
2878,
2879,
2880,
2881,
2882,
2087,
2088,
2089,
2090
]
},
{
"tb": 336,
"tbk": 7,
"tl": 25,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
421,
421,
422,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 2208,
"tbk": 6,
"tl": 247642,
"mb": 1104,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3515,
3516,
3517,
3518,
3519,
3520,
3521,
3522,
3523,
3524,
3525,
3526,
3527,
3528,
3529,
3530,
3531,
3532,
3533,
3534,
3535,
3536,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 1920,
"tbk": 12,
"tl": 4061,
"mb": 960,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1484,
1485,
2091,
2092,
2093,
2094,
2095,
2096,
2097,
2098,
2099,
2111,
2112,
2113,
2114,
2115,
2116,
2117,
2118,
2119,
2120,
40,
41,
42,
2121,
2122,
2108,
2109,
2110,
2100,
2101,
2102,
2103,
2104,
2105,
2106,
2107,
2108,
2109,
2110
]
},
{
"tb": 128,
"tbk": 4,
"tl": 1013,
"mb": 128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
1883,
1884,
1055,
737,
337,
338
]
},
{
"tb": 4208,
"tbk": 258,
"tl": 445,
"mb": 176,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
648,
649,
650,
651,
652,
653,
654,
655,
656,
657,
658,
659,
660,
661,
662,
663,
664,
665,
666,
1906,
1907,
1908,
1909,
1910,
1911,
1912,
1913,
1914,
1915,
1916,
1917,
1918,
1919,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 672,
"tbk": 6,
"tl": 3497,
"mb": 384,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
183,
184,
185,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
143,
144
]
},
{
"tb": 576,
"tbk": 2,
"tl": 6193,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1018,
1019,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
756,
757,
758,
759,
760,
761,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
143,
178
]
},
{
"tb": 288,
"tbk": 6,
"tl": 4,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
181,
181,
181,
182,
181,
183,
184,
185
]
},
{
"tb": 128,
"tbk": 2,
"tl": 5,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2814,
2815,
2816,
2817,
2818,
3462,
3463,
3464,
3465,
3466,
3464,
3467,
3468,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 112,
"tbk": 7,
"tl": 36,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
421,
421,
422,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 96,
"tbk": 1,
"tl": 557459,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
3537,
3538,
3539,
3540,
3541,
3542,
3543,
3544
]
},
{
"tb": 200,
"tbk": 5,
"tl": 31,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
683,
684,
685,
686,
687,
688,
689,
690,
691,
692,
693,
694,
695,
696,
697,
698,
699,
700,
701,
702,
703,
704,
705,
706,
707,
2352
]
},
{
"tb": 1104,
"tbk": 4,
"tl": 12381,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1018,
1019,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
756,
757,
758,
759,
760,
761,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
337,
338
]
},
{
"tb": 768,
"tbk": 4,
"tl": 2826,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1086,
1087,
1088,
1089,
1090,
1091,
1092,
1093,
1094,
1095,
1096,
1097,
1098,
1099,
1097,
1100,
1101,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 800,
"tbk": 4,
"tl": 12929,
"mb": 400,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3545,
3546,
3547,
3548,
3549,
1124,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 48,
"tbk": 2,
"tl": 0,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
182,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 512,
"tbk": 4,
"tl": 126944,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
2043,
2044,
2045,
2046,
2047,
2048,
221,
143,
144
]
},
{
"tb": 200,
"tbk": 1,
"tl": 2627,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1717,
1718,
1719,
1720,
1721,
1722,
1723,
1724,
1725,
1726,
1727,
1727,
1728,
105,
106,
107,
108,
109,
110,
111,
112,
113,
114,
115,
116,
117,
118,
119,
120,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 192,
"tbk": 2,
"tl": 29,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2783,
2784,
2785,
2786,
2787,
2788,
2789,
2790,
2791,
2792,
2793,
2794,
2795,
2796,
2797,
221,
143,
178
]
},
{
"tb": 148,
"tbk": 1,
"tl": 25,
"mb": 148,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
818,
819,
820,
821,
822,
823,
824,
825,
826,
827,
828,
829,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
1017,
734,
143,
144
]
},
{
"tb": 2880,
"tbk": 30,
"tl": 18032,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3550,
3551,
3552,
3553,
3554,
3555,
3556,
3557,
3558,
3559,
3560,
1045,
1046,
1047,
1048,
1049,
1050,
1051,
1052,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 80,
"tbk": 5,
"tl": 48,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
422,
422,
421,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 280,
"tbk": 1,
"tl": 3654,
"mb": 280,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
197,
198,
199,
200,
201,
202,
203,
204,
205,
206,
207,
208,
209,
210,
211,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
481,
143,
178
]
},
{
"tb": 432,
"tbk": 9,
"tl": 3,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
181,
182,
181,
181,
181,
182
]
},
{
"tb": 512,
"tbk": 4,
"tl": 2248612,
"mb": 512,
"mbk": 4,
"gb": 512,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
3226,
3227,
3228,
3229,
3230,
3231,
3232,
3233,
3234,
3235,
3236,
554
]
},
{
"tb": 192,
"tbk": 12,
"tl": 41,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
182,
181,
182,
181,
181,
183,
184,
185
]
},
{
"tb": 128,
"tbk": 2,
"tl": 5,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1510,
1511,
1512,
1513,
1514,
1515,
1516,
1517,
1518,
3561,
3562,
3563,
3564,
3565,
3566,
3567,
3565,
3568,
3569,
981,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 48,
"tbk": 1,
"tl": 12674,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
146,
147,
148,
149,
150,
151,
152,
153,
154,
155,
156,
157,
158,
159,
159,
160,
1851,
1852,
1853,
1854,
1855,
1856,
1857,
1858,
1859,
1860,
1861,
1862,
1863,
1864,
1865,
1866,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 224,
"tbk": 6,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
183,
184,
185,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
143,
178
]
},
{
"tb": 192,
"tbk": 2,
"tl": 18865,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
2806,
2807,
2808,
2809,
2810,
2811,
2812,
2808,
2809,
2810,
2813,
221,
143,
144
]
},
{
"tb": 480,
"tbk": 6,
"tl": 5,
"mb": 160,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2123,
2124,
2125,
2126,
2127,
2128,
2129,
2130,
2131,
2132,
2133,
2134,
2135,
2136,
2137,
2138,
2139,
2140,
2141,
2142,
2143,
2144,
2145,
733,
737,
143,
144
]
},
{
"tb": 524,
"tbk": 2,
"tl": 19,
"mb": 524,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
928,
929,
930,
931,
932,
933,
934,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
937,
944,
945,
946,
939,
940,
941,
947,
948,
949,
950,
951,
952,
953,
954,
733,
734,
143,
144
]
},
{
"tb": 128,
"tbk": 2,
"tl": 520,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
1464,
1465,
1055,
737,
337,
338
]
},
{
"tb": 768,
"tbk": 4,
"tl": 2828,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1086,
1087,
1088,
1089,
1090,
1091,
1092,
1093,
1094,
1095,
2838,
2839,
2840,
2841,
2839,
2842,
2843,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 5424,
"tbk": 31,
"tl": 9442,
"mb": 768,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
182,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 96,
"tbk": 2,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
183,
184,
185,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
143,
144
]
},
{
"tb": 824,
"tbk": 2,
"tl": 49,
"mb": 824,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
3570,
3571,
3572,
3573,
3574,
3575,
3576,
3577,
3577,
3578,
3579,
3580,
3581,
3582,
3583,
3584,
3585,
3579,
3580,
3586,
3587,
3588,
3582,
3583,
3584,
3589,
3590,
3591,
3592,
1572,
1573,
1574,
144
]
},
{
"tb": 1480,
"tbk": 37,
"tl": 1208801,
"mb": 280,
"mbk": 7,
"gb": 80,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
1231,
1232,
1233,
1234,
1235,
1236,
1237,
1238,
1239,
1240,
1241,
1242,
1243,
1244,
1245,
1245,
1246,
1247,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1191,
1192,
1193,
1194,
1195,
1196,
1197,
1198,
1199,
1200,
1201,
1248,
1249,
1250,
1251,
1252,
1253,
1254,
1255,
1256,
1257,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
1266,
1267,
1268
]
},
{
"tb": 628992,
"tbk": 2808,
"tl": 30249,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
344,
345,
346,
347,
348,
349,
350,
351,
352,
353,
354,
355,
351,
356,
357,
358,
359,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 360,
"tbk": 1,
"tl": 388,
"mb": 360,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1484,
1485,
3404,
3405,
3406,
3407,
3408,
3409,
3410,
3411,
3412,
3413,
3414,
883,
143,
178
]
},
{
"tb": 560,
"tbk": 8,
"tl": 94034,
"mb": 480,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2489,
2490,
2491,
2492,
2493,
2494,
2495,
2496,
2497,
2498,
2499,
2500,
2501,
2502,
2503,
2504,
2505,
2506,
2507,
2495,
2496,
2498,
2508,
537,
538,
539,
143,
178
]
},
{
"tb": 210,
"tbk": 27,
"tl": 2806,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3146,
3147,
3148,
3149,
3150,
3151,
2472,
2473,
2474,
2475,
2476,
2477,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 288,
"tbk": 2,
"tl": 557488,
"mb": 192,
"mbk": 1,
"gb": 192,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3593,
3594,
3595,
3596,
3597,
3598,
3599,
3600,
3601,
3602,
3603,
3604,
3605,
3606,
3607,
3608,
3609,
3610,
3611,
3612,
3613,
3614,
3615,
3616
]
},
{
"tb": 64,
"tbk": 2,
"tl": 66,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2320,
2321,
2322,
2323,
2324,
2325,
2326,
2327,
2328,
2329,
2330,
2331,
2332,
2333,
2334,
2335,
2336,
2337,
2338,
2339,
2340,
2341,
2342,
2343,
2344,
2345,
2346,
2347,
2338,
2339,
2341,
2348,
1017,
734,
337,
338
]
},
{
"tb": 84,
"tbk": 1,
"tl": 7047,
"mb": 84,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
467,
468,
469,
470,
471,
2772,
2773,
2774,
2775,
2776,
481,
143,
178
]
},
{
"tb": 1120,
"tbk": 3,
"tl": 429,
"mb": 640,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1030,
1031,
1032,
1033,
2772,
2773,
2774,
2775,
2776,
481,
143,
178
]
},
{
"tb": 1448,
"tbk": 20,
"tl": 4,
"mb": 232,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
182,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 1196,
"tbk": 5,
"tl": 38,
"mb": 896,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
384,
385,
386,
387,
388,
389,
390,
391,
2444,
2445,
2446,
2447,
2448,
2449,
2450,
2451,
2452,
2452,
2453,
2454,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1427,
1428,
1429,
1430,
1431,
1432,
1433
]
},
{
"tb": 80,
"tbk": 5,
"tl": 15,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
422,
423,
424,
425,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
144
]
},
{
"tb": 336,
"tbk": 3,
"tl": 3955,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
421,
423,
424,
425,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
481,
337,
338
]
},
{
"tb": 224,
"tbk": 3,
"tl": 37,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
3617,
3618,
3619,
3620,
841,
144
]
},
{
"tb": 144,
"tbk": 1,
"tl": 35125,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
94,
95,
96,
97,
2173,
2174,
2175,
2176,
2177,
2178,
2179,
2180,
2181,
2182,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42
]
},
{
"tb": 1200,
"tbk": 20,
"tl": 14,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
421,
421,
422,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 1296,
"tbk": 18,
"tl": 7,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
182,
182,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 560,
"tbk": 1,
"tl": 36717,
"mb": 560,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3621,
3622,
3623,
3624,
3625,
3626,
3627,
3628,
3629,
3630,
3631,
3632,
3633,
3634,
3635,
3636,
3637,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
252
]
},
{
"tb": 864,
"tbk": 6,
"tl": 1672105,
"mb": 576,
"mbk": 3,
"gb": 576,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
3638,
3639,
3640,
3641,
3642,
3643,
3644,
3645,
3646,
3647,
3648,
3649,
3650,
3651,
81
]
},
{
"tb": 288,
"tbk": 18,
"tl": 61,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
181,
182,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 96,
"tbk": 6,
"tl": 19,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
181,
182,
182,
181,
181,
183,
184,
185
]
},
{
"tb": 720,
"tbk": 10,
"tl": 4,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
181,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
337,
338
]
},
{
"tb": 336,
"tbk": 14,
"tl": 25,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42
]
},
{
"tb": 80,
"tbk": 2,
"tl": 12,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1407,
1408,
1409,
1410,
1411,
1412,
1413,
1414,
1415,
1416,
1417,
1418,
1419,
1420,
1421,
1422,
1423,
1424,
1425,
1426,
1305,
1306,
1307,
917,
734,
143,
144
]
},
{
"tb": 48,
"tbk": 2,
"tl": 0,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143,
178
]
},
{
"tb": 128,
"tbk": 2,
"tl": 598,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
381,
382,
1055,
737,
143,
144
]
},
{
"tb": 640,
"tbk": 4,
"tl": 162402,
"mb": 480,
"mbk": 3,
"gb": 480,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
2353,
2354,
2355,
2356,
2357,
2358,
2359,
2360,
2361,
2362,
2363,
2364,
2365,
2366,
2367,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 432,
"tbk": 6,
"tl": 1,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
182,
181,
181,
181,
182,
183,
184,
185
]
},
{
"tb": 3456,
"tbk": 54,
"tl": 125598,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
3290,
3291,
3292,
3293,
3294,
3295,
3296,
3297,
3293,
3294,
3295,
3298,
481,
337,
338
]
},
{
"tb": 784,
"tbk": 21,
"tl": 31,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42
]
},
{
"tb": 84,
"tbk": 1,
"tl": 18,
"mb": 84,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3621,
3622,
3623,
3624,
3625,
3626,
3627,
3628,
3652,
3653,
3654,
3655,
3656,
2798,
2799,
2800,
2801,
2802,
2803,
2804,
2805,
1617,
1618,
1619,
1620,
1621,
1622,
1623,
1624,
1625,
1626,
1627,
1628,
1629,
1630,
1631,
1632,
1633,
1618,
1619,
1620,
1621,
1622,
1623,
1624,
1628,
1634,
1635,
1636,
81
]
},
{
"tb": 236,
"tbk": 2,
"tl": 17,
"mb": 236,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
1279,
1280,
1281,
1282,
1283,
1284,
1285,
1286,
1286,
1287,
1288,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
917,
737,
143,
144
]
},
{
"tb": 236,
"tbk": 2,
"tl": 33,
"mb": 236,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
1279,
1280,
1281,
1282,
1283,
1284,
1285,
1286,
1286,
1287,
1288,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
733,
737,
143,
178
]
},
{
"tb": 672,
"tbk": 1,
"tl": 900,
"mb": 672,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
874,
875,
876,
877,
878,
879,
880,
881,
882,
1497,
143,
144
]
},
{
"tb": 240,
"tbk": 10,
"tl": 48,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
422,
421,
421,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 86336,
"tbk": 1349,
"tl": 23368,
"mb": 192,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2227,
2228,
2229,
2230,
2231,
2232,
2233,
2234,
2235,
2236,
2237,
2238,
2239,
2240,
2241,
2242,
2243,
2244,
2245,
2246,
2247,
2248,
2238,
2249,
2240,
2241,
2242,
2243,
2244,
2250,
2246,
2247,
2251,
2252,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370
]
},
{
"tb": 240,
"tbk": 5,
"tl": 32,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
421,
422,
421,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 560,
"tbk": 1,
"tl": 675,
"mb": 560,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3621,
3622,
3623,
3624,
3625,
3626,
3627,
3628,
3629,
3630,
3631,
3632,
3633,
3634,
3635,
3636,
3637,
1497,
143,
178
]
},
{
"tb": 792,
"tbk": 1,
"tl": 95099,
"mb": 792,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3657,
3658,
3659,
3660,
3661,
3662,
3663,
3664,
3665,
3666,
3667,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647,
40,
41,
42
]
},
{
"tb": 40,
"tbk": 1,
"tl": 182,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
768,
769,
770,
771,
772,
773,
774,
775,
776,
777,
778,
778,
779,
1851,
1852,
1853,
1854,
1855,
1856,
1857,
1858,
1859,
1860,
1861,
1862,
1863,
1864,
1865,
1866,
177,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 2208,
"tbk": 6,
"tl": 18780,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1056,
1057,
1058,
1059,
1060,
1061,
756,
757,
758,
759,
760,
761,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
144
]
},
{
"tb": 240,
"tbk": 6,
"tl": 1535,
"mb": 160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1171,
1172,
1173,
1174,
1175,
1176,
1177,
1178,
1178,
1179,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42,
1508,
1509,
1188,
1189,
1190,
1191,
1192,
1193,
1194,
1195,
1196,
1197,
1198,
1199,
1200,
1201,
1248,
1249,
1250,
1251,
1252,
1253,
1254,
1255,
1256,
1257,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265
]
},
{
"tb": 40,
"tbk": 2,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2272,
2273,
2274,
2275,
1017,
737,
143,
178
]
},
{
"tb": 1891560,
"tbk": 4,
"tl": 63,
"mb": 1068480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
1867,
1868,
1869,
1870,
1871,
1872,
1873,
1874,
1875,
3002,
3003,
3004,
2864,
2865,
2866,
2867
]
},
{
"tb": 16,
"tbk": 2,
"tl": 4,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2272,
2273,
2274,
2275,
1017,
734,
337,
338
]
},
{
"tb": 2208,
"tbk": 6,
"tl": 446257,
"mb": 1104,
"mbk": 3,
"gb": 736,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
3515,
3516,
3517,
3518,
3519,
3520,
3521,
3522,
3523,
3524,
3525,
3526,
3527,
3528,
3529,
3530,
3531,
3532,
3533,
3534,
3535,
3536,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 11664,
"tbk": 30,
"tl": 17864,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3550,
3551,
3552,
3553,
3554,
3555,
3556,
3557,
3558,
3559,
3560,
1319,
1320,
1321,
1322,
1323,
1324,
1325,
1326,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 396616,
"tbk": 144,
"tl": 300138,
"mb": 65536,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2777,
2778,
2779,
2780,
2781,
2782,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 1104,
"tbk": 3,
"tl": 436759,
"mb": 1104,
"mbk": 3,
"gb": 736,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
1056,
1057,
1058,
1059,
1060,
1061,
443,
444,
445,
446,
447,
448,
448,
449,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 1152,
"tbk": 3,
"tl": 1672086,
"mb": 1152,
"mbk": 3,
"gb": 1152,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
3668,
3669,
3670,
3671,
3672,
3673,
3674,
3675,
3676,
3677,
3678,
3679,
3680,
3681,
3682,
81
]
},
{
"tb": 256,
"tbk": 2,
"tl": 0,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
913,
914,
3032,
3033,
3034,
3035,
3036,
3037,
3038,
3034,
3035,
3036,
3039,
221,
143,
178
]
},
{
"tb": 2448,
"tbk": 24,
"tl": 589,
"mb": 288,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
181,
181,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 200,
"tbk": 5,
"tl": 10,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1575,
1576,
1577,
1578,
1579,
1580,
1581,
1582,
1583,
1584,
1585,
1586,
1587,
1588,
1589,
1590,
1591,
1592,
1593,
1594,
1595,
1583,
1596,
1597,
1598,
1599,
252
]
},
{
"tb": 256,
"tbk": 8,
"tl": 1717,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2146,
2147,
2148,
2149,
2150,
2151,
2152,
1531,
1532,
1533,
1534,
1535,
1536,
1537,
1538,
2153,
2154,
2155,
2156,
2157,
2158,
2159,
2160,
2161,
2162,
2163,
2153,
2154,
2155,
2156,
2157,
2158,
2159,
2160,
2283,
2284,
2285,
2286,
2287,
2288,
2289,
2290,
2291,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 2664,
"tbk": 36,
"tl": 17,
"mb": 240,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
182,
182,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 2480,
"tbk": 25,
"tl": 19,
"mb": 384,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
421,
421,
421,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 7776,
"tbk": 30,
"tl": 17663,
"mb": 304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3113,
3114,
3115,
3116,
3117,
3118,
3119,
3120,
3121,
3122,
3123,
1319,
1320,
1321,
1322,
1323,
1324,
1325,
1326,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 80,
"tbk": 5,
"tl": 17,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
182,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 864,
"tbk": 6,
"tl": 18735,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
94,
95,
96,
97,
756,
757,
758,
759,
760,
761,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
337,
338
]
},
{
"tb": 6048,
"tbk": 54,
"tl": 18,
"mb": 576,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
181,
182,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 144,
"tbk": 1,
"tl": 123922,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
94,
95,
96,
97,
443,
444,
445,
446,
447,
448,
448,
449,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 96,
"tbk": 1,
"tl": 170988,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
3683,
3684,
3685,
1966,
1967
]
},
{
"tb": 40,
"tbk": 1,
"tl": 557498,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3686,
3687,
3688,
3689,
3690,
3691
]
},
{
"tb": 40,
"tbk": 1,
"tl": 894,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1231,
1232,
1233,
1234,
1235,
1236,
1237,
1238,
1239,
1240,
1241,
1242,
1243,
1244,
1245,
1245,
1246,
1247,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42,
1508,
1509,
1188,
1189,
1190,
1191,
1192,
1193,
1194,
1195,
1196,
1197,
1198,
1199,
1200,
1201,
3474,
3475,
3476,
3477,
3478,
3479,
3480,
3481,
3482,
3483
]
},
{
"tb": 200,
"tbk": 1,
"tl": 557411,
"mb": 200,
"mbk": 1,
"gb": 200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3692,
3693,
3694,
3695,
3696,
3697,
3698,
3699,
3700,
3701,
3702,
3703,
3704,
3705,
3706,
3707,
3708,
3709,
81
]
},
{
"tb": 2352,
"tbk": 21,
"tl": 19,
"mb": 288,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
421,
422,
422,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 368,
"tbk": 1,
"tl": 35143,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
437,
438,
439,
440,
441,
442,
2173,
2174,
2175,
2176,
2177,
2178,
2179,
2180,
2181,
2182,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 192,
"tbk": 2,
"tl": 174,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
381,
382,
1335,
337,
338
]
},
{
"tb": 1440,
"tbk": 6,
"tl": 17,
"mb": 240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2072,
2073,
2074,
2075,
2076,
2077,
2078,
2079,
2080,
2081,
2082,
2083,
2084,
2085,
2086,
1879,
1880,
1881,
1882
]
},
{
"tb": 6584,
"tbk": 29,
"tl": 49895,
"mb": 1536,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2206,
2207,
2208,
2209,
2210,
2211,
2212,
2213,
2214,
2215,
2216,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 88,
"tbk": 2,
"tl": 1,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42
]
},
{
"tb": 288,
"tbk": 1,
"tl": 26,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
2736,
2737,
2738,
2739,
2740,
2741,
2742,
2743,
2743,
2744,
2745,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
733,
734,
143,
144
]
},
{
"tb": 824,
"tbk": 2,
"tl": 34,
"mb": 824,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
3570,
3571,
3572,
3573,
3574,
3575,
3576,
3577,
3577,
3578,
3579,
3580,
3581,
3582,
3583,
3584,
3585,
3579,
3580,
3586,
3587,
3588,
3582,
3583,
3584,
3589,
3590,
3591,
3592,
3710,
3711,
3712,
3713
]
},
{
"tb": 240,
"tbk": 5,
"tl": 1,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
422,
423,
424,
425,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
337,
338
]
},
{
"tb": 896,
"tbk": 6,
"tl": 10446,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3714,
3715,
3716,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 96,
"tbk": 6,
"tl": 21,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
182,
181,
182,
181,
181,
181
]
},
{
"tb": 192,
"tbk": 2,
"tl": 10441,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
920,
921,
922,
923,
924,
925,
926,
3716,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 1120,
"tbk": 3,
"tl": 348,
"mb": 640,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1030,
1031,
1032,
1033,
2772,
2773,
2774,
2775,
2776,
481,
337,
338
]
},
{
"tb": 4464,
"tbk": 3,
"tl": 1081,
"mb": 3000,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1984,
1985,
1986,
1987,
1988,
1989,
1990,
1991,
1992,
1993,
1994,
1995,
1996,
1997,
1998,
1999,
2000,
2001,
2002,
2003,
2674,
2675,
2676,
2677,
2678,
2679,
2680,
2681,
2682,
2683,
2684,
2685,
2018,
2019,
2020,
2021,
2022,
2023,
2024,
2025,
2026,
2023,
2027,
2028,
2029,
2030,
2031,
2032,
2033,
2034,
2035,
2036,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 1328,
"tbk": 1,
"tl": 19,
"mb": 1328,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
1383,
1384,
1385,
1386,
1387,
1388,
1389,
1390,
1391,
883,
143,
144
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 71,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3717,
3718,
3719,
3720,
3721,
3722,
2706,
2844,
2845,
2846,
2847,
2848,
2849,
2850,
2851,
2852,
2853,
2854,
2855,
2856,
2857,
2858,
2859,
2860,
2861,
2861,
2862,
2863,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1191,
1192,
1193,
1194,
1195,
1196,
1197,
1198,
1199,
1200,
1201
]
},
{
"tb": 2016,
"tbk": 18,
"tl": 12419,
"mb": 384,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
337,
338
]
},
{
"tb": 64,
"tbk": 4,
"tl": 12,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143,
144
]
},
{
"tb": 560,
"tbk": 15,
"tl": 20,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
421,
422,
422,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 432,
"tbk": 9,
"tl": 42,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 192,
"tbk": 2,
"tl": 18854,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
2806,
2807,
2808,
2809,
2810,
2811,
2812,
2808,
2809,
2810,
2813,
221,
337,
338
]
},
{
"tb": 62696,
"tbk": 293,
"tl": 9980680,
"mb": 17424,
"mbk": 66,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1815,
1816,
1817,
1818,
1819,
1820,
1821,
1822,
1823,
1824,
1825,
1826,
1827,
1828,
1829,
1830,
1831,
1832,
1822,
1823,
1833,
1834,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 14400,
"tbk": 30,
"tl": 2389,
"mb": 480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1752,
1753,
1754,
1755,
1756,
1757,
1758,
3723,
3724,
3725,
3726,
3727,
3728,
3729,
3730,
3731,
3732,
3733,
3734,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 180,
"tbk": 1,
"tl": 98,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
3735,
3736,
3737,
3738,
3739,
3740,
3741,
3741,
3742,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 368,
"tbk": 1,
"tl": 113651,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
437,
438,
439,
440,
441,
442,
98,
99,
100,
101,
102,
103,
103,
104,
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1980,
1981,
1982,
1983,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 800,
"tbk": 4,
"tl": 2248734,
"mb": 800,
"mbk": 4,
"gb": 800,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
3743,
3744,
3745,
3746,
3747,
3748,
3749,
3750,
3751,
3752,
3753,
3754,
3755,
1617,
1618,
1619,
1620,
1621,
1622,
1623,
1624,
1625,
1626,
1627,
1628,
1629,
1630,
1631,
1632,
1633,
1618,
1619,
1620,
1621,
1622,
1623,
1624,
1628,
1634,
1635,
1636,
554
]
},
{
"tb": 249616,
"tbk": 29,
"tl": 12488,
"mb": 34832,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3756,
3757,
3758,
3759,
3760,
3761,
3762,
3763,
3764,
3765,
3766,
3767,
3768,
3769,
3770,
3771,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 1920,
"tbk": 24,
"tl": 29,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1737,
1738,
1739,
1740,
1741,
1742,
1743,
1744,
1745,
1746,
1747,
1748,
1745,
1749,
1750,
1751,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
337,
338
]
},
{
"tb": 96,
"tbk": 1,
"tl": 71643,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
3683,
3684,
3685,
841,
178
]
},
{
"tb": 288,
"tbk": 6,
"tl": 5,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
182,
181,
181,
181,
182,
183,
184,
185
]
},
{
"tb": 48,
"tbk": 1,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
337,
338
]
},
{
"tb": 8032,
"tbk": 9,
"tl": 1125,
"mb": 4368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3756,
3757,
3758,
3759,
3760,
3761,
3762,
3763,
3764,
3765,
3766,
3767,
3768,
3769,
3770,
3771,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 236,
"tbk": 2,
"tl": 32,
"mb": 236,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
1279,
1280,
1281,
1282,
1283,
1284,
1285,
1286,
1286,
1287,
1288,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
736,
737,
143,
144
]
},
{
"tb": 576,
"tbk": 12,
"tl": 3,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
181,
181,
182,
181,
182,
183,
184,
185
]
},
{
"tb": 240,
"tbk": 6,
"tl": 306034,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1231,
1232,
1233,
1234,
1235,
1236,
1237,
1238,
1239,
1240,
1241,
1242,
1243,
1244,
1245,
1245,
1246,
1247,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1191,
1192,
1193,
1194,
1195,
1196,
1197,
1198,
1199,
1200,
1201,
1248,
1249,
1250,
1251,
1252,
1253,
1254,
1255,
1256,
1257,
1269,
1270,
1271,
1272,
1273,
1274,
1275,
1276,
1277,
1278,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 432,
"tbk": 9,
"tl": 726362,
"mb": 96,
"mbk": 2,
"gb": 96,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
339,
340,
341,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 11664,
"tbk": 30,
"tl": 17964,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1308,
1309,
1310,
1311,
1312,
1313,
1314,
1315,
1316,
1317,
1318,
1319,
1320,
1321,
1322,
1323,
1324,
1325,
1326,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 512,
"tbk": 14,
"tl": 2393339,
"mb": 512,
"mbk": 14,
"gb": 512,
"gbk": 14,
"eb": 0,
"ebk": 0,
"fs": [
2320,
2321,
2322,
2323,
2324,
2325,
2326,
2327,
2328,
2329,
2330,
2331,
2332,
2333,
2334,
2335,
2336,
2337,
2338,
2339,
2340,
2341,
2342,
2343,
2344,
2345,
2346,
2347,
2338,
2339,
2341,
2348,
1966,
1967
]
},
{
"tb": 672,
"tbk": 1,
"tl": 33702,
"mb": 672,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
874,
875,
876,
877,
878,
879,
880,
881,
882,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
252
]
},
{
"tb": 128,
"tbk": 4,
"tl": 126954,
"mb": 128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
2043,
2044,
2045,
2046,
2047,
2048,
221,
143,
144
]
},
{
"tb": 78552,
"tbk": 1,
"tl": 508550,
"mb": 78552,
"mbk": 1,
"gb": 78552,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
290,
291,
292,
293,
294,
295,
296,
297,
3772,
3773,
3774,
3775
]
},
{
"tb": 80,
"tbk": 5,
"tl": 16,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
181,
182,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 192,
"tbk": 4,
"tl": 106,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1984,
1985,
1986,
1987,
1988,
1989,
1990,
1991,
1992,
1993,
1994,
1995,
1996,
1997,
1998,
1999,
2000,
2001,
2002,
2003,
2674,
2675,
2676,
2677,
2678,
2679,
2680,
2681,
2682,
2683,
2684,
2685,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 1792,
"tbk": 22,
"tl": 21,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
482,
483,
484,
485,
486,
487,
488,
489,
490,
491,
492,
493,
490,
494,
495,
496,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
337,
338
]
},
{
"tb": 64,
"tbk": 2,
"tl": 1000966,
"mb": 64,
"mbk": 2,
"gb": 64,
"gbk": 2,
"eb": 64,
"ebk": 2,
"fs": [
2703,
2704,
2705,
3776,
3777,
2710,
2711,
2712,
2713,
2714,
2715,
2716,
2717,
2718,
2719,
2720,
2721,
2722,
2723,
2724,
2725,
2726,
2727,
2728,
2729,
2730,
2731,
2732,
2733,
2733,
2734,
2735,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 48,
"tbk": 2,
"tl": 0,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
422,
423,
424,
425,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
481,
337,
338
]
},
{
"tb": 240,
"tbk": 10,
"tl": 49,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
422,
421,
422,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 432,
"tbk": 6,
"tl": 561,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
337,
338
]
},
{
"tb": 7896,
"tbk": 329,
"tl": 901,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
884,
885,
886,
887,
888,
889,
890,
891,
892,
893,
894,
895,
896,
897,
605,
606,
607,
608,
609,
610,
611,
612,
613,
610,
614,
615,
616,
617,
618,
619,
620,
621,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 240,
"tbk": 15,
"tl": 51,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
182,
181,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 1808,
"tbk": 31,
"tl": 9445,
"mb": 256,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
182,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1126,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
2592,
2593,
2594,
2595,
2596,
2597,
2598,
2599,
2600,
2600,
2601,
2602,
2923,
2924,
2925,
2926,
1188,
1189,
1190,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1191,
1192,
1193,
1194,
1195,
1196,
1197,
1198,
1199,
1200,
1201,
1248,
1249,
1250,
1251,
1252,
1253,
1254,
1255,
1256,
1257
]
},
{
"tb": 152,
"tbk": 1,
"tl": 9735,
"mb": 152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
467,
468,
469,
470,
471,
2772,
2773,
2774,
2775,
2776,
221,
143,
144
]
},
{
"tb": 240,
"tbk": 5,
"tl": 16,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
421,
422,
422,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 32,
"tbk": 1,
"tl": 20,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
3617,
3618,
3619,
3620,
1017,
737,
337,
338
]
},
{
"tb": 20976,
"tbk": 1311,
"tl": 932,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1637,
3778,
3779,
3780,
3781,
3782,
3783,
1644,
1645,
1646,
1647,
1648,
1649,
1650,
1650,
1651,
1652,
1652,
1653,
1654,
1655,
1656,
1657,
1658,
1659,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 112,
"tbk": 7,
"tl": 28,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
422,
421,
421,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 216,
"tbk": 9,
"tl": 52,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
884,
885,
886,
887,
888,
889,
890,
891,
892,
893,
894,
895,
896,
897,
898,
899,
900,
901,
902,
903,
904,
901,
905,
906,
907,
908,
909,
910,
911,
912,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 19752,
"tbk": 823,
"tl": 1570,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
884,
885,
886,
887,
888,
889,
890,
891,
892,
893,
894,
895,
896,
897,
605,
606,
607,
608,
609,
610,
611,
612,
613,
610,
614,
615,
616,
617,
618,
619,
620,
621,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 103200,
"tbk": 26,
"tl": 437590,
"mb": 30720,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2686,
2687,
2688,
2689,
2690,
2691,
2692,
2693,
2694,
2695,
2696,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 1328,
"tbk": 1,
"tl": 13,
"mb": 1328,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
1383,
1384,
1385,
1386,
1387,
1388,
1389,
1390,
1391,
883,
337,
338
]
},
{
"tb": 160,
"tbk": 4,
"tl": 411988,
"mb": 96,
"mbk": 3,
"gb": 96,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
2883,
2884,
2885,
2886,
2887,
2888,
2889,
2890,
2891,
2892,
2893,
2894,
2895,
2896,
2897,
2898,
2899,
2900,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 224,
"tbk": 3,
"tl": 46,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
3617,
3618,
3619,
3620,
1966,
1967
]
},
{
"tb": 48,
"tbk": 1,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
181,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 1536,
"tbk": 8,
"tl": 28236,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1086,
1087,
1088,
1089,
1090,
1091,
1092,
1093,
1094,
1095,
2838,
2839,
2840,
2841,
2839,
2842,
2843,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 240,
"tbk": 5,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
181,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 232,
"tbk": 4,
"tl": 1,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2272,
2273,
2274,
2275,
841,
178
]
},
{
"tb": 720,
"tbk": 10,
"tl": 23,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
422,
422,
421,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 192,
"tbk": 8,
"tl": 4,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
181,
182,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 824,
"tbk": 2,
"tl": 59,
"mb": 824,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
3784,
3785,
3786,
3787,
3788,
3789,
3790,
3791,
3791,
3792,
3793,
3794,
3795,
3796,
3797,
3798,
3799,
3793,
3794,
3800,
3801,
3802,
3796,
3797,
3798,
3803,
3804,
3805,
3806,
3807,
3808,
3809,
418
]
},
{
"tb": 256,
"tbk": 2,
"tl": 0,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
913,
914,
915,
916,
917,
734,
143,
144
]
},
{
"tb": 1872,
"tbk": 26,
"tl": 21,
"mb": 288,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
182,
182,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 48,
"tbk": 1,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
421,
423,
424,
425,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
481,
337,
338
]
},
{
"tb": 576,
"tbk": 1,
"tl": 557514,
"mb": 576,
"mbk": 1,
"gb": 576,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
290,
291,
292,
293,
294,
295,
296,
297,
2768,
2769,
2770,
2771
]
},
{
"tb": 480,
"tbk": 6,
"tl": 5,
"mb": 160,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2123,
2124,
2125,
2126,
2127,
2128,
2129,
2130,
2131,
2132,
2133,
2134,
2135,
2136,
2137,
2138,
2139,
2140,
2141,
2142,
2143,
2144,
2145,
736,
737,
143,
178
]
},
{
"tb": 208,
"tbk": 13,
"tl": 41,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
181,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 1248,
"tbk": 53,
"tl": 718,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
762,
763,
3810,
3811,
3812,
3813,
3814,
3815,
2553,
2554,
2555,
2556,
2557,
2558,
2554,
2559,
2560,
2561,
2562,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42
]
},
{
"tb": 768,
"tbk": 4,
"tl": 2825,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2603,
2604,
2605,
2606,
2607,
2608,
2609,
2610,
2611,
2612,
3299,
3300,
3301,
3302,
3300,
3303,
3304,
981,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 84,
"tbk": 1,
"tl": 7043,
"mb": 84,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
467,
468,
469,
470,
471,
2772,
2773,
2774,
2775,
2776,
481,
337,
338
]
},
{
"tb": 80,
"tbk": 5,
"tl": 84,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
422,
421,
421,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 144,
"tbk": 3,
"tl": 2,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
182,
181,
182,
182,
182,
181
]
},
{
"tb": 11664,
"tbk": 30,
"tl": 17794,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3550,
3551,
3552,
3553,
3554,
3555,
3556,
3557,
3558,
3559,
3560,
1319,
1320,
1321,
1322,
1323,
1324,
1325,
1326,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 192,
"tbk": 2,
"tl": 0,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
482,
483,
484,
485,
486,
487,
488,
489,
490,
491,
492,
493,
490,
494,
495,
496,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
337,
338
]
},
{
"tb": 200,
"tbk": 1,
"tl": 53636,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1691,
1692,
1693,
1694,
1695,
1696,
1697,
1698,
1699,
1700,
1701,
1701,
1702,
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1980,
1981,
1982,
1983,
981,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 8712,
"tbk": 33,
"tl": 2682201,
"mb": 8712,
"mbk": 33,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1815,
1816,
1817,
1818,
1819,
1820,
1821,
1822,
1823,
1824,
1825,
1826,
1827,
1828,
1829,
1830,
1831,
1832,
1822,
1823,
1833,
1834,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647,
40,
41,
42
]
},
{
"tb": 1152,
"tbk": 6,
"tl": 53627,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2603,
2604,
2605,
2606,
2607,
2608,
2609,
2610,
2611,
2612,
2613,
2614,
2615,
2616,
2614,
2617,
2618,
1124,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 104,
"tbk": 3,
"tl": 0,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2349,
2350,
2351,
2183,
2184,
2185,
2186,
252
]
},
{
"tb": 4600,
"tbk": 115,
"tl": 35970,
"mb": 680,
"mbk": 17,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1171,
1172,
1173,
1174,
1175,
1176,
1177,
1178,
1178,
1179,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 96,
"tbk": 2,
"tl": 14,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436
]
},
{
"tb": 336,
"tbk": 7,
"tl": 24,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
421,
422,
421,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 288,
"tbk": 1,
"tl": 2658,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1835,
1836,
1837,
1838,
1839,
1840,
1841,
1842,
1843,
1844,
1845,
1846,
1847,
1848,
1849,
1849,
1850,
780,
781,
782,
783,
784,
785,
786,
787,
788,
789,
790,
791,
792,
793,
794,
795,
796,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 8064,
"tbk": 12,
"tl": 107546,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3040,
3041,
3042,
3043,
3044,
3045,
3046,
3047,
3048,
3049,
3050,
3051,
3048,
3052,
3053,
3054,
3055,
3056,
3057,
3058,
3059,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647,
40,
41,
42
]
},
{
"tb": 80,
"tbk": 2,
"tl": 78,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1000,
1001,
1002,
1003,
1004,
1005,
1006,
1007,
1008,
1009,
1010,
1011,
1012,
1013,
1014,
1015,
1006,
1007,
1009,
1016,
1017,
734,
143,
144
]
},
{
"tb": 236,
"tbk": 2,
"tl": 12,
"mb": 236,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
3816,
3817,
3818,
3819,
3820,
3821,
3822,
3823,
3823,
3824,
3825,
3826,
3827,
3828,
3829,
3830,
3831,
3825,
3826,
3832,
3833,
3834,
3828,
3829,
3830,
3835,
3836,
3837,
3838,
3839,
3840,
3841,
3842,
252
]
},
{
"tb": 40864,
"tbk": 1,
"tl": 73,
"mb": 40864,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
2760,
2761,
2762,
2763,
2764,
2765,
2766,
2767,
298,
299,
300,
301
]
},
{
"tb": 224,
"tbk": 6,
"tl": 185,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436
]
},
{
"tb": 128,
"tbk": 1,
"tl": 96,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
913,
914,
915,
916,
736,
734,
337,
338
]
},
{
"tb": 48,
"tbk": 2,
"tl": 0,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
337,
338
]
},
{
"tb": 2304,
"tbk": 36,
"tl": 2756075,
"mb": 1152,
"mbk": 18,
"gb": 768,
"gbk": 12,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
3843,
3844,
3845,
3846,
3847,
3848,
3849,
3850,
3851,
3852,
3853,
3854,
3855,
3856,
3857,
3858,
3859,
3860,
3861,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 48,
"tbk": 1,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
181,
182,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 192,
"tbk": 2,
"tl": 502,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
1883,
1884,
1055,
734,
143,
144
]
},
{
"tb": 336,
"tbk": 21,
"tl": 1907,
"mb": 32,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3862,
3863,
3864,
3865,
3866,
3867,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 1008,
"tbk": 3,
"tl": 1,
"mb": 576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3868,
3869,
3870,
3871,
3872,
3873,
3874,
3875,
3876,
3877,
3878,
3879,
3880,
3881,
3882,
3883,
3884,
3874,
3875,
3876,
3885,
3886
]
},
{
"tb": 784,
"tbk": 21,
"tl": 19,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
421,
422,
422,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 10800,
"tbk": 60,
"tl": 14,
"mb": 1056,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
182,
181,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 80,
"tbk": 2,
"tl": 7959,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
540,
541,
542,
543,
544,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 140,
"tbk": 2,
"tl": 31,
"mb": 140,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
384,
385,
386,
387,
388,
389,
390,
391,
2444,
2445,
2446,
2447,
2448,
2449,
2450,
2451,
2452,
2452,
2453,
2454,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
733,
737,
337,
338
]
},
{
"tb": 37888,
"tbk": 91,
"tl": 267548,
"mb": 6144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3040,
3041,
3042,
3043,
3044,
3045,
3046,
3047,
3048,
3049,
3050,
3051,
3048,
3052,
3053,
3054,
3055,
3056,
3057,
3058,
3059,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 200,
"tbk": 1,
"tl": 113623,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1717,
1718,
1719,
1720,
1721,
1722,
1723,
1724,
1725,
1726,
1727,
1727,
1728,
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1980,
1981,
1982,
1983,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 1008,
"tbk": 14,
"tl": 16,
"mb": 144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42
]
},
{
"tb": 200,
"tbk": 1,
"tl": 61083,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1484,
1485,
1486,
1487,
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
883,
337,
338
]
},
{
"tb": 2192,
"tbk": 1,
"tl": 42735,
"mb": 2192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3621,
3622,
3623,
3624,
3625,
3626,
3627,
3628,
3629,
3630,
3631,
3632,
3633,
3634,
3635,
3636,
3637,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
288
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 77,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3717,
3718,
3719,
3720,
3721,
3722,
2706,
2844,
2845,
2846,
2847,
2848,
2849,
2850,
2851,
2852,
2853,
2854,
2855,
2856,
2857,
2858,
2859,
2860,
2861,
2861,
2862,
2863,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 64,
"tbk": 2,
"tl": 582,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
1883,
1884,
1055,
734,
143,
178
]
},
{
"tb": 960,
"tbk": 36,
"tl": 19,
"mb": 88,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
181,
182,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 20640,
"tbk": 26,
"tl": 9507,
"mb": 6144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1637,
3319,
3320,
3321,
3322,
3323,
3324,
3325,
3326,
3327,
3328,
3329,
3330,
3331,
3332,
3333,
3334,
3335,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647
]
},
{
"tb": 300,
"tbk": 3,
"tl": 16,
"mb": 248,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
384,
385,
386,
387,
388,
389,
390,
391,
3887,
3888,
3889,
3890,
3891,
3892,
3893,
3894,
3895,
3895,
3896,
3897,
3898,
3899,
3900,
3901,
3902,
3903,
3897,
3898,
3904,
3905,
3906,
3900,
3901,
3902,
3907,
3908,
3909,
3910,
3911,
3912,
3913,
3914,
735
]
},
{
"tb": 96,
"tbk": 1,
"tl": 181,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
3060,
3061,
3062,
3063,
3064,
3065,
2153,
2154,
2155,
2156,
2157,
2158,
2159,
2160,
2161,
2162,
2163,
2153,
2154,
2155,
2156,
2157,
2158,
2159,
2160,
2283,
2284,
2285,
2286,
2287,
2288,
2289,
2290,
2291,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 768,
"tbk": 4,
"tl": 2825,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2603,
2604,
2605,
2606,
2607,
2608,
2609,
2610,
2611,
2612,
2613,
2614,
2615,
2616,
2614,
2617,
2618,
981,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 336,
"tbk": 14,
"tl": 14,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
422,
421,
421,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 2472,
"tbk": 25,
"tl": 3,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3430,
3431,
3432,
3433,
3434,
3435,
3436,
3437,
3438,
3439,
3440,
3441,
3442,
3443,
3444,
3442,
3445,
3446,
3447,
3448,
3449,
3450,
3451,
3452,
3453,
3447,
3448,
3454,
3455,
3456,
3457,
3458,
3459,
3460,
3461,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 120,
"tbk": 1,
"tl": 59509,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
555,
556,
557,
558,
559,
560,
561,
562,
563,
564,
3086,
3087,
3088,
143,
144
]
},
{
"tb": 5040,
"tbk": 30,
"tl": 346,
"mb": 1024,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
421,
421,
421,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 192,
"tbk": 2,
"tl": 66,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
3915,
3916,
3917,
3918,
3919,
3920,
3921,
3922,
3923,
3924,
3925,
3926,
3927,
3928,
3929,
3930,
3931,
3932,
3933,
3934,
3935,
3936,
3937,
3938,
3939,
3930,
3931,
3933,
3940,
1017,
734,
143,
178
]
},
{
"tb": 864,
"tbk": 3,
"tl": 13410,
"mb": 864,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
146,
147,
148,
149,
150,
151,
152,
153,
154,
155,
156,
157,
158,
159,
159,
160,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
796,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 128,
"tbk": 1,
"tl": 562224,
"mb": 128,
"mbk": 1,
"gb": 128,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3941,
3942,
3943,
3944,
3945
]
},
{
"tb": 384,
"tbk": 8,
"tl": 75547,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
339,
340,
341,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
337,
338
]
},
{
"tb": 2304,
"tbk": 36,
"tl": 1574639,
"mb": 1152,
"mbk": 18,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
3843,
3844,
3845,
3846,
3847,
3848,
3849,
3850,
3851,
3852,
3853,
3854,
3855,
3856,
3857,
3858,
3859,
3860,
3861,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 4344,
"tbk": 181,
"tl": 1585,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
884,
885,
886,
887,
888,
889,
890,
891,
892,
893,
894,
895,
896,
897,
605,
606,
607,
608,
609,
610,
611,
612,
613,
610,
614,
615,
616,
617,
618,
619,
620,
621,
2018,
2019,
2020,
2021,
2022,
2023,
2024,
2025,
2026,
2023,
2027,
2028,
2029,
2030,
2031,
2032,
2033,
2034,
2035,
2036,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42
]
},
{
"tb": 480,
"tbk": 2,
"tl": 22,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1030,
1031,
1053,
1054,
383,
143,
144
]
},
{
"tb": 40,
"tbk": 1,
"tl": 1303,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1231,
1232,
1233,
1234,
1235,
1236,
1237,
1238,
1239,
1240,
1241,
1242,
1243,
1244,
1245,
1245,
1246,
1247,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42,
1508,
1509,
1188,
1189,
1190,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42,
1508,
1509,
1188,
1189,
1190
]
},
{
"tb": 832,
"tbk": 12,
"tl": 3,
"mb": 144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436
]
},
{
"tb": 160,
"tbk": 4,
"tl": 13125,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3469,
3470,
3471,
3472,
3473,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 240,
"tbk": 6,
"tl": 1232,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1171,
1172,
1173,
1174,
1175,
1176,
1177,
1178,
1178,
1179,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42,
1508,
1509,
1188,
1189,
1190,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
421,
423,
424,
425,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
481,
143,
178
]
},
{
"tb": 524,
"tbk": 3,
"tl": 71,
"mb": 440,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
1279,
1280,
1281,
1282,
1283,
1284,
1285,
1286,
1286,
1287,
1288,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
736,
734,
143,
178
]
},
{
"tb": 576,
"tbk": 2,
"tl": 6283,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1018,
1019,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
756,
757,
758,
759,
760,
761,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
337,
338
]
},
{
"tb": 960,
"tbk": 8,
"tl": 5175,
"mb": 960,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
1464,
1465,
1335,
337,
338
]
},
{
"tb": 1536,
"tbk": 4,
"tl": 252538,
"mb": 1536,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2519,
2520,
2521,
2522,
2523,
2524,
2525,
2526,
2527,
2528,
2529,
2530,
2531,
2532,
2533,
2534,
2535,
2536,
2537,
2538,
2539,
2540,
221,
143,
144
]
},
{
"tb": 96,
"tbk": 2,
"tl": 8122,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3020,
3021,
3022,
3023,
3024,
3025,
3026,
3027,
3028,
3029,
3030,
3031,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 3392,
"tbk": 22,
"tl": 18867,
"mb": 960,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3259,
3260,
3261,
3262,
3263,
3264,
3265,
3266,
3262,
3263,
3264,
3267,
221,
143,
178
]
},
{
"tb": 3528,
"tbk": 30,
"tl": 1149,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
181,
181,
181,
182,
181,
183,
184,
185
]
},
{
"tb": 200,
"tbk": 1,
"tl": 60822,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1484,
1485,
1486,
1487,
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
883,
143,
178
]
},
{
"tb": 148,
"tbk": 1,
"tl": 22,
"mb": 148,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
818,
819,
820,
821,
822,
823,
824,
825,
826,
827,
828,
829,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
1017,
734,
337,
338
]
},
{
"tb": 2208,
"tbk": 6,
"tl": 249821,
"mb": 1104,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3515,
3516,
3517,
3518,
3519,
3520,
3521,
3522,
3523,
3524,
3525,
3526,
3527,
3528,
3529,
3530,
3531,
3532,
3533,
3534,
3535,
3536,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 4640,
"tbk": 29,
"tl": 1253175,
"mb": 800,
"mbk": 5,
"gb": 640,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
2353,
2354,
2355,
2356,
2357,
2358,
2359,
2360,
2361,
2362,
2363,
2364,
2365,
2366,
2367,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 240,
"tbk": 6,
"tl": 22,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1407,
1408,
1409,
1410,
1411,
1412,
1413,
1414,
1415,
1416,
1417,
1418,
1419,
1420,
1421,
1422,
1423,
1424,
1425,
1426,
1305,
1306,
1307,
736,
734,
143,
144
]
},
{
"tb": 141216,
"tbk": 40,
"tl": 167144,
"mb": 65536,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2777,
2778,
2779,
2780,
2781,
2782,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 336,
"tbk": 14,
"tl": 48,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
422,
421,
421,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 672,
"tbk": 6,
"tl": 3455,
"mb": 384,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
183,
184,
185,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
143,
178
]
},
{
"tb": 168,
"tbk": 2,
"tl": 0,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3430,
3431,
3432,
3433,
3434,
3435,
3436,
3437,
3438,
3439,
3440,
3441,
3442,
3443,
3444,
3442,
3445,
3946,
3947,
3948,
3949,
3950,
3951,
3952,
3953,
3947,
3948,
3954,
3955,
3956,
3957,
3958,
3959,
3960,
3961,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 512,
"tbk": 4,
"tl": 126332,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
2043,
2044,
2045,
2046,
2047,
2048,
221,
143,
178
]
},
{
"tb": 180,
"tbk": 1,
"tl": 143,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2968,
2969,
2970,
2971,
2972,
2973,
2974,
2975,
3152,
3153,
3154,
3155,
3156,
3157,
3158,
3158,
3159,
780,
781,
782,
783,
784,
785,
786,
787,
788,
789,
790,
791,
792,
793,
794,
795,
796,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 1196,
"tbk": 5,
"tl": 30,
"mb": 896,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
384,
385,
386,
387,
388,
389,
390,
391,
3887,
3888,
3889,
3890,
3891,
3892,
3893,
3894,
3895,
3895,
3896,
3897,
3898,
3899,
3900,
3901,
3902,
3903,
3897,
3898,
3904,
3905,
3906,
3900,
3901,
3902,
3907,
3908,
3909,
3910,
3911,
3912,
3913,
3914,
288
]
},
{
"tb": 96,
"tbk": 4,
"tl": 0,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
182,
183,
184,
185,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
337,
338
]
},
{
"tb": 165648,
"tbk": 14,
"tl": 338,
"mb": 25392,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2384,
2385,
2386,
2387,
2388,
2389,
2390,
2391,
2392,
2393,
2394,
2395,
2396,
2397,
2398,
2087,
2088,
2089,
2090
]
},
{
"tb": 368,
"tbk": 1,
"tl": 36393,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1056,
1057,
1058,
1059,
1060,
1061,
2173,
2174,
2175,
2176,
2177,
2178,
2179,
2180,
2181,
2182,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 208,
"tbk": 13,
"tl": 44,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
181,
182,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 380688,
"tbk": 4,
"tl": 621,
"mb": 203040,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
290,
291,
292,
293,
294,
295,
296,
297,
3002,
3003,
3004,
2087,
2088,
2089,
2090
]
},
{
"tb": 680,
"tbk": 8,
"tl": 75017,
"mb": 560,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2489,
2490,
2491,
2492,
2493,
2494,
2495,
2496,
2497,
2498,
2499,
2500,
2501,
2502,
2503,
2504,
2505,
2506,
2507,
2495,
2496,
2498,
2508,
2835,
2836,
2837,
143,
178
]
},
{
"tb": 200,
"tbk": 1,
"tl": 2644,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1717,
1718,
1719,
1720,
1721,
1722,
1723,
1724,
1725,
1726,
1727,
1727,
1728,
105,
106,
107,
108,
109,
110,
111,
112,
113,
114,
115,
116,
117,
118,
119,
120,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 160,
"tbk": 1,
"tl": 326,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1484,
1485,
2091,
2092,
2093,
2094,
2095,
2096,
2097,
2098,
2099,
2111,
2112,
2113,
2114,
2115,
2116,
2117,
2118,
2119,
2120,
40,
41,
42,
2121,
2122,
2108,
2109,
2110,
2111,
2112,
2113,
2114,
2115,
2116,
2117,
2118,
2119,
2120,
40,
41,
42
]
},
{
"tb": 96,
"tbk": 1,
"tl": 69,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
3683,
3684,
3685,
1017,
737,
337,
338
]
},
{
"tb": 2880,
"tbk": 30,
"tl": 17843,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3550,
3551,
3552,
3553,
3554,
3555,
3556,
3557,
3558,
3559,
3560,
1045,
1046,
1047,
1048,
1049,
1050,
1051,
1052,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 280,
"tbk": 1,
"tl": 3690,
"mb": 280,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
197,
198,
199,
200,
201,
202,
203,
204,
205,
206,
207,
208,
209,
210,
211,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
481,
143,
144
]
},
{
"tb": 640,
"tbk": 3,
"tl": 562144,
"mb": 400,
"mbk": 1,
"gb": 400,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3962,
3963,
3964,
554
]
},
{
"tb": 368,
"tbk": 1,
"tl": 2669,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1056,
1057,
1058,
1059,
1060,
1061,
98,
99,
100,
101,
102,
103,
103,
104,
105,
106,
107,
108,
109,
110,
111,
112,
113,
114,
115,
116,
117,
118,
119,
120,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 144,
"tbk": 3,
"tl": 1,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
337,
338
]
},
{
"tb": 1296,
"tbk": 18,
"tl": 9,
"mb": 144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
181,
182,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 800,
"tbk": 40,
"tl": 5,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
3965,
3966,
3967,
3968,
3969,
3970,
3971,
3972,
3973
]
},
{
"tb": 42688,
"tbk": 2668,
"tl": 2524,
"mb": 32,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
762,
763,
764,
765,
766,
767,
2553,
2554,
2555,
2556,
2557,
2558,
2554,
2559,
2560,
2561,
2562,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370
]
},
{
"tb": 224,
"tbk": 6,
"tl": 0,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
183,
184,
185,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
143,
144
]
},
{
"tb": 10080,
"tbk": 63,
"tl": 16391,
"mb": 1600,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1484,
1485,
2091,
2092,
2093,
2094,
2095,
2096,
2097,
2098,
2099,
2100,
2101,
2102,
2103,
2104,
2105,
2106,
2107,
2108,
2109,
2110,
2111,
2112,
2113,
2114,
2115,
2116,
2117,
2118,
2119,
2120,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 128,
"tbk": 1,
"tl": 227,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
913,
914,
915,
916,
733,
737,
143,
178
]
},
{
"tb": 48,
"tbk": 3,
"tl": 8,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
337,
338
]
},
{
"tb": 320,
"tbk": 4,
"tl": 314,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1381,
1382,
733,
734,
337,
338
]
},
{
"tb": 352,
"tbk": 11,
"tl": 424,
"mb": 352,
"mbk": 11,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
3268,
3269,
3270,
3271,
3271,
3272,
3273,
3274,
3275,
3276,
3277,
3278,
3279,
3273,
3274,
3280,
3281,
3282,
3276,
3277,
3278,
3283,
3284,
3285,
3286,
3287,
3288,
3289,
418
]
},
{
"tb": 180,
"tbk": 1,
"tl": 16,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
2954,
2955,
2956,
2957,
2958,
2959,
2960,
2961,
2962,
2963,
2964,
2965,
2966,
2967,
554
]
},
{
"tb": 720,
"tbk": 10,
"tl": 41,
"mb": 144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
422,
421,
421,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 256,
"tbk": 8,
"tl": 3282,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2146,
2147,
2148,
2149,
2150,
2151,
2152,
3373,
3374,
3375,
3376,
3377,
3378,
3379,
3380,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
1266,
1267,
1268,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
3421,
3422,
3423,
3424,
3425,
3426,
3427,
3428,
3429,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 200,
"tbk": 5,
"tl": 11,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1575,
1576,
1577,
1578,
1579,
1580,
1581,
1582,
1583,
1584,
1585,
1586,
1587,
1588,
1589,
1590,
1591,
1592,
1593,
1594,
1595,
1583,
1596,
1597,
1598,
1599,
2352
]
},
{
"tb": 640,
"tbk": 20,
"tl": 8,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
3484,
3485,
3486,
3487,
3488,
3489,
3490,
3491,
3492,
3493,
3494,
3965,
3966,
3967,
3968,
3969,
3970,
3971,
3972,
3973
]
},
{
"tb": 80,
"tbk": 2,
"tl": 8006,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
540,
541,
542,
543,
544,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 84,
"tbk": 1,
"tl": 7120,
"mb": 84,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
467,
468,
469,
470,
471,
2772,
2773,
2774,
2775,
2776,
481,
143,
144
]
},
{
"tb": 480,
"tbk": 12,
"tl": 3899,
"mb": 240,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2368,
2369,
2370,
2371,
2372,
2373,
2374,
2375,
2376,
2111,
2112,
2113,
2114,
2115,
2116,
2117,
2118,
2119,
2120,
40,
41,
42,
2121,
2122,
2108,
2109,
2110,
2100,
2101,
2102,
2103,
2104,
2105,
2106,
2107,
2108,
2109,
2110,
3178,
3179,
3180,
3181,
3182,
3183,
3184,
3185,
3186,
3187,
3188
]
},
{
"tb": 128,
"tbk": 2,
"tl": 20,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2509,
2510,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 80,
"tbk": 5,
"tl": 15,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
422,
423,
424,
425,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
178
]
},
{
"tb": 576,
"tbk": 12,
"tl": 8,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
181,
181,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 368,
"tbk": 1,
"tl": 2655,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
437,
438,
439,
440,
441,
442,
98,
99,
100,
101,
102,
103,
103,
104,
105,
106,
107,
108,
109,
110,
111,
112,
113,
114,
115,
116,
117,
118,
119,
120,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 1120,
"tbk": 3,
"tl": 393,
"mb": 640,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1030,
1031,
1032,
1033,
2772,
2773,
2774,
2775,
2776,
481,
143,
144
]
},
{
"tb": 96,
"tbk": 3,
"tl": 855,
"mb": 96,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
381,
382,
1055,
734,
143,
178
]
},
{
"tb": 864,
"tbk": 18,
"tl": 14,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
182,
182,
182,
181,
182,
181
]
},
{
"tb": 736,
"tbk": 2,
"tl": 6262,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
437,
438,
439,
440,
441,
442,
756,
757,
758,
759,
760,
761,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
143,
144
]
},
{
"tb": 1104,
"tbk": 1,
"tl": 37137,
"mb": 1104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3621,
3622,
3623,
3624,
3625,
3626,
3627,
3628,
3629,
3630,
3631,
3632,
3633,
3634,
3635,
3636,
3637,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
418
]
},
{
"tb": 160,
"tbk": 2,
"tl": 8,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
708,
709,
710,
711,
712,
713,
714,
715,
716,
717,
718,
719,
720,
721,
722,
723,
724,
725,
726,
727,
728,
729,
730,
731,
716,
732,
736,
737,
337,
338
]
},
{
"tb": 128,
"tbk": 1,
"tl": 169,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
913,
914,
915,
916,
736,
737,
143,
144
]
},
{
"tb": 128,
"tbk": 2,
"tl": 5,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2984,
2985,
2986,
2987,
2988,
2989,
2990,
2991,
2992,
2993,
2994,
2995,
2996,
2997,
2998,
2999,
2997,
3000,
3001,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 535680,
"tbk": 1,
"tl": 69,
"mb": 535680,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
1867,
1868,
1869,
1870,
1871,
1872,
1873,
1874,
1875,
298,
299,
300,
301
]
},
{
"tb": 32,
"tbk": 1,
"tl": 557445,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3974,
3975,
3976,
3977,
3978,
3979,
3980,
3981,
3982,
3983,
3984,
3985,
81
]
},
{
"tb": 96,
"tbk": 2,
"tl": 0,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
1703,
1704,
1705,
2183,
2184,
2185,
2186,
252
]
},
{
"tb": 96,
"tbk": 6,
"tl": 20,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
181,
181,
182,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 288,
"tbk": 2,
"tl": 125486,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
517,
518,
519,
520,
521,
522,
523,
524,
525,
526,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647,
40,
41,
42
]
},
{
"tb": 448,
"tbk": 14,
"tl": 7,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
3484,
3485,
3486,
3487,
3488,
3489,
3490,
3491,
3492,
3493,
3494,
966,
967,
968,
969,
970,
971,
972,
973,
418
]
},
{
"tb": 40,
"tbk": 1,
"tl": 10010,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1163,
1164,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
177,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 604,
"tbk": 4,
"tl": 32,
"mb": 464,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
384,
385,
386,
387,
388,
389,
390,
391,
2444,
2445,
2446,
2447,
2448,
2449,
2450,
2451,
2452,
2452,
2453,
2454,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1427,
1428,
1429,
3986,
3987,
3988,
144
]
},
{
"tb": 2328,
"tbk": 15,
"tl": 5,
"mb": 600,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
181,
182,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 64,
"tbk": 2,
"tl": 568,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
381,
382,
1055,
737,
143,
178
]
},
{
"tb": 384,
"tbk": 2,
"tl": 46002,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3989,
3990,
3991,
3992,
3993,
3994,
3995,
3996,
2613,
2614,
2615,
2616,
2614,
2617,
2618,
1124,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 96,
"tbk": 2,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
1703,
1704,
1705,
2183,
2184,
2185,
2186,
2352
]
},
{
"tb": 96,
"tbk": 1,
"tl": 557439,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
3997,
3998,
3999,
4000,
81
]
},
{
"tb": 48,
"tbk": 2,
"tl": 0,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143,
144
]
},
{
"tb": 2304,
"tbk": 28,
"tl": 3,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3430,
3431,
3432,
3433,
3434,
3435,
3436,
3437,
3438,
3439,
3440,
3441,
3442,
3443,
3444,
3442,
3445,
3446,
3447,
3448,
3449,
3450,
3451,
3452,
3453,
3447,
3448,
3454,
3455,
3456,
3457,
3458,
3459,
3460,
3461,
796,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 17488,
"tbk": 70,
"tl": 5634978,
"mb": 17424,
"mbk": 66,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1815,
1816,
1817,
1818,
1819,
1820,
1821,
1822,
1823,
1824,
1825,
1826,
1827,
1828,
1829,
1830,
1831,
1832,
1822,
1823,
1833,
1834,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 5728,
"tbk": 52,
"tl": 35909,
"mb": 1536,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2470,
2471,
2472,
2473,
2474,
2475,
2476,
2477,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3985,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
339,
340,
341,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
481,
143,
144
]
},
{
"tb": 80,
"tbk": 5,
"tl": 100,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
421,
421,
422,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 560,
"tbk": 15,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
421,
423,
424,
425,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
337,
338
]
},
{
"tb": 5664,
"tbk": 39,
"tl": 18,
"mb": 792,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
181,
182,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 512,
"tbk": 32,
"tl": 17949345,
"mb": 512,
"mbk": 32,
"gb": 512,
"gbk": 32,
"eb": 512,
"ebk": 32,
"fs": [
4001,
4002,
4003,
4004,
4005,
4006,
4007,
4008,
1939,
1940,
1941,
1942,
1943,
1944,
1945,
1946,
1947,
1948,
1949,
1950,
1951,
1952,
1953,
1954,
1955,
1956,
1957,
1958,
1958,
1959,
1960,
1961,
1962,
1963,
1964,
1965,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
735
]
},
{
"tb": 40,
"tbk": 1,
"tl": 12825,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1163,
1164,
1851,
1852,
1853,
1854,
1855,
1856,
1857,
1858,
1859,
1860,
1861,
1862,
1863,
1864,
1865,
1866,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 2520,
"tbk": 9,
"tl": 318012,
"mb": 1128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1018,
1019,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
2173,
2174,
2175,
2176,
2177,
2178,
2179,
2180,
2181,
2182,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 560,
"tbk": 1,
"tl": 618,
"mb": 560,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3621,
3622,
3623,
3624,
3625,
3626,
3627,
3628,
3629,
3630,
3631,
3632,
3633,
3634,
3635,
3636,
3637,
1497,
143,
144
]
},
{
"tb": 160,
"tbk": 2,
"tl": 17,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1407,
1408,
1409,
1410,
1411,
1412,
1413,
1414,
1415,
1416,
1417,
1418,
1419,
1420,
1421,
1422,
1423,
1424,
1425,
1426,
1305,
1306,
1307,
736,
737,
337,
338
]
},
{
"tb": 336,
"tbk": 7,
"tl": 51,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42
]
},
{
"tb": 144,
"tbk": 2,
"tl": 0,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
337,
338
]
},
{
"tb": 96,
"tbk": 2,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
143
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1404,
1405,
1406,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
481,
337,
338
]
},
{
"tb": 2848,
"tbk": 24,
"tl": 10527,
"mb": 576,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
1729,
1730,
1731,
1732,
1733,
1734,
1269,
1270,
1271,
1272,
1273,
1274,
1275,
1276,
1277,
1278,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 192,
"tbk": 1,
"tl": 1,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
60,
61,
62,
63,
64,
65,
66,
67,
68,
302,
303,
304,
305,
306,
307,
308,
309,
310,
4009,
4010,
4011,
4012,
4013,
4014,
4015,
4016,
4017,
4018,
4019,
4020,
4010,
4011,
4012,
4021,
4022
]
},
{
"tb": 40,
"tbk": 1,
"tl": 562243,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
4023,
4024,
4025,
4026,
4027,
4028
]
},
{
"tb": 15120,
"tbk": 30,
"tl": 276872,
"mb": 4608,
"mbk": 3,
"gb": 1536,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
182,
182,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 240,
"tbk": 5,
"tl": 1,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
421,
423,
424,
425,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
178
]
},
{
"tb": 12840,
"tbk": 535,
"tl": 439,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
884,
885,
886,
887,
888,
889,
890,
891,
892,
893,
894,
895,
896,
897,
605,
606,
607,
608,
609,
610,
611,
612,
613,
610,
614,
615,
616,
617,
618,
619,
620,
621,
2018,
2019,
2020,
2021,
2022,
2023,
2024,
2025,
2026,
2023,
2027,
2028,
2029,
2030,
2031,
2032,
2033,
2034,
2035,
2036,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 7776,
"tbk": 30,
"tl": 17850,
"mb": 304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3113,
3114,
3115,
3116,
3117,
3118,
3119,
3120,
3121,
3122,
3123,
1319,
1320,
1321,
1322,
1323,
1324,
1325,
1326,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 960,
"tbk": 4,
"tl": 11,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
2760,
2761,
2762,
2763,
2764,
2765,
2766,
2767,
1876,
1877,
1878,
1879,
1880,
1881,
1882
]
},
{
"tb": 240,
"tbk": 15,
"tl": 53,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
181,
182,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 768,
"tbk": 4,
"tl": 2811,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1086,
1087,
1088,
1089,
1090,
1091,
1092,
1093,
1094,
1095,
2838,
2839,
2840,
2841,
2839,
2842,
2843,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 1680,
"tbk": 15,
"tl": 21,
"mb": 288,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
421,
422,
422,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 1456,
"tbk": 91,
"tl": 76,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
2543,
2544,
2545,
2546,
2547,
2548,
2549,
2550,
2551,
2552,
2553,
2554,
2555,
2556,
2557,
2558,
2554,
2559,
2560,
2561,
2562,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42
]
},
{
"tb": 1104,
"tbk": 3,
"tl": 238262,
"mb": 1104,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1056,
1057,
1058,
1059,
1060,
1061,
443,
444,
445,
446,
447,
448,
448,
449,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 2072,
"tbk": 1,
"tl": 561451,
"mb": 2072,
"mbk": 1,
"gb": 2072,
"gbk": 1,
"eb": 2072,
"ebk": 1,
"fs": [
4029,
4030,
4031,
4032,
4033,
4034,
4035,
4036,
4037,
4038,
4039,
4040,
4041,
4042,
4043,
4044,
4045,
4046,
4047,
4048,
4049,
4050,
4051,
4052,
4053,
4054,
4055,
4056,
4057,
4058,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 1920,
"tbk": 24,
"tl": 29,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1737,
1738,
1739,
1740,
1741,
1742,
1743,
1744,
1745,
1746,
1747,
1748,
1745,
1749,
1750,
1751,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
178
]
},
{
"tb": 604,
"tbk": 4,
"tl": 26,
"mb": 464,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
384,
385,
386,
387,
388,
389,
390,
391,
3887,
3888,
3889,
3890,
3891,
3892,
3893,
3894,
3895,
3895,
3896,
3897,
3898,
3899,
3900,
3901,
3902,
3903,
3897,
3898,
3904,
3905,
3906,
3900,
3901,
3902,
3907,
3908,
3909,
3910,
3911,
3912,
3913,
3914,
418
]
},
{
"tb": 560,
"tbk": 1,
"tl": 707,
"mb": 560,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3621,
3622,
3623,
3624,
3625,
3626,
3627,
3628,
3629,
3630,
3631,
3632,
3633,
3634,
3635,
3636,
3637,
883,
143,
178
]
},
{
"tb": 320,
"tbk": 4,
"tl": 352,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1381,
1382,
733,
734,
143,
144
]
},
{
"tb": 360,
"tbk": 1,
"tl": 36362,
"mb": 360,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1484,
1485,
3404,
3405,
3406,
3407,
3408,
3409,
3410,
3411,
3412,
3413,
3414,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
252
]
},
{
"tb": 120,
"tbk": 3,
"tl": 1931,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2368,
2369,
2370,
2371,
2372,
2373,
2374,
2375,
2376,
2100,
2101,
2102,
2103,
2104,
2105,
2106,
2107,
2108,
2109,
2110,
2111,
2112,
2113,
2114,
2115,
2116,
2117,
2118,
2119,
2120,
40,
41,
42,
2121,
2122,
2108,
2109,
2110,
2111,
2112,
2113,
2114,
2115,
2116,
2117,
2118,
2119,
2120
]
},
{
"tb": 112,
"tbk": 7,
"tl": 32,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42
]
},
{
"tb": 32,
"tbk": 2,
"tl": 17,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436
]
},
{
"tb": 896,
"tbk": 6,
"tl": 10304,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3714,
3715,
3716,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 192,
"tbk": 2,
"tl": 10300,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
920,
921,
922,
923,
924,
925,
926,
3716,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 192,
"tbk": 2,
"tl": 196,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
1464,
1465,
1335,
143,
144
]
},
{
"tb": 352,
"tbk": 9,
"tl": 650532,
"mb": 352,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2320,
2321,
2322,
2323,
2324,
2325,
2326,
2327,
2328,
2329,
2330,
2331,
2332,
2333,
2334,
2335,
2336,
2337,
2338,
2339,
2340,
2341,
2342,
2343,
2344,
2345,
2346,
2347,
2338,
2339,
2341,
2348,
841,
144
]
},
{
"tb": 2524,
"tbk": 4,
"tl": 210,
"mb": 2000,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
222,
223,
224,
225,
226,
227,
228,
229,
2187,
2188,
2189,
2190,
2191,
2192,
2193,
2194,
2195,
2196,
2197,
2198,
2195,
2199,
2200,
2201,
2202,
2203,
2204,
2205,
3970,
3971,
3972,
3973
]
},
{
"tb": 10584,
"tbk": 30,
"tl": 60888,
"mb": 2928,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2206,
2207,
2208,
2209,
2210,
2211,
2212,
2213,
2214,
2215,
2216,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 80,
"tbk": 5,
"tl": 17,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
181,
182,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 128,
"tbk": 1,
"tl": 920,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
3060,
3061,
3062,
3063,
3064,
3065,
2153,
2154,
2155,
2156,
2157,
2158,
2159,
2160,
2161,
2162,
2163,
2153,
2154,
2155,
2156,
2157,
2158,
2159,
2160,
2161,
2162,
2163,
2153,
2154,
2155,
2156,
2157,
2158,
2159,
2160,
2283,
2284,
2285,
2286,
2287,
2288,
2289,
2290,
2291
]
},
{
"tb": 560,
"tbk": 28,
"tl": 3,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
3965,
3966,
3967,
3968,
3969,
1481,
1482,
1483,
144
]
},
{
"tb": 560,
"tbk": 1,
"tl": 741,
"mb": 560,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3621,
3622,
3623,
3624,
3625,
3626,
3627,
3628,
3629,
3630,
3631,
3632,
3633,
3634,
3635,
3636,
3637,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
735
]
},
{
"tb": 48,
"tbk": 1,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
337,
338
]
},
{
"tb": 48,
"tbk": 1,
"tl": 12980,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
146,
147,
148,
149,
150,
151,
152,
153,
154,
155,
156,
157,
158,
159,
159,
160,
1851,
1852,
1853,
1854,
1855,
1856,
1857,
1858,
1859,
1860,
1861,
1862,
1863,
1864,
1865,
1866,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 96,
"tbk": 1,
"tl": 557444,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
4059,
4060,
4061,
4062,
4063,
4064,
4065,
4066,
4067,
4068,
4069,
4070,
4071,
4072,
4073,
4074,
4075,
4076,
4077,
4078,
4079,
4080,
4065,
4066,
4070,
4081,
4082,
4083,
81
]
},
{
"tb": 2208,
"tbk": 6,
"tl": 18749,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1056,
1057,
1058,
1059,
1060,
1061,
756,
757,
758,
759,
760,
761,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
337,
338
]
},
{
"tb": 240,
"tbk": 6,
"tl": 1859,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2368,
2369,
2370,
2371,
2372,
2373,
2374,
2375,
2376,
2100,
2101,
2102,
2103,
2104,
2105,
2106,
2107,
2108,
2109,
2110,
3178,
3179,
3180,
3181,
3182,
3183,
3184,
3185,
3186,
3187,
3188,
3495,
3496,
3497,
3498,
3499,
3500,
3501,
3502,
3503,
3504,
2153,
2154,
2155,
2156,
2157,
2158,
2159,
2160,
2161,
2162,
2163,
2153,
2154,
2155,
2156,
2157,
2158,
2159,
2160
]
},
{
"tb": 96,
"tbk": 1,
"tl": 72308,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
3683,
3684,
3685,
841,
144
]
},
{
"tb": 240,
"tbk": 12,
"tl": 2,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
967,
968,
969,
970,
971,
972,
973,
252
]
},
{
"tb": 96,
"tbk": 2,
"tl": 1800,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2146,
2147,
2148,
2149,
2150,
2151,
2152,
3373,
3374,
3375,
3376,
3377,
3378,
3379,
3380,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
1266,
1267,
1268,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
1266,
1267,
1268,
1269,
1270,
1271,
1272,
1273,
1274,
1275,
1276,
1277,
1278,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 368,
"tbk": 1,
"tl": 113650,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1056,
1057,
1058,
1059,
1060,
1061,
98,
99,
100,
101,
102,
103,
103,
104,
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1980,
1981,
1982,
1983,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 80,
"tbk": 2,
"tl": 0,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2123,
2124,
2125,
2126,
2127,
2128,
2129,
2130,
2131,
2132,
2133,
2134,
2135,
2136,
2137,
2138,
2139,
2140,
2141,
2142,
2143,
2144,
2145,
733,
734,
143,
144
]
},
{
"tb": 312864,
"tbk": 43,
"tl": 233318,
"mb": 147456,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1637,
3319,
3320,
3321,
3322,
3323,
3324,
3325,
3326,
3327,
3328,
3329,
3330,
3331,
3332,
3333,
3334,
3335,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370
]
},
{
"tb": 288,
"tbk": 9,
"tl": 374,
"mb": 288,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
2572,
2573,
2574,
2575,
2576,
2577,
2578,
2579,
2576,
2580,
2581,
2582,
2583,
2584,
2585,
2586,
2587,
2588,
2589,
252
]
},
{
"tb": 36160,
"tbk": 327,
"tl": 10610,
"mb": 640,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
797,
798,
799,
800,
801,
4084,
803,
804,
805,
806,
807,
808,
809,
810,
811,
812,
813,
814,
815,
816,
817,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367
]
},
{
"tb": 240,
"tbk": 5,
"tl": 6,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
182,
182,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 3600,
"tbk": 20,
"tl": 24,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
421,
421,
422,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 288,
"tbk": 9,
"tl": 360,
"mb": 288,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
2572,
2573,
2574,
2575,
2576,
2577,
2578,
2579,
2576,
2580,
2581,
2582,
2583,
2584,
2585,
2586,
2587,
2588,
2589,
2352
]
},
{
"tb": 192,
"tbk": 12,
"tl": 39,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
181,
181,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 972,
"tbk": 3,
"tl": 61,
"mb": 824,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
1442,
1443,
1444,
1445,
1446,
1447,
1448,
1449,
1449,
1450,
1451,
1452,
1453,
1454,
1455,
1456,
1457,
1458,
1459,
1460,
1461,
1462,
1463,
1017,
737,
337,
338
]
},
{
"tb": 288,
"tbk": 1,
"tl": 10453,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
146,
147,
148,
149,
150,
151,
152,
153,
154,
155,
156,
157,
158,
159,
159,
160,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
177,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 768,
"tbk": 22,
"tl": 5508,
"mb": 128,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
3060,
3061,
3062,
3063,
3064,
3065,
1539,
1540,
1541,
1542,
1543,
1544,
1545,
1546,
1547,
1548,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 1328,
"tbk": 1,
"tl": 32908,
"mb": 1328,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
874,
875,
876,
877,
878,
879,
880,
881,
882,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
418
]
},
{
"tb": 2688,
"tbk": 18,
"tl": 2877,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1792,
1793,
1885,
1886,
1887,
1888,
1889,
1890,
1891,
1892,
1893,
1894,
1895,
1896,
1897,
1898,
1899,
1900,
1901,
1902,
1903,
1904,
1905,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 544,
"tbk": 17,
"tl": 624,
"mb": 544,
"mbk": 17,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
4085,
4086,
4087,
4088,
4088,
4089,
4090,
4091,
4092,
4093,
4094,
4095,
4096,
4090,
4091,
4097,
4098,
4099,
4093,
4094,
4095,
4100,
4101,
4102,
4103,
3710,
3711,
3712,
3713
]
},
{
"tb": 488,
"tbk": 5,
"tl": 1,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2349,
2350,
2351,
1706,
3710,
3711,
3712,
3713
]
},
{
"tb": 24,
"tbk": 1,
"tl": 36,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
884,
885,
886,
887,
888,
889,
890,
891,
892,
893,
894,
895,
896,
897,
898,
899,
900,
901,
902,
903,
904,
901,
905,
906,
907,
908,
909,
910,
911,
912,
2018,
2019,
2020,
2021,
2022,
2023,
2024,
2025,
2026,
2023,
2027,
2028,
2029,
2030,
2031,
2032,
2033,
2034,
2035,
2036,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 561860,
"mb": 1024,
"mbk": 1,
"gb": 1024,
"gbk": 1,
"eb": 1024,
"ebk": 1,
"fs": [
1,
289,
4104,
4105,
4106,
4107,
4108,
4109,
4110,
4111,
1939,
1940,
1941,
1942,
1943,
1944,
1945,
1946,
1947,
1948,
1949,
1950,
1951,
1952,
1953,
1954,
1955,
1956,
1957,
1958,
1958,
1959,
1960,
1961,
1962,
1963,
1964,
1965,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
735
]
},
{
"tb": 37632,
"tbk": 588,
"tl": 58,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4112,
4113,
4114,
4115,
4116,
4117,
4118,
4119,
4120,
4121,
4122,
4123,
4124,
4125,
4126,
4127,
4128,
4129,
4130,
4131,
4132,
4133,
4134,
4135,
4136,
4137,
4138,
4139,
4140,
4141,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 144,
"tbk": 6,
"tl": 604,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
181,
182,
181,
181,
181,
182
]
},
{
"tb": 432,
"tbk": 18,
"tl": 22,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 560,
"tbk": 2,
"tl": 32,
"mb": 400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1030,
1031,
1053,
1054,
1335,
143,
144
]
},
{
"tb": 1480,
"tbk": 37,
"tl": 14289,
"mb": 280,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1171,
1172,
1173,
1174,
1175,
1176,
1177,
1178,
1178,
1179,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1191,
1192,
1193,
1194,
1195,
1196,
1197,
1198,
1199,
1200,
1201,
1248,
1249,
1250,
1251,
1252,
1253,
1254,
1255,
1256,
1257,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265
]
},
{
"tb": 3456,
"tbk": 54,
"tl": 1912868,
"mb": 1536,
"mbk": 24,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
94,
95,
96,
97,
2173,
2174,
2175,
2176,
2177,
2178,
2179,
2180,
2181,
2182,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 240,
"tbk": 5,
"tl": 40,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
422,
421,
422,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 1200,
"tbk": 20,
"tl": 17,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
421,
421,
422,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 300,
"tbk": 3,
"tl": 31,
"mb": 248,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
384,
385,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
399,
400,
401,
402,
403,
404,
405,
406,
407,
401,
402,
408,
409,
410,
404,
405,
406,
411,
412,
413,
414,
415,
416,
417,
252
]
},
{
"tb": 2592,
"tbk": 18,
"tl": 15023,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
568,
569,
570,
571,
572,
573,
574,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 384,
"tbk": 3,
"tl": 1544,
"mb": 384,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
381,
382,
383,
143,
144
]
},
{
"tb": 288,
"tbk": 9,
"tl": 454013,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2883,
2884,
2885,
2886,
2887,
2888,
2889,
2890,
2891,
2892,
2893,
2894,
2895,
2896,
2897,
2898,
2899,
2900,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 512,
"tbk": 4,
"tl": 229,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
3915,
3916,
3917,
3918,
3919,
3920,
3921,
3922,
3923,
3924,
3925,
3926,
3927,
3928,
3929,
3930,
3931,
3932,
3933,
3934,
3935,
3936,
3937,
3938,
3939,
3930,
3931,
3933,
3940,
1017,
737,
337,
338
]
},
{
"tb": 240,
"tbk": 10,
"tl": 20,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
422,
422,
421,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 1200,
"tbk": 6,
"tl": 245639,
"mb": 400,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4142,
4143,
4144,
4145,
4146,
4147,
4148,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 39312,
"tbk": 78,
"tl": 943058,
"mb": 7680,
"mbk": 5,
"gb": 7680,
"gbk": 5,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
182,
182,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 128,
"tbk": 1,
"tl": 202,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
913,
914,
915,
916,
733,
737,
337,
338
]
},
{
"tb": 3600,
"tbk": 60,
"tl": 13,
"mb": 352,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
182,
181,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 992,
"tbk": 28,
"tl": 1793642,
"mb": 256,
"mbk": 6,
"gb": 256,
"gbk": 6,
"eb": 0,
"ebk": 0,
"fs": [
2883,
2884,
2885,
2886,
2887,
2888,
2889,
2890,
2891,
2892,
2893,
2894,
2895,
2896,
2897,
2898,
2899,
2900,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 40,
"tbk": 1,
"tl": 557494,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
4149,
4150,
4151,
4152,
4153,
4154,
4155,
4156,
4157,
4158,
4159,
4160,
4161,
4162,
4163,
4164,
4165,
4166,
4167,
4168,
4169,
4170,
4171
]
},
{
"tb": 6912,
"tbk": 108,
"tl": 88400,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
568,
569,
570,
571,
572,
573,
574,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 240,
"tbk": 6,
"tl": 232125,
"mb": 80,
"mbk": 2,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1231,
1232,
1233,
1234,
1235,
1236,
1237,
1238,
1239,
1240,
1241,
1242,
1243,
1244,
1245,
1245,
1246,
1247,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42,
1508,
1509,
1188,
1189,
1190,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190
]
},
{
"tb": 336,
"tbk": 7,
"tl": 10,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
422,
421,
422,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 696,
"tbk": 24,
"tl": 11,
"mb": 88,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
182,
181,
182,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 288,
"tbk": 12,
"tl": 5,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
182,
182,
181,
181,
182,
182
]
},
{
"tb": 720,
"tbk": 15,
"tl": 12,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
182,
182,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 3168,
"tbk": 31,
"tl": 3,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3430,
3431,
3432,
3433,
3434,
3435,
3436,
3437,
3438,
3439,
3440,
3441,
3442,
3443,
3444,
3442,
3445,
3446,
3447,
3448,
3449,
3450,
3451,
3452,
3453,
3447,
3448,
3454,
3455,
3456,
3457,
3458,
3459,
3460,
3461,
177,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 96,
"tbk": 2,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
182,
183,
184,
185,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
337,
338
]
},
{
"tb": 1008,
"tbk": 14,
"tl": 22,
"mb": 144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
422,
421,
422,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 4176,
"tbk": 174,
"tl": 287,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
884,
885,
886,
887,
888,
889,
890,
891,
892,
893,
894,
895,
896,
897,
605,
606,
607,
608,
609,
610,
611,
612,
613,
610,
614,
615,
616,
617,
618,
619,
620,
621,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647
]
},
{
"tb": 1008,
"tbk": 63,
"tl": 1590,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
762,
763,
4172,
4173,
4174,
4175,
4176,
4177,
2553,
2554,
2555,
2556,
2557,
2558,
2554,
2559,
2560,
2561,
2562,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370
]
},
{
"tb": 192,
"tbk": 4,
"tl": 1,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
181,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 120,
"tbk": 3,
"tl": 2,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2123,
2124,
2125,
2126,
2127,
2128,
2129,
2130,
2131,
2132,
2133,
2134,
2135,
2136,
2137,
2138,
2139,
2140,
2141,
2142,
2143,
2144,
2145,
736,
737,
143,
144
]
},
{
"tb": 80,
"tbk": 2,
"tl": 0,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2123,
2124,
2125,
2126,
2127,
2128,
2129,
2130,
2131,
2132,
2133,
2134,
2135,
2136,
2137,
2138,
2139,
2140,
2141,
2142,
2143,
2144,
2145,
917,
734,
143,
144
]
},
{
"tb": 1512,
"tbk": 1,
"tl": 28,
"mb": 1512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2655,
2656,
2657,
2658,
2659,
2660,
2661,
2662,
2663,
2664,
2665,
2666,
2667,
2668,
2669,
2670,
2671,
2672,
2673,
2004,
2005,
2006,
2007,
2008,
2009,
2010,
2011,
2012,
2013,
2014,
2015,
2016,
2017,
2018,
2019,
2020,
2021,
2022,
2023,
2024,
2025,
2026,
2023,
2027,
2028,
2029,
2030,
2031,
2032,
2033,
2034,
2035,
2036,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42
]
},
{
"tb": 256,
"tbk": 8,
"tl": 3,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
3484,
3485,
3486,
3487,
3488,
3489,
3490,
3491,
3492,
3493,
3494,
966,
967,
968,
969,
970,
971,
972,
973,
735
]
},
{
"tb": 300,
"tbk": 3,
"tl": 46,
"mb": 248,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
384,
385,
386,
387,
388,
389,
390,
391,
2444,
2445,
2446,
2447,
2448,
2449,
2450,
2451,
2452,
2452,
2453,
2454,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
917,
737,
337,
338
]
},
{
"tb": 192,
"tbk": 2,
"tl": 574,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
1464,
1465,
1055,
737,
143,
144
]
},
{
"tb": 440,
"tbk": 9,
"tl": 53,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
683,
684,
685,
686,
687,
688,
689,
690,
691,
692,
693,
694,
695,
696,
697,
698,
699,
700,
701,
702,
703,
704,
705,
706,
707,
418
]
},
{
"tb": 1776,
"tbk": 6,
"tl": 233,
"mb": 1584,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1984,
1985,
1986,
1987,
1988,
1989,
1990,
1991,
1992,
1993,
1994,
1995,
1996,
1997,
1998,
1999,
2000,
2001,
2002,
2003,
2004,
2005,
2006,
2007,
2008,
2009,
2010,
2011,
2012,
2013,
2014,
2015,
2016,
2017,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42
]
},
{
"tb": 240,
"tbk": 6,
"tl": 1710,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1171,
1172,
1173,
1174,
1175,
1176,
1177,
1178,
1178,
1179,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1191,
1192,
1193,
1194,
1195,
1196,
1197,
1198,
1199,
1200,
1201,
1248,
1249,
1250,
1251,
1252,
1253,
1254,
1255,
1256,
1257,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
1266,
1267,
1268,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265
]
},
{
"tb": 84,
"tbk": 1,
"tl": 6,
"mb": 84,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
3816,
3817,
3818,
3819,
3820,
3821,
3822,
3823,
3823,
3824,
3825,
3826,
3827,
3828,
3829,
3830,
3831,
3825,
3826,
3832,
3833,
3834,
3828,
3829,
3830,
3835,
3836,
3837,
3838,
3839,
3840,
3841,
3842,
2352
]
},
{
"tb": 3752,
"tbk": 5,
"tl": 34692,
"mb": 2240,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2206,
2207,
2208,
2209,
2210,
2211,
2212,
2213,
2214,
2215,
2216,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 2592,
"tbk": 27,
"tl": 26062,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3237,
3238,
3239,
3240,
3241,
3242,
3243,
3244,
3245,
3246,
3247,
3248,
3245,
3249,
3250,
3251,
3252,
3253,
3254,
3255,
3256,
3257,
3258,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 864,
"tbk": 3,
"tl": 436693,
"mb": 864,
"mbk": 3,
"gb": 576,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
1018,
1019,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
443,
444,
445,
446,
447,
448,
448,
449,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 768,
"tbk": 6,
"tl": 244291,
"mb": 640,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
738,
739,
740,
741,
742,
743,
744,
4178,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 80,
"tbk": 2,
"tl": 75,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1000,
1001,
1002,
1003,
1004,
1005,
1006,
1007,
1008,
1009,
1010,
1011,
1012,
1013,
1014,
1015,
1006,
1007,
1009,
1016,
1017,
734,
143,
178
]
},
{
"tb": 300,
"tbk": 3,
"tl": 58,
"mb": 248,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
384,
385,
386,
387,
388,
389,
390,
391,
2444,
2445,
2446,
2447,
2448,
2449,
2450,
2451,
2452,
2452,
2453,
2454,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
733,
737,
143,
144
]
},
{
"tb": 2472,
"tbk": 25,
"tl": 3,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3430,
3431,
3432,
3433,
3434,
3435,
3436,
3437,
3438,
3439,
3440,
3441,
3442,
3443,
3444,
3442,
3445,
3446,
3447,
3448,
3449,
3450,
3451,
3452,
3453,
3447,
3448,
3454,
3455,
3456,
3457,
3458,
3459,
3460,
3461,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 512,
"tbk": 4,
"tl": 88,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
913,
914,
2927,
2928,
2929,
2930,
2929,
2931,
2932,
2933,
2934,
2935,
2936,
2937,
2938,
1017,
737,
143,
178
]
},
{
"tb": 1752,
"tbk": 16,
"tl": 2,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3430,
3431,
3432,
3433,
3434,
3435,
3436,
3437,
3438,
3439,
3440,
3441,
3442,
3443,
3444,
3442,
3445,
3446,
3447,
3448,
3449,
3450,
3451,
3452,
3453,
3447,
3448,
3454,
3455,
3456,
3457,
3458,
3459,
3460,
3461,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 768,
"tbk": 12,
"tl": 406504,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
94,
95,
96,
97,
2173,
2174,
2175,
2176,
2177,
2178,
2179,
2180,
2181,
2182,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436
]
},
{
"tb": 80,
"tbk": 5,
"tl": 28,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
421,
422,
422,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 192,
"tbk": 1,
"tl": 1,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4179,
4180,
4181,
4182,
4183,
4184,
4185,
4186,
4187,
4188,
4189,
4190,
4191,
4192,
4193,
4194,
4009,
4010,
4011,
4012,
4013,
4014,
4015,
4016,
4017,
4018,
4019,
4020,
4010,
4011,
4012,
4021,
4022
]
},
{
"tb": 288,
"tbk": 4,
"tl": 1,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
144
]
},
{
"tb": 200,
"tbk": 1,
"tl": 112677,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1717,
1718,
1719,
1720,
1721,
1722,
1723,
1724,
1725,
1726,
1727,
1727,
1728,
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1980,
1981,
1982,
1983,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 160,
"tbk": 1,
"tl": 75,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1000,
1001,
1002,
1003,
1004,
1005,
1006,
1007,
1008,
1009,
1010,
1011,
1012,
1013,
1014,
1015,
1006,
1007,
1009,
1016,
1017,
737,
143,
178
]
},
{
"tb": 40,
"tbk": 2,
"tl": 0,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2272,
2273,
2274,
2275,
1017,
737,
337,
338
]
},
{
"tb": 256,
"tbk": 4,
"tl": 42,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4195,
4196,
1124,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 768,
"tbk": 6,
"tl": 41532,
"mb": 640,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
920,
921,
922,
923,
924,
925,
926,
927,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 5040,
"tbk": 30,
"tl": 5,
"mb": 1024,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
182,
182,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 1008,
"tbk": 14,
"tl": 59,
"mb": 144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
422,
422,
421,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 144,
"tbk": 3,
"tl": 13212,
"mb": 144,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
146,
147,
148,
149,
150,
151,
152,
153,
154,
155,
156,
157,
158,
159,
159,
160,
780,
781,
782,
783,
784,
785,
786,
787,
788,
789,
790,
791,
792,
793,
794,
795,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 32,
"tbk": 1,
"tl": 562210,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3974,
3975,
3976,
3977,
3978,
3979,
3980,
3981,
3982,
3983,
3984,
3985,
554
]
},
{
"tb": 144,
"tbk": 2,
"tl": 0,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143,
144
]
},
{
"tb": 120,
"tbk": 3,
"tl": 73287,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1231,
1232,
1233,
1234,
1235,
1236,
1237,
1238,
1239,
1240,
1241,
1242,
1243,
1244,
1245,
1245,
1246,
1247,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1191,
1192,
1193,
1194,
1195,
1196,
1197,
1198,
1199,
1200,
1201,
3474,
3475,
3476,
3477,
3478,
3479,
3480,
3481,
3482,
3483,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 672,
"tbk": 21,
"tl": 1907,
"mb": 672,
"mbk": 21,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
982,
983,
984,
985,
986,
987,
988,
989,
986,
990,
991,
992,
993,
994,
995,
996,
997,
998,
999,
418
]
},
{
"tb": 240,
"tbk": 6,
"tl": 249123,
"mb": 120,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4197,
4198,
4199,
4200,
4201,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 768,
"tbk": 4,
"tl": 2775,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2603,
2604,
2605,
2606,
2607,
2608,
2609,
2610,
2611,
2612,
2613,
2614,
2615,
2616,
2614,
2617,
2618,
981,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 888,
"tbk": 36,
"tl": 17,
"mb": 80,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
182,
182,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 512,
"tbk": 16,
"tl": 5276,
"mb": 96,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
3060,
3061,
3062,
3063,
3064,
3065,
2153,
2154,
2155,
2156,
2157,
2158,
2159,
2160,
2161,
2162,
2163,
1539,
1540,
1541,
1542,
1543,
1544,
1545,
1546,
1547,
1548,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 148,
"tbk": 1,
"tl": 16,
"mb": 148,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
4202,
4203,
4204,
4205,
4206,
4207,
4208,
4209,
4209,
4210,
4211,
4212,
4213,
4214,
4215,
4216,
4217,
4211,
4212,
4218,
4219,
4220,
4214,
4215,
4216,
4221,
4222,
4223,
4224,
4225,
4226,
4227,
2352
]
},
{
"tb": 400,
"tbk": 2,
"tl": 46088,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1717,
1718,
1719,
1720,
1721,
1722,
1723,
1724,
1725,
1726,
1727,
1727,
1728,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
1124,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 48,
"tbk": 1,
"tl": 11,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1984,
1985,
1986,
1987,
1988,
1989,
1990,
1991,
1992,
1993,
1994,
1995,
1996,
1997,
1998,
1999,
2000,
2001,
2002,
2003,
2674,
2675,
2676,
2677,
2678,
2679,
2680,
2681,
2682,
2683,
2684,
2685,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647
]
},
{
"tb": 143104,
"tbk": 33,
"tl": 165429,
"mb": 67584,
"mbk": 3,
"gb": 67584,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1792,
1793,
3124,
3125,
3126,
3127,
3128,
3129,
3130,
3131,
3132,
3133,
3134,
3135,
3136,
3137,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39
]
},
{
"tb": 384,
"tbk": 6,
"tl": 106800,
"mb": 320,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1920,
1921,
1922,
1923,
1924,
1925,
1926,
1922,
1923,
1924,
1927,
221,
337,
338
]
},
{
"tb": 600,
"tbk": 3,
"tl": 436687,
"mb": 600,
"mbk": 3,
"gb": 400,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
1691,
1692,
1693,
1694,
1695,
1696,
1697,
1698,
1699,
1700,
1701,
1701,
1702,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 240,
"tbk": 6,
"tl": 34864,
"mb": 200,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1166,
1167,
1168,
1169,
1170,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 61296,
"tbk": 8,
"tl": 262,
"mb": 26064,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2868,
2869,
2870,
2871,
2872,
2873,
2874,
2875,
2876,
2877,
2878,
2879,
2880,
2881,
2882,
2864,
2865,
2866,
2867
]
},
{
"tb": 3629640,
"tbk": 4,
"tl": 453,
"mb": 1935840,
"mbk": 1,
"gb": 1935840,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
1867,
1868,
1869,
1870,
1871,
1872,
1873,
1874,
1875,
3002,
3003,
3004,
2087,
2088,
2089,
2090
]
},
{
"tb": 11664,
"tbk": 30,
"tl": 17906,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1308,
1309,
1310,
1311,
1312,
1313,
1314,
1315,
1316,
1317,
1318,
1319,
1320,
1321,
1322,
1323,
1324,
1325,
1326,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 6912,
"tbk": 108,
"tl": 105062,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
3138,
3139,
3140,
3141,
3142,
3143,
3144,
3145,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 384,
"tbk": 8,
"tl": 423616,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
339,
340,
341,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
2563,
2564,
2565,
2566,
2567,
2568,
2569,
2570,
2571,
40,
41,
42
]
},
{
"tb": 32,
"tbk": 1,
"tl": 191,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
3060,
3061,
3062,
3063,
3064,
3065,
2153,
2154,
2155,
2156,
2157,
2158,
2159,
2160,
2161,
2162,
2163,
2153,
2154,
2155,
2156,
2157,
2158,
2159,
2160,
2283,
2284,
2285,
2286,
2287,
2288,
2289,
2290,
2291,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 8064,
"tbk": 18,
"tl": 12818,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1362,
1363,
1364,
1365,
1366,
1367,
1368,
1369,
1370,
1371,
1372,
1373,
1374,
1375,
1376,
1377,
1378,
1379,
1380,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 192,
"tbk": 4,
"tl": 1,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
182,
183,
184,
185,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
143
]
},
{
"tb": 61296,
"tbk": 1,
"tl": 77,
"mb": 61296,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
290,
291,
2697,
2698,
2699,
2700,
2701,
2702,
298,
299,
300,
301
]
},
{
"tb": 384,
"tbk": 6,
"tl": 1331642,
"mb": 384,
"mbk": 6,
"gb": 384,
"gbk": 6,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
94,
95,
96,
97,
443,
444,
445,
446,
447,
448,
448,
449,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 288,
"tbk": 1,
"tl": 176,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1835,
1836,
1837,
1838,
1839,
1840,
1841,
1842,
1843,
1844,
1845,
1846,
1847,
1848,
1849,
1849,
1850,
1851,
1852,
1853,
1854,
1855,
1856,
1857,
1858,
1859,
1860,
1861,
1862,
1863,
1864,
1865,
1866,
177,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 112,
"tbk": 7,
"tl": 48,
"mb": 32,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
421,
421,
422,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 1216,
"tbk": 14,
"tl": 1,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1737,
1738,
1739,
1740,
1741,
1742,
1743,
1744,
1745,
1746,
1747,
1748,
1745,
1749,
1750,
1751,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143,
178
]
},
{
"tb": 32,
"tbk": 2,
"tl": 195,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2037,
2038,
2039,
2040,
2041,
2042,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 200,
"tbk": 1,
"tl": 61232,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1484,
1485,
1486,
1487,
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
883,
143,
144
]
},
{
"tb": 288,
"tbk": 6,
"tl": 4,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
182,
182,
181,
181,
182,
182
]
},
{
"tb": 128,
"tbk": 1,
"tl": 562207,
"mb": 128,
"mbk": 1,
"gb": 128,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
3997,
3998,
3999,
4000,
554
]
},
{
"tb": 24,
"tbk": 1,
"tl": 136777,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4228,
4229,
4230,
4231,
4232,
4233,
4234,
4235,
4236,
4237
]
},
{
"tb": 192,
"tbk": 4,
"tl": 17548,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1835,
1836,
1837,
1838,
1839,
1840,
1841,
1842,
1843,
1844,
1845,
1846,
1847,
1848,
1849,
1849,
1850,
780,
781,
782,
783,
784,
785,
786,
787,
788,
789,
790,
791,
792,
793,
794,
795,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 192,
"tbk": 6,
"tl": 3,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
3484,
3485,
3486,
3487,
3488,
3489,
3490,
3491,
3492,
3493,
3494,
966,
967,
968,
969,
970,
971,
972,
973,
2352
]
},
{
"tb": 34832,
"tbk": 1,
"tl": 1443,
"mb": 34832,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3756,
3757,
3758,
3759,
3760,
3761,
3762,
3763,
3764,
3765,
3766,
3767,
3768,
3769,
3770,
3771,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647
]
},
{
"tb": 236,
"tbk": 2,
"tl": 16,
"mb": 236,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
1279,
1280,
1281,
1282,
1283,
1284,
1285,
1286,
1286,
1287,
1288,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1427,
1428,
1429,
1430,
1431,
1432,
1433
]
},
{
"tb": 160,
"tbk": 4,
"tl": 12974,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
540,
541,
542,
543,
544,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 384,
"tbk": 1,
"tl": 557419,
"mb": 384,
"mbk": 1,
"gb": 384,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
546,
547,
548,
549,
550,
551,
552,
553,
81
]
},
{
"tb": 96,
"tbk": 6,
"tl": 18,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
178
]
},
{
"tb": 21536,
"tbk": 230,
"tl": 338980,
"mb": 1536,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2619,
2620,
2472,
2473,
2474,
2475,
2476,
2477,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 288,
"tbk": 12,
"tl": 1137,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
181,
181,
182,
182,
181,
181
]
},
{
"tb": 32,
"tbk": 2,
"tl": 193,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3862,
3863,
3864,
3865,
3866,
3867,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 1200,
"tbk": 1,
"tl": 41546,
"mb": 1200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1484,
1485,
3404,
3405,
3406,
3407,
3408,
3409,
3410,
3411,
3412,
3413,
3414,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
288
]
},
{
"tb": 96,
"tbk": 3,
"tl": 113,
"mb": 96,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
1660,
1661,
1662,
1663,
1663,
1664,
1665,
1666,
1667,
1668,
1669,
1670,
1671,
1665,
1666,
1672,
1673,
1674,
1668,
1669,
1670,
1675,
1676,
1677,
1678,
1572,
1573,
1574,
144
]
},
{
"tb": 200,
"tbk": 1,
"tl": 557487,
"mb": 200,
"mbk": 1,
"gb": 200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
4238,
4239,
4240,
4241,
4242,
4243,
4244,
4245,
4246,
4247,
4248,
4249,
4250,
4251,
4252,
4253,
4254,
4255,
4256,
4257,
4258,
4259,
4260,
4261
]
},
{
"tb": 80,
"tbk": 5,
"tl": 18,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
181,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 288,
"tbk": 2,
"tl": 67923,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
94,
95,
96,
97,
2173,
2174,
2175,
2176,
2177,
2178,
2179,
2180,
2181,
2182,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436
]
},
{
"tb": 864,
"tbk": 9,
"tl": 43,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3237,
3238,
3239,
3240,
3241,
3242,
3243,
3244,
3245,
3246,
3247,
3248,
3245,
3249,
3250,
3251,
3252,
3253,
3254,
3255,
3256,
3257,
3258,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 360,
"tbk": 1,
"tl": 392,
"mb": 360,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1781,
1782,
1783,
1784,
1785,
1786,
1787,
1788,
1789,
1790,
1791,
883,
337,
338
]
},
{
"tb": 7080,
"tbk": 5,
"tl": 922,
"mb": 1488,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1984,
1985,
1986,
1987,
1988,
1989,
1990,
1991,
1992,
1993,
1994,
1995,
1996,
1997,
1998,
1999,
2000,
2001,
2002,
2003,
2004,
2005,
2006,
2007,
2008,
2009,
2010,
2011,
2012,
2013,
2014,
2015,
2016,
2017,
2018,
2019,
2020,
2021,
2022,
2023,
2024,
2025,
2026,
2023,
2027,
2028,
2029,
2030,
2031,
2032,
2033,
2034,
2035,
2036,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 368,
"tbk": 1,
"tl": 2652,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1056,
1057,
1058,
1059,
1060,
1061,
98,
99,
100,
101,
102,
103,
103,
104,
105,
106,
107,
108,
109,
110,
111,
112,
113,
114,
115,
116,
117,
118,
119,
120,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 1920,
"tbk": 30,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1125,
1126,
1127,
1128,
1129,
1130,
1131,
1132,
1133,
1134,
1135,
1136,
1137,
4125,
4126,
4127,
4128,
4129,
4130,
4131,
4132,
4133,
4134,
4135,
4136,
4137,
4138,
4139,
4140,
4141,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 720,
"tbk": 10,
"tl": 4,
"mb": 192,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
182,
182,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 384,
"tbk": 2,
"tl": 5372,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3989,
3990,
4262,
4263,
4264,
4265,
4266,
4267,
1096,
1097,
1098,
1099,
1097,
1100,
1101,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 512,
"tbk": 1,
"tl": 485,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
2760,
2761,
4268,
4269,
4270,
4271,
4272,
4273,
1939,
1940,
1941,
1942,
1943,
1944,
1945,
1946,
1947,
1948,
1949,
1950,
1951,
1952,
1953,
1954,
1955,
1956,
1957,
1958,
1958,
1959,
1960,
1961,
1962,
1963,
1964,
1965,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
735
]
},
{
"tb": 896,
"tbk": 8,
"tl": 3212,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1510,
1511,
1512,
1513,
1514,
1515,
1516,
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
1525,
1526,
1527,
1528,
1529,
1530,
3373,
3374,
3375,
3376,
3377,
3378,
3379,
3380,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
1266,
1267,
1268,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
3421,
3422,
3423,
3424,
3425,
3426,
3427,
3428,
3429,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 800,
"tbk": 4,
"tl": 100230,
"mb": 400,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1717,
1718,
1719,
1720,
1721,
1722,
1723,
1724,
1725,
1726,
1727,
1727,
1728,
105,
106,
107,
108,
109,
110,
111,
112,
113,
114,
115,
116,
117,
118,
119,
120,
981,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 384,
"tbk": 6,
"tl": 1143,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
2592,
2593,
2594,
2595,
2596,
2597,
2598,
2599,
2600,
2600,
2601,
2602,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1191,
1192,
1193,
1194,
1195,
1196,
1197,
1198,
1199,
1200,
1201,
1248,
1249,
1250,
1251,
1252,
1253,
1254,
1255,
1256,
1257,
1269,
1270,
1271,
1272,
1273,
1274,
1275,
1276,
1277,
1278,
40,
41,
42
]
},
{
"tb": 1152,
"tbk": 16,
"tl": 7,
"mb": 144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
181,
182,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 144,
"tbk": 1,
"tl": 59367,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
555,
556,
557,
558,
559,
560,
561,
562,
563,
564,
565,
566,
567,
337,
338
]
},
{
"tb": 288,
"tbk": 12,
"tl": 1139,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
181,
181,
182,
182,
181,
183,
184,
185
]
},
{
"tb": 16,
"tbk": 1,
"tl": 26,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2276,
2277,
2278,
2279,
2280,
2281,
2282,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647,
40,
41,
42
]
},
{
"tb": 192,
"tbk": 2,
"tl": 0,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1737,
1738,
1739,
1740,
1741,
1742,
1743,
1744,
1745,
1746,
1747,
1748,
1745,
1749,
1750,
1751,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
143,
144
]
},
{
"tb": 40864,
"tbk": 8,
"tl": 246,
"mb": 17376,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2939,
2940,
2941,
2942,
2943,
2944,
2945,
2946,
2947,
2948,
2949,
2950,
2951,
2952,
2953,
2864,
2865,
2866,
2867
]
},
{
"tb": 288,
"tbk": 12,
"tl": 4,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
182,
182,
181,
181,
182,
183,
184,
185
]
},
{
"tb": 80,
"tbk": 2,
"tl": 8107,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
540,
541,
542,
543,
544,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 2636,
"tbk": 8,
"tl": 16961,
"mb": 824,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
197,
198,
199,
200,
201,
202,
203,
204,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
337,
338
]
},
{
"tb": 576,
"tbk": 6,
"tl": 20,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2384,
2385,
2386,
2387,
2388,
2389,
2390,
2391,
2392,
2393,
2394,
2395,
2396,
2397,
2398,
1879,
1880,
1881,
1882
]
},
{
"tb": 288,
"tbk": 2,
"tl": 557486,
"mb": 192,
"mbk": 1,
"gb": 192,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3593,
3594,
3595,
3596,
3597,
4274,
4275,
4276,
4277,
4278
]
},
{
"tb": 736,
"tbk": 2,
"tl": 6235,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
437,
438,
439,
440,
441,
442,
756,
757,
758,
759,
760,
761,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
143,
178
]
},
{
"tb": 2880,
"tbk": 30,
"tl": 17954,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1308,
1309,
1310,
1311,
1312,
1313,
1314,
1315,
1316,
1317,
1318,
1045,
1046,
1047,
1048,
1049,
1050,
1051,
1052,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 640,
"tbk": 1,
"tl": 561595,
"mb": 640,
"mbk": 1,
"gb": 640,
"gbk": 1,
"eb": 640,
"ebk": 1,
"fs": [
4279,
4280,
4281,
4282,
1939,
1940,
1941,
1942,
1943,
1944,
1945,
1946,
1947,
1948,
1949,
1950,
1951,
1952,
1953,
1954,
1955,
1956,
1957,
1958,
1958,
1959,
1960,
1961,
1962,
1963,
1964,
1965,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
735
]
},
{
"tb": 7904,
"tbk": 8,
"tl": 114,
"mb": 1976,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2403,
2404,
2405,
2406,
2407,
2408,
2409,
2410,
2411,
2412,
2413,
2414,
2415,
3348,
3349,
3350,
3351,
3352,
3353,
3354,
3355,
3356,
3357,
3358,
3359,
3360,
3361,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 112,
"tbk": 7,
"tl": 30,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
421,
422,
422,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 1872,
"tbk": 13,
"tl": 420985,
"mb": 288,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
517,
518,
519,
520,
521,
522,
523,
524,
525,
526,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 96,
"tbk": 2,
"tl": 5011,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1835,
1836,
1837,
1838,
1839,
1840,
1841,
1842,
1843,
1844,
1845,
1846,
1847,
1848,
1849,
1849,
1850,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 4060,
"tbk": 35,
"tl": 588,
"mb": 696,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4283,
4284,
4285,
4286,
4287,
4288,
4289,
4290,
4291,
4292,
4293,
4294,
4295,
4296,
3348,
3349,
3350,
3351,
3352,
3353,
3354,
3355,
3356,
3357,
3358,
3359,
3360,
3361,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 176,
"tbk": 4,
"tl": 1,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436
]
},
{
"tb": 128,
"tbk": 2,
"tl": 5,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2984,
2985,
2986,
2987,
2988,
2989,
2990,
2991,
2992,
2993,
2994,
2995,
2996,
2997,
2998,
2999,
2997,
3000,
3001,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 384,
"tbk": 6,
"tl": 210614,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
94,
95,
96,
97,
2173,
2174,
2175,
2176,
2177,
2178,
2179,
2180,
2181,
2182,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42
]
},
{
"tb": 432,
"tbk": 3,
"tl": 177,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2783,
2784,
2785,
2786,
2787,
2788,
2789,
2790,
2791,
2792,
2793,
2794,
2795,
2796,
2797,
481,
143,
144
]
},
{
"tb": 224,
"tbk": 3,
"tl": 0,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
1703,
1704,
1705,
2183,
2184,
2185,
2186,
418
]
},
{
"tb": 2688,
"tbk": 18,
"tl": 2849,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1792,
1793,
1885,
1886,
1887,
1888,
1889,
1890,
1891,
1892,
1893,
1894,
1895,
1896,
1897,
1898,
1899,
1900,
1901,
1902,
1903,
1904,
1905,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 320,
"tbk": 3,
"tl": 1966,
"mb": 224,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1510,
1511,
1512,
1513,
1514,
1515,
1516,
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
1525,
1526,
1527,
1528,
1529,
1530,
3373,
3374,
3375,
3376,
3377,
3378,
3379,
3380,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
1266,
1267,
1268,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
1266,
1267,
1268,
1269,
1270,
1271,
1272,
1273,
1274,
1275,
1276,
1277,
1278,
40,
41,
42
]
},
{
"tb": 1920,
"tbk": 30,
"tl": 46,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1125,
1126,
1127,
1128,
1129,
1130,
1131,
1132,
1133,
1134,
1135,
1136,
1137,
1138,
1139,
1140,
1141,
1142,
1143,
1144,
1145,
1146,
1147,
1148,
1149,
1150,
1151,
1152,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 2304,
"tbk": 18,
"tl": 10032639,
"mb": 2304,
"mbk": 18,
"gb": 2304,
"gbk": 18,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
913,
914,
4297,
4298,
3640,
3641,
3642,
3643,
3644,
3645,
3646,
3647,
3648,
3649,
3650,
3651,
81
]
},
{
"tb": 10416,
"tbk": 35,
"tl": 84,
"mb": 1152,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
421,
421,
421,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 1680,
"tbk": 15,
"tl": 4,
"mb": 288,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
181,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 384,
"tbk": 6,
"tl": 681811,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
94,
95,
96,
97,
98,
99,
100,
101,
102,
103,
103,
104,
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1980,
1981,
1982,
1983,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 1120,
"tbk": 3,
"tl": 583,
"mb": 640,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1030,
1031,
1053,
1054,
1335,
337,
338
]
},
{
"tb": 144,
"tbk": 1,
"tl": 31795,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
94,
95,
96,
97,
2173,
2174,
2175,
2176,
2177,
2178,
2179,
2180,
2181,
2182,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
2563,
2564,
2565,
2566,
2567,
2568,
2569,
2570,
2571
]
},
{
"tb": 384,
"tbk": 6,
"tl": 107597,
"mb": 320,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1920,
1921,
1922,
1923,
1924,
1925,
1926,
1922,
1923,
1924,
1927,
221,
143,
144
]
},
{
"tb": 384,
"tbk": 12,
"tl": 513,
"mb": 384,
"mbk": 12,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
4299,
4300,
4301,
4302,
4302,
4303,
1451,
1452,
1453,
1454,
1455,
1456,
1457,
1458,
1459,
1460,
1461,
1462,
1463,
1017,
737,
143,
144
]
},
{
"tb": 232,
"tbk": 4,
"tl": 1,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2349,
2350,
2351,
2183,
2184,
2185,
2186,
735
]
},
{
"tb": 128,
"tbk": 1,
"tl": 562208,
"mb": 128,
"mbk": 1,
"gb": 128,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
4059,
4060,
4061,
4062,
4063,
4064,
4065,
4066,
4067,
4068,
4069,
4070,
4071,
4072,
4073,
4074,
4075,
4076,
4077,
4078,
4079,
4080,
4065,
4066,
4070,
4081,
4082,
4083,
554
]
},
{
"tb": 512,
"tbk": 16,
"tl": 8175,
"mb": 96,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
1729,
1730,
1731,
1732,
1733,
1734,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
1266,
1267,
1268,
1269,
1270,
1271,
1272,
1273,
1274,
1275,
1276,
1277,
1278,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 96,
"tbk": 2,
"tl": 1,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
181,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 640,
"tbk": 6,
"tl": 160132,
"mb": 640,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
1062,
1063,
1064,
1065,
1066,
1067,
1068,
1069,
1070,
1071,
1072,
1073,
1074,
1075,
1076,
1077,
1078,
1079,
1069,
1070,
1071,
1080,
1081,
1082,
1083,
1084,
1085,
221,
337,
338
]
},
{
"tb": 144,
"tbk": 3,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
181,
182,
182,
181,
182,
183,
184,
185
]
},
{
"tb": 256,
"tbk": 6,
"tl": 3892,
"mb": 256,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
1464,
1465,
1335,
337,
338
]
},
{
"tb": 3456,
"tbk": 54,
"tl": 6554186,
"mb": 3456,
"mbk": 54,
"gb": 2304,
"gbk": 36,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
1213,
1214,
1215,
1216,
1217,
1218,
1219,
1220,
1221,
1222,
1223,
1224,
1225,
1226,
1227,
1228,
1229,
1230,
481,
337,
338
]
},
{
"tb": 168,
"tbk": 2,
"tl": 0,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3430,
3431,
3432,
3433,
3434,
3435,
3436,
3437,
3438,
3439,
3440,
3441,
3442,
3443,
3444,
3442,
3445,
3946,
3947,
3948,
3949,
3950,
3951,
3952,
3953,
3947,
3948,
3954,
3955,
3956,
3957,
3958,
3959,
3960,
3961,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 576,
"tbk": 24,
"tl": 11,
"mb": 64,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
182,
182,
182,
181,
182,
183,
184,
185
]
},
{
"tb": 672,
"tbk": 21,
"tl": 1599,
"mb": 672,
"mbk": 21,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
4299,
4300,
4301,
4302,
4302,
4303,
1451,
1452,
1453,
1454,
1455,
1456,
1457,
1458,
1459,
1460,
1461,
1462,
1463,
841,
144
]
},
{
"tb": 12528,
"tbk": 55,
"tl": 941,
"mb": 1536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1984,
1985,
1986,
1987,
1988,
1989,
1990,
1991,
1992,
1993,
1994,
1995,
1996,
1997,
1998,
1999,
2000,
2001,
2002,
2003,
2004,
2005,
2006,
2007,
2008,
2009,
2010,
2011,
2012,
2013,
2014,
2015,
2016,
2017,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 144800,
"tbk": 4,
"tl": 50,
"mb": 81088,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
2760,
2761,
2762,
2763,
2764,
2765,
2766,
2767,
3002,
3003,
3004,
2864,
2865,
2866,
2867
]
},
{
"tb": 1472,
"tbk": 4,
"tl": 12485,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
437,
438,
439,
440,
441,
442,
756,
757,
758,
759,
760,
761,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143,
178
]
},
{
"tb": 288,
"tbk": 12,
"tl": 1156,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143
]
},
{
"tb": 40,
"tbk": 1,
"tl": 639,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1171,
1172,
1173,
1174,
1175,
1176,
1177,
1178,
1178,
1179,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1191,
1192,
1193,
1194,
1195,
1196,
1197,
1198,
1199,
1200,
1201,
3474,
3475,
3476,
3477,
3478,
3479,
3480,
3481,
3482,
3483,
40,
41,
42,
1508,
1509,
1188,
1189,
1190
]
},
{
"tb": 360,
"tbk": 9,
"tl": 462147,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2746,
2747,
2748,
2749,
2750,
2751,
2752,
2753,
2754,
2755,
2756,
2757,
2758,
2759,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
2563,
2564,
2565,
2566,
2567,
2568,
2569,
2570,
2571,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 160,
"tbk": 1,
"tl": 311,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1030,
1031,
2292,
2293,
1055,
737,
143,
144
]
},
{
"tb": 112,
"tbk": 7,
"tl": 26,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
422,
422,
421,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 384,
"tbk": 2,
"tl": 46057,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3989,
3990,
3991,
3992,
3993,
3994,
3995,
3996,
2613,
2614,
2615,
2616,
2614,
2617,
2618,
1124,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 1104,
"tbk": 3,
"tl": 240335,
"mb": 1104,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1056,
1057,
1058,
1059,
1060,
1061,
443,
444,
445,
446,
447,
448,
448,
449,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 336,
"tbk": 7,
"tl": 75,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
422,
421,
422,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 1680,
"tbk": 28,
"tl": 27,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
421,
421,
422,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 240,
"tbk": 10,
"tl": 10,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
422,
422,
422,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 288,
"tbk": 6,
"tl": 5,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
181,
181,
182,
182,
181,
183,
184,
185
]
},
{
"tb": 160,
"tbk": 4,
"tl": 234689,
"mb": 80,
"mbk": 2,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1231,
1232,
1233,
1234,
1235,
1236,
1237,
1238,
1239,
1240,
1241,
1242,
1243,
1244,
1245,
1245,
1246,
1247,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42,
1508,
1509,
1188,
1189,
1190,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42
]
},
{
"tb": 864,
"tbk": 12,
"tl": 4,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
182,
182,
181,
181,
182,
183,
184,
185
]
},
{
"tb": 360,
"tbk": 2,
"tl": 12,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
928,
929,
930,
931,
932,
933,
934,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
937,
944,
945,
946,
939,
940,
941,
947,
948,
949,
950,
951,
952,
953,
954,
917,
734,
337,
338
]
},
{
"tb": 840,
"tbk": 1,
"tl": 36319,
"mb": 840,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1484,
1485,
3404,
3405,
3406,
3407,
3408,
3409,
3410,
3411,
3412,
3413,
3414,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
418
]
},
{
"tb": 288,
"tbk": 18,
"tl": 59,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
182,
182,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 1792,
"tbk": 22,
"tl": 22,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
482,
483,
484,
485,
486,
487,
488,
489,
490,
491,
492,
493,
490,
494,
495,
496,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
144
]
},
{
"tb": 4096,
"tbk": 32,
"tl": 17949427,
"mb": 4096,
"mbk": 32,
"gb": 4096,
"gbk": 32,
"eb": 4096,
"ebk": 32,
"fs": [
4304,
4305,
4306,
4307,
4308,
4309,
4310,
1939,
1940,
1941,
1942,
1943,
1944,
1945,
1946,
1947,
1948,
1949,
1950,
1951,
1952,
1953,
1954,
1955,
1956,
1957,
1958,
1958,
1959,
1960,
1961,
1962,
1963,
1964,
1965,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
735
]
},
{
"tb": 576,
"tbk": 8,
"tl": 750,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
337,
338
]
},
{
"tb": 697632,
"tbk": 110,
"tl": 1262113,
"mb": 98496,
"mbk": 4,
"gb": 98496,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
16,
17,
18,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 448,
"tbk": 12,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
337,
338
]
},
{
"tb": 640,
"tbk": 1,
"tl": 561447,
"mb": 640,
"mbk": 1,
"gb": 640,
"gbk": 1,
"eb": 640,
"ebk": 1,
"fs": [
4311,
4312,
4313,
4314,
4315,
4316,
4317,
4318,
4319,
4042,
4043,
4044,
4045,
4046,
4047,
4048,
4049,
4050,
4051,
4052,
4053,
4054,
4055,
4056,
4057,
4058,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 960,
"tbk": 8,
"tl": 824,
"mb": 960,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
1464,
1465,
1335,
143,
178
]
},
{
"tb": 160,
"tbk": 5,
"tl": 358107,
"mb": 160,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2320,
2321,
2322,
2323,
2324,
2325,
2326,
2327,
2328,
2329,
2330,
2331,
2332,
2333,
2334,
2335,
2336,
2337,
2338,
2339,
2340,
2341,
2342,
2343,
2344,
2345,
2346,
2347,
2338,
2339,
2341,
2348,
841,
178
]
},
{
"tb": 240,
"tbk": 10,
"tl": 2,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
422,
423,
424,
425,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
144
]
},
{
"tb": 288,
"tbk": 12,
"tl": 5,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
182,
181,
182,
182,
182,
181
]
},
{
"tb": 144,
"tbk": 2,
"tl": 189,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
337,
338
]
},
{
"tb": 320,
"tbk": 4,
"tl": 8,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1381,
1382,
917,
737,
143,
178
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
797,
798,
799,
800,
801,
802,
803,
804,
805,
806,
807,
808,
809,
810,
811,
812,
813,
814,
815,
816,
817,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39
]
},
{
"tb": 48,
"tbk": 1,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
422,
423,
424,
425,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
481,
337,
338
]
},
{
"tb": 48,
"tbk": 3,
"tl": 10,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
182,
182,
181,
181,
182,
181
]
},
{
"tb": 13168,
"tbk": 823,
"tl": 665,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1637,
3778,
3779,
3780,
3781,
3782,
3783,
1644,
1645,
1646,
1647,
1648,
1649,
1650,
1650,
1651,
1652,
1652,
1653,
1654,
1655,
1656,
1657,
1658,
1659,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42
]
},
{
"tb": 120,
"tbk": 3,
"tl": 12680,
"mb": 120,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1163,
1164,
780,
781,
782,
783,
784,
785,
786,
787,
788,
789,
790,
791,
792,
793,
794,
795,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 64,
"tbk": 2,
"tl": 505,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
381,
382,
1055,
737,
337,
338
]
},
{
"tb": 128,
"tbk": 4,
"tl": 265,
"mb": 128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2320,
2321,
2322,
2323,
2324,
2325,
2326,
2327,
2328,
2329,
2330,
2331,
2332,
2333,
2334,
2335,
2336,
2337,
2338,
2339,
2340,
2341,
2342,
2343,
2344,
2345,
2346,
2347,
2338,
2339,
2341,
2348,
1017,
737,
143,
178
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
178
]
},
{
"tb": 5040,
"tbk": 28,
"tl": 27,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
421,
421,
422,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 32,
"tbk": 1,
"tl": 85,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
1729,
1730,
1731,
1732,
1733,
1734,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
1266,
1267,
1268,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
3421,
3422,
3423,
3424,
3425,
3426,
3427,
3428,
3429,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 256,
"tbk": 4,
"tl": 9,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1510,
1511,
1512,
1513,
1514,
1515,
1516,
1517,
1518,
3561,
3562,
3563,
3564,
3565,
3566,
3567,
3565,
3568,
3569,
1124,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 148,
"tbk": 1,
"tl": 8,
"mb": 148,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
4320,
4321,
4322,
4323,
4324,
4325,
4326,
4327,
4327,
4328,
4329,
4330,
4331,
4332,
4333,
4334,
4335,
4329,
4330,
4336,
4337,
4338,
4332,
4333,
4334,
4339,
4340,
4341,
4342,
1572,
1573,
1574,
144
]
},
{
"tb": 32,
"tbk": 1,
"tl": 656,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2146,
2147,
2148,
2149,
2150,
2151,
2152,
1531,
1532,
1533,
1534,
1535,
1536,
1537,
1538,
2153,
2154,
2155,
2156,
2157,
2158,
2159,
2160,
2161,
2162,
2163,
2153,
2154,
2155,
2156,
2157,
2158,
2159,
2160,
2161,
2162,
2163,
2153,
2154,
2155,
2156,
2157,
2158,
2159,
2160,
2283,
2284,
2285,
2286,
2287,
2288,
2289,
2290,
2291,
40,
41,
42
]
},
{
"tb": 200,
"tbk": 5,
"tl": 21,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4343,
4344,
4345,
4346,
4347,
4348,
4349,
4350,
4351,
4352,
4353,
4354,
4355,
4356,
4357,
4358,
4359,
4360,
4361,
4362,
4363,
4364,
1572,
1573,
1574,
178
]
},
{
"tb": 128,
"tbk": 2,
"tl": 5,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1510,
1511,
1512,
1513,
1514,
1515,
1516,
1517,
1518,
3561,
3562,
3563,
3564,
3565,
3566,
3567,
3565,
3568,
3569,
981,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 1752,
"tbk": 16,
"tl": 1,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3430,
3431,
3432,
3433,
3434,
3435,
3436,
3437,
3438,
3439,
3440,
3441,
3442,
3443,
3444,
3442,
3445,
3446,
3447,
3448,
3449,
3450,
3451,
3452,
3453,
3447,
3448,
3454,
3455,
3456,
3457,
3458,
3459,
3460,
3461,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 2592,
"tbk": 27,
"tl": 237746,
"mb": 288,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
1340,
1341,
1342,
1343,
1344,
1345,
1346,
1347,
1348,
1349,
1350,
1351,
1352,
1353,
1354,
1355,
1356,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 32,
"tbk": 2,
"tl": 8,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
182,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 40,
"tbk": 1,
"tl": 2798,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
768,
769,
770,
771,
772,
773,
774,
775,
776,
777,
778,
778,
779,
780,
781,
782,
783,
784,
785,
786,
787,
788,
789,
790,
791,
792,
793,
794,
795,
796,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 192,
"tbk": 2,
"tl": 62,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
3915,
3916,
3917,
3918,
3919,
3920,
3921,
3922,
3923,
3924,
3925,
3926,
3927,
3928,
3929,
3930,
3931,
3932,
3933,
3934,
3935,
3936,
3937,
3938,
3939,
3930,
3931,
3933,
3940,
1017,
734,
337,
338
]
},
{
"tb": 672,
"tbk": 1,
"tl": 45398,
"mb": 672,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
874,
875,
876,
877,
878,
879,
880,
881,
882,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
2352
]
},
{
"tb": 64,
"tbk": 4,
"tl": 12,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
182,
183,
184,
185,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
143
]
},
{
"tb": 480,
"tbk": 2,
"tl": 253,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1030,
1031,
2292,
2293,
1335,
143,
178
]
},
{
"tb": 2208,
"tbk": 6,
"tl": 249827,
"mb": 1104,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2901,
2902,
2903,
2904,
2905,
2906,
2907,
2908,
2909,
2910,
2911,
2912,
2913,
2914,
2915,
2916,
2917,
2918,
2919,
2920,
2921,
2922,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 512,
"tbk": 4,
"tl": 1153,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
1883,
1884,
1055,
737,
143,
144
]
},
{
"tb": 672,
"tbk": 21,
"tl": 1937,
"mb": 672,
"mbk": 21,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
2572,
2573,
2574,
2575,
2576,
2577,
2578,
2579,
2576,
2580,
2581,
2582,
2583,
2584,
2585,
2586,
2587,
2588,
2589,
418
]
},
{
"tb": 7424,
"tbk": 118,
"tl": 1310,
"mb": 160,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1637,
2430,
2431,
2432,
2433,
2434,
2435,
2436,
2437,
2438,
2439,
2440,
2441,
2442,
2443,
1906,
1907,
1908,
1909,
1910,
1911,
1912,
1913,
1914,
1915,
1916,
1917,
1918,
1919,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 128,
"tbk": 2,
"tl": 20,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4195,
4196,
981,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 80,
"tbk": 5,
"tl": 20,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
421,
422,
422,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 300,
"tbk": 3,
"tl": 56,
"mb": 248,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
384,
385,
386,
387,
388,
389,
390,
391,
2444,
2445,
2446,
2447,
2448,
2449,
2450,
2451,
2452,
2452,
2453,
2454,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
736,
737,
143,
178
]
},
{
"tb": 576,
"tbk": 12,
"tl": 7,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
182,
181,
182,
181,
181,
183,
184,
185
]
},
{
"tb": 160,
"tbk": 4,
"tl": 7,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
708,
709,
710,
711,
712,
713,
714,
715,
716,
717,
718,
719,
720,
721,
722,
723,
724,
725,
726,
727,
728,
729,
730,
731,
716,
732,
917,
737,
337,
338
]
},
{
"tb": 672,
"tbk": 21,
"tl": 1789,
"mb": 672,
"mbk": 21,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
2455,
2456,
2457,
2458,
2459,
2460,
2461,
2462,
2459,
2463,
2464,
2465,
2466,
2467,
2468,
2469,
1481,
1482,
1483,
144
]
},
{
"tb": 37632,
"tbk": 588,
"tl": 56,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4112,
4113,
4114,
4115,
4116,
4117,
4118,
4119,
4120,
4121,
4122,
4123,
4124,
4125,
4126,
4127,
4128,
4129,
4130,
4131,
4132,
4133,
4134,
4135,
4136,
4137,
4138,
4139,
4140,
4141,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 32,
"tbk": 1,
"tl": 557461,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
4365,
4366,
4367,
4368,
4369,
4370,
4371,
4372,
4373,
4374,
4375
]
},
{
"tb": 9336,
"tbk": 102,
"tl": 26216,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2470,
2471,
2472,
2473,
2474,
2475,
2476,
2477,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 480,
"tbk": 2,
"tl": 276,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1030,
1031,
1053,
1054,
1055,
734,
143,
178
]
},
{
"tb": 40,
"tbk": 1,
"tl": 29,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4376,
4377,
4378,
4379,
4380,
4381,
4382,
4383,
4384,
4385,
4386,
4387,
554
]
},
{
"tb": 144,
"tbk": 6,
"tl": 580,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
181,
181,
182,
182,
181,
182
]
},
{
"tb": 192,
"tbk": 1,
"tl": 28,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
60,
61,
62,
63,
64,
65,
66,
67,
68,
756,
757,
758,
759,
760,
761,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
481,
143,
144
]
},
{
"tb": 1120,
"tbk": 3,
"tl": 32,
"mb": 640,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1030,
1031,
1053,
1054,
1335,
143,
178
]
},
{
"tb": 768,
"tbk": 12,
"tl": 37413,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
94,
95,
96,
97,
756,
757,
758,
759,
760,
761,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
143,
144
]
},
{
"tb": 256,
"tbk": 16,
"tl": 853,
"mb": 32,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3862,
3863,
3864,
3865,
3866,
3867,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 1680,
"tbk": 28,
"tl": 19,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
421,
421,
422,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 288,
"tbk": 18,
"tl": 64,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
182,
182,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 1216,
"tbk": 14,
"tl": 1,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
482,
483,
484,
485,
486,
487,
488,
489,
490,
491,
492,
493,
490,
494,
495,
496,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143,
144
]
},
{
"tb": 628992,
"tbk": 2808,
"tl": 32915,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
344,
345,
346,
347,
348,
349,
2553,
2554,
2555,
2556,
2557,
2558,
2554,
2559,
2560,
2561,
2562,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 2592,
"tbk": 18,
"tl": 14857,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
568,
569,
570,
571,
572,
573,
574,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
422,
423,
424,
425,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
481,
143,
144
]
},
{
"tb": 96,
"tbk": 3,
"tl": 1551,
"mb": 96,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
381,
382,
383,
143,
144
]
},
{
"tb": 6480,
"tbk": 54,
"tl": 16,
"mb": 576,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
181,
181,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 280,
"tbk": 1,
"tl": 3651,
"mb": 280,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
197,
198,
199,
200,
201,
202,
203,
204,
205,
206,
207,
208,
209,
210,
211,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
481,
337,
338
]
},
{
"tb": 680,
"tbk": 8,
"tl": 279024,
"mb": 560,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3066,
3067,
3068,
3069,
3070,
3071,
3072,
3073,
3074,
3075,
3076,
3077,
3078,
3079,
3080,
3081,
3082,
3083,
3084,
3072,
3073,
3075,
3085,
3086,
3087,
3088,
143,
178
]
},
{
"tb": 1536,
"tbk": 32,
"tl": 17949518,
"mb": 1536,
"mbk": 32,
"gb": 1536,
"gbk": 32,
"eb": 1536,
"ebk": 32,
"fs": [
4388,
4389,
4390,
4391,
4392,
4393,
4394,
4395,
1939,
1940,
1941,
1942,
1943,
1944,
1945,
1946,
1947,
1948,
1949,
1950,
1951,
1952,
1953,
1954,
1955,
1956,
1957,
1958,
1958,
1959,
1960,
1961,
1962,
1963,
1964,
1965,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
735
]
},
{
"tb": 2960,
"tbk": 20,
"tl": 2292,
"mb": 2960,
"mbk": 20,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
2301,
2302,
2303,
2304,
2305,
2306,
2307,
2308,
2309,
2310,
2311,
2312,
2309,
2313,
2314,
2315,
2316,
2317,
2318,
2319,
3970,
3971,
3972,
3973
]
},
{
"tb": 16,
"tbk": 1,
"tl": 13,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1404,
1405,
1406,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
2541,
2542,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 524,
"tbk": 2,
"tl": 16,
"mb": 524,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
928,
929,
930,
931,
932,
933,
934,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
937,
944,
945,
946,
939,
940,
941,
947,
948,
949,
950,
951,
952,
953,
954,
733,
737,
337,
338
]
},
{
"tb": 160,
"tbk": 1,
"tl": 270,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1030,
1031,
1053,
1054,
1055,
737,
337,
338
]
},
{
"tb": 336,
"tbk": 12,
"tl": 5,
"mb": 56,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
182,
182,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 800,
"tbk": 4,
"tl": 13202,
"mb": 400,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3545,
3546,
3547,
3548,
3549,
1124,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 1176,
"tbk": 30,
"tl": 1147,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
181,
181,
181,
182,
181,
183,
184,
185
]
},
{
"tb": 465088,
"tbk": 110,
"tl": 1262247,
"mb": 65664,
"mbk": 4,
"gb": 65664,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1792,
1793,
3124,
3125,
3126,
3127,
3128,
3129,
3130,
3131,
3132,
3133,
3134,
3135,
3136,
3137,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 80,
"tbk": 2,
"tl": 0,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2123,
2124,
2125,
2126,
2127,
2128,
2129,
2130,
2131,
2132,
2133,
2134,
2135,
2136,
2137,
2138,
2139,
2140,
2141,
2142,
2143,
2144,
2145,
917,
734,
143,
178
]
},
{
"tb": 64,
"tbk": 2,
"tl": 448,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
1883,
1884,
1055,
734,
337,
338
]
},
{
"tb": 2524,
"tbk": 4,
"tl": 230,
"mb": 2000,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
222,
223,
224,
225,
226,
227,
228,
229,
230,
231,
232,
233,
234,
235,
236,
237,
238,
239,
240,
241,
238,
242,
243,
244,
245,
246,
247,
248,
249,
250,
251,
288
]
},
{
"tb": 448,
"tbk": 4,
"tl": 1154,
"mb": 448,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
1464,
1465,
1055,
737,
143,
178
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1551,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
2760,
2761,
4396,
4397,
4398,
4399,
4400,
4401,
1939,
1940,
1941,
1942,
1943,
1944,
1945,
1946,
1947,
1948,
1949,
1950,
1951,
1952,
1953,
1954,
1955,
1956,
1957,
1958,
1958,
1959,
1960,
1961,
1962,
1963,
1964,
1965,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
735
]
},
{
"tb": 192,
"tbk": 12,
"tl": 43,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
182,
182,
182,
181,
182,
183,
184,
185
]
},
{
"tb": 768,
"tbk": 6,
"tl": 1333,
"mb": 768,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
1464,
1465,
1055,
734,
337,
338
]
},
{
"tb": 240,
"tbk": 6,
"tl": 20834,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4402,
4403,
4404,
4405,
4406,
4407,
4408,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 96,
"tbk": 1,
"tl": 59,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
3683,
3684,
3685,
1017,
734,
143,
144
]
},
{
"tb": 240,
"tbk": 5,
"tl": 65,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
421,
421,
421,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 720,
"tbk": 15,
"tl": 15,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
181,
182,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 40,
"tbk": 1,
"tl": 74,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4409,
4410,
4411,
4412,
4413,
4414,
4415,
4416,
4417,
4418,
4419,
4420,
81
]
},
{
"tb": 32,
"tbk": 1,
"tl": 23,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
3617,
3618,
3619,
3620,
1017,
737,
143,
178
]
},
{
"tb": 140,
"tbk": 2,
"tl": 35,
"mb": 140,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
384,
385,
386,
387,
388,
389,
390,
391,
2444,
2445,
2446,
2447,
2448,
2449,
2450,
2451,
2452,
2452,
2453,
2454,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
733,
737,
143,
178
]
},
{
"tb": 352,
"tbk": 11,
"tl": 356,
"mb": 352,
"mbk": 11,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
4085,
4086,
4087,
4088,
4088,
4089,
4090,
4091,
4092,
4093,
4094,
4095,
4096,
4090,
4091,
4097,
4098,
4099,
4093,
4094,
4095,
4100,
4101,
4102,
4103,
1572,
1573,
1574,
144
]
},
{
"tb": 512,
"tbk": 4,
"tl": 93,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
913,
914,
2927,
2928,
2929,
2930,
2929,
2931,
2932,
2933,
2934,
2935,
2936,
2937,
2938,
1017,
737,
143,
144
]
},
{
"tb": 1752,
"tbk": 16,
"tl": 2,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3430,
3431,
3432,
3433,
3434,
3435,
3436,
3437,
3438,
3439,
3440,
3441,
3442,
3443,
3444,
3442,
3445,
3446,
3447,
3448,
3449,
3450,
3451,
3452,
3453,
3447,
3448,
3454,
3455,
3456,
3457,
3458,
3459,
3460,
3461,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 1536,
"tbk": 1,
"tl": 53,
"mb": 1536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1984,
1985,
1986,
1987,
1988,
1989,
1990,
1991,
1992,
1993,
1994,
1995,
1996,
1997,
1998,
1999,
2000,
2001,
2002,
2003,
2674,
2675,
2676,
2677,
2678,
2679,
2680,
2681,
2682,
2683,
2684,
2685,
2018,
2019,
2020,
2021,
2022,
2023,
2024,
2025,
2026,
2023,
2027,
2028,
2029,
2030,
2031,
2032,
2033,
2034,
2035,
2036,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42
]
},
{
"tb": 192,
"tbk": 2,
"tl": 9992,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
920,
921,
922,
923,
924,
925,
926,
3716,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 240,
"tbk": 5,
"tl": 88,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
421,
421,
422,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 144,
"tbk": 3,
"tl": 12687,
"mb": 144,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
146,
147,
148,
149,
150,
151,
152,
153,
154,
155,
156,
157,
158,
159,
159,
160,
780,
781,
782,
783,
784,
785,
786,
787,
788,
789,
790,
791,
792,
793,
794,
795,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 80,
"tbk": 2,
"tl": 10030,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1163,
1164,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 192,
"tbk": 6,
"tl": 1347,
"mb": 192,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
1464,
1465,
1055,
734,
337,
338
]
},
{
"tb": 40,
"tbk": 1,
"tl": 10313,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1163,
1164,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
177,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 1664,
"tbk": 13,
"tl": 4407,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1510,
1511,
1512,
1513,
1514,
1515,
1516,
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
1525,
1526,
1527,
1528,
1529,
1530,
1531,
1532,
1533,
1534,
1535,
1536,
1537,
1538,
2153,
2154,
2155,
2156,
2157,
2158,
2159,
2160,
2161,
2162,
2163,
1539,
1540,
1541,
1542,
1543,
1544,
1545,
1546,
1547,
1548,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 720,
"tbk": 10,
"tl": 48,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
422,
421,
422,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 144,
"tbk": 3,
"tl": 2,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
182,
182,
181,
182,
181,
181
]
},
{
"tb": 240,
"tbk": 6,
"tl": 20400,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4402,
4403,
4404,
4405,
4406,
4407,
4408,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 336,
"tbk": 14,
"tl": 12,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
422,
422,
421,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 48,
"tbk": 2,
"tl": 0,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
422,
423,
424,
425,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
481,
143,
178
]
},
{
"tb": 236,
"tbk": 2,
"tl": 37,
"mb": 236,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
1279,
1280,
1281,
1282,
1283,
1284,
1285,
1286,
1286,
1287,
1288,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
733,
734,
143,
178
]
},
{
"tb": 560,
"tbk": 8,
"tl": 339500,
"mb": 480,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3066,
3067,
3068,
3069,
3070,
3071,
3072,
3073,
3074,
3075,
3076,
3077,
3078,
3079,
3080,
3081,
3082,
3083,
3084,
3072,
3073,
3075,
3085,
565,
566,
567,
337,
338
]
},
{
"tb": 48,
"tbk": 2,
"tl": 0,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
143,
144
]
},
{
"tb": 240,
"tbk": 6,
"tl": 251310,
"mb": 120,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4197,
4198,
4199,
4200,
4201,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 144,
"tbk": 2,
"tl": 0,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
422,
423,
424,
425,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
481,
143,
144
]
},
{
"tb": 336,
"tbk": 9,
"tl": 585,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
182,
181,
181,
182,
181,
183,
184,
185
]
},
{
"tb": 1008,
"tbk": 14,
"tl": 12,
"mb": 144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
422,
421,
422,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 40,
"tbk": 1,
"tl": 562235,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
4421,
4422,
4423,
4424,
4425,
4426,
4427,
4428,
4429
]
},
{
"tb": 1992,
"tbk": 11,
"tl": 1935,
"mb": 600,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
182,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 8976,
"tbk": 561,
"tl": 336,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1637,
3778,
3779,
3780,
3781,
3782,
3783,
1644,
1645,
1646,
1647,
1648,
1649,
1650,
1650,
1651,
1652,
1652,
1653,
1654,
1655,
1656,
1657,
1658,
1659,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370
]
},
{
"tb": 3392,
"tbk": 22,
"tl": 18905,
"mb": 960,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3259,
3260,
3261,
3262,
3263,
3264,
3265,
3266,
3262,
3263,
3264,
3267,
221,
337,
338
]
},
{
"tb": 720,
"tbk": 10,
"tl": 10,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
422,
422,
422,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 480,
"tbk": 8,
"tl": 13133,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
1338,
1339,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 64,
"tbk": 2,
"tl": 201,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
1464,
1465,
1335,
143,
144
]
},
{
"tb": 64,
"tbk": 4,
"tl": 11,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
337,
338
]
},
{
"tb": 96,
"tbk": 2,
"tl": 71091,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
339,
340,
341,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
2541,
2542,
434,
435,
436,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 1680,
"tbk": 15,
"tl": 25,
"mb": 336,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
421,
422,
421,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 300,
"tbk": 3,
"tl": 40,
"mb": 248,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
384,
385,
386,
387,
388,
389,
390,
391,
2444,
2445,
2446,
2447,
2448,
2449,
2450,
2451,
2452,
2452,
2453,
2454,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
733,
734,
143,
178
]
},
{
"tb": 80,
"tbk": 2,
"tl": 0,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2123,
2124,
2125,
2126,
2127,
2128,
2129,
2130,
2131,
2132,
2133,
2134,
2135,
2136,
2137,
2138,
2139,
2140,
2141,
2142,
2143,
2144,
2145,
917,
737,
337,
338
]
},
{
"tb": 576,
"tbk": 5,
"tl": 44752,
"mb": 576,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2814,
2815,
2816,
2817,
2818,
2819,
2820,
2821,
2822,
2823,
2824,
2825,
2826,
2827,
2828,
2829,
2830,
2831,
2832,
2833,
2821,
2822,
2823,
2824,
2825,
2826,
2827,
2828,
2829,
2831,
2834,
2835,
2836,
2837,
143,
178
]
},
{
"tb": 40,
"tbk": 1,
"tl": 562238,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
4430,
4431,
4432,
4433,
4434,
4435,
4436,
4437,
4438
]
},
{
"tb": 126,
"tbk": 12,
"tl": 2302,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3415,
3416,
3417,
3418,
3419,
3420,
2472,
2473,
2474,
2475,
2476,
2477,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42
]
},
{
"tb": 256,
"tbk": 8,
"tl": 461,
"mb": 256,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
1464,
1465,
383,
143,
144
]
},
{
"tb": 192,
"tbk": 2,
"tl": 21978,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
2043,
2044,
2045,
2046,
2047,
2048,
481,
143,
178
]
},
{
"tb": 1536,
"tbk": 4,
"tl": 2248602,
"mb": 1536,
"mbk": 4,
"gb": 1536,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
3668,
3669,
3670,
3671,
3672,
3673,
3674,
3675,
3676,
3677,
3678,
3679,
3680,
3681,
3682,
554
]
},
{
"tb": 32,
"tbk": 2,
"tl": 5,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
183,
184,
185,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
337,
338
]
},
{
"tb": 160,
"tbk": 4,
"tl": 18173,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
768,
769,
770,
771,
772,
773,
774,
775,
776,
777,
778,
778,
779,
780,
781,
782,
783,
784,
785,
786,
787,
788,
789,
790,
791,
792,
793,
794,
795,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 288,
"tbk": 1,
"tl": 2630,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1018,
1019,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
98,
99,
100,
101,
102,
103,
103,
104,
105,
106,
107,
108,
109,
110,
111,
112,
113,
114,
115,
116,
117,
118,
119,
120,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 1152,
"tbk": 9,
"tl": 65141,
"mb": 1152,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
1062,
1063,
1064,
1065,
1066,
1067,
1068,
1069,
1070,
1071,
1072,
1073,
1074,
1075,
1076,
1077,
1078,
1079,
1069,
1070,
1071,
1080,
1081,
1082,
1083,
1084,
1085,
481,
337,
338
]
},
{
"tb": 160,
"tbk": 1,
"tl": 85,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1484,
1485,
2091,
2092,
2093,
2094,
2095,
2096,
2097,
2098,
2099,
2111,
2112,
2113,
2114,
2115,
2116,
2117,
2118,
2119,
2120,
40,
41,
42,
2590,
2591,
2161,
2162,
2163,
1539,
1540,
1541,
1542,
1543,
1544,
1545,
1546,
1547,
1548,
40,
41,
42
]
},
{
"tb": 640,
"tbk": 14,
"tl": 71,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
683,
684,
685,
686,
687,
688,
689,
690,
691,
692,
693,
694,
695,
696,
697,
698,
699,
700,
701,
702,
703,
704,
705,
706,
707,
288
]
},
{
"tb": 6912,
"tbk": 108,
"tl": 103916,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
3138,
3139,
3140,
3141,
3142,
3143,
3144,
3145,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 432,
"tbk": 3,
"tl": 152,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2783,
2784,
2785,
2786,
2787,
2788,
2789,
2790,
2791,
2792,
2793,
2794,
2795,
2796,
2797,
481,
337,
338
]
},
{
"tb": 16,
"tbk": 1,
"tl": 30,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4439,
4440,
4441,
4442,
4443,
4444,
4445,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647,
40,
41,
42
]
},
{
"tb": 48,
"tbk": 2,
"tl": 15,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
884,
885,
886,
887,
888,
889,
890,
891,
892,
893,
894,
895,
896,
897,
898,
899,
900,
901,
902,
903,
904,
901,
905,
906,
907,
908,
909,
910,
911,
912,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647
]
},
{
"tb": 200,
"tbk": 1,
"tl": 562167,
"mb": 200,
"mbk": 1,
"gb": 200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3692,
3693,
3694,
3695,
3696,
3697,
3698,
3699,
3700,
3701,
3702,
3703,
3704,
3705,
3706,
3707,
3708,
3709,
554
]
},
{
"tb": 15120,
"tbk": 30,
"tl": 470458,
"mb": 4608,
"mbk": 3,
"gb": 3072,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
421,
421,
421,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 428,
"tbk": 2,
"tl": 21,
"mb": 428,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
1442,
1443,
1444,
1445,
1446,
1447,
1448,
1449,
1449,
1450,
1451,
1452,
1453,
1454,
1455,
1456,
1457,
1458,
1459,
1460,
1461,
1462,
1463,
1017,
734,
143,
144
]
},
{
"tb": 64,
"tbk": 2,
"tl": 21983,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
2043,
2044,
2045,
2046,
2047,
2048,
481,
143,
178
]
},
{
"tb": 236,
"tbk": 2,
"tl": 19,
"mb": 236,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3621,
3622,
3623,
3624,
3625,
3626,
3627,
3628,
3652,
3653,
3654,
3655,
3656,
2798,
2799,
2800,
2801,
2802,
2803,
2804,
2805,
1617,
1618,
1619,
1620,
1621,
1622,
1623,
1624,
1625,
1626,
1627,
1628,
1629,
1630,
1631,
1632,
1633,
1618,
1619,
1620,
1621,
1622,
1623,
1624,
1628,
1634,
1635,
1636,
554
]
},
{
"tb": 288,
"tbk": 1,
"tl": 184,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1835,
1836,
1837,
1838,
1839,
1840,
1841,
1842,
1843,
1844,
1845,
1846,
1847,
1848,
1849,
1849,
1850,
1851,
1852,
1853,
1854,
1855,
1856,
1857,
1858,
1859,
1860,
1861,
1862,
1863,
1864,
1865,
1866,
177,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 1216,
"tbk": 14,
"tl": 1,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1737,
1738,
1739,
1740,
1741,
1742,
1743,
1744,
1745,
1746,
1747,
1748,
1745,
1749,
1750,
1751,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143,
144
]
},
{
"tb": 528,
"tbk": 4,
"tl": 1,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436
]
},
{
"tb": 524,
"tbk": 2,
"tl": 19,
"mb": 524,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
928,
929,
930,
931,
932,
933,
934,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
937,
944,
945,
946,
939,
940,
941,
947,
948,
949,
950,
951,
952,
953,
954,
733,
737,
143,
178
]
},
{
"tb": 32,
"tbk": 2,
"tl": 46,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2276,
2277,
2278,
2279,
2280,
2281,
2282,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 224,
"tbk": 6,
"tl": 0,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
183,
184,
185,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
337,
338
]
},
{
"tb": 640,
"tbk": 5,
"tl": 155,
"mb": 640,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
913,
914,
2927,
2928,
2929,
2930,
2929,
2931,
2932,
2933,
2934,
2935,
2936,
2937,
2938,
841,
178
]
},
{
"tb": 180,
"tbk": 1,
"tl": 105,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2968,
2969,
2970,
2971,
2972,
2973,
2974,
2975,
2976,
2977,
2978,
2979,
2980,
2981,
2982,
2982,
2983,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
177,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 128,
"tbk": 1,
"tl": 651,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1510,
1511,
1512,
1513,
1514,
1515,
1516,
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
1525,
1526,
1527,
1528,
1529,
1530,
1531,
1532,
1533,
1534,
1535,
1536,
1537,
1538,
2153,
2154,
2155,
2156,
2157,
2158,
2159,
2160,
2161,
2162,
2163,
2153,
2154,
2155,
2156,
2157,
2158,
2159,
2160,
2161,
2162,
2163,
2153,
2154,
2155,
2156,
2157,
2158,
2159,
2160,
2283,
2284,
2285,
2286,
2287,
2288,
2289,
2290,
2291
]
},
{
"tb": 214656,
"tbk": 33,
"tl": 165394,
"mb": 101376,
"mbk": 3,
"gb": 101376,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
16,
17,
18,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39
]
},
{
"tb": 120,
"tbk": 1,
"tl": 18487,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
527,
528,
529,
530,
531,
532,
533,
534,
535,
536,
2835,
2836,
2837,
143,
144
]
},
{
"tb": 80,
"tbk": 2,
"tl": 5,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
708,
709,
710,
711,
712,
713,
714,
715,
716,
717,
718,
719,
720,
721,
722,
723,
724,
725,
726,
727,
728,
729,
730,
731,
716,
732,
917,
734,
143,
178
]
},
{
"tb": 240,
"tbk": 6,
"tl": 9,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
708,
709,
710,
711,
712,
713,
714,
715,
716,
717,
718,
719,
720,
721,
722,
723,
724,
725,
726,
727,
728,
729,
730,
731,
716,
732,
736,
734,
143,
144
]
},
{
"tb": 76224,
"tbk": 4,
"tl": 4387,
"mb": 34832,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3756,
3757,
3758,
3759,
3760,
3761,
3762,
3763,
3764,
3765,
3766,
3767,
3768,
3769,
3770,
3771,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42
]
},
{
"tb": 190968,
"tbk": 4,
"tl": 125,
"mb": 107808,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
290,
291,
292,
293,
294,
295,
296,
297,
1876,
1877,
1878,
2399,
2400,
2401,
2402
]
},
{
"tb": 624960,
"tbk": 2790,
"tl": 31177,
"mb": 672,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
344,
345,
346,
347,
348,
349,
350,
351,
352,
353,
354,
355,
351,
356,
357,
358,
359,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370
]
},
{
"tb": 96,
"tbk": 6,
"tl": 17,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
337,
338
]
},
{
"tb": 672,
"tbk": 28,
"tl": 217,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
884,
885,
886,
887,
888,
889,
890,
891,
892,
893,
894,
895,
896,
897,
898,
899,
900,
901,
902,
903,
904,
901,
905,
906,
907,
908,
909,
910,
911,
912,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 1416,
"tbk": 5,
"tl": 171357,
"mb": 864,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1018,
1019,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
2173,
2174,
2175,
2176,
2177,
2178,
2179,
2180,
2181,
2182,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 480,
"tbk": 4,
"tl": 0,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
1703,
1704,
1705,
1706,
3710,
3711,
3712,
3713
]
},
{
"tb": 160,
"tbk": 1,
"tl": 27,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1030,
1031,
2292,
2293,
383,
337,
338
]
},
{
"tb": 1680,
"tbk": 15,
"tl": 14620,
"mb": 384,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
421,
423,
424,
425,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
144
]
},
{
"tb": 168,
"tbk": 2,
"tl": 0,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3430,
3431,
3432,
3433,
3434,
3435,
3436,
3437,
3438,
3439,
3440,
3441,
3442,
3443,
3444,
3442,
3445,
3946,
3947,
3948,
3949,
3950,
3951,
3952,
3953,
3947,
3948,
3954,
3955,
3956,
3957,
3958,
3959,
3960,
3961,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 560,
"tbk": 1,
"tl": 684,
"mb": 560,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3621,
3622,
3623,
3624,
3625,
3626,
3627,
3628,
3629,
3630,
3631,
3632,
3633,
3634,
3635,
3636,
3637,
883,
337,
338
]
},
{
"tb": 148,
"tbk": 1,
"tl": 10,
"mb": 148,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
4202,
4203,
4204,
4205,
4206,
4207,
4208,
4209,
4209,
4210,
4211,
4212,
4213,
4214,
4215,
4216,
4217,
4211,
4212,
4218,
4219,
4220,
4214,
4215,
4216,
4221,
4222,
4223,
4224,
4225,
4226,
4227,
735
]
},
{
"tb": 96,
"tbk": 6,
"tl": 19,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
181,
181,
182,
182,
181,
181
]
},
{
"tb": 624,
"tbk": 26,
"tl": 10,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
181,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 144,
"tbk": 3,
"tl": 2,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
181,
182,
182,
182,
181,
183,
184,
185
]
},
{
"tb": 288,
"tbk": 3,
"tl": 11270,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
2806,
2807,
2808,
2809,
2810,
2811,
2812,
2808,
2809,
2810,
2813,
481,
143,
178
]
},
{
"tb": 2592,
"tbk": 18,
"tl": 17730,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
3138,
3139,
3140,
3141,
3142,
3143,
3144,
3145,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 768,
"tbk": 6,
"tl": 357308,
"mb": 768,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
4446,
4447,
4448,
4449,
4450,
4451,
4452,
4453,
4454,
4455,
4456,
4457,
4458,
4459,
4460,
4448,
4449,
4450,
4451,
4452,
4453,
4454,
4455,
4456,
4458,
4461,
565,
566,
567,
143,
144
]
},
{
"tb": 120,
"tbk": 3,
"tl": 2271,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1171,
1172,
1173,
1174,
1175,
1176,
1177,
1178,
1178,
1179,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1191,
1192,
1193,
1194,
1195,
1196,
1197,
1198,
1199,
1200,
1201,
3474,
3475,
3476,
3477,
3478,
3479,
3480,
3481,
3482,
3483,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 300,
"tbk": 3,
"tl": 37,
"mb": 248,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
384,
385,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
399,
400,
401,
402,
403,
404,
405,
406,
407,
401,
402,
408,
409,
410,
404,
405,
406,
411,
412,
413,
414,
415,
416,
417,
735
]
},
{
"tb": 192,
"tbk": 2,
"tl": 0,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1737,
1738,
1739,
1740,
1741,
1742,
1743,
1744,
1745,
1746,
1747,
1748,
1745,
1749,
1750,
1751,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
143,
178
]
},
{
"tb": 192,
"tbk": 2,
"tl": 647,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
381,
382,
1335,
143,
178
]
},
{
"tb": 1517280,
"tbk": 1,
"tl": 136999,
"mb": 1517280,
"mbk": 1,
"gb": 1517280,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
1867,
1868,
1869,
1870,
1871,
1872,
1873,
1874,
1875,
4462,
4463,
4464,
4465
]
},
{
"tb": 2016,
"tbk": 54,
"tl": 17,
"mb": 192,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
181,
182,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 96,
"tbk": 6,
"tl": 18,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143
]
},
{
"tb": 1536,
"tbk": 8,
"tl": 109458,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2603,
2604,
2605,
2606,
2607,
2608,
2609,
2610,
2611,
2612,
3299,
3300,
3301,
3302,
3300,
3303,
3304,
1124,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 384,
"tbk": 3,
"tl": 848,
"mb": 384,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
381,
382,
1055,
734,
143,
178
]
},
{
"tb": 40,
"tbk": 1,
"tl": 261,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2368,
2369,
2370,
2371,
2372,
2373,
2374,
2375,
2376,
2111,
2112,
2113,
2114,
2115,
2116,
2117,
2118,
2119,
2120,
40,
41,
42,
2121,
2122,
2108,
2109,
2110,
3178,
3179,
3180,
3181,
3182,
3183,
3184,
3185,
3186,
3187,
3188,
3495,
3496,
3497,
3498,
3499,
3500,
3501,
3502,
3503,
3504,
2153,
2154,
2155,
2156,
2157,
2158,
2159,
2160
]
},
{
"tb": 40480,
"tbk": 1,
"tl": 372409,
"mb": 40480,
"mbk": 1,
"gb": 40480,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
2760,
2761,
2762,
2763,
2764,
2765,
2766,
2767,
4466,
4467,
4468,
4469
]
},
{
"tb": 2880,
"tbk": 30,
"tl": 18144,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1308,
1309,
1310,
1311,
1312,
1313,
1314,
1315,
1316,
1317,
1318,
1045,
1046,
1047,
1048,
1049,
1050,
1051,
1052,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 1920,
"tbk": 30,
"tl": 18089,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3113,
3114,
3115,
3116,
3117,
3118,
3119,
3120,
3121,
3122,
3123,
1045,
1046,
1047,
1048,
1049,
1050,
1051,
1052,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 13,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
290,
291,
292,
293,
294,
295,
296,
297,
1876,
1877,
1878,
1879,
1880,
1881,
1882
]
},
{
"tb": 40,
"tbk": 1,
"tl": 301,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2368,
2369,
2370,
2371,
2372,
2373,
2374,
2375,
2376,
2111,
2112,
2113,
2114,
2115,
2116,
2117,
2118,
2119,
2120,
40,
41,
42,
2121,
2122,
2108,
2109,
2110,
2111,
2112,
2113,
2114,
2115,
2116,
2117,
2118,
2119,
2120,
40,
41,
42,
2121,
2122
]
},
{
"tb": 7904,
"tbk": 8,
"tl": 113,
"mb": 1976,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2403,
2404,
2405,
2406,
2407,
2408,
2409,
2410,
2411,
2412,
2413,
2414,
2415,
3348,
3349,
3350,
3351,
3352,
3353,
3354,
3355,
3356,
3357,
3358,
3359,
3360,
3361,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 240,
"tbk": 10,
"tl": 11,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
422,
421,
422,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 288,
"tbk": 6,
"tl": 4,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
181,
181,
182,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 32,
"tbk": 1,
"tl": 557441,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
3997,
3998,
3999,
4000,
81
]
},
{
"tb": 240,
"tbk": 4,
"tl": 8015,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
1338,
1339,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 432,
"tbk": 3,
"tl": 183,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2783,
2784,
2785,
2786,
2787,
2788,
2789,
2790,
2791,
2792,
2793,
2794,
2795,
2796,
2797,
481,
143,
178
]
},
{
"tb": 372,
"tbk": 2,
"tl": 22019,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
467,
468,
469,
470,
471,
472,
473,
474,
475,
476,
477,
478,
479,
480,
221,
143,
144
]
},
{
"tb": 576,
"tbk": 4,
"tl": 12495,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
94,
95,
96,
97,
756,
757,
758,
759,
760,
761,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143,
144
]
},
{
"tb": 1840,
"tbk": 5,
"tl": 171832,
"mb": 1104,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1056,
1057,
1058,
1059,
1060,
1061,
2173,
2174,
2175,
2176,
2177,
2178,
2179,
2180,
2181,
2182,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 384,
"tbk": 6,
"tl": 676131,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
94,
95,
96,
97,
98,
99,
100,
101,
102,
103,
103,
104,
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1980,
1981,
1982,
1983,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 80,
"tbk": 2,
"tl": 12,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1407,
1408,
1409,
1410,
1411,
1412,
1413,
1414,
1415,
1416,
1417,
1418,
1419,
1420,
1421,
1422,
1423,
1424,
1425,
1426,
1305,
1306,
1307,
733,
737,
143,
178
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42
]
},
{
"tb": 64,
"tbk": 8,
"tl": 147,
"mb": 64,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1679,
1680,
1681,
1682,
1681,
1683,
1684,
1685,
1686,
1687,
1688,
1689,
1690,
1017,
737,
143,
178
]
},
{
"tb": 4060,
"tbk": 35,
"tl": 730,
"mb": 696,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4283,
4284,
4285,
4286,
4287,
4288,
4289,
4290,
4291,
4292,
4293,
4294,
4295,
4296,
2416,
2417,
2418,
2419,
2420,
2421,
2422,
2423,
2424,
2425,
2426,
2427,
2428,
2429,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 192,
"tbk": 2,
"tl": 91548,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
738,
739,
740,
741,
742,
743,
744,
745,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 384,
"tbk": 12,
"tl": 508,
"mb": 384,
"mbk": 12,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
4299,
4300,
4301,
4302,
4302,
4303,
1451,
1452,
1453,
1454,
1455,
1456,
1457,
1458,
1459,
1460,
1461,
1462,
1463,
1017,
737,
143,
178
]
},
{
"tb": 160,
"tbk": 4,
"tl": 13252,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3469,
3470,
3471,
3472,
3473,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 96,
"tbk": 4,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
144
]
},
{
"tb": 1800,
"tbk": 24,
"tl": 12,
"mb": 240,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
181,
182,
181,
182,
182,
183,
184,
185
]
},
{
"tb": 960,
"tbk": 30,
"tl": 3073,
"mb": 960,
"mbk": 30,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
1466,
1467,
1468,
1469,
1470,
1471,
1472,
1473,
1470,
1474,
1475,
1476,
1477,
1478,
1479,
1480,
3970,
3971,
3972,
3973
]
},
{
"tb": 600,
"tbk": 3,
"tl": 1672274,
"mb": 600,
"mbk": 3,
"gb": 600,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
3743,
3744,
3745,
3746,
3747,
3748,
3749,
3750,
3751,
3752,
3753,
3754,
3755,
1617,
1618,
1619,
1620,
1621,
1622,
1623,
1624,
1625,
1626,
1627,
1628,
1629,
1630,
1631,
1632,
1633,
1618,
1619,
1620,
1621,
1622,
1623,
1624,
1628,
1634,
1635,
1636,
81
]
},
{
"tb": 128,
"tbk": 4,
"tl": 1140,
"mb": 128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
1883,
1884,
1055,
737,
143,
178
]
},
{
"tb": 512,
"tbk": 32,
"tl": 17975425,
"mb": 512,
"mbk": 32,
"gb": 512,
"gbk": 32,
"eb": 512,
"ebk": 32,
"fs": [
4470,
4471,
4472,
4473,
4474,
4475,
4476,
2265,
2266,
2267,
2268,
2269,
2270,
2271,
1939,
1940,
1941,
1942,
1943,
1944,
1945,
1946,
1947,
1948,
1949,
1950,
1951,
1952,
1953,
1954,
1955,
1956,
1957,
1958,
1958,
1959,
1960,
1961,
1962,
1963,
1964,
1965,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
735
]
},
{
"tb": 2880,
"tbk": 48,
"tl": 11,
"mb": 320,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
182,
182,
181,
182,
181,
183,
184,
185
]
},
{
"tb": 4060,
"tbk": 35,
"tl": 693,
"mb": 696,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4283,
4284,
4285,
4286,
4287,
4288,
4289,
4290,
4291,
4292,
4293,
4294,
4295,
4296,
2416,
2417,
2418,
2419,
2420,
2421,
2422,
2423,
2424,
2425,
2426,
2427,
2428,
2429,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 272,
"tbk": 17,
"tl": 40,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1404,
1405,
1406,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
144
]
},
{
"tb": 64,
"tbk": 2,
"tl": 26,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
3617,
3618,
3619,
3620,
1017,
734,
143,
178
]
},
{
"tb": 1328,
"tbk": 1,
"tl": 21,
"mb": 1328,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
1383,
1384,
1385,
1386,
1387,
1388,
1389,
1390,
1391,
1497,
337,
338
]
},
{
"tb": 80,
"tbk": 2,
"tl": 10481,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1163,
1164,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 128,
"tbk": 1,
"tl": 153,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
913,
914,
915,
916,
736,
734,
143,
178
]
},
{
"tb": 288,
"tbk": 9,
"tl": 338,
"mb": 288,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
4299,
4300,
4301,
4302,
4302,
4303,
1451,
1452,
1453,
1454,
1455,
1456,
1457,
1458,
1459,
1460,
1461,
1462,
1463,
841,
178
]
},
{
"tb": 560,
"tbk": 8,
"tl": 338933,
"mb": 480,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3066,
3067,
3068,
3069,
3070,
3071,
3072,
3073,
3074,
3075,
3076,
3077,
3078,
3079,
3080,
3081,
3082,
3083,
3084,
3072,
3073,
3075,
3085,
565,
566,
567,
143,
178
]
},
{
"tb": 400,
"tbk": 2,
"tl": 7939,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3545,
3546,
3547,
3548,
3549,
981,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 672,
"tbk": 18,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
337,
338
]
},
{
"tb": 1008,
"tbk": 9,
"tl": 586,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
182,
181,
181,
182,
181,
183,
184,
185
]
},
{
"tb": 560,
"tbk": 15,
"tl": 26,
"mb": 112,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
421,
422,
421,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 104,
"tbk": 2,
"tl": 26,
"mb": 52,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
384,
385,
386,
387,
388,
389,
390,
391,
2444,
2445,
2446,
2447,
2448,
2449,
2450,
2451,
2452,
2452,
2453,
2454,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
917,
734,
337,
338
]
},
{
"tb": 112,
"tbk": 7,
"tl": 40,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
421,
422,
421,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 160,
"tbk": 1,
"tl": 297,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1030,
1031,
2292,
2293,
1055,
737,
143,
178
]
},
{
"tb": 148,
"tbk": 1,
"tl": 10,
"mb": 148,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
4202,
4203,
4204,
4205,
4206,
4207,
4208,
4209,
4209,
4210,
4211,
4212,
4213,
4214,
4215,
4216,
4217,
4211,
4212,
4218,
4219,
4220,
4214,
4215,
4216,
4221,
4222,
4223,
4224,
4225,
4226,
4227,
418
]
},
{
"tb": 400,
"tbk": 2,
"tl": 7943,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1119,
1120,
1121,
1122,
1123,
981,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 1008,
"tbk": 14,
"tl": 103,
"mb": 144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
422,
421,
421,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 384,
"tbk": 2,
"tl": 46356,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3989,
3990,
3991,
3992,
3993,
3994,
3995,
3996,
2613,
2614,
2615,
2616,
2614,
2617,
2618,
1124,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 384,
"tbk": 3,
"tl": 132,
"mb": 384,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
381,
382,
383,
337,
338
]
},
{
"tb": 832,
"tbk": 7,
"tl": 4557,
"mb": 352,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1510,
1511,
1512,
1513,
1514,
1515,
1516,
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
1525,
1526,
1527,
1528,
1529,
1530,
3373,
3374,
3375,
3376,
3377,
3378,
3379,
3380,
1269,
1270,
1271,
1272,
1273,
1274,
1275,
1276,
1277,
1278,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 180,
"tbk": 1,
"tl": 21,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
4477,
4478,
4479,
4480,
4481,
4482,
4483,
4484,
4485,
1617,
1618,
1619,
1620,
1621,
1622,
1623,
1624,
1625,
1626,
1627,
1628,
1629,
1630,
1631,
1632,
1633,
1618,
1619,
1620,
1621,
1622,
1623,
1624,
1628,
1634,
1635,
1636,
81
]
},
{
"tb": 336,
"tbk": 7,
"tl": 17,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
421,
422,
422,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 144,
"tbk": 1,
"tl": 112699,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
94,
95,
96,
97,
98,
99,
100,
101,
102,
103,
103,
104,
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1980,
1981,
1982,
1983,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 3632,
"tbk": 32,
"tl": 12373,
"mb": 736,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3259,
3260,
3261,
3262,
3263,
3264,
3265,
3266,
3262,
3263,
3264,
3267,
481,
143,
178
]
},
{
"tb": 160,
"tbk": 4,
"tl": 234400,
"mb": 80,
"mbk": 2,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1231,
1232,
1233,
1234,
1235,
1236,
1237,
1238,
1239,
1240,
1241,
1242,
1243,
1244,
1245,
1245,
1246,
1247,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42,
1508,
1509,
1188,
1189,
1190,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1191,
1192,
1193,
1194,
1195,
1196,
1197,
1198,
1199,
1200,
1201,
1248,
1249,
1250,
1251,
1252,
1253,
1254,
1255,
1256,
1257
]
},
{
"tb": 560,
"tbk": 1,
"tl": 126256,
"mb": 560,
"mbk": 1,
"gb": 560,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1484,
1485,
1486,
1487,
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
288
]
},
{
"tb": 14016,
"tbk": 9,
"tl": 11608,
"mb": 8640,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1102,
1103,
1104,
1105,
1106,
1107,
1108,
1109,
1110,
1111,
1112,
1113,
1114,
1115,
1116,
1117,
1118,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 288,
"tbk": 1,
"tl": 19,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
2736,
2737,
2738,
2739,
2740,
2741,
2742,
2743,
2743,
2744,
2745,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1427,
1428,
1429,
1430,
1431,
1432,
1433
]
},
{
"tb": 4032,
"tbk": 13,
"tl": 126,
"mb": 1536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2655,
2656,
2657,
2658,
2659,
2660,
2661,
2662,
2663,
2664,
2665,
2666,
2667,
2668,
2669,
2670,
2671,
2672,
2673,
2004,
2005,
2006,
2007,
2008,
2009,
2010,
2011,
2012,
2013,
2014,
2015,
2016,
2017,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 96,
"tbk": 1,
"tl": 5,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3237,
3238,
3239,
3240,
3241,
3242,
3243,
3244,
3245,
3246,
3247,
3248,
3245,
3249,
3250,
3251,
3252,
3253,
3254,
3255,
3256,
3257,
3258,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 2048,
"tbk": 2,
"tl": 107,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3717,
3718,
3719,
3720,
3721,
3722,
2706,
2707,
2708,
2709,
2710,
2711,
2712,
2713,
2714,
2715,
2716,
2717,
2718,
2719,
2720,
2721,
2722,
2723,
2724,
2725,
2726,
2727,
2728,
2729,
2730,
2731,
2732,
2733,
2733,
2734,
2735,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187
]
},
{
"tb": 288,
"tbk": 9,
"tl": 381,
"mb": 288,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
982,
983,
984,
985,
986,
987,
988,
989,
986,
990,
991,
992,
993,
994,
995,
996,
997,
998,
999,
2352
]
},
{
"tb": 1792,
"tbk": 22,
"tl": 22,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
482,
483,
484,
485,
486,
487,
488,
489,
490,
491,
492,
493,
490,
494,
495,
496,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
178
]
},
{
"tb": 240,
"tbk": 10,
"tl": 2,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
422,
423,
424,
425,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
178
]
},
{
"tb": 200,
"tbk": 1,
"tl": 136775,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4486,
4487,
4488,
4489,
4490,
4491,
4492,
4493,
4494,
4495,
4491,
4492,
4493,
4496,
4497
]
},
{
"tb": 384,
"tbk": 12,
"tl": 523,
"mb": 384,
"mbk": 12,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
2572,
2573,
2574,
2575,
2576,
2577,
2578,
2579,
2576,
2580,
2581,
2582,
2583,
2584,
2585,
2586,
2587,
2588,
2589,
735
]
},
{
"tb": 576,
"tbk": 5,
"tl": 683831,
"mb": 576,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
4498,
4499,
4500,
4501,
4502,
4503,
4499,
4500,
4501,
4502,
4504,
4499,
4500,
4501,
4502,
4505,
4506
]
},
{
"tb": 80,
"tbk": 5,
"tl": 75,
"mb": 32,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
421,
421,
421,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 320,
"tbk": 4,
"tl": 5,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1381,
1382,
917,
734,
337,
338
]
},
{
"tb": 1680,
"tbk": 6,
"tl": 13055,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4507,
4508,
4509,
4510,
4511,
4512,
4513,
4514,
4515,
4516,
4517,
4518,
4519,
4520,
4521,
4522,
4523,
4524,
4525,
4526,
4527,
4528,
4529,
4530,
4531,
4532,
4533,
4534,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 128,
"tbk": 1,
"tl": 177,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
913,
914,
915,
916,
733,
734,
143,
144
]
},
{
"tb": 360,
"tbk": 1,
"tl": 72307,
"mb": 360,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1000,
1001,
1002,
1003,
1004,
1005,
1006,
1007,
1008,
1009,
1010,
1011,
1012,
1013,
1014,
1015,
1006,
1007,
1009,
1016,
841,
144
]
},
{
"tb": 3456,
"tbk": 54,
"tl": 125878,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
3290,
3291,
3292,
3293,
3294,
3295,
3296,
3297,
3293,
3294,
3295,
3298,
481,
143,
144
]
},
{
"tb": 816,
"tbk": 17,
"tl": 33895,
"mb": 288,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
339,
340,
341,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
144
]
},
{
"tb": 448,
"tbk": 14,
"tl": 5,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
3484,
3485,
3486,
3487,
3488,
3489,
3490,
3491,
3492,
3493,
3494,
3965,
3966,
3967,
3968,
3969,
1481,
1482,
1483,
144
]
},
{
"tb": 256,
"tbk": 4,
"tl": 10,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2814,
2815,
2816,
2817,
2818,
3462,
3463,
3464,
3465,
3466,
3464,
3467,
3468,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 240,
"tbk": 5,
"tl": 80,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
422,
421,
421,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 776,
"tbk": 15,
"tl": 6,
"mb": 200,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
181,
182,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 110432,
"tbk": 14,
"tl": 314,
"mb": 16928,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2939,
2940,
2941,
2942,
2943,
2944,
2945,
2946,
2947,
2948,
2949,
2950,
2951,
2952,
2953,
2087,
2088,
2089,
2090
]
},
{
"tb": 440,
"tbk": 9,
"tl": 42,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4343,
4344,
4345,
4346,
4347,
4348,
4349,
4350,
4351,
4352,
4353,
4354,
4355,
4356,
4357,
4358,
4359,
4360,
4361,
4362,
4363,
4364,
1572,
1573,
1574,
144
]
},
{
"tb": 128,
"tbk": 2,
"tl": 5,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1510,
1511,
1512,
1513,
1514,
1515,
1516,
1517,
1518,
3561,
3562,
3563,
3564,
3565,
3566,
3567,
3565,
3568,
3569,
981,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 1536,
"tbk": 1,
"tl": 561604,
"mb": 1536,
"mbk": 1,
"gb": 1536,
"gbk": 1,
"eb": 1536,
"ebk": 1,
"fs": [
4535,
4536,
4537,
4538,
4539,
4540,
4541,
4542,
4543,
4544,
1939,
1940,
1941,
1942,
1943,
1944,
1945,
1946,
1947,
1948,
1949,
1950,
1951,
1952,
1953,
1954,
1955,
1956,
1957,
1958,
1958,
1959,
1960,
1961,
1962,
1963,
1964,
1965,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
735
]
},
{
"tb": 160,
"tbk": 4,
"tl": 19,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1407,
1408,
1409,
1410,
1411,
1412,
1413,
1414,
1415,
1416,
1417,
1418,
1419,
1420,
1421,
1422,
1423,
1424,
1425,
1426,
1305,
1306,
1307,
917,
737,
143,
144
]
},
{
"tb": 336,
"tbk": 14,
"tl": 57,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
422,
422,
421,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 1120,
"tbk": 3,
"tl": 496,
"mb": 640,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1030,
1031,
2292,
2293,
1335,
143,
144
]
},
{
"tb": 1512,
"tbk": 1,
"tl": 81,
"mb": 1512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2655,
2656,
2657,
2658,
2659,
2660,
2661,
2662,
2663,
2664,
2665,
2666,
2667,
2668,
2669,
2670,
2671,
2672,
2673,
2004,
2005,
2006,
2007,
2008,
2009,
2010,
2011,
2012,
2013,
2014,
2015,
2016,
2017,
2018,
2019,
2020,
2021,
2022,
2023,
2024,
2025,
2026,
2023,
2027,
2028,
2029,
2030,
2031,
2032,
2033,
2034,
2035,
2036,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 384,
"tbk": 6,
"tl": 15836,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
94,
95,
96,
97,
98,
99,
100,
101,
102,
103,
103,
104,
105,
106,
107,
108,
109,
110,
111,
112,
113,
114,
115,
116,
117,
118,
119,
120,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 576,
"tbk": 6,
"tl": 12689,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
3336,
3337,
3338,
3339,
3340,
3341,
3342,
3343,
3344,
3345,
3346,
3347,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 192,
"tbk": 12,
"tl": 38,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
181,
181,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 256,
"tbk": 16,
"tl": 828,
"mb": 32,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2037,
2038,
2039,
2040,
2041,
2042,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 240,
"tbk": 6,
"tl": 447892,
"mb": 120,
"mbk": 3,
"gb": 80,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
4197,
4198,
4199,
4200,
4201,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 236,
"tbk": 2,
"tl": 34,
"mb": 236,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
1279,
1280,
1281,
1282,
1283,
1284,
1285,
1286,
1286,
1287,
1288,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
733,
734,
337,
338
]
},
{
"tb": 1456,
"tbk": 39,
"tl": 10,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
181,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 2544,
"tbk": 121,
"tl": 2679,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
762,
763,
4545,
4546,
4547,
4548,
2553,
2554,
2555,
2556,
2557,
2558,
2554,
2559,
2560,
2561,
2562,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42
]
},
{
"tb": 532800,
"tbk": 1,
"tl": 372403,
"mb": 532800,
"mbk": 1,
"gb": 532800,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
1867,
1868,
1869,
1870,
1871,
1872,
1873,
1874,
1875,
4466,
4467,
4468,
4469
]
},
{
"tb": 128,
"tbk": 8,
"tl": 78,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1404,
1405,
1406,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
2563,
2564,
2565,
2566,
2567,
2568,
2569,
2570,
2571,
40,
41,
42
]
},
{
"tb": 2640,
"tbk": 1,
"tl": 124520,
"mb": 2640,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
874,
875,
876,
877,
878,
879,
880,
881,
882,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
288
]
},
{
"tb": 48,
"tbk": 1,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143,
144
]
},
{
"tb": 94464,
"tbk": 138,
"tl": 1426,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3384,
3385,
3386,
3387,
3388,
3389,
3390,
3391,
3392,
3393,
3394,
3395,
3396,
3397,
3398,
3399,
3400,
3401,
3402,
3403,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 256,
"tbk": 2,
"tl": 0,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
913,
914,
915,
916,
917,
734,
337,
338
]
},
{
"tb": 192,
"tbk": 4,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143,
144
]
},
{
"tb": 144,
"tbk": 9,
"tl": 35,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
181,
182,
181,
181,
181,
182
]
},
{
"tb": 30888,
"tbk": 9,
"tl": 23729,
"mb": 11856,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1102,
1103,
1104,
1105,
1106,
1107,
1108,
1109,
1110,
1111,
1112,
1113,
1114,
1115,
1116,
1117,
1118,
2018,
2019,
2020,
2021,
2022,
2023,
2024,
2025,
2026,
2023,
2027,
2028,
2029,
2030,
2031,
2032,
2033,
2034,
2035,
2036,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 336,
"tbk": 14,
"tl": 11,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
422,
421,
422,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
422,
423,
424,
425,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
481,
143,
178
]
},
{
"tb": 144,
"tbk": 6,
"tl": 2,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
181,
182,
181,
182,
182,
182
]
},
{
"tb": 1216,
"tbk": 14,
"tl": 2,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
482,
483,
484,
485,
486,
487,
488,
489,
490,
491,
492,
493,
490,
494,
495,
496,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143,
178
]
},
{
"tb": 288,
"tbk": 3,
"tl": 11248,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
2806,
2807,
2808,
2809,
2810,
2811,
2812,
2808,
2809,
2810,
2813,
481,
337,
338
]
},
{
"tb": 200,
"tbk": 1,
"tl": 34275,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1484,
1485,
1486,
1487,
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
252
]
},
{
"tb": 480,
"tbk": 2,
"tl": 29,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1030,
1031,
2292,
2293,
1335,
337,
338
]
},
{
"tb": 165648,
"tbk": 1,
"tl": 137017,
"mb": 165648,
"mbk": 1,
"gb": 165648,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
290,
291,
2697,
2698,
2699,
2700,
2701,
2702,
4462,
4463,
4464,
4465
]
},
{
"tb": 768,
"tbk": 6,
"tl": 109946,
"mb": 768,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2814,
2815,
2816,
2817,
2818,
2819,
2820,
2821,
2822,
2823,
2824,
2825,
2826,
2827,
2828,
2829,
2830,
2831,
2832,
2833,
2821,
2822,
2823,
2824,
2825,
2826,
2827,
2828,
2829,
2831,
2834,
537,
538,
539,
143,
178
]
},
{
"tb": 680,
"tbk": 8,
"tl": 280899,
"mb": 560,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3066,
3067,
3068,
3069,
3070,
3071,
3072,
3073,
3074,
3075,
3076,
3077,
3078,
3079,
3080,
3081,
3082,
3083,
3084,
3072,
3073,
3075,
3085,
3086,
3087,
3088,
143,
144
]
},
{
"tb": 240,
"tbk": 5,
"tl": 1,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
422,
423,
424,
425,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
144
]
},
{
"tb": 1220,
"tbk": 2,
"tl": 34,
"mb": 1072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
4320,
4321,
4322,
4323,
4324,
4325,
4326,
4327,
4327,
4328,
4329,
4330,
4331,
4332,
4333,
4334,
4335,
4329,
4330,
4336,
4337,
4338,
4332,
4333,
4334,
4339,
4340,
4341,
4342,
3710,
3711,
3712,
3713
]
},
{
"tb": 128,
"tbk": 2,
"tl": 5,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2814,
2815,
2816,
2817,
2818,
3462,
3463,
3464,
3465,
3466,
3464,
3467,
3468,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 240,
"tbk": 6,
"tl": 20,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1407,
1408,
1409,
1410,
1411,
1412,
1413,
1414,
1415,
1416,
1417,
1418,
1419,
1420,
1421,
1422,
1423,
1424,
1425,
1426,
1305,
1306,
1307,
736,
734,
337,
338
]
},
{
"tb": 384,
"tbk": 2,
"tl": 1,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4179,
4180,
4181,
4182,
4183,
4184,
4185,
4186,
4187,
4188,
4189,
4190,
4191,
4192,
4193,
4194,
311,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
322,
323,
324,
314,
315,
316,
325,
326
]
},
{
"tb": 864,
"tbk": 18,
"tl": 28,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
181,
182,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 4480,
"tbk": 28,
"tl": 1492420,
"mb": 960,
"mbk": 6,
"gb": 960,
"gbk": 6,
"eb": 0,
"ebk": 0,
"fs": [
2353,
2354,
2355,
2356,
2357,
2358,
2359,
2360,
2361,
2362,
2363,
2364,
2365,
2366,
2367,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 32,
"tbk": 1,
"tl": 557157,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 32,
"ebk": 1,
"fs": [
2703,
2704,
2705,
3776,
3777,
2710,
2711,
2712,
2713,
2714,
2715,
2716,
2717,
2718,
2719,
2720,
2721,
2722,
2723,
2724,
2725,
2726,
2727,
2728,
2729,
2730,
2731,
2732,
2733,
2733,
2734,
2735,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42,
1508,
1509,
1188,
1189,
1190
]
},
{
"tb": 360,
"tbk": 1,
"tl": 1822,
"mb": 360,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1781,
1782,
1783,
1784,
1785,
1786,
1787,
1788,
1789,
1790,
1791,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
2352
]
},
{
"tb": 480,
"tbk": 1,
"tl": 270,
"mb": 480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1781,
1782,
1783,
1784,
1785,
1786,
1787,
1788,
1789,
1790,
1791,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
735
]
},
{
"tb": 240,
"tbk": 1,
"tl": 62886,
"mb": 240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1484,
1485,
1486,
1487,
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
1497,
143,
178
]
},
{
"tb": 288,
"tbk": 6,
"tl": 1,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
178
]
},
{
"tb": 1328,
"tbk": 1,
"tl": 23,
"mb": 1328,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
1383,
1384,
1385,
1386,
1387,
1388,
1389,
1390,
1391,
1497,
143,
144
]
},
{
"tb": 1152,
"tbk": 72,
"tl": 1053,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
762,
763,
4172,
4173,
4174,
4175,
4176,
4177,
2553,
2554,
2555,
2556,
2557,
2558,
2554,
2559,
2560,
2561,
2562,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 3712,
"tbk": 29,
"tl": 1699697,
"mb": 640,
"mbk": 5,
"gb": 512,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
3197,
3198,
3199,
3200,
3201,
3202,
3203,
3204,
3205,
3206,
3207,
3208,
3209,
3210,
3211,
3212,
3213,
3214,
3215,
3216,
3203,
3204,
3208,
3217,
3218,
3219,
3220,
3221,
3222,
3223,
3224,
3225,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 80,
"tbk": 5,
"tl": 18,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
182,
182,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 288,
"tbk": 2,
"tl": 557491,
"mb": 192,
"mbk": 1,
"gb": 192,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3593,
3594,
3595,
3596,
3597,
4549,
4550,
4551,
4552,
4553,
4554,
4555,
4556,
4557,
4558,
4559,
4560,
4561,
4562,
4563,
4564,
4565,
4566,
4567
]
},
{
"tb": 24,
"tbk": 1,
"tl": 71471,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
746,
747,
748,
749,
750,
751,
752,
753,
754,
755,
252
]
},
{
"tb": 4344,
"tbk": 20,
"tl": 7,
"mb": 696,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
182,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 224,
"tbk": 7,
"tl": 165,
"mb": 224,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
3268,
3269,
3270,
3271,
3271,
3272,
3273,
3274,
3275,
3276,
3277,
3278,
3279,
3273,
3274,
3280,
3281,
3282,
3276,
3277,
3278,
3283,
3284,
3285,
3286,
3287,
3288,
3289,
735
]
},
{
"tb": 1920,
"tbk": 30,
"tl": 18132,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3113,
3114,
3115,
3116,
3117,
3118,
3119,
3120,
3121,
3122,
3123,
1045,
1046,
1047,
1048,
1049,
1050,
1051,
1052,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 540,
"tbk": 3,
"tl": 406,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
3735,
3736,
3737,
3738,
3739,
3740,
3741,
3741,
3742,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 80,
"tbk": 2,
"tl": 0,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2123,
2124,
2125,
2126,
2127,
2128,
2129,
2130,
2131,
2132,
2133,
2134,
2135,
2136,
2137,
2138,
2139,
2140,
2141,
2142,
2143,
2144,
2145,
917,
734,
337,
338
]
},
{
"tb": 40,
"tbk": 1,
"tl": 2672,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
768,
769,
770,
771,
772,
773,
774,
775,
776,
777,
778,
778,
779,
780,
781,
782,
783,
784,
785,
786,
787,
788,
789,
790,
791,
792,
793,
794,
795,
796,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 256,
"tbk": 2,
"tl": 1556,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
3060,
3061,
3062,
3063,
3064,
3065,
2153,
2154,
2155,
2156,
2157,
2158,
2159,
2160,
2161,
2162,
2163,
2153,
2154,
2155,
2156,
2157,
2158,
2159,
2160,
2161,
2162,
2163,
1539,
1540,
1541,
1542,
1543,
1544,
1545,
1546,
1547,
1548,
40,
41,
42
]
},
{
"tb": 128,
"tbk": 4,
"tl": 68,
"mb": 128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
4085,
4086,
4087,
4088,
4088,
4089,
4090,
4091,
4092,
4093,
4094,
4095,
4096,
4090,
4091,
4097,
4098,
4099,
4093,
4094,
4095,
4100,
4101,
4102,
4103,
1572,
1573,
1574,
178
]
},
{
"tb": 32,
"tbk": 1,
"tl": 24,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
3617,
3618,
3619,
3620,
1017,
737,
143,
144
]
},
{
"tb": 192,
"tbk": 4,
"tl": 1,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
337,
338
]
},
{
"tb": 48,
"tbk": 3,
"tl": 8,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
337,
338
]
},
{
"tb": 304,
"tbk": 8,
"tl": 3,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
181,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 3680,
"tbk": 31,
"tl": 2075761,
"mb": 928,
"mbk": 8,
"gb": 928,
"gbk": 8,
"eb": 0,
"ebk": 0,
"fs": [
3197,
3198,
3199,
3200,
3201,
3202,
3203,
3204,
3205,
3206,
3207,
3208,
3209,
3210,
3211,
3212,
3213,
3214,
3215,
3216,
3203,
3204,
3208,
3217,
3218,
3219,
3220,
3221,
3222,
3223,
3224,
3225,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 152,
"tbk": 4,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
181,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 1728,
"tbk": 24,
"tl": 12,
"mb": 192,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
182,
182,
182,
181,
182,
183,
184,
185
]
},
{
"tb": 2864,
"tbk": 26,
"tl": 96012,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2619,
2620,
2472,
2473,
2474,
2475,
2476,
2477,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647
]
},
{
"tb": 128,
"tbk": 1,
"tl": 5,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
913,
914,
915,
916,
917,
737,
143,
144
]
},
{
"tb": 20640,
"tbk": 26,
"tl": 438124,
"mb": 6144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
16,
17,
18,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647,
40,
41,
42
]
},
{
"tb": 192,
"tbk": 12,
"tl": 37,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
181,
181,
182,
181,
182,
183,
184,
185
]
},
{
"tb": 1152,
"tbk": 6,
"tl": 12707,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1086,
1087,
1088,
1089,
1090,
1091,
1092,
1093,
1094,
1095,
1096,
1097,
1098,
1099,
1097,
1100,
1101,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 960,
"tbk": 30,
"tl": 2822,
"mb": 960,
"mbk": 30,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
4299,
4300,
4301,
4302,
4302,
4303,
1451,
1452,
1453,
1454,
1455,
1456,
1457,
1458,
1459,
1460,
1461,
1462,
1463,
1966,
1967
]
},
{
"tb": 768,
"tbk": 4,
"tl": 2779,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1086,
1087,
1088,
1089,
1090,
1091,
1092,
1093,
1094,
1095,
1096,
1097,
1098,
1099,
1097,
1100,
1101,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 40,
"tbk": 1,
"tl": 10450,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1163,
1164,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
177,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 576,
"tbk": 2,
"tl": 6219,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1018,
1019,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
756,
757,
758,
759,
760,
761,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
143,
144
]
},
{
"tb": 96,
"tbk": 6,
"tl": 215,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4439,
4440,
4441,
4442,
4443,
4444,
4445,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
421,
423,
424,
425,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
481,
337,
338
]
},
{
"tb": 112,
"tbk": 7,
"tl": 102,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
421,
421,
421,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 48,
"tbk": 2,
"tl": 0,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
143,
178
]
},
{
"tb": 144,
"tbk": 2,
"tl": 0,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
422,
423,
424,
425,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
481,
143,
178
]
},
{
"tb": 800,
"tbk": 4,
"tl": 13067,
"mb": 400,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3545,
3546,
3547,
3548,
3549,
1124,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 7440,
"tbk": 25,
"tl": 12,
"mb": 1152,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
421,
421,
421,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 128,
"tbk": 1,
"tl": 22,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4568,
4569,
4570,
4571,
4572,
4573,
4574,
4575,
4576,
4577,
4578,
4579,
1936,
1937,
1938,
1939,
1940,
1941,
1942,
1943,
1944,
1945,
1946,
1947,
1948,
1949,
1950,
1951,
1952,
1953,
1954,
1955,
1956,
1957,
1958,
1958,
1959,
1960,
1961,
1962,
1963,
1964,
1965,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
735
]
},
{
"tb": 4368,
"tbk": 39,
"tl": 8,
"mb": 288,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
181,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 768,
"tbk": 4,
"tl": 2752,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1086,
1087,
1088,
1089,
1090,
1091,
1092,
1093,
1094,
1095,
1096,
1097,
1098,
1099,
1097,
1100,
1101,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 160,
"tbk": 1,
"tl": 303,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1030,
1031,
1053,
1054,
1055,
737,
143,
144
]
},
{
"tb": 48,
"tbk": 2,
"tl": 0,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
422,
423,
424,
425,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
481,
143,
144
]
},
{
"tb": 320,
"tbk": 16,
"tl": 2,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
967,
968,
969,
970,
971,
972,
973,
735
]
},
{
"tb": 236,
"tbk": 2,
"tl": 14,
"mb": 236,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
1279,
1280,
1281,
1282,
1283,
1284,
1285,
1286,
1286,
1287,
1288,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
733,
734,
143,
144
]
},
{
"tb": 128,
"tbk": 1,
"tl": 156,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
913,
914,
915,
916,
736,
737,
337,
338
]
},
{
"tb": 3672,
"tbk": 4,
"tl": 235,
"mb": 2160,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2655,
2656,
2657,
2658,
2659,
2660,
2661,
2662,
2663,
2664,
2665,
2666,
2667,
2668,
2669,
2670,
2671,
2672,
2673,
2674,
2675,
2676,
2677,
2678,
2679,
2680,
2681,
2682,
2683,
2684,
2685,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42
]
},
{
"tb": 1152,
"tbk": 6,
"tl": 12971,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1086,
1087,
1088,
1089,
1090,
1091,
1092,
1093,
1094,
1095,
1096,
1097,
1098,
1099,
1097,
1100,
1101,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 96,
"tbk": 6,
"tl": 20,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
182,
182,
181,
181,
182,
182
]
},
{
"tb": 428,
"tbk": 2,
"tl": 58,
"mb": 428,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
818,
819,
820,
821,
822,
823,
824,
825,
826,
827,
828,
829,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
1017,
737,
143,
178
]
},
{
"tb": 2304,
"tbk": 28,
"tl": 3,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3430,
3431,
3432,
3433,
3434,
3435,
3436,
3437,
3438,
3439,
3440,
3441,
3442,
3443,
3444,
3442,
3445,
3446,
3447,
3448,
3449,
3450,
3451,
3452,
3453,
3447,
3448,
3454,
3455,
3456,
3457,
3458,
3459,
3460,
3461,
796,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 960,
"tbk": 5,
"tl": 5468,
"mb": 384,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
60,
61,
62,
63,
64,
65,
66,
67,
68,
2173,
2174,
2175,
2176,
2177,
2178,
2179,
2180,
2181,
2182,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 360,
"tbk": 1,
"tl": 396,
"mb": 360,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1484,
1485,
3404,
3405,
3406,
3407,
3408,
3409,
3410,
3411,
3412,
3413,
3414,
883,
337,
338
]
},
{
"tb": 524,
"tbk": 2,
"tl": 18,
"mb": 524,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
928,
929,
930,
931,
932,
933,
934,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
937,
944,
945,
946,
939,
940,
941,
947,
948,
949,
950,
951,
952,
953,
954,
733,
734,
143,
178
]
},
{
"tb": 5040,
"tbk": 28,
"tl": 19,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
421,
421,
422,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 384,
"tbk": 4,
"tl": 230336,
"mb": 288,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
1340,
1341,
1342,
1343,
1344,
1345,
1346,
1347,
1348,
1349,
1350,
1351,
1352,
1353,
1354,
1355,
1356,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42
]
},
{
"tb": 98208,
"tbk": 10,
"tl": 3717,
"mb": 49152,
"mbk": 1,
"gb": 49152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
16,
17,
18,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367
]
},
{
"tb": 1976,
"tbk": 118,
"tl": 152,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
648,
649,
650,
651,
652,
653,
654,
655,
656,
657,
658,
659,
660,
661,
662,
663,
664,
665,
666,
667,
668,
669,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 1920,
"tbk": 30,
"tl": 55,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1125,
1126,
1127,
1128,
1129,
1130,
1131,
1132,
1133,
1134,
1135,
1136,
1137,
1138,
1139,
1140,
1141,
1142,
1143,
1144,
1145,
1146,
1147,
1148,
1149,
1150,
1151,
1152,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 96,
"tbk": 2,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
183,
184,
185,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
143,
178
]
},
{
"tb": 480,
"tbk": 1,
"tl": 235,
"mb": 480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1781,
1782,
1783,
1784,
1785,
1786,
1787,
1788,
1789,
1790,
1791,
1497,
337,
338
]
},
{
"tb": 192,
"tbk": 2,
"tl": 22059,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
2043,
2044,
2045,
2046,
2047,
2048,
481,
143,
144
]
},
{
"tb": 192,
"tbk": 6,
"tl": 62,
"mb": 192,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
4299,
4300,
4301,
4302,
4302,
4303,
1451,
1452,
1453,
1454,
1455,
1456,
1457,
1458,
1459,
1460,
1461,
1462,
1463,
1017,
734,
143,
144
]
},
{
"tb": 160,
"tbk": 4,
"tl": 17970,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
768,
769,
770,
771,
772,
773,
774,
775,
776,
777,
778,
778,
779,
780,
781,
782,
783,
784,
785,
786,
787,
788,
789,
790,
791,
792,
793,
794,
795,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 96,
"tbk": 4,
"tl": 387,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
143
]
},
{
"tb": 72,
"tbk": 3,
"tl": 13,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
884,
885,
886,
887,
888,
889,
890,
891,
892,
893,
894,
895,
896,
897,
898,
899,
900,
901,
902,
903,
904,
901,
905,
906,
907,
908,
909,
910,
911,
912,
2018,
2019,
2020,
2021,
2022,
2023,
2024,
2025,
2026,
2023,
2027,
2028,
2029,
2030,
2031,
2032,
2033,
2034,
2035,
2036,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 360,
"tbk": 1,
"tl": 367,
"mb": 360,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1484,
1485,
3404,
3405,
3406,
3407,
3408,
3409,
3410,
3411,
3412,
3413,
3414,
883,
143,
144
]
},
{
"tb": 560,
"tbk": 8,
"tl": 95071,
"mb": 480,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2489,
2490,
2491,
2492,
2493,
2494,
2495,
2496,
2497,
2498,
2499,
2500,
2501,
2502,
2503,
2504,
2505,
2506,
2507,
2495,
2496,
2498,
2508,
537,
538,
539,
143,
144
]
},
{
"tb": 1152,
"tbk": 18,
"tl": 1429334,
"mb": 1152,
"mbk": 18,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
94,
95,
96,
97,
443,
444,
445,
446,
447,
448,
448,
449,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 128,
"tbk": 4,
"tl": 2248606,
"mb": 128,
"mbk": 4,
"gb": 128,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
4580,
4581,
4582,
4583,
4584,
4585,
4586,
4587,
4588,
4589,
4590,
554
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
181,
182,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 80,
"tbk": 5,
"tl": 24,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
421,
422,
421,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 400,
"tbk": 2,
"tl": 262758,
"mb": 400,
"mbk": 2,
"gb": 200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1691,
1692,
1693,
1694,
1695,
1696,
1697,
1698,
1699,
1700,
1701,
1701,
1702,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
1124,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 640,
"tbk": 8,
"tl": 598,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1381,
1382,
736,
737,
337,
338
]
},
{
"tb": 300,
"tbk": 3,
"tl": 16,
"mb": 248,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
384,
385,
386,
387,
388,
389,
390,
391,
3887,
3888,
3889,
3890,
3891,
3892,
3893,
3894,
3895,
3895,
3896,
3897,
3898,
3899,
3900,
3901,
3902,
3903,
3897,
3898,
3904,
3905,
3906,
3900,
3901,
3902,
3907,
3908,
3909,
3910,
3911,
3912,
3913,
3914,
2352
]
},
{
"tb": 256,
"tbk": 6,
"tl": 3433,
"mb": 256,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
381,
382,
1335,
143,
144
]
},
{
"tb": 63,
"tbk": 6,
"tl": 857,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3146,
3147,
3148,
3149,
3150,
3151,
2472,
2473,
2474,
2475,
2476,
2477,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647
]
},
{
"tb": 256,
"tbk": 2,
"tl": 0,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
913,
914,
3032,
3033,
3034,
3035,
3036,
3037,
3038,
3034,
3035,
3036,
3039,
221,
337,
338
]
},
{
"tb": 103280,
"tbk": 6455,
"tl": 3870,
"mb": 32,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
762,
763,
764,
765,
766,
767,
2553,
2554,
2555,
2556,
2557,
2558,
2554,
2559,
2560,
2561,
2562,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42
]
},
{
"tb": 368,
"tbk": 1,
"tl": 31807,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1056,
1057,
1058,
1059,
1060,
1061,
2173,
2174,
2175,
2176,
2177,
2178,
2179,
2180,
2181,
2182,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
2563,
2564,
2565,
2566,
2567,
2568,
2569,
2570,
2571,
40,
41,
42
]
},
{
"tb": 20,
"tbk": 1,
"tl": 19,
"mb": 20,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4591,
4592,
4593,
4594,
4595,
4596,
4597,
4598,
4599,
4600,
1936,
1937,
1938,
1939,
1940,
1941,
1942,
1943,
1944,
1945,
1946,
1947,
1948,
1949,
1950,
1951,
1952,
1953,
1954,
1955,
1956,
1957,
1958,
1958,
1959,
1960,
1961,
1962,
1963,
1964,
1965,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
735
]
},
{
"tb": 432,
"tbk": 6,
"tl": 580,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
181,
181,
182,
182,
181,
182
]
},
{
"tb": 4760,
"tbk": 119,
"tl": 29502,
"mb": 720,
"mbk": 18,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2368,
2369,
2370,
2371,
2372,
2373,
2374,
2375,
2376,
2111,
2112,
2113,
2114,
2115,
2116,
2117,
2118,
2119,
2120,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 1920,
"tbk": 30,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1125,
1126,
1127,
1128,
1129,
1130,
1131,
1132,
1133,
1134,
1135,
1136,
1137,
4125,
4126,
4127,
4128,
4129,
4130,
4131,
4132,
4133,
4134,
4135,
4136,
4137,
4138,
4139,
4140,
4141,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 256,
"tbk": 4,
"tl": 42,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2509,
2510,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 480,
"tbk": 10,
"tl": 4,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143
]
},
{
"tb": 1152,
"tbk": 9,
"tl": 65801,
"mb": 1152,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
1062,
1063,
1064,
1065,
1066,
1067,
1068,
1069,
1070,
1071,
1072,
1073,
1074,
1075,
1076,
1077,
1078,
1079,
1069,
1070,
1071,
1080,
1081,
1082,
1083,
1084,
1085,
481,
143,
178
]
},
{
"tb": 120,
"tbk": 1,
"tl": 18293,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
527,
528,
529,
530,
531,
532,
533,
534,
535,
536,
2835,
2836,
2837,
143,
178
]
},
{
"tb": 240,
"tbk": 6,
"tl": 8,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
708,
709,
710,
711,
712,
713,
714,
715,
716,
717,
718,
719,
720,
721,
722,
723,
724,
725,
726,
727,
728,
729,
730,
731,
716,
732,
736,
734,
143,
178
]
},
{
"tb": 3312,
"tbk": 9,
"tl": 319955,
"mb": 1472,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
437,
438,
439,
440,
441,
442,
2173,
2174,
2175,
2176,
2177,
2178,
2179,
2180,
2181,
2182,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 80,
"tbk": 2,
"tl": 5,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
708,
709,
710,
711,
712,
713,
714,
715,
716,
717,
718,
719,
720,
721,
722,
723,
724,
725,
726,
727,
728,
729,
730,
731,
716,
732,
917,
734,
143,
144
]
},
{
"tb": 300,
"tbk": 3,
"tl": 25,
"mb": 248,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
384,
385,
386,
387,
388,
389,
390,
391,
1549,
1550,
1551,
1552,
1553,
1554,
1555,
1556,
1556,
1557,
1558,
1559,
1560,
1561,
1562,
1563,
1564,
1558,
1559,
1565,
1566,
1567,
1561,
1562,
1563,
1568,
1569,
1570,
1571,
1572,
1573,
1574,
178
]
},
{
"tb": 1472,
"tbk": 4,
"tl": 12456,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
437,
438,
439,
440,
441,
442,
756,
757,
758,
759,
760,
761,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
337,
338
]
},
{
"tb": 240,
"tbk": 5,
"tl": 101,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
421,
421,
421,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 236,
"tbk": 2,
"tl": 17,
"mb": 236,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
1279,
1280,
1281,
1282,
1283,
1284,
1285,
1286,
1286,
1287,
1288,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
917,
737,
143,
178
]
},
{
"tb": 640,
"tbk": 14,
"tl": 16,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1575,
1576,
1577,
1578,
1579,
1580,
1581,
1582,
1583,
1584,
1585,
1586,
1587,
1588,
1589,
1590,
1591,
1592,
1593,
1594,
1595,
1583,
1596,
1597,
1598,
1599,
288
]
},
{
"tb": 40,
"tbk": 1,
"tl": 562241,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
4601,
4602,
4603,
4604,
4605,
4606,
4607,
4608
]
},
{
"tb": 2112,
"tbk": 11,
"tl": 7321,
"mb": 384,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
60,
61,
62,
63,
64,
65,
66,
67,
68,
2173,
2174,
2175,
2176,
2177,
2178,
2179,
2180,
2181,
2182,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 168,
"tbk": 2,
"tl": 0,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3430,
3431,
3432,
3433,
3434,
3435,
3436,
3437,
3438,
3439,
3440,
3441,
3442,
3443,
3444,
3442,
3445,
3946,
3947,
3948,
3949,
3950,
3951,
3952,
3953,
3947,
3948,
3954,
3955,
3956,
3957,
3958,
3959,
3960,
3961,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 240,
"tbk": 10,
"tl": 24,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
422,
422,
421,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 40,
"tbk": 1,
"tl": 174,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
768,
769,
770,
771,
772,
773,
774,
775,
776,
777,
778,
778,
779,
1851,
1852,
1853,
1854,
1855,
1856,
1857,
1858,
1859,
1860,
1861,
1862,
1863,
1864,
1865,
1866,
177,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 720,
"tbk": 15,
"tl": 12,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
181,
181,
181,
182,
181,
182
]
},
{
"tb": 200,
"tbk": 1,
"tl": 123900,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1691,
1692,
1693,
1694,
1695,
1696,
1697,
1698,
1699,
1700,
1701,
1701,
1702,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 2592,
"tbk": 36,
"tl": 18,
"mb": 144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
181,
181,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 576,
"tbk": 5,
"tl": 358098,
"mb": 576,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
3915,
3916,
3917,
3918,
3919,
3920,
3921,
3922,
3923,
3924,
3925,
3926,
3927,
3928,
3929,
3930,
3931,
3932,
3933,
3934,
3935,
3936,
3937,
3938,
3939,
3930,
3931,
3933,
3940,
841,
178
]
},
{
"tb": 192,
"tbk": 6,
"tl": 1526,
"mb": 192,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
1464,
1465,
1055,
734,
143,
144
]
},
{
"tb": 128,
"tbk": 4,
"tl": 237,
"mb": 128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2320,
2321,
2322,
2323,
2324,
2325,
2326,
2327,
2328,
2329,
2330,
2331,
2332,
2333,
2334,
2335,
2336,
2337,
2338,
2339,
2340,
2341,
2342,
2343,
2344,
2345,
2346,
2347,
2338,
2339,
2341,
2348,
1017,
737,
337,
338
]
},
{
"tb": 360,
"tbk": 1,
"tl": 1827,
"mb": 360,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1484,
1485,
3404,
3405,
3406,
3407,
3408,
3409,
3410,
3411,
3412,
3413,
3414,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
2352
]
},
{
"tb": 1216,
"tbk": 14,
"tl": 1,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
482,
483,
484,
485,
486,
487,
488,
489,
490,
491,
492,
493,
490,
494,
495,
496,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
337,
338
]
},
{
"tb": 768,
"tbk": 6,
"tl": 354908,
"mb": 768,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
4446,
4447,
4448,
4449,
4450,
4451,
4452,
4453,
4454,
4455,
4456,
4457,
4458,
4459,
4460,
4448,
4449,
4450,
4451,
4452,
4453,
4454,
4455,
4456,
4458,
4461,
565,
566,
567,
143,
178
]
},
{
"tb": 52,
"tbk": 1,
"tl": 0,
"mb": 52,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4609,
4610,
4611,
4612,
4613,
4614,
4615,
4616,
4617,
4618,
4619,
4620,
4621,
4622,
4623,
4624,
4625,
4626,
4627,
4628,
4629
]
},
{
"tb": 241984,
"tbk": 103,
"tl": 1467652,
"mb": 43136,
"mbk": 6,
"gb": 43136,
"gbk": 6,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1792,
1793,
3124,
3125,
3126,
3127,
3128,
3129,
3130,
3131,
3132,
3133,
3134,
3135,
3136,
3137,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 888,
"tbk": 6,
"tl": 306,
"mb": 888,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
4630,
4631,
4632,
4633,
4634,
4635,
4636,
4637,
4638,
4639,
4640,
4641,
4638,
4642,
4643,
4644,
4645,
4646,
4647,
4648,
4649,
4650,
4651,
2352
]
},
{
"tb": 1536,
"tbk": 24,
"tl": 74456,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
94,
95,
96,
97,
756,
757,
758,
759,
760,
761,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
337,
338
]
},
{
"tb": 368,
"tbk": 1,
"tl": 221954,
"mb": 368,
"mbk": 1,
"gb": 368,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
437,
438,
439,
440,
441,
442,
443,
444,
445,
446,
447,
448,
448,
449,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 864,
"tbk": 18,
"tl": 15,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
181,
181,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 600,
"tbk": 3,
"tl": 1686472,
"mb": 600,
"mbk": 3,
"gb": 600,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
3160,
3161,
3162,
3163,
3164,
3165,
3166,
3167,
3168,
3169,
3170,
3171,
3172,
3173,
3174,
3175,
3176,
3177,
554
]
},
{
"tb": 2636,
"tbk": 8,
"tl": 16900,
"mb": 824,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
197,
198,
199,
200,
201,
202,
203,
204,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
178
]
},
{
"tb": 1472,
"tbk": 82,
"tl": 2023,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
762,
763,
4545,
4546,
4547,
4548,
2553,
2554,
2555,
2556,
2557,
2558,
2554,
2559,
2560,
2561,
2562,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 768,
"tbk": 4,
"tl": 2810,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2603,
2604,
2605,
2606,
2607,
2608,
2609,
2610,
2611,
2612,
3299,
3300,
3301,
3302,
3300,
3303,
3304,
981,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 360,
"tbk": 1,
"tl": 366,
"mb": 360,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1781,
1782,
1783,
1784,
1785,
1786,
1787,
1788,
1789,
1790,
1791,
883,
143,
144
]
},
{
"tb": 384,
"tbk": 3,
"tl": 735,
"mb": 384,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
381,
382,
1055,
734,
143,
144
]
},
{
"tb": 32,
"tbk": 1,
"tl": 35,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
844,
845,
846,
847,
847,
848,
849,
850,
851,
852,
853,
854,
855,
849,
850,
856,
857,
858,
852,
853,
854,
859,
860,
861,
862,
863,
864,
865,
2352
]
},
{
"tb": 4032,
"tbk": 36,
"tl": 4093,
"mb": 432,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
182,
182,
181,
182,
181,
181
]
},
{
"tb": 720,
"tbk": 10,
"tl": 11,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
422,
421,
421,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 192,
"tbk": 6,
"tl": 55,
"mb": 192,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
4299,
4300,
4301,
4302,
4302,
4303,
1451,
1452,
1453,
1454,
1455,
1456,
1457,
1458,
1459,
1460,
1461,
1462,
1463,
1017,
734,
337,
338
]
},
{
"tb": 3168,
"tbk": 31,
"tl": 2,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3430,
3431,
3432,
3433,
3434,
3435,
3436,
3437,
3438,
3439,
3440,
3441,
3442,
3443,
3444,
3442,
3445,
3446,
3447,
3448,
3449,
3450,
3451,
3452,
3453,
3447,
3448,
3454,
3455,
3456,
3457,
3458,
3459,
3460,
3461,
177,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 144,
"tbk": 3,
"tl": 2,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
181,
182,
181,
182,
182,
182
]
},
{
"tb": 2208,
"tbk": 6,
"tl": 18650,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
437,
438,
439,
440,
441,
442,
756,
757,
758,
759,
760,
761,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
178
]
},
{
"tb": 1196,
"tbk": 5,
"tl": 64,
"mb": 896,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
384,
385,
386,
387,
388,
389,
390,
391,
1549,
1550,
1551,
1552,
1553,
1554,
1555,
1556,
1556,
1557,
1558,
1559,
1560,
1561,
1562,
1563,
1564,
1558,
1559,
1565,
1566,
1567,
1561,
1562,
1563,
1568,
1569,
1570,
1571,
3710,
3711,
3712,
3713
]
},
{
"tb": 576,
"tbk": 4,
"tl": 12468,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
94,
95,
96,
97,
756,
757,
758,
759,
760,
761,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143,
178
]
},
{
"tb": 240,
"tbk": 5,
"tl": 38,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
422,
422,
422,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 144,
"tbk": 3,
"tl": 2,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
182,
182,
181,
181,
182,
181
]
},
{
"tb": 1296,
"tbk": 9,
"tl": 1092424,
"mb": 1296,
"mbk": 9,
"gb": 864,
"gbk": 6,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
1213,
1214,
1215,
1216,
1217,
1218,
1219,
1220,
1221,
1222,
1223,
1224,
1225,
1226,
1227,
1228,
1229,
1230,
481,
337,
338
]
},
{
"tb": 768,
"tbk": 6,
"tl": 245000,
"mb": 640,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
738,
739,
740,
741,
742,
743,
744,
4178,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 256,
"tbk": 4,
"tl": 11,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
974,
975,
976,
977,
978,
976,
979,
980,
1124,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 4208,
"tbk": 258,
"tl": 496,
"mb": 176,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
648,
649,
650,
651,
652,
653,
654,
655,
656,
657,
658,
659,
660,
661,
662,
663,
664,
665,
666,
1906,
1907,
1908,
1909,
1910,
1911,
1912,
1913,
1914,
1915,
1916,
1917,
1918,
1919,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 180,
"tbk": 1,
"tl": 97,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
3735,
3736,
3737,
3738,
3739,
3740,
3741,
3741,
3742,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 256,
"tbk": 4,
"tl": 10,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2814,
2815,
2816,
2817,
2818,
3462,
3463,
3464,
3465,
3466,
3464,
3467,
3468,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 14400,
"tbk": 30,
"tl": 2375,
"mb": 480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1752,
1753,
1754,
1755,
1756,
1757,
1758,
3723,
3724,
3725,
3726,
3727,
3728,
3729,
3730,
3731,
3732,
3733,
3734,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 368,
"tbk": 1,
"tl": 112703,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
437,
438,
439,
440,
441,
442,
98,
99,
100,
101,
102,
103,
103,
104,
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1980,
1981,
1982,
1983,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 4060,
"tbk": 35,
"tl": 722,
"mb": 696,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4283,
4284,
4285,
4286,
4287,
4288,
4289,
4290,
4291,
4292,
4293,
4294,
4295,
4296,
2416,
2417,
2418,
2419,
2420,
2421,
2422,
2423,
2424,
2425,
2426,
2427,
2428,
2429,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 64,
"tbk": 8,
"tl": 157,
"mb": 64,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1679,
1680,
1681,
1682,
1681,
1683,
1684,
1685,
1686,
1687,
1688,
1689,
1690,
1017,
737,
143,
144
]
},
{
"tb": 576,
"tbk": 6,
"tl": 13150,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
3336,
3337,
3338,
3339,
3340,
3341,
3342,
3343,
3344,
3345,
3346,
3347,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 896,
"tbk": 6,
"tl": 91896,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4652,
4653,
745,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 120,
"tbk": 1,
"tl": 18503,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
527,
528,
529,
530,
531,
532,
533,
534,
535,
536,
2835,
2836,
2837,
337,
338
]
},
{
"tb": 253792,
"tbk": 4,
"tl": 640,
"mb": 135360,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
2760,
2761,
2762,
2763,
2764,
2765,
2766,
2767,
3002,
3003,
3004,
2087,
2088,
2089,
2090
]
},
{
"tb": 80,
"tbk": 5,
"tl": 148,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
422,
422,
422,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 400,
"tbk": 2,
"tl": 7984,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1119,
1120,
1121,
1122,
1123,
981,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 48,
"tbk": 3,
"tl": 10,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
181,
182,
182,
182,
181,
183,
184,
185
]
},
{
"tb": 480,
"tbk": 1,
"tl": 224,
"mb": 480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1781,
1782,
1783,
1784,
1785,
1786,
1787,
1788,
1789,
1790,
1791,
1497,
143,
178
]
},
{
"tb": 24384,
"tbk": 21,
"tl": 33492,
"mb": 8192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3040,
3041,
3042,
3043,
3044,
3045,
3046,
3047,
3048,
3049,
3050,
3051,
3048,
3052,
3053,
3054,
3055,
3056,
3057,
3058,
3059,
2018,
2019,
2020,
2021,
2022,
2023,
2024,
2025,
2026,
2023,
2027,
2028,
2029,
2030,
2031,
2032,
2033,
2034,
2035,
2036,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 80,
"tbk": 2,
"tl": 10340,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1163,
1164,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 64,
"tbk": 2,
"tl": 27,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
3617,
3618,
3619,
3620,
1017,
734,
143,
144
]
},
{
"tb": 1888,
"tbk": 39,
"tl": 18,
"mb": 264,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
181,
182,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 400,
"tbk": 2,
"tl": 216711,
"mb": 200,
"mbk": 1,
"gb": 200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1717,
1718,
1719,
1720,
1721,
1722,
1723,
1724,
1725,
1726,
1727,
1727,
1728,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
1124,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 824,
"tbk": 2,
"tl": 44,
"mb": 824,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
3784,
3785,
3786,
3787,
3788,
3789,
3790,
3791,
3791,
3792,
3793,
3794,
3795,
3796,
3797,
3798,
3799,
3793,
3794,
3800,
3801,
3802,
3796,
3797,
3798,
3803,
3804,
3805,
3806,
3807,
3808,
3809,
288
]
},
{
"tb": 360,
"tbk": 2,
"tl": 13,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
928,
929,
930,
931,
932,
933,
934,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
937,
944,
945,
946,
939,
940,
941,
947,
948,
949,
950,
951,
952,
953,
954,
917,
734,
143,
178
]
},
{
"tb": 64,
"tbk": 2,
"tl": 159977,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2883,
2884,
2885,
2886,
2887,
2888,
2889,
2890,
2891,
2892,
2893,
2894,
2895,
2896,
2897,
2898,
2899,
2900,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 128,
"tbk": 1,
"tl": 108,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
913,
914,
915,
916,
736,
734,
143,
144
]
},
{
"tb": 1680,
"tbk": 6,
"tl": 12430,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4507,
4508,
4509,
4510,
4511,
4512,
4513,
4514,
4515,
4516,
4517,
4518,
4519,
4520,
4521,
4522,
4523,
4524,
4525,
4526,
4527,
4528,
4529,
4530,
4531,
4532,
4533,
4534,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 95568,
"tbk": 3,
"tl": 136,
"mb": 60816,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
290,
291,
2697,
2698,
2699,
2700,
2701,
2702,
1876,
1877,
1878,
2651,
2652,
2653,
2654
]
},
{
"tb": 224,
"tbk": 6,
"tl": 3640,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2146,
2147,
2148,
2149,
2150,
2151,
2152,
3373,
3374,
3375,
3376,
3377,
3378,
3379,
3380,
1269,
1270,
1271,
1272,
1273,
1274,
1275,
1276,
1277,
1278,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 560,
"tbk": 8,
"tl": 341212,
"mb": 480,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3066,
3067,
3068,
3069,
3070,
3071,
3072,
3073,
3074,
3075,
3076,
3077,
3078,
3079,
3080,
3081,
3082,
3083,
3084,
3072,
3073,
3075,
3085,
565,
566,
567,
143,
144
]
},
{
"tb": 33984,
"tbk": 92,
"tl": 410236,
"mb": 4096,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3040,
3041,
3042,
3043,
3044,
3045,
3046,
3047,
3048,
3049,
3050,
3051,
3048,
3052,
3053,
3054,
3055,
3056,
3057,
3058,
3059,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 7032,
"tbk": 29,
"tl": 333904,
"mb": 1584,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3657,
3658,
3659,
3660,
3661,
3662,
3663,
3664,
3665,
3666,
3667,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 60720,
"tbk": 4,
"tl": 184,
"mb": 26064,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2868,
2869,
2870,
2871,
2872,
2873,
2874,
2875,
2876,
2877,
2878,
2879,
2880,
2881,
2882,
2651,
2652,
2653,
2654
]
},
{
"tb": 1328,
"tbk": 1,
"tl": 15,
"mb": 1328,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
1383,
1384,
1385,
1386,
1387,
1388,
1389,
1390,
1391,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
2352
]
},
{
"tb": 1728,
"tbk": 5,
"tl": 93,
"mb": 840,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2655,
2656,
2657,
2658,
2659,
2660,
2661,
2662,
2663,
2664,
2665,
2666,
2667,
2668,
2669,
2670,
2671,
2672,
2673,
2004,
2005,
2006,
2007,
2008,
2009,
2010,
2011,
2012,
2013,
2014,
2015,
2016,
2017,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42
]
},
{
"tb": 17728,
"tbk": 202,
"tl": 2283,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
797,
798,
799,
800,
801,
4084,
803,
804,
805,
806,
807,
808,
809,
810,
811,
812,
813,
814,
815,
816,
817,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 48,
"tbk": 3,
"tl": 10,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
182,
181,
182,
182,
182,
181
]
},
{
"tb": 180,
"tbk": 1,
"tl": 100,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2968,
2969,
2970,
2971,
2972,
2973,
2974,
2975,
2976,
2977,
2978,
2979,
2980,
2981,
2982,
2982,
2983,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
177,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 560,
"tbk": 15,
"tl": 9,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
421,
422,
421,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 128,
"tbk": 8,
"tl": 16,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1404,
1405,
1406,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
337,
338
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1404,
1405,
1406,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
481,
143,
144
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42
]
},
{
"tb": 120,
"tbk": 3,
"tl": 15,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1407,
1408,
1409,
1410,
1411,
1412,
1413,
1414,
1415,
1416,
1417,
1418,
1419,
1420,
1421,
1422,
1423,
1424,
1425,
1426,
1305,
1306,
1307,
733,
734,
143,
178
]
},
{
"tb": 640,
"tbk": 8,
"tl": 582,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1381,
1382,
736,
734,
143,
178
]
},
{
"tb": 60720,
"tbk": 1,
"tl": 372414,
"mb": 60720,
"mbk": 1,
"gb": 60720,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
290,
291,
2697,
2698,
2699,
2700,
2701,
2702,
4466,
4467,
4468,
4469
]
},
{
"tb": 864,
"tbk": 36,
"tl": 16,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
182,
182,
182,
181,
182,
181
]
},
{
"tb": 368,
"tbk": 1,
"tl": 2797,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
437,
438,
439,
440,
441,
442,
98,
99,
100,
101,
102,
103,
103,
104,
105,
106,
107,
108,
109,
110,
111,
112,
113,
114,
115,
116,
117,
118,
119,
120,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 604,
"tbk": 4,
"tl": 68,
"mb": 464,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
384,
385,
386,
387,
388,
389,
390,
391,
2444,
2445,
2446,
2447,
2448,
2449,
2450,
2451,
2452,
2452,
2453,
2454,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
736,
734,
337,
338
]
},
{
"tb": 320,
"tbk": 4,
"tl": 5,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1381,
1382,
917,
734,
143,
178
]
},
{
"tb": 128,
"tbk": 1,
"tl": 1507,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
1729,
1730,
1731,
1732,
1733,
1734,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
1266,
1267,
1268,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
1266,
1267,
1268,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
3421,
3422,
3423,
3424,
3425,
3426,
3427,
3428,
3429
]
},
{
"tb": 4176,
"tbk": 24,
"tl": 35549,
"mb": 1152,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2217,
2218,
2219,
2220,
2221,
2222,
2223,
2224,
2225,
2226,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 16,
"tbk": 2,
"tl": 5,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2272,
2273,
2274,
2275,
1017,
734,
143,
178
]
},
{
"tb": 214656,
"tbk": 33,
"tl": 165433,
"mb": 101376,
"mbk": 3,
"gb": 101376,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
2049,
2050,
2051,
2052,
2053,
2054,
2055,
2056,
2057,
2058,
2059,
2060,
2061,
2062,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39
]
},
{
"tb": 432,
"tbk": 3,
"tl": 238253,
"mb": 432,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
94,
95,
96,
97,
443,
444,
445,
446,
447,
448,
448,
449,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 80,
"tbk": 5,
"tl": 15,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
421,
423,
424,
425,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
178
]
},
{
"tb": 344,
"tbk": 1,
"tl": 10,
"mb": 344,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
4654,
4655,
4656,
4657,
4658,
4659,
4660,
4661,
4662,
4663,
4664,
4665,
4666,
4667,
554
]
},
{
"tb": 48,
"tbk": 1,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
337,
338
]
},
{
"tb": 2592,
"tbk": 18,
"tl": 17442,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
3138,
3139,
3140,
3141,
3142,
3143,
3144,
3145,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 576,
"tbk": 5,
"tl": 127999,
"mb": 576,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
4446,
4447,
4448,
4449,
4450,
4451,
4452,
4453,
4454,
4455,
4456,
4457,
4458,
4459,
4460,
4448,
4449,
4450,
4451,
4452,
4453,
4454,
4455,
4456,
4458,
4461,
3086,
3087,
3088,
337,
338
]
},
{
"tb": 384,
"tbk": 2,
"tl": 5241,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3989,
3990,
4262,
4263,
4264,
4265,
4266,
4267,
1096,
1097,
1098,
1099,
1097,
1100,
1101,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 240,
"tbk": 5,
"tl": 4,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
181,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 96,
"tbk": 2,
"tl": 10034,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
146,
147,
148,
149,
150,
151,
152,
153,
154,
155,
156,
157,
158,
159,
159,
160,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 240,
"tbk": 5,
"tl": 2,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
337,
338
]
},
{
"tb": 128,
"tbk": 1,
"tl": 220,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
913,
914,
915,
916,
733,
734,
143,
178
]
},
{
"tb": 2072,
"tbk": 14,
"tl": 1392,
"mb": 2072,
"mbk": 14,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
2301,
2302,
2303,
2304,
2305,
2306,
2307,
2308,
2309,
2310,
2311,
2312,
2309,
2313,
2314,
2315,
2316,
2317,
2318,
2319,
1481,
1482,
1483,
144
]
},
{
"tb": 240,
"tbk": 6,
"tl": 484532,
"mb": 200,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4668,
4669,
4670,
4671,
4672,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 1680,
"tbk": 45,
"tl": 15,
"mb": 128,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
181,
182,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 576,
"tbk": 5,
"tl": 46277,
"mb": 576,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2814,
2815,
2816,
2817,
2818,
2819,
2820,
2821,
2822,
2823,
2824,
2825,
2826,
2827,
2828,
2829,
2830,
2831,
2832,
2833,
2821,
2822,
2823,
2824,
2825,
2826,
2827,
2828,
2829,
2831,
2834,
2835,
2836,
2837,
337,
338
]
},
{
"tb": 256,
"tbk": 4,
"tl": 39,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4195,
4196,
1124,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 540,
"tbk": 3,
"tl": 465,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2968,
2969,
2970,
2971,
2972,
2973,
2974,
2975,
2976,
2977,
2978,
2979,
2980,
2981,
2982,
2982,
2983,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
796,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 428,
"tbk": 2,
"tl": 19,
"mb": 428,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
1442,
1443,
1444,
1445,
1446,
1447,
1448,
1449,
1449,
1450,
1451,
1452,
1453,
1454,
1455,
1456,
1457,
1458,
1459,
1460,
1461,
1462,
1463,
1017,
734,
337,
338
]
},
{
"tb": 600,
"tbk": 3,
"tl": 240260,
"mb": 600,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1691,
1692,
1693,
1694,
1695,
1696,
1697,
1698,
1699,
1700,
1701,
1701,
1702,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 368,
"tbk": 1,
"tl": 221953,
"mb": 368,
"mbk": 1,
"gb": 368,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1056,
1057,
1058,
1059,
1060,
1061,
443,
444,
445,
446,
447,
448,
448,
449,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 288,
"tbk": 1,
"tl": 0,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3430,
3431,
3432,
3433,
3434,
3435,
3436,
3437,
3438,
3439,
3440,
3441,
3442,
3443,
3444,
3442,
3445,
3946,
3947,
3948,
3949,
3950,
3951,
3952,
3953,
3947,
3948,
3954,
3955,
3956,
3957,
3958,
3959,
3960,
3961,
177,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 160,
"tbk": 4,
"tl": 18,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1407,
1408,
1409,
1410,
1411,
1412,
1413,
1414,
1415,
1416,
1417,
1418,
1419,
1420,
1421,
1422,
1423,
1424,
1425,
1426,
1305,
1306,
1307,
917,
737,
143,
178
]
},
{
"tb": 2848,
"tbk": 24,
"tl": 6389,
"mb": 352,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
3060,
3061,
3062,
3063,
3064,
3065,
1539,
1540,
1541,
1542,
1543,
1544,
1545,
1546,
1547,
1548,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 1196,
"tbk": 3,
"tl": 36,
"mb": 1016,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
928,
929,
930,
931,
932,
933,
934,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
937,
944,
945,
946,
939,
940,
941,
947,
948,
949,
950,
951,
952,
953,
954,
736,
734,
337,
338
]
},
{
"tb": 5992,
"tbk": 10,
"tl": 115,
"mb": 1312,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2403,
2404,
2405,
2406,
2407,
2408,
2409,
2410,
2411,
2412,
2413,
2414,
2415,
2416,
2417,
2418,
2419,
2420,
2421,
2422,
2423,
2424,
2425,
2426,
2427,
2428,
2429,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 864,
"tbk": 18,
"tl": 10,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
182,
181,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 1758480,
"tbk": 4,
"tl": 368,
"mb": 998400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
1867,
1868,
1869,
1870,
1871,
1872,
1873,
1874,
1875,
1876,
1877,
1878,
2399,
2400,
2401,
2402
]
},
{
"tb": 1840,
"tbk": 5,
"tl": 172128,
"mb": 1104,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
437,
438,
439,
440,
441,
442,
2173,
2174,
2175,
2176,
2177,
2178,
2179,
2180,
2181,
2182,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 200,
"tbk": 1,
"tl": 53996,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1691,
1692,
1693,
1694,
1695,
1696,
1697,
1698,
1699,
1700,
1701,
1701,
1702,
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1980,
1981,
1982,
1983,
981,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 40480,
"tbk": 4,
"tl": 176,
"mb": 17376,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2939,
2940,
2941,
2942,
2943,
2944,
2945,
2946,
2947,
2948,
2949,
2950,
2951,
2952,
2953,
2651,
2652,
2653,
2654
]
},
{
"tb": 600,
"tbk": 3,
"tl": 278878,
"mb": 600,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1691,
1692,
1693,
1694,
1695,
1696,
1697,
1698,
1699,
1700,
1701,
1701,
1702,
105,
106,
107,
108,
109,
110,
111,
112,
113,
114,
115,
116,
117,
118,
119,
120,
981,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 288,
"tbk": 6,
"tl": 3,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
182,
182,
181,
181,
182,
183,
184,
185
]
},
{
"tb": 672,
"tbk": 1,
"tl": 1021,
"mb": 672,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
874,
875,
876,
877,
878,
879,
880,
881,
882,
1497,
337,
338
]
},
{
"tb": 180,
"tbk": 1,
"tl": 92,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
3735,
3736,
3737,
3738,
3739,
3740,
3741,
3741,
3742,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 576,
"tbk": 12,
"tl": 9,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
181,
181,
182,
181,
182,
182
]
},
{
"tb": 440,
"tbk": 2,
"tl": 14549,
"mb": 440,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
467,
468,
469,
470,
471,
472,
473,
474,
475,
476,
477,
478,
479,
480,
481,
143,
144
]
},
{
"tb": 192,
"tbk": 12,
"tl": 43,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
181,
181,
182,
181,
182,
182
]
},
{
"tb": 96,
"tbk": 2,
"tl": 1641,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2146,
2147,
2148,
2149,
2150,
2151,
2152,
1531,
1532,
1533,
1534,
1535,
1536,
1537,
1538,
2153,
2154,
2155,
2156,
2157,
2158,
2159,
2160,
2161,
2162,
2163,
2153,
2154,
2155,
2156,
2157,
2158,
2159,
2160,
2161,
2162,
2163,
1539,
1540,
1541,
1542,
1543,
1544,
1545,
1546,
1547,
1548,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 640,
"tbk": 4,
"tl": 2145,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1484,
1485,
2091,
2092,
2093,
2094,
2095,
2096,
2097,
2098,
2099,
2100,
2101,
2102,
2103,
2104,
2105,
2106,
2107,
2108,
2109,
2110,
3178,
3179,
3180,
3181,
3182,
3183,
3184,
3185,
3186,
3187,
3188,
3505,
3506,
3507,
3508,
3509,
3510,
3511,
3512,
3513,
3514,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 240,
"tbk": 5,
"tl": 4,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
181,
182,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 288,
"tbk": 1,
"tl": 31,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
2736,
2737,
2738,
2739,
2740,
2741,
2742,
2743,
2743,
2744,
2745,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
917,
737,
143,
144
]
},
{
"tb": 80,
"tbk": 5,
"tl": 14,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
181,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 160,
"tbk": 1,
"tl": 85,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1484,
1485,
2091,
2092,
2093,
2094,
2095,
2096,
2097,
2098,
2099,
2100,
2101,
2102,
2103,
2104,
2105,
2106,
2107,
2108,
2109,
2110,
2111,
2112,
2113,
2114,
2115,
2116,
2117,
2118,
2119,
2120,
40,
41,
42,
2590,
2591,
2161,
2162,
2163
]
},
{
"tb": 896,
"tbk": 6,
"tl": 9996,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3714,
3715,
3716,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 192,
"tbk": 8,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
182,
183,
184,
185,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
143
]
},
{
"tb": 864,
"tbk": 6,
"tl": 18623,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
94,
95,
96,
97,
756,
757,
758,
759,
760,
761,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
178
]
},
{
"tb": 1296,
"tbk": 18,
"tl": 36,
"mb": 144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 384,
"tbk": 6,
"tl": 736894,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
94,
95,
96,
97,
443,
444,
445,
446,
447,
448,
448,
449,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 336,
"tbk": 7,
"tl": 23,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42
]
},
{
"tb": 1344,
"tbk": 12,
"tl": 16546,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143,
178
]
},
{
"tb": 288,
"tbk": 6,
"tl": 2,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143
]
},
{
"tb": 604,
"tbk": 4,
"tl": 76,
"mb": 464,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
384,
385,
386,
387,
388,
389,
390,
391,
2444,
2445,
2446,
2447,
2448,
2449,
2450,
2451,
2452,
2452,
2453,
2454,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
736,
734,
143,
144
]
},
{
"tb": 2097072,
"tbk": 139,
"tl": 321340,
"mb": 294912,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1637,
2294,
2295,
2296,
2297,
2298,
2299,
2300,
805,
806,
807,
808,
809,
810,
811,
812,
813,
814,
815,
816,
817,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42
]
},
{
"tb": 2960,
"tbk": 20,
"tl": 2510,
"mb": 2960,
"mbk": 20,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
4630,
4631,
4632,
4633,
4634,
4635,
4636,
4637,
4638,
4639,
4640,
4641,
4638,
4642,
4643,
4644,
4645,
4646,
4647,
4648,
4649,
4650,
4651,
288
]
},
{
"tb": 360,
"tbk": 1,
"tl": 33812,
"mb": 360,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1484,
1485,
1486,
1487,
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
418
]
},
{
"tb": 3456,
"tbk": 9,
"tl": 283277,
"mb": 3456,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2519,
2520,
2521,
2522,
2523,
2524,
2525,
2526,
2527,
2528,
2529,
2530,
2531,
2532,
2533,
2534,
2535,
2536,
2537,
2538,
2539,
2540,
481,
143,
144
]
},
{
"tb": 4060,
"tbk": 35,
"tl": 617,
"mb": 696,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4283,
4284,
4285,
4286,
4287,
4288,
4289,
4290,
4291,
4292,
4293,
4294,
4295,
4296,
3348,
3349,
3350,
3351,
3352,
3353,
3354,
3355,
3356,
3357,
3358,
3359,
3360,
3361,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 40,
"tbk": 1,
"tl": 76,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4376,
4377,
4378,
4379,
4380,
4381,
4382,
4383,
4384,
4385,
4386,
4387,
81
]
},
{
"tb": 80,
"tbk": 2,
"tl": 1124376,
"mb": 80,
"mbk": 2,
"gb": 80,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
1600,
1601,
1602,
1603,
1604,
1605,
1606,
1607,
1608,
2798,
2799,
2800,
2801,
2802,
2803,
2804,
2805,
1617,
1618,
1619,
1620,
1621,
1622,
1623,
1624,
1625,
1626,
1627,
1628,
1629,
1630,
1631,
1632,
1633,
1618,
1619,
1620,
1621,
1622,
1623,
1624,
1628,
1634,
1635,
1636,
554
]
},
{
"tb": 240,
"tbk": 5,
"tl": 2,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
422,
423,
424,
425,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
178
]
},
{
"tb": 432,
"tbk": 3,
"tl": 436750,
"mb": 432,
"mbk": 3,
"gb": 288,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
94,
95,
96,
97,
443,
444,
445,
446,
447,
448,
448,
449,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 896,
"tbk": 6,
"tl": 91552,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4652,
4653,
745,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 31936,
"tbk": 499,
"tl": 5721,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2227,
2228,
2229,
2230,
2231,
2232,
2233,
2234,
2235,
2236,
2237,
2238,
2239,
2240,
2241,
2242,
2243,
2244,
2245,
2246,
2247,
2248,
2238,
2249,
2240,
2241,
2242,
2243,
2244,
2250,
2246,
2247,
2251,
2252,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 64,
"tbk": 2,
"tl": 579,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
1464,
1465,
1055,
737,
143,
144
]
},
{
"tb": 80,
"tbk": 5,
"tl": 18,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
181,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 864,
"tbk": 3,
"tl": 13224,
"mb": 864,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
146,
147,
148,
149,
150,
151,
152,
153,
154,
155,
156,
157,
158,
159,
159,
160,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
796,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 192,
"tbk": 2,
"tl": 69,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
3915,
3916,
3917,
3918,
3919,
3920,
3921,
3922,
3923,
3924,
3925,
3926,
3927,
3928,
3929,
3930,
3931,
3932,
3933,
3934,
3935,
3936,
3937,
3938,
3939,
3930,
3931,
3933,
3940,
1017,
734,
143,
144
]
},
{
"tb": 80,
"tbk": 5,
"tl": 114,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
421,
421,
421,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 48,
"tbk": 1,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
422,
423,
424,
425,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
481,
143,
178
]
},
{
"tb": 14136,
"tbk": 6,
"tl": 18026,
"mb": 5472,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1102,
1103,
1104,
1105,
1106,
1107,
1108,
1109,
1110,
1111,
1112,
1113,
1114,
1115,
1116,
1117,
1118,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647,
40,
41,
42
]
},
{
"tb": 2044,
"tbk": 4,
"tl": 139,
"mb": 1616,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
1442,
1443,
1444,
1445,
1446,
1447,
1448,
1449,
1449,
1450,
1451,
1452,
1453,
1454,
1455,
1456,
1457,
1458,
1459,
1460,
1461,
1462,
1463,
841,
144
]
},
{
"tb": 240,
"tbk": 1,
"tl": 63168,
"mb": 240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1484,
1485,
1486,
1487,
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
1497,
143,
144
]
},
{
"tb": 1008,
"tbk": 14,
"tl": 18,
"mb": 144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
422,
422,
422,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 2880,
"tbk": 30,
"tl": 18182,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1308,
1309,
1310,
1311,
1312,
1313,
1314,
1315,
1316,
1317,
1318,
1045,
1046,
1047,
1048,
1049,
1050,
1051,
1052,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 4032,
"tbk": 18,
"tl": 250489,
"mb": 1152,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
2621,
2622,
2623,
2624,
2625,
2626,
2627,
2628,
2629,
2630,
2631,
2632,
2633,
2634,
2635,
2636,
2637,
2638,
2639,
2640,
2641,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 1680,
"tbk": 6,
"tl": 18643,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1018,
1019,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
756,
757,
758,
759,
760,
761,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
337,
338
]
},
{
"tb": 64,
"tbk": 2,
"tl": 178,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
381,
382,
1335,
337,
338
]
},
{
"tb": 864,
"tbk": 12,
"tl": 1139,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
181,
181,
182,
182,
181,
183,
184,
185
]
},
{
"tb": 192,
"tbk": 2,
"tl": 31,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4673,
4674,
4675,
4676,
4677,
4678,
4679,
4680,
4681,
4682,
4683,
4684,
4685,
4686,
4687,
4688
]
},
{
"tb": 96,
"tbk": 6,
"tl": 196,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2276,
2277,
2278,
2279,
2280,
2281,
2282,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 1536,
"tbk": 4,
"tl": 250488,
"mb": 1536,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2519,
2520,
2521,
2522,
2523,
2524,
2525,
2526,
2527,
2528,
2529,
2530,
2531,
2532,
2533,
2534,
2535,
2536,
2537,
2538,
2539,
2540,
221,
143,
178
]
},
{
"tb": 960,
"tbk": 8,
"tl": 456,
"mb": 960,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
1464,
1465,
383,
143,
178
]
},
{
"tb": 544,
"tbk": 17,
"tl": 785,
"mb": 544,
"mbk": 17,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
3268,
3269,
3270,
3271,
3271,
3272,
3273,
3274,
3275,
3276,
3277,
3278,
3279,
3273,
3274,
3280,
3281,
3282,
3276,
3277,
3278,
3283,
3284,
3285,
3286,
3287,
3288,
3289,
288
]
},
{
"tb": 3392,
"tbk": 22,
"tl": 18924,
"mb": 960,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3259,
3260,
3261,
3262,
3263,
3264,
3265,
3266,
3262,
3263,
3264,
3267,
221,
143,
144
]
},
{
"tb": 456,
"tbk": 4,
"tl": 2,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
181,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 524,
"tbk": 2,
"tl": 85,
"mb": 524,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
222,
223,
224,
225,
226,
227,
228,
229,
230,
231,
232,
233,
234,
235,
236,
237,
238,
239,
240,
241,
238,
242,
243,
244,
245,
246,
247,
248,
249,
250,
251,
2352
]
},
{
"tb": 864,
"tbk": 6,
"tl": 459385,
"mb": 432,
"mbk": 3,
"gb": 288,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
3843,
3844,
3845,
3846,
3847,
3848,
3849,
3850,
3851,
3852,
3853,
3854,
3855,
3856,
3857,
3858,
3859,
3860,
3861,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 280,
"tbk": 1,
"tl": 25,
"mb": 280,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
3784,
3785,
3786,
3787,
3788,
3789,
3790,
3791,
3791,
3792,
3793,
3794,
3795,
3796,
3797,
3798,
3799,
3793,
3794,
3800,
3801,
3802,
3796,
3797,
3798,
3803,
3804,
3805,
3806,
3807,
3808,
3809,
2352
]
},
{
"tb": 127312,
"tbk": 4,
"tl": 132,
"mb": 71872,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
2760,
2761,
2762,
2763,
2764,
2765,
2766,
2767,
1876,
1877,
1878,
2399,
2400,
2401,
2402
]
},
{
"tb": 80,
"tbk": 2,
"tl": 1124379,
"mb": 80,
"mbk": 2,
"gb": 80,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
1600,
1601,
1602,
1603,
1604,
1605,
1606,
1607,
1608,
1609,
1610,
1611,
1612,
1613,
1614,
1615,
1616,
1617,
1618,
1619,
1620,
1621,
1622,
1623,
1624,
1625,
1626,
1627,
1628,
1629,
1630,
1631,
1632,
1633,
1618,
1619,
1620,
1621,
1622,
1623,
1624,
1628,
1634,
1635,
1636,
554
]
},
{
"tb": 240,
"tbk": 6,
"tl": 1270,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2368,
2369,
2370,
2371,
2372,
2373,
2374,
2375,
2376,
2100,
2101,
2102,
2103,
2104,
2105,
2106,
2107,
2108,
2109,
2110,
3178,
3179,
3180,
3181,
3182,
3183,
3184,
3185,
3186,
3187,
3188,
3495,
3496,
3497,
3498,
3499,
3500,
3501,
3502,
3503,
3504,
1539,
1540,
1541,
1542,
1543,
1544,
1545,
1546,
1547,
1548,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 1008,
"tbk": 14,
"tl": 35,
"mb": 144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
422,
421,
421,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 4032,
"tbk": 18,
"tl": 449132,
"mb": 1152,
"mbk": 3,
"gb": 768,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
2621,
2622,
2623,
2624,
2625,
2626,
2627,
2628,
2629,
2630,
2631,
2632,
2633,
2634,
2635,
2636,
2637,
2638,
2639,
2640,
2641,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 160,
"tbk": 4,
"tl": 1965,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2368,
2369,
2370,
2371,
2372,
2373,
2374,
2375,
2376,
2100,
2101,
2102,
2103,
2104,
2105,
2106,
2107,
2108,
2109,
2110,
3178,
3179,
3180,
3181,
3182,
3183,
3184,
3185,
3186,
3187,
3188,
3505,
3506,
3507,
3508,
3509,
3510,
3511,
3512,
3513,
3514,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 40,
"tbk": 1,
"tl": 557489,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
4689,
4690,
4691,
4692,
4693,
4694,
4695,
4696,
4697,
4698,
4699,
4700,
4701,
4702,
4703,
4704,
4705,
4706,
4707,
4708,
4709,
4710,
4711
]
},
{
"tb": 288,
"tbk": 12,
"tl": 2,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143
]
},
{
"tb": 2592,
"tbk": 36,
"tl": 16,
"mb": 144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
182,
182,
182,
181,
182,
181
]
},
{
"tb": 180,
"tbk": 1,
"tl": 96,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
2511,
2512,
2513,
2514,
2515,
2516,
2517,
2517,
2518,
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1980,
1981,
1982,
1983,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 888,
"tbk": 6,
"tl": 282,
"mb": 888,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
4630,
4631,
4632,
4633,
4634,
4635,
4636,
4637,
4638,
4639,
4640,
4641,
4638,
4642,
4643,
4644,
4645,
4646,
4647,
4648,
4649,
4650,
4651,
252
]
},
{
"tb": 94464,
"tbk": 138,
"tl": 1296,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3384,
3385,
3386,
3387,
3388,
3389,
3390,
3391,
3392,
3393,
3394,
3395,
3396,
3397,
3398,
3399,
3400,
3401,
3402,
3403,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 112,
"tbk": 7,
"tl": 26,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
422,
421,
422,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 160,
"tbk": 4,
"tl": 8,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
708,
709,
710,
711,
712,
713,
714,
715,
716,
717,
718,
719,
720,
721,
722,
723,
724,
725,
726,
727,
728,
729,
730,
731,
716,
732,
917,
737,
143,
178
]
},
{
"tb": 672,
"tbk": 1,
"tl": 1015,
"mb": 672,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
874,
875,
876,
877,
878,
879,
880,
881,
882,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
735
]
},
{
"tb": 144,
"tbk": 6,
"tl": 561,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
337,
338
]
},
{
"tb": 480,
"tbk": 1,
"tl": 225,
"mb": 480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1484,
1485,
3404,
3405,
3406,
3407,
3408,
3409,
3410,
3411,
3412,
3413,
3414,
1497,
143,
178
]
},
{
"tb": 160,
"tbk": 4,
"tl": 1932,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2368,
2369,
2370,
2371,
2372,
2373,
2374,
2375,
2376,
2100,
2101,
2102,
2103,
2104,
2105,
2106,
2107,
2108,
2109,
2110,
2100,
2101,
2102,
2103,
2104,
2105,
2106,
2107,
2108,
2109,
2110,
3178,
3179,
3180,
3181,
3182,
3183,
3184,
3185,
3186,
3187,
3188,
3189,
3190,
3191,
3192,
3193,
3194,
3195,
3196,
4712,
4713,
4714
]
},
{
"tb": 128,
"tbk": 4,
"tl": 84,
"mb": 128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
3268,
3269,
3270,
3271,
3271,
3272,
3273,
3274,
3275,
3276,
3277,
3278,
3279,
3273,
3274,
3280,
3281,
3282,
3276,
3277,
3278,
3283,
3284,
3285,
3286,
3287,
3288,
3289,
252
]
},
{
"tb": 160,
"tbk": 5,
"tl": 683839,
"mb": 160,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4715,
4716,
4717,
4718,
4719,
4720,
4721,
4722,
4723,
4724,
4720,
4721,
4722,
4725,
4724,
4720,
4721,
4722,
4726,
4727
]
},
{
"tb": 128,
"tbk": 1,
"tl": 222,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
913,
914,
915,
916,
733,
737,
143,
144
]
},
{
"tb": 428,
"tbk": 2,
"tl": 60,
"mb": 428,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
818,
819,
820,
821,
822,
823,
824,
825,
826,
827,
828,
829,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
1017,
737,
143,
144
]
},
{
"tb": 192,
"tbk": 6,
"tl": 62,
"mb": 192,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
4299,
4300,
4301,
4302,
4302,
4303,
1451,
1452,
1453,
1454,
1455,
1456,
1457,
1458,
1459,
1460,
1461,
1462,
1463,
1017,
734,
143,
178
]
},
{
"tb": 1200,
"tbk": 6,
"tl": 444332,
"mb": 400,
"mbk": 2,
"gb": 400,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
4142,
4143,
4144,
4145,
4146,
4147,
4148,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 144,
"tbk": 3,
"tl": 2,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
181,
181,
182,
182,
181,
182
]
},
{
"tb": 240,
"tbk": 5,
"tl": 11,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
421,
422,
421,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 1466304,
"tbk": 6546,
"tl": 46019,
"mb": 448,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
344,
345,
346,
347,
348,
349,
2553,
2554,
2555,
2556,
2557,
2558,
2554,
2559,
2560,
2561,
2562,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42
]
},
{
"tb": 96,
"tbk": 1,
"tl": 77,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
3683,
3684,
3685,
1017,
737,
143,
178
]
},
{
"tb": 128,
"tbk": 2,
"tl": 5,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
974,
975,
976,
977,
978,
976,
979,
980,
981,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 680,
"tbk": 8,
"tl": 74837,
"mb": 560,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2489,
2490,
2491,
2492,
2493,
2494,
2495,
2496,
2497,
2498,
2499,
2500,
2501,
2502,
2503,
2504,
2505,
2506,
2507,
2495,
2496,
2498,
2508,
2835,
2836,
2837,
337,
338
]
},
{
"tb": 32,
"tbk": 2,
"tl": 6,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
143
]
},
{
"tb": 768,
"tbk": 12,
"tl": 1347636,
"mb": 768,
"mbk": 12,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
517,
518,
519,
520,
521,
522,
523,
524,
525,
526,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 288,
"tbk": 1,
"tl": 113626,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1018,
1019,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
98,
99,
100,
101,
102,
103,
103,
104,
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1980,
1981,
1982,
1983,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 1008,
"tbk": 14,
"tl": 41,
"mb": 144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
422,
422,
422,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 1728,
"tbk": 36,
"tl": 2139412,
"mb": 336,
"mbk": 7,
"gb": 96,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
339,
340,
341,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 720,
"tbk": 10,
"tl": 2,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
422,
423,
424,
425,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
337,
338
]
},
{
"tb": 96,
"tbk": 3,
"tl": 743,
"mb": 96,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
381,
382,
1055,
734,
143,
144
]
},
{
"tb": 60720,
"tbk": 1,
"tl": 372406,
"mb": 60720,
"mbk": 1,
"gb": 60720,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
290,
291,
292,
293,
294,
295,
296,
297,
4466,
4467,
4468,
4469
]
},
{
"tb": 240,
"tbk": 6,
"tl": 881663,
"mb": 200,
"mbk": 5,
"gb": 160,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
4668,
4669,
4670,
4671,
4672,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 192,
"tbk": 4,
"tl": 13002,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3020,
3021,
3022,
3023,
3024,
3025,
3026,
3027,
3028,
3029,
3030,
3031,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 128,
"tbk": 1,
"tl": 176,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
913,
914,
915,
916,
736,
737,
143,
178
]
},
{
"tb": 240,
"tbk": 15,
"tl": 52,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
182,
182,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 720,
"tbk": 30,
"tl": 14,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
182,
181,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 12288,
"tbk": 32,
"tl": 17983120,
"mb": 12288,
"mbk": 32,
"gb": 12288,
"gbk": 32,
"eb": 12288,
"ebk": 32,
"fs": [
4728,
4729,
4730,
4731,
4732,
4733,
4734,
4735,
4736,
4737,
4738,
1939,
1940,
1941,
1942,
1943,
1944,
1945,
1946,
1947,
1948,
1949,
1950,
1951,
1952,
1953,
1954,
1955,
1956,
1957,
1958,
1958,
1959,
1960,
1961,
1962,
1963,
1964,
1965,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
735
]
},
{
"tb": 31392,
"tbk": 93,
"tl": 89867,
"mb": 4608,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
182,
182,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 8960,
"tbk": 56,
"tl": 17790,
"mb": 1600,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1484,
1485,
2091,
2092,
2093,
2094,
2095,
2096,
2097,
2098,
2099,
2100,
2101,
2102,
2103,
2104,
2105,
2106,
2107,
2108,
2109,
2110,
2100,
2101,
2102,
2103,
2104,
2105,
2106,
2107,
2108,
2109,
2110,
3178,
3179,
3180,
3181,
3182,
3183,
3184,
3185,
3186,
3187,
3188,
3495,
3496,
3497,
3498,
3499,
3500,
3501,
3502,
3503,
3504
]
},
{
"tb": 640,
"tbk": 14,
"tl": 50,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4343,
4344,
4345,
4346,
4347,
4348,
4349,
4350,
4351,
4352,
4353,
4354,
4355,
4356,
4357,
4358,
4359,
4360,
4361,
4362,
4363,
4364,
3710,
3711,
3712,
3713
]
},
{
"tb": 96,
"tbk": 2,
"tl": 10486,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
146,
147,
148,
149,
150,
151,
152,
153,
154,
155,
156,
157,
158,
159,
159,
160,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 1920,
"tbk": 30,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1125,
1126,
1127,
1128,
1129,
1130,
1131,
1132,
1133,
1134,
1135,
1136,
1137,
4125,
4126,
4127,
4128,
4129,
4130,
4131,
4132,
4133,
4134,
4135,
4136,
4137,
4138,
4139,
4140,
4141,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 256,
"tbk": 4,
"tl": 44,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2509,
2510,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 48,
"tbk": 1,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
144
]
},
{
"tb": 1728,
"tbk": 24,
"tl": 14,
"mb": 144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
182,
181,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 64,
"tbk": 2,
"tl": 1569,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
3060,
3061,
3062,
3063,
3064,
3065,
2153,
2154,
2155,
2156,
2157,
2158,
2159,
2160,
2161,
2162,
2163,
2153,
2154,
2155,
2156,
2157,
2158,
2159,
2160,
2161,
2162,
2163,
1539,
1540,
1541,
1542,
1543,
1544,
1545,
1546,
1547,
1548,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 9336,
"tbk": 102,
"tl": 163964,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2619,
2620,
2472,
2473,
2474,
2475,
2476,
2477,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 2304,
"tbk": 28,
"tl": 3,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3430,
3431,
3432,
3433,
3434,
3435,
3436,
3437,
3438,
3439,
3440,
3441,
3442,
3443,
3444,
3442,
3445,
3446,
3447,
3448,
3449,
3450,
3451,
3452,
3453,
3447,
3448,
3454,
3455,
3456,
3457,
3458,
3459,
3460,
3461,
796,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 2735215,
"mb": 1920,
"mbk": 16,
"gb": 1920,
"gbk": 16,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
3915,
3916,
3917,
3918,
3919,
3920,
3921,
3922,
3923,
3924,
3925,
3926,
3927,
3928,
3929,
3930,
3931,
3932,
3933,
3934,
3935,
3936,
3937,
3938,
3939,
3930,
3931,
3933,
3940,
1966,
1967
]
},
{
"tb": 8448,
"tbk": 101,
"tl": 3167,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
797,
798,
799,
800,
801,
3381,
3382,
3383,
805,
806,
807,
808,
809,
810,
811,
812,
813,
814,
815,
816,
817,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 144,
"tbk": 1,
"tl": 221950,
"mb": 144,
"mbk": 1,
"gb": 144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
94,
95,
96,
97,
443,
444,
445,
446,
447,
448,
448,
449,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 168,
"tbk": 2,
"tl": 0,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3430,
3431,
3432,
3433,
3434,
3435,
3436,
3437,
3438,
3439,
3440,
3441,
3442,
3443,
3444,
3442,
3445,
3946,
3947,
3948,
3949,
3950,
3951,
3952,
3953,
3947,
3948,
3954,
3955,
3956,
3957,
3958,
3959,
3960,
3961,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 64,
"tbk": 4,
"tl": 13,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
181,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 95568,
"tbk": 3,
"tl": 129,
"mb": 60816,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
290,
291,
292,
293,
294,
295,
296,
297,
1876,
1877,
1878,
2651,
2652,
2653,
2654
]
},
{
"tb": 144,
"tbk": 1,
"tl": 2792,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
94,
95,
96,
97,
98,
99,
100,
101,
102,
103,
103,
104,
105,
106,
107,
108,
109,
110,
111,
112,
113,
114,
115,
116,
117,
118,
119,
120,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 416,
"tbk": 13,
"tl": 5691,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2146,
2147,
2148,
2149,
2150,
2151,
2152,
3373,
3374,
3375,
3376,
3377,
3378,
3379,
3380,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
1266,
1267,
1268,
1269,
1270,
1271,
1272,
1273,
1274,
1275,
1276,
1277,
1278,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 10240,
"tbk": 2,
"tl": 1001001,
"mb": 10240,
"mbk": 2,
"gb": 10240,
"gbk": 2,
"eb": 10240,
"ebk": 2,
"fs": [
3717,
3718,
3719,
3720,
3721,
3722,
3776,
3777,
2710,
2711,
2712,
2713,
2714,
2715,
2716,
2717,
2718,
2719,
2720,
2721,
2722,
2723,
2724,
2725,
2726,
2727,
2728,
2729,
2730,
2731,
2732,
2733,
2733,
2734,
2735,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 40,
"tbk": 1,
"tl": 12672,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1163,
1164,
1851,
1852,
1853,
1854,
1855,
1856,
1857,
1858,
1859,
1860,
1861,
1862,
1863,
1864,
1865,
1866,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 1344,
"tbk": 11,
"tl": 795069,
"mb": 1344,
"mbk": 11,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
3915,
3916,
3917,
3918,
3919,
3920,
3921,
3922,
3923,
3924,
3925,
3926,
3927,
3928,
3929,
3930,
3931,
3932,
3933,
3934,
3935,
3936,
3937,
3938,
3939,
3930,
3931,
3933,
3940,
841,
144
]
},
{
"tb": 697632,
"tbk": 110,
"tl": 1262347,
"mb": 98496,
"mbk": 4,
"gb": 98496,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
2049,
2050,
2051,
2052,
2053,
2054,
2055,
2056,
2057,
2058,
2059,
2060,
2061,
2062,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 24,
"tbk": 1,
"tl": 562143,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
4739,
4740,
4741,
554
]
},
{
"tb": 192,
"tbk": 6,
"tl": 1751,
"mb": 192,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
1464,
1465,
1055,
734,
143,
178
]
},
{
"tb": 240,
"tbk": 5,
"tl": 1,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
421,
423,
424,
425,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
144
]
},
{
"tb": 240,
"tbk": 5,
"tl": 20,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
422,
421,
421,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 128,
"tbk": 8,
"tl": 18,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1404,
1405,
1406,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143,
178
]
},
{
"tb": 240,
"tbk": 6,
"tl": 34,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
683,
684,
685,
686,
687,
688,
689,
690,
691,
692,
693,
694,
695,
696,
697,
698,
699,
700,
701,
702,
703,
704,
705,
706,
707,
735
]
},
{
"tb": 512,
"tbk": 4,
"tl": 256,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
3915,
3916,
3917,
3918,
3919,
3920,
3921,
3922,
3923,
3924,
3925,
3926,
3927,
3928,
3929,
3930,
3931,
3932,
3933,
3934,
3935,
3936,
3937,
3938,
3939,
3930,
3931,
3933,
3940,
1017,
737,
143,
178
]
},
{
"tb": 400,
"tbk": 2,
"tl": 7979,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3545,
3546,
3547,
3548,
3549,
981,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 73728,
"tbk": 32,
"tl": 17946353,
"mb": 73728,
"mbk": 32,
"gb": 73728,
"gbk": 32,
"eb": 73728,
"ebk": 32,
"fs": [
4742,
4743,
4744,
4745,
4746,
4747,
4748,
4749,
4750,
4751,
4752,
4050,
4051,
4052,
4053,
4054,
4055,
4056,
4057,
4058,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 2048,
"tbk": 2,
"tl": 559986,
"mb": 2048,
"mbk": 2,
"gb": 1024,
"gbk": 1,
"eb": 1024,
"ebk": 1,
"fs": [
3717,
3718,
3719,
3720,
3721,
3722,
2706,
2707,
2708,
2709,
2710,
2711,
2712,
2713,
2714,
2715,
2716,
2717,
2718,
2719,
2720,
2721,
2722,
2723,
2724,
2725,
2726,
2727,
2728,
2729,
2730,
2731,
2732,
2733,
2733,
2734,
2735,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 5264,
"tbk": 329,
"tl": 155,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1637,
3778,
3779,
3780,
3781,
3782,
3783,
1644,
1645,
1646,
1647,
1648,
1649,
1650,
1650,
1651,
1652,
1652,
1653,
1654,
1655,
1656,
1657,
1658,
1659,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647
]
},
{
"tb": 144,
"tbk": 3,
"tl": 1,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
337,
338
]
},
{
"tb": 576,
"tbk": 8,
"tl": 4,
"mb": 144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
181,
182,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 240,
"tbk": 15,
"tl": 47,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
181,
182,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 300,
"tbk": 3,
"tl": 14,
"mb": 248,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
384,
385,
386,
387,
388,
389,
390,
391,
3887,
3888,
3889,
3890,
3891,
3892,
3893,
3894,
3895,
3895,
3896,
3897,
3898,
3899,
3900,
3901,
3902,
3903,
3897,
3898,
3904,
3905,
3906,
3900,
3901,
3902,
3907,
3908,
3909,
3910,
3911,
3912,
3913,
3914,
252
]
},
{
"tb": 256,
"tbk": 4,
"tl": 9,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2984,
2985,
2986,
2987,
2988,
2989,
2990,
2991,
2992,
2993,
2994,
2995,
2996,
2997,
2998,
2999,
2997,
3000,
3001,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 1920,
"tbk": 24,
"tl": 29,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1737,
1738,
1739,
1740,
1741,
1742,
1743,
1744,
1745,
1746,
1747,
1748,
1745,
1749,
1750,
1751,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
144
]
},
{
"tb": 864,
"tbk": 6,
"tl": 260153,
"mb": 432,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
3843,
3844,
3845,
3846,
3847,
3848,
3849,
3850,
3851,
3852,
3853,
3854,
3855,
3856,
3857,
3858,
3859,
3860,
3861,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 2016,
"tbk": 18,
"tl": 1179,
"mb": 384,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
182,
181,
181,
182,
182,
183,
184,
185
]
},
{
"tb": 1536,
"tbk": 8,
"tl": 27938,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1086,
1087,
1088,
1089,
1090,
1091,
1092,
1093,
1094,
1095,
2838,
2839,
2840,
2841,
2839,
2842,
2843,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 130720,
"tbk": 27,
"tl": 9201,
"mb": 34832,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3756,
3757,
3758,
3759,
3760,
3761,
3762,
3763,
3764,
3765,
3766,
3767,
3768,
3769,
3770,
3771,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 320,
"tbk": 4,
"tl": 438,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1381,
1382,
733,
734,
143,
178
]
},
{
"tb": 992,
"tbk": 9,
"tl": 453917,
"mb": 224,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3197,
3198,
3199,
3200,
3201,
3202,
3203,
3204,
3205,
3206,
3207,
3208,
3209,
3210,
3211,
3212,
3213,
3214,
3215,
3216,
3203,
3204,
3208,
3217,
3218,
3219,
3220,
3221,
3222,
3223,
3224,
3225,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 8064,
"tbk": 18,
"tl": 13420,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1362,
1363,
1364,
1365,
1366,
1367,
1368,
1369,
1370,
1371,
1372,
1373,
1374,
1375,
1376,
1377,
1378,
1379,
1380,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 52368,
"tbk": 1,
"tl": 508555,
"mb": 52368,
"mbk": 1,
"gb": 52368,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
2760,
2761,
2762,
2763,
2764,
2765,
2766,
2767,
3772,
3773,
3774,
3775
]
},
{
"tb": 560,
"tbk": 1,
"tl": 695,
"mb": 560,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3621,
3622,
3623,
3624,
3625,
3626,
3627,
3628,
3629,
3630,
3631,
3632,
3633,
3634,
3635,
3636,
3637,
1497,
337,
338
]
},
{
"tb": 336,
"tbk": 14,
"tl": 18,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
422,
422,
422,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 320,
"tbk": 8,
"tl": 2573,
"mb": 200,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1171,
1172,
1173,
1174,
1175,
1176,
1177,
1178,
1178,
1179,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42,
1508,
1509,
1188,
1189,
1190,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 1814880,
"tbk": 103,
"tl": 1463033,
"mb": 323520,
"mbk": 6,
"gb": 323520,
"gbk": 6,
"eb": 0,
"ebk": 0,
"fs": [
2686,
2687,
2688,
2689,
2690,
2691,
2692,
2693,
2694,
2695,
2696,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 3168,
"tbk": 31,
"tl": 2,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3430,
3431,
3432,
3433,
3434,
3435,
3436,
3437,
3438,
3439,
3440,
3441,
3442,
3443,
3444,
3442,
3445,
3446,
3447,
3448,
3449,
3450,
3451,
3452,
3453,
3447,
3448,
3454,
3455,
3456,
3457,
3458,
3459,
3460,
3461,
177,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 192,
"tbk": 4,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
337,
338
]
},
{
"tb": 2304,
"tbk": 36,
"tl": 112124,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
94,
95,
96,
97,
756,
757,
758,
759,
760,
761,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
337,
338
]
},
{
"tb": 288,
"tbk": 9,
"tl": 77877,
"mb": 288,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1920,
1921,
1922,
1923,
1924,
1925,
1926,
1922,
1923,
1924,
1927,
481,
143,
144
]
},
{
"tb": 768,
"tbk": 6,
"tl": 246539,
"mb": 640,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
738,
739,
740,
741,
742,
743,
744,
4178,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 240,
"tbk": 12,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
3965,
3966,
3967,
3968,
3969,
1481,
1482,
1483,
178
]
},
{
"tb": 80,
"tbk": 2,
"tl": 11,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1407,
1408,
1409,
1410,
1411,
1412,
1413,
1414,
1415,
1416,
1417,
1418,
1419,
1420,
1421,
1422,
1423,
1424,
1425,
1426,
1305,
1306,
1307,
917,
734,
337,
338
]
},
{
"tb": 760,
"tbk": 19,
"tl": 4578,
"mb": 120,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2368,
2369,
2370,
2371,
2372,
2373,
2374,
2375,
2376,
2100,
2101,
2102,
2103,
2104,
2105,
2106,
2107,
2108,
2109,
2110,
2100,
2101,
2102,
2103,
2104,
2105,
2106,
2107,
2108,
2109,
2110,
3178,
3179,
3180,
3181,
3182,
3183,
3184,
3185,
3186,
3187,
3188,
3495,
3496,
3497,
3498,
3499,
3500,
3501,
3502,
3503,
3504,
1539,
1540,
1541,
1542,
1543,
1544,
1545,
1546,
1547,
1548
]
},
{
"tb": 112,
"tbk": 7,
"tl": 48,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
421,
422,
421,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 240,
"tbk": 5,
"tl": 1,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
421,
423,
424,
425,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
337,
338
]
},
{
"tb": 7424,
"tbk": 118,
"tl": 1194,
"mb": 160,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1637,
2430,
2431,
2432,
2433,
2434,
2435,
2436,
2437,
2438,
2439,
2440,
2441,
2442,
2443,
1906,
1907,
1908,
1909,
1910,
1911,
1912,
1913,
1914,
1915,
1916,
1917,
1918,
1919,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 40,
"tbk": 1,
"tl": 81,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2368,
2369,
2370,
2371,
2372,
2373,
2374,
2375,
2376,
2111,
2112,
2113,
2114,
2115,
2116,
2117,
2118,
2119,
2120,
40,
41,
42,
2590,
2591,
2161,
2162,
2163,
1539,
1540,
1541,
1542,
1543,
1544,
1545,
1546,
1547,
1548,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 896,
"tbk": 6,
"tl": 92451,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4652,
4653,
745,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 192,
"tbk": 3,
"tl": 2328,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
2592,
2593,
2594,
2595,
2596,
2597,
2598,
2599,
2600,
2600,
2601,
2602,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1191,
1192,
1193,
1194,
1195,
1196,
1197,
1198,
1199,
1200,
1201,
3474,
3475,
3476,
3477,
3478,
3479,
3480,
3481,
3482,
3483,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 288,
"tbk": 6,
"tl": 2,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143
]
},
{
"tb": 300,
"tbk": 3,
"tl": 51,
"mb": 248,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
384,
385,
386,
387,
388,
389,
390,
391,
2444,
2445,
2446,
2447,
2448,
2449,
2450,
2451,
2452,
2452,
2453,
2454,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
736,
737,
337,
338
]
},
{
"tb": 64,
"tbk": 4,
"tl": 16,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
182,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 199032,
"tbk": 135,
"tl": 190691,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2777,
2778,
2779,
2780,
2781,
2782,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 576,
"tbk": 3,
"tl": 44,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4753,
4754,
4755,
4756,
4757,
4758,
4759,
4760,
4761,
4762,
4763,
4764,
4765,
4766,
4767,
4768,
4769,
4770,
4771,
4772,
4773,
81
]
},
{
"tb": 240,
"tbk": 5,
"tl": 136,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
422,
422,
422,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 14400,
"tbk": 30,
"tl": 2143,
"mb": 480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1752,
1753,
1754,
1755,
1756,
1757,
1758,
3723,
3724,
3725,
3726,
3727,
3728,
3729,
3730,
3731,
3732,
3733,
3734,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 480,
"tbk": 1,
"tl": 220,
"mb": 480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1781,
1782,
1783,
1784,
1785,
1786,
1787,
1788,
1789,
1790,
1791,
1497,
143,
144
]
},
{
"tb": 576,
"tbk": 6,
"tl": 28,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2868,
2869,
2870,
2871,
2872,
2873,
2874,
2875,
2876,
2877,
2878,
2879,
2880,
2881,
2882,
1879,
1880,
1881,
1882
]
},
{
"tb": 336,
"tbk": 7,
"tl": 43,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
422,
421,
421,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 2160,
"tbk": 30,
"tl": 2877,
"mb": 288,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
181,
181,
181,
182,
181,
182
]
},
{
"tb": 3456,
"tbk": 9,
"tl": 1092297,
"mb": 3456,
"mbk": 9,
"gb": 2304,
"gbk": 6,
"eb": 0,
"ebk": 0,
"fs": [
2519,
2520,
2521,
2522,
2523,
2524,
2525,
2526,
2527,
2528,
2529,
2530,
2531,
2532,
2533,
2534,
2535,
2536,
2537,
2538,
2539,
2540,
481,
337,
338
]
},
{
"tb": 180,
"tbk": 1,
"tl": 94,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2968,
2969,
2970,
2971,
2972,
2973,
2974,
2975,
3152,
3153,
3154,
3155,
3156,
3157,
3158,
3158,
3159,
1851,
1852,
1853,
1854,
1855,
1856,
1857,
1858,
1859,
1860,
1861,
1862,
1863,
1864,
1865,
1866,
177,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 64,
"tbk": 2,
"tl": 74,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2320,
2321,
2322,
2323,
2324,
2325,
2326,
2327,
2328,
2329,
2330,
2331,
2332,
2333,
2334,
2335,
2336,
2337,
2338,
2339,
2340,
2341,
2342,
2343,
2344,
2345,
2346,
2347,
2338,
2339,
2341,
2348,
1017,
734,
143,
144
]
},
{
"tb": 1680,
"tbk": 6,
"tl": 12581,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4507,
4508,
4509,
4510,
4511,
4512,
4513,
4514,
4515,
4516,
4517,
4518,
4519,
4520,
4521,
4522,
4523,
4524,
4525,
4526,
4527,
4528,
4529,
4530,
4531,
4532,
4533,
4534,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 416,
"tbk": 6,
"tl": 1,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42
]
},
{
"tb": 1196,
"tbk": 3,
"tl": 41,
"mb": 1016,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
928,
929,
930,
931,
932,
933,
934,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
937,
944,
945,
946,
939,
940,
941,
947,
948,
949,
950,
951,
952,
953,
954,
736,
734,
143,
144
]
},
{
"tb": 288,
"tbk": 1,
"tl": 36080,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1018,
1019,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
2173,
2174,
2175,
2176,
2177,
2178,
2179,
2180,
2181,
2182,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 63,
"tbk": 6,
"tl": 878,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3415,
3416,
3417,
3418,
3419,
3420,
2472,
2473,
2474,
2475,
2476,
2477,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647
]
},
{
"tb": 1196,
"tbk": 5,
"tl": 86,
"mb": 896,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
384,
385,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
399,
400,
401,
402,
403,
404,
405,
406,
407,
401,
402,
408,
409,
410,
404,
405,
406,
411,
412,
413,
414,
415,
416,
417,
288
]
},
{
"tb": 320,
"tbk": 4,
"tl": 7,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1381,
1382,
917,
737,
337,
338
]
},
{
"tb": 576,
"tbk": 3,
"tl": 40,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4774,
4775,
4776,
4777,
4778,
4779,
4780,
4781,
4782,
4783,
4784,
4785,
4786,
4787,
4788,
4789,
4790,
4791,
4792,
4793,
4794,
81
]
},
{
"tb": 208,
"tbk": 13,
"tl": 47,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
182,
182,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 300,
"tbk": 3,
"tl": 37,
"mb": 248,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
384,
385,
386,
387,
388,
389,
390,
391,
2444,
2445,
2446,
2447,
2448,
2449,
2450,
2451,
2452,
2452,
2453,
2454,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
733,
734,
337,
338
]
},
{
"tb": 200,
"tbk": 5,
"tl": 1762,
"mb": 120,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1171,
1172,
1173,
1174,
1175,
1176,
1177,
1178,
1178,
1179,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42,
1508,
1509,
1188,
1189,
1190,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1191,
1192,
1193,
1194,
1195,
1196,
1197,
1198,
1199,
1200,
1201
]
},
{
"tb": 288,
"tbk": 1,
"tl": 122806,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1018,
1019,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
443,
444,
445,
446,
447,
448,
448,
449,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 120,
"tbk": 1,
"tl": 59305,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
555,
556,
557,
558,
559,
560,
561,
562,
563,
564,
3086,
3087,
3088,
337,
338
]
},
{
"tb": 200,
"tbk": 1,
"tl": 212089,
"mb": 200,
"mbk": 1,
"gb": 200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1717,
1718,
1719,
1720,
1721,
1722,
1723,
1724,
1725,
1726,
1727,
1727,
1728,
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1980,
1981,
1982,
1983,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 816,
"tbk": 17,
"tl": 33636,
"mb": 288,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
339,
340,
341,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
337,
338
]
},
{
"tb": 336,
"tbk": 7,
"tl": 47,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
422,
422,
421,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 1220,
"tbk": 2,
"tl": 49,
"mb": 1072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
4202,
4203,
4204,
4205,
4206,
4207,
4208,
4209,
4209,
4210,
4211,
4212,
4213,
4214,
4215,
4216,
4217,
4211,
4212,
4218,
4219,
4220,
4214,
4215,
4216,
4221,
4222,
4223,
4224,
4225,
4226,
4227,
288
]
},
{
"tb": 208,
"tbk": 13,
"tl": 434,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4439,
4440,
4441,
4442,
4443,
4444,
4445,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 160,
"tbk": 4,
"tl": 1435,
"mb": 120,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2368,
2369,
2370,
2371,
2372,
2373,
2374,
2375,
2376,
2100,
2101,
2102,
2103,
2104,
2105,
2106,
2107,
2108,
2109,
2110,
2111,
2112,
2113,
2114,
2115,
2116,
2117,
2118,
2119,
2120,
40,
41,
42,
2121,
2122,
2108,
2109,
2110,
2100,
2101,
2102,
2103,
2104,
2105,
2106,
2107
]
},
{
"tb": 624960,
"tbk": 2790,
"tl": 41054,
"mb": 672,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
344,
345,
346,
347,
348,
349,
2553,
2554,
2555,
2556,
2557,
2558,
2554,
2559,
2560,
2561,
2562,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370
]
},
{
"tb": 80,
"tbk": 5,
"tl": 15,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
421,
423,
424,
425,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
144
]
},
{
"tb": 192,
"tbk": 4,
"tl": 17979,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1835,
1836,
1837,
1838,
1839,
1840,
1841,
1842,
1843,
1844,
1845,
1846,
1847,
1848,
1849,
1849,
1850,
780,
781,
782,
783,
784,
785,
786,
787,
788,
789,
790,
791,
792,
793,
794,
795,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 384,
"tbk": 16,
"tl": 7,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
181,
182,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 1296,
"tbk": 9,
"tl": 20889,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
3290,
3291,
3292,
3293,
3294,
3295,
3296,
3297,
3293,
3294,
3295,
3298,
481,
143,
178
]
},
{
"tb": 80,
"tbk": 2,
"tl": 12,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1407,
1408,
1409,
1410,
1411,
1412,
1413,
1414,
1415,
1416,
1417,
1418,
1419,
1420,
1421,
1422,
1423,
1424,
1425,
1426,
1305,
1306,
1307,
736,
737,
143,
144
]
},
{
"tb": 2592,
"tbk": 18,
"tl": 17635,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
3138,
3139,
3140,
3141,
3142,
3143,
3144,
3145,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 1200,
"tbk": 6,
"tl": 247799,
"mb": 400,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4142,
4143,
4144,
4145,
4146,
4147,
4148,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 672,
"tbk": 6,
"tl": 122364,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436
]
},
{
"tb": 864,
"tbk": 18,
"tl": 13,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
182,
182,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 540,
"tbk": 3,
"tl": 456,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2968,
2969,
2970,
2971,
2972,
2973,
2974,
2975,
2976,
2977,
2978,
2979,
2980,
2981,
2982,
2982,
2983,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
796,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 600,
"tbk": 3,
"tl": 238188,
"mb": 600,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1691,
1692,
1693,
1694,
1695,
1696,
1697,
1698,
1699,
1700,
1701,
1701,
1702,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 24,
"tbk": 1,
"tl": 170582,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
746,
747,
748,
749,
750,
751,
752,
753,
754,
755,
288
]
},
{
"tb": 960,
"tbk": 30,
"tl": 3382,
"mb": 960,
"mbk": 30,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
982,
983,
984,
985,
986,
987,
988,
989,
986,
990,
991,
992,
993,
994,
995,
996,
997,
998,
999,
288
]
},
{
"tb": 240,
"tbk": 6,
"tl": 488760,
"mb": 200,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4668,
4669,
4670,
4671,
4672,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 1008,
"tbk": 14,
"tl": 13,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
422,
422,
421,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 2016,
"tbk": 18,
"tl": 6,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
182,
181,
182,
181,
181,
181
]
},
{
"tb": 160,
"tbk": 1,
"tl": 314,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1030,
1031,
1735,
1736,
1055,
734,
143,
178
]
},
{
"tb": 488,
"tbk": 5,
"tl": 0,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2349,
2350,
2351,
1706,
1572,
1573,
1574,
144
]
},
{
"tb": 200,
"tbk": 5,
"tl": 1258,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1231,
1232,
1233,
1234,
1235,
1236,
1237,
1238,
1239,
1240,
1241,
1242,
1243,
1244,
1245,
1245,
1246,
1247,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1191,
1192,
1193,
1194,
1195,
1196,
1197,
1198,
1199,
1200,
1201,
1248,
1249,
1250,
1251,
1252,
1253,
1254,
1255,
1256,
1257,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
1266,
1267,
1268,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
3421,
3422,
3423,
3424,
3425,
3426,
3427,
3428,
3429
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
337,
338
]
},
{
"tb": 576,
"tbk": 5,
"tl": 127384,
"mb": 576,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
4446,
4447,
4448,
4449,
4450,
4451,
4452,
4453,
4454,
4455,
4456,
4457,
4458,
4459,
4460,
4448,
4449,
4450,
4451,
4452,
4453,
4454,
4455,
4456,
4458,
4461,
3086,
3087,
3088,
143,
144
]
},
{
"tb": 144,
"tbk": 2,
"tl": 0,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
337,
338
]
},
{
"tb": 24,
"tbk": 1,
"tl": 557341,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
4739,
4740,
4741,
81
]
},
{
"tb": 128,
"tbk": 1,
"tl": 158,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
913,
914,
915,
916,
733,
734,
337,
338
]
},
{
"tb": 2048,
"tbk": 16,
"tl": 4872,
"mb": 384,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
3060,
3061,
3062,
3063,
3064,
3065,
2153,
2154,
2155,
2156,
2157,
2158,
2159,
2160,
2161,
2162,
2163,
1539,
1540,
1541,
1542,
1543,
1544,
1545,
1546,
1547,
1548,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 520,
"tbk": 3,
"tl": 557342,
"mb": 320,
"mbk": 1,
"gb": 320,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3962,
3963,
3964,
81
]
},
{
"tb": 440,
"tbk": 2,
"tl": 14506,
"mb": 440,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
467,
468,
469,
470,
471,
472,
473,
474,
475,
476,
477,
478,
479,
480,
481,
143,
178
]
},
{
"tb": 208,
"tbk": 13,
"tl": 54,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
182,
182,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 37632,
"tbk": 588,
"tl": 56,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4112,
4113,
4114,
4115,
4116,
4117,
4118,
4119,
4120,
4121,
4122,
4123,
4124,
4125,
4126,
4127,
4128,
4129,
4130,
4131,
4132,
4133,
4134,
4135,
4136,
4137,
4138,
4139,
4140,
4141,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 480,
"tbk": 6,
"tl": 5,
"mb": 160,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2123,
2124,
2125,
2126,
2127,
2128,
2129,
2130,
2131,
2132,
2133,
2134,
2135,
2136,
2137,
2138,
2139,
2140,
2141,
2142,
2143,
2144,
2145,
736,
737,
337,
338
]
},
{
"tb": 120,
"tbk": 3,
"tl": 5,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
708,
709,
710,
711,
712,
713,
714,
715,
716,
717,
718,
719,
720,
721,
722,
723,
724,
725,
726,
727,
728,
729,
730,
731,
716,
732,
733,
734,
337,
338
]
},
{
"tb": 524,
"tbk": 3,
"tl": 48,
"mb": 440,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
1279,
1280,
1281,
1282,
1283,
1284,
1285,
1286,
1286,
1287,
1288,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
736,
737,
337,
338
]
},
{
"tb": 256,
"tbk": 4,
"tl": 10,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
974,
975,
976,
977,
978,
976,
979,
980,
1124,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 80,
"tbk": 2,
"tl": 8111,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3469,
3470,
3471,
3472,
3473,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 65,
"tbk": 1,
"tl": 24,
"mb": 65,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4795,
4796,
4797,
4798,
4799,
4800,
4801,
4802,
4803,
4804,
4805,
4806,
4807,
4808,
1936,
1937,
1938,
1939,
1940,
1941,
1942,
1943,
1944,
1945,
1946,
1947,
1948,
1949,
1950,
1951,
1952,
1953,
1954,
1955,
1956,
1957,
1958,
1958,
1959,
1960,
1961,
1962,
1963,
1964,
1965,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
735
]
},
{
"tb": 432,
"tbk": 18,
"tl": 7,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
182,
182,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 65472,
"tbk": 10,
"tl": 3730,
"mb": 32768,
"mbk": 1,
"gb": 32768,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1792,
1793,
3124,
3125,
3126,
3127,
3128,
3129,
3130,
3131,
3132,
3133,
3134,
3135,
3136,
3137,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367
]
},
{
"tb": 960,
"tbk": 6,
"tl": 1322,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1484,
1485,
2091,
2092,
2093,
2094,
2095,
2096,
2097,
2098,
2099,
2100,
2101,
2102,
2103,
2104,
2105,
2106,
2107,
2108,
2109,
2110,
3178,
3179,
3180,
3181,
3182,
3183,
3184,
3185,
3186,
3187,
3188,
3495,
3496,
3497,
3498,
3499,
3500,
3501,
3502,
3503,
3504,
1539,
1540,
1541,
1542,
1543,
1544,
1545,
1546,
1547,
1548,
40,
41,
42
]
},
{
"tb": 180,
"tbk": 1,
"tl": 134,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
2511,
2512,
2513,
2514,
2515,
2516,
2517,
2517,
2518,
105,
106,
107,
108,
109,
110,
111,
112,
113,
114,
115,
116,
117,
118,
119,
120,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 560,
"tbk": 15,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
421,
423,
424,
425,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
144
]
},
{
"tb": 200,
"tbk": 1,
"tl": 562227,
"mb": 200,
"mbk": 1,
"gb": 200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
4809,
4810,
4811,
4812,
4813,
4814,
4815,
4816,
4817,
4818
]
},
{
"tb": 336,
"tbk": 14,
"tl": 76,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
422,
421,
422,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 288,
"tbk": 1,
"tl": 30,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
2736,
2737,
2738,
2739,
2740,
2741,
2742,
2743,
2743,
2744,
2745,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
917,
737,
143,
178
]
},
{
"tb": 288,
"tbk": 6,
"tl": 3,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
182,
181,
181,
181,
182,
181
]
},
{
"tb": 368,
"tbk": 1,
"tl": 212113,
"mb": 368,
"mbk": 1,
"gb": 368,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
437,
438,
439,
440,
441,
442,
98,
99,
100,
101,
102,
103,
103,
104,
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1980,
1981,
1982,
1983,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 737520,
"tbk": 1,
"tl": 508579,
"mb": 737520,
"mbk": 1,
"gb": 737520,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
1867,
1868,
1869,
1870,
1871,
1872,
1873,
1874,
1875,
3772,
3773,
3774,
3775
]
},
{
"tb": 540,
"tbk": 3,
"tl": 440,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
3735,
3736,
3737,
3738,
3739,
3740,
3741,
3741,
3742,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 256,
"tbk": 4,
"tl": 44,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4195,
4196,
1124,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 144,
"tbk": 9,
"tl": 70,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1404,
1405,
1406,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 80,
"tbk": 5,
"tl": 45,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
421,
422,
421,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 144,
"tbk": 3,
"tl": 13029,
"mb": 144,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
146,
147,
148,
149,
150,
151,
152,
153,
154,
155,
156,
157,
158,
159,
159,
160,
780,
781,
782,
783,
784,
785,
786,
787,
788,
789,
790,
791,
792,
793,
794,
795,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 144,
"tbk": 2,
"tl": 0,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143,
178
]
},
{
"tb": 32768,
"tbk": 32,
"tl": 17983268,
"mb": 32768,
"mbk": 32,
"gb": 32768,
"gbk": 32,
"eb": 32768,
"ebk": 32,
"fs": [
4819,
4820,
4821,
4822,
4823,
4824,
4825,
4826,
4827,
4828,
4827,
4829,
4830,
4831,
4832,
4833,
4834,
4835,
4836,
4837,
1939,
1940,
1941,
1942,
1943,
1944,
1945,
1946,
1947,
1948,
1949,
1950,
1951,
1952,
1953,
1954,
1955,
1956,
1957,
1958,
1958,
1959,
1960,
1961,
1962,
1963,
1964,
1965,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
735
]
},
{
"tb": 604,
"tbk": 4,
"tl": 74,
"mb": 464,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
384,
385,
386,
387,
388,
389,
390,
391,
2444,
2445,
2446,
2447,
2448,
2449,
2450,
2451,
2452,
2452,
2453,
2454,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
736,
734,
143,
178
]
},
{
"tb": 784,
"tbk": 21,
"tl": 28,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
421,
422,
422,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 1536,
"tbk": 4,
"tl": 449153,
"mb": 1536,
"mbk": 4,
"gb": 768,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
2519,
2520,
2521,
2522,
2523,
2524,
2525,
2526,
2527,
2528,
2529,
2530,
2531,
2532,
2533,
2534,
2535,
2536,
2537,
2538,
2539,
2540,
221,
337,
338
]
},
{
"tb": 1344,
"tbk": 12,
"tl": 16597,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143,
144
]
},
{
"tb": 236,
"tbk": 2,
"tl": 9,
"mb": 236,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
3816,
3817,
3818,
3819,
3820,
3821,
3822,
3823,
3823,
3824,
3825,
3826,
3827,
3828,
3829,
3830,
3831,
3825,
3826,
3832,
3833,
3834,
3828,
3829,
3830,
3835,
3836,
3837,
3838,
3839,
3840,
3841,
3842,
735
]
},
{
"tb": 1680,
"tbk": 4,
"tl": 188314,
"mb": 1584,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3657,
3658,
3659,
3660,
3661,
3662,
3663,
3664,
3665,
3666,
3667,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 4060,
"tbk": 35,
"tl": 621,
"mb": 696,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4283,
4284,
4285,
4286,
4287,
4288,
4289,
4290,
4291,
4292,
4293,
4294,
4295,
4296,
3348,
3349,
3350,
3351,
3352,
3353,
3354,
3355,
3356,
3357,
3358,
3359,
3360,
3361,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 2048,
"tbk": 16,
"tl": 8026,
"mb": 384,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
1729,
1730,
1731,
1732,
1733,
1734,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
1266,
1267,
1268,
1269,
1270,
1271,
1272,
1273,
1274,
1275,
1276,
1277,
1278,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 104,
"tbk": 2,
"tl": 28,
"mb": 52,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
384,
385,
386,
387,
388,
389,
390,
391,
2444,
2445,
2446,
2447,
2448,
2449,
2450,
2451,
2452,
2452,
2453,
2454,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
917,
734,
143,
178
]
},
{
"tb": 96,
"tbk": 2,
"tl": 40,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436
]
},
{
"tb": 400,
"tbk": 2,
"tl": 45830,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1717,
1718,
1719,
1720,
1721,
1722,
1723,
1724,
1725,
1726,
1727,
1727,
1728,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
1124,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 240,
"tbk": 10,
"tl": 5,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
181,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 217200,
"tbk": 4,
"tl": 51,
"mb": 121632,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
290,
291,
292,
293,
294,
295,
296,
297,
3002,
3003,
3004,
2864,
2865,
2866,
2867
]
},
{
"tb": 288,
"tbk": 1,
"tl": 35083,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1018,
1019,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
2173,
2174,
2175,
2176,
2177,
2178,
2179,
2180,
2181,
2182,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 48,
"tbk": 1,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
422,
423,
424,
425,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
481,
143,
144
]
},
{
"tb": 972,
"tbk": 3,
"tl": 62,
"mb": 824,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
1442,
1443,
1444,
1445,
1446,
1447,
1448,
1449,
1449,
1450,
1451,
1452,
1453,
1454,
1455,
1456,
1457,
1458,
1459,
1460,
1461,
1462,
1463,
841,
178
]
},
{
"tb": 80,
"tbk": 5,
"tl": 52,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
422,
422,
422,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 432,
"tbk": 6,
"tl": 605,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
181,
182,
181,
181,
181,
182
]
},
{
"tb": 128,
"tbk": 2,
"tl": 22,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4195,
4196,
981,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 912,
"tbk": 8,
"tl": 3,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
181,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 864,
"tbk": 3,
"tl": 12879,
"mb": 864,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
146,
147,
148,
149,
150,
151,
152,
153,
154,
155,
156,
157,
158,
159,
159,
160,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
796,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 110432,
"tbk": 1,
"tl": 137010,
"mb": 110432,
"mbk": 1,
"gb": 110432,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
2760,
2761,
2762,
2763,
2764,
2765,
2766,
2767,
4462,
4463,
4464,
4465
]
},
{
"tb": 2520,
"tbk": 63,
"tl": 22496,
"mb": 400,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1171,
1172,
1173,
1174,
1175,
1176,
1177,
1178,
1178,
1179,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 125664,
"tbk": 561,
"tl": 8666,
"mb": 672,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1637,
1638,
1639,
1640,
1641,
1642,
1643,
1644,
1645,
1646,
1647,
1648,
1649,
1650,
1650,
1651,
1652,
1652,
1653,
1654,
1655,
1656,
1657,
1658,
1659,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370
]
},
{
"tb": 6912,
"tbk": 108,
"tl": 90901,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
568,
569,
570,
571,
572,
573,
574,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 240,
"tbk": 6,
"tl": 8,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
708,
709,
710,
711,
712,
713,
714,
715,
716,
717,
718,
719,
720,
721,
722,
723,
724,
725,
726,
727,
728,
729,
730,
731,
716,
732,
736,
734,
337,
338
]
},
{
"tb": 1680,
"tbk": 15,
"tl": 10,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
421,
422,
421,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 144,
"tbk": 9,
"tl": 338,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3862,
3863,
3864,
3865,
3866,
3867,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 2200,
"tbk": 55,
"tl": 4449342,
"mb": 520,
"mbk": 13,
"gb": 520,
"gbk": 13,
"eb": 0,
"ebk": 0,
"fs": [
2746,
2747,
2748,
2749,
2750,
2751,
2752,
2753,
2754,
2755,
2756,
2757,
2758,
2759,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 224,
"tbk": 6,
"tl": 2604,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2146,
2147,
2148,
2149,
2150,
2151,
2152,
1531,
1532,
1533,
1534,
1535,
1536,
1537,
1538,
1539,
1540,
1541,
1542,
1543,
1544,
1545,
1546,
1547,
1548,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 540,
"tbk": 3,
"tl": 430,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2968,
2969,
2970,
2971,
2972,
2973,
2974,
2975,
2976,
2977,
2978,
2979,
2980,
2981,
2982,
2982,
2983,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
796,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 1196,
"tbk": 3,
"tl": 21,
"mb": 1016,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
928,
929,
930,
931,
932,
933,
934,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
937,
944,
945,
946,
939,
940,
941,
947,
948,
949,
950,
951,
952,
953,
954,
917,
737,
337,
338
]
},
{
"tb": 256,
"tbk": 4,
"tl": 11,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2984,
2985,
2986,
2987,
2988,
2989,
2990,
2991,
2992,
2993,
2994,
2995,
2996,
2997,
2998,
2999,
2997,
3000,
3001,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 24,
"tbk": 1,
"tl": 4634,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
746,
747,
748,
749,
750,
751,
752,
753,
754,
755,
735
]
},
{
"tb": 180,
"tbk": 1,
"tl": 87,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
2511,
2512,
2513,
2514,
2515,
2516,
2517,
2517,
2518,
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1980,
1981,
1982,
1983,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 384,
"tbk": 3,
"tl": 648,
"mb": 384,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
381,
382,
1055,
734,
337,
338
]
},
{
"tb": 240,
"tbk": 10,
"tl": 5,
"mb": 64,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
182,
182,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 300,
"tbk": 3,
"tl": 35,
"mb": 248,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
384,
385,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
399,
400,
401,
402,
403,
404,
405,
406,
407,
401,
402,
408,
409,
410,
404,
405,
406,
411,
412,
413,
414,
415,
416,
417,
2352
]
},
{
"tb": 240,
"tbk": 15,
"tl": 52,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
181,
181,
181,
182,
181,
182
]
},
{
"tb": 1328,
"tbk": 1,
"tl": 19,
"mb": 1328,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
1383,
1384,
1385,
1386,
1387,
1388,
1389,
1390,
1391,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
735
]
},
{
"tb": 96,
"tbk": 6,
"tl": 18,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
144
]
},
{
"tb": 768,
"tbk": 22,
"tl": 8944,
"mb": 160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
1729,
1730,
1731,
1732,
1733,
1734,
1269,
1270,
1271,
1272,
1273,
1274,
1275,
1276,
1277,
1278,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 1480,
"tbk": 37,
"tl": 12161,
"mb": 280,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2368,
2369,
2370,
2371,
2372,
2373,
2374,
2375,
2376,
2100,
2101,
2102,
2103,
2104,
2105,
2106,
2107,
2108,
2109,
2110,
2100,
2101,
2102,
2103,
2104,
2105,
2106,
2107,
2108,
2109,
2110,
3178,
3179,
3180,
3181,
3182,
3183,
3184,
3185,
3186,
3187,
3188,
3495,
3496,
3497,
3498,
3499,
3500,
3501,
3502,
3503,
3504,
2153,
2154,
2155,
2156,
2157,
2158,
2159,
2160
]
},
{
"tb": 697632,
"tbk": 110,
"tl": 298848,
"mb": 98304,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1637,
3319,
3320,
3321,
3322,
3323,
3324,
3325,
3326,
3327,
3328,
3329,
3330,
3331,
3332,
3333,
3334,
3335,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42
]
},
{
"tb": 144,
"tbk": 2,
"tl": 0,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
143,
178
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
422,
423,
424,
425,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
481,
337,
338
]
},
{
"tb": 1536,
"tbk": 8,
"tl": 110526,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2603,
2604,
2605,
2606,
2607,
2608,
2609,
2610,
2611,
2612,
3299,
3300,
3301,
3302,
3300,
3303,
3304,
1124,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 1440,
"tbk": 20,
"tl": 5,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143
]
},
{
"tb": 96,
"tbk": 3,
"tl": 138,
"mb": 96,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
844,
845,
846,
847,
847,
848,
849,
850,
851,
852,
853,
854,
855,
849,
850,
856,
857,
858,
852,
853,
854,
859,
860,
861,
862,
863,
864,
865,
418
]
},
{
"tb": 2072,
"tbk": 14,
"tl": 1532,
"mb": 2072,
"mbk": 14,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
4630,
4631,
4632,
4633,
4634,
4635,
4636,
4637,
4638,
4639,
4640,
4641,
4638,
4642,
4643,
4644,
4645,
4646,
4647,
4648,
4649,
4650,
4651,
418
]
},
{
"tb": 96,
"tbk": 4,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
337,
338
]
},
{
"tb": 32,
"tbk": 1,
"tl": 863,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2146,
2147,
2148,
2149,
2150,
2151,
2152,
3373,
3374,
3375,
3376,
3377,
3378,
3379,
3380,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
1266,
1267,
1268,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
1266,
1267,
1268,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
3421,
3422,
3423,
3424,
3425,
3426,
3427,
3428,
3429,
40,
41,
42
]
},
{
"tb": 192,
"tbk": 2,
"tl": 25,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2783,
2784,
2785,
2786,
2787,
2788,
2789,
2790,
2791,
2792,
2793,
2794,
2795,
2796,
2797,
221,
337,
338
]
},
{
"tb": 2352,
"tbk": 21,
"tl": 68,
"mb": 288,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
421,
422,
421,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 160,
"tbk": 4,
"tl": 8,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
708,
709,
710,
711,
712,
713,
714,
715,
716,
717,
718,
719,
720,
721,
722,
723,
724,
725,
726,
727,
728,
729,
730,
731,
716,
732,
917,
737,
143,
144
]
},
{
"tb": 480,
"tbk": 1,
"tl": 221,
"mb": 480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1484,
1485,
3404,
3405,
3406,
3407,
3408,
3409,
3410,
3411,
3412,
3413,
3414,
1497,
143,
144
]
},
{
"tb": 384,
"tbk": 2,
"tl": 5280,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3989,
3990,
4262,
4263,
4264,
4265,
4266,
4267,
1096,
1097,
1098,
1099,
1097,
1100,
1101,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 128,
"tbk": 2,
"tl": 5,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
974,
975,
976,
977,
978,
976,
979,
980,
981,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 720,
"tbk": 6,
"tl": 15121,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
575,
576,
577,
578,
579,
580,
581,
582,
583,
584,
585,
586,
587,
588,
589,
590,
591,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 96,
"tbk": 1,
"tl": 80,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
3683,
3684,
3685,
1017,
737,
143,
144
]
},
{
"tb": 2352,
"tbk": 21,
"tl": 29,
"mb": 288,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
421,
422,
422,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 368,
"tbk": 1,
"tl": 31855,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
437,
438,
439,
440,
441,
442,
2173,
2174,
2175,
2176,
2177,
2178,
2179,
2180,
2181,
2182,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 200,
"tbk": 1,
"tl": 221929,
"mb": 200,
"mbk": 1,
"gb": 200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1691,
1692,
1693,
1694,
1695,
1696,
1697,
1698,
1699,
1700,
1701,
1701,
1702,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 3488160,
"tbk": 110,
"tl": 1257304,
"mb": 492480,
"mbk": 4,
"gb": 492480,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
2686,
2687,
2688,
2689,
2690,
2691,
2692,
2693,
2694,
2695,
2696,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 32,
"tbk": 2,
"tl": 5,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
182,
183,
184,
185,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
337,
338
]
},
{
"tb": 352,
"tbk": 4,
"tl": 1,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
182,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 560,
"tbk": 1,
"tl": 2145,
"mb": 560,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3621,
3622,
3623,
3624,
3625,
3626,
3627,
3628,
3629,
3630,
3631,
3632,
3633,
3634,
3635,
3636,
3637,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
2352
]
},
{
"tb": 288,
"tbk": 1,
"tl": 112679,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1018,
1019,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
98,
99,
100,
101,
102,
103,
103,
104,
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1980,
1981,
1982,
1983,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 524,
"tbk": 2,
"tl": 26,
"mb": 524,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
4477,
4478,
4479,
4480,
4481,
4482,
4483,
4484,
4485,
1617,
1618,
1619,
1620,
1621,
1622,
1623,
1624,
1625,
1626,
1627,
1628,
1629,
1630,
1631,
1632,
1633,
1618,
1619,
1620,
1621,
1622,
1623,
1624,
1628,
1634,
1635,
1636,
554
]
},
{
"tb": 1536,
"tbk": 24,
"tl": 74763,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
94,
95,
96,
97,
756,
757,
758,
759,
760,
761,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143,
144
]
},
{
"tb": 96,
"tbk": 2,
"tl": 19,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
3617,
3618,
3619,
3620,
841,
178
]
},
{
"tb": 236,
"tbk": 2,
"tl": 29,
"mb": 236,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
1279,
1280,
1281,
1282,
1283,
1284,
1285,
1286,
1286,
1287,
1288,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
733,
737,
337,
338
]
},
{
"tb": 1008,
"tbk": 27,
"tl": 66,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 192,
"tbk": 4,
"tl": 13144,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3020,
3021,
3022,
3023,
3024,
3025,
3026,
3027,
3028,
3029,
3030,
3031,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 80,
"tbk": 2,
"tl": 0,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2123,
2124,
2125,
2126,
2127,
2128,
2129,
2130,
2131,
2132,
2133,
2134,
2135,
2136,
2137,
2138,
2139,
2140,
2141,
2142,
2143,
2144,
2145,
917,
737,
143,
178
]
},
{
"tb": 96,
"tbk": 3,
"tl": 1672086,
"mb": 96,
"mbk": 3,
"gb": 96,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
4580,
4581,
4582,
4583,
4584,
4585,
4586,
4587,
4588,
4589,
4590,
81
]
},
{
"tb": 48,
"tbk": 1,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
178
]
},
{
"tb": 80,
"tbk": 5,
"tl": 15,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
422,
423,
424,
425,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
337,
338
]
},
{
"tb": 624,
"tbk": 13,
"tl": 8,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
181,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 144,
"tbk": 1,
"tl": 212109,
"mb": 144,
"mbk": 1,
"gb": 144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
94,
95,
96,
97,
98,
99,
100,
101,
102,
103,
103,
104,
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1980,
1981,
1982,
1983,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 165648,
"tbk": 1,
"tl": 137005,
"mb": 165648,
"mbk": 1,
"gb": 165648,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
290,
291,
292,
293,
294,
295,
296,
297,
4462,
4463,
4464,
4465
]
},
{
"tb": 32,
"tbk": 1,
"tl": 562209,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
3997,
3998,
3999,
4000,
554
]
},
{
"tb": 152,
"tbk": 1,
"tl": 7,
"mb": 152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
261,
262,
263,
264,
265,
266,
267,
268,
268,
269,
270,
271,
272,
273,
274,
275,
276,
270,
271,
277,
278,
279,
273,
274,
275,
280,
281,
282,
283,
284,
285,
286,
287,
2352
]
},
{
"tb": 800,
"tbk": 4,
"tl": 13210,
"mb": 400,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1119,
1120,
1121,
1122,
1123,
1124,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 2880,
"tbk": 30,
"tl": 18081,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3550,
3551,
3552,
3553,
3554,
3555,
3556,
3557,
3558,
3559,
3560,
1045,
1046,
1047,
1048,
1049,
1050,
1051,
1052,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 1792,
"tbk": 32,
"tl": 17949621,
"mb": 1792,
"mbk": 32,
"gb": 1792,
"gbk": 32,
"eb": 1792,
"ebk": 32,
"fs": [
4838,
4839,
4840,
4841,
4842,
4843,
4844,
4845,
4846,
4847,
4848,
4849,
4850,
1939,
1940,
1941,
1942,
1943,
1944,
1945,
1946,
1947,
1948,
1949,
1950,
1951,
1952,
1953,
1954,
1955,
1956,
1957,
1958,
1958,
1959,
1960,
1961,
1962,
1963,
1964,
1965,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
735
]
},
{
"tb": 864,
"tbk": 12,
"tl": 5,
"mb": 144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
182,
181,
182,
182,
182,
181
]
},
{
"tb": 672,
"tbk": 1,
"tl": 998,
"mb": 672,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
874,
875,
876,
877,
878,
879,
880,
881,
882,
1497,
143,
178
]
},
{
"tb": 524,
"tbk": 3,
"tl": 55,
"mb": 440,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
1279,
1280,
1281,
1282,
1283,
1284,
1285,
1286,
1286,
1287,
1288,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
733,
737,
143,
144
]
},
{
"tb": 200,
"tbk": 1,
"tl": 2771,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1717,
1718,
1719,
1720,
1721,
1722,
1723,
1724,
1725,
1726,
1727,
1727,
1728,
105,
106,
107,
108,
109,
110,
111,
112,
113,
114,
115,
116,
117,
118,
119,
120,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 368,
"tbk": 1,
"tl": 122829,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1056,
1057,
1058,
1059,
1060,
1061,
443,
444,
445,
446,
447,
448,
448,
449,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 576,
"tbk": 3,
"tl": 1672278,
"mb": 576,
"mbk": 3,
"gb": 576,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
4851,
4852,
4853,
4854,
4855,
4856,
4857,
4858,
4859,
4860,
4861,
4862,
4863,
4864,
4865,
4866,
4867,
4868,
4869,
4870,
4871,
4865,
4872,
1617,
1618,
1619,
1620,
1621,
1622,
1623,
1624,
1625,
1626,
1627,
1628,
1629,
1630,
1631,
1632,
1633,
1618,
1619,
1620,
1621,
1622,
1623,
1624,
1628,
1634,
1635,
1636,
81
]
},
{
"tb": 288,
"tbk": 6,
"tl": 3,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
181,
181,
182,
182,
181,
181
]
},
{
"tb": 240,
"tbk": 5,
"tl": 18,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
422,
421,
422,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 104752,
"tbk": 6547,
"tl": 3958,
"mb": 32,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
762,
763,
764,
765,
766,
767,
350,
351,
352,
353,
354,
355,
351,
356,
357,
358,
359,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42
]
},
{
"tb": 2712,
"tbk": 9,
"tl": 220,
"mb": 1368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2655,
2656,
2657,
2658,
2659,
2660,
2661,
2662,
2663,
2664,
2665,
2666,
2667,
2668,
2669,
2670,
2671,
2672,
2673,
2674,
2675,
2676,
2677,
2678,
2679,
2680,
2681,
2682,
2683,
2684,
2685,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 96,
"tbk": 3,
"tl": 138,
"mb": 96,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
381,
382,
383,
337,
338
]
},
{
"tb": 768,
"tbk": 12,
"tl": 752665,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
517,
518,
519,
520,
521,
522,
523,
524,
525,
526,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647,
40,
41,
42
]
},
{
"tb": 160,
"tbk": 1,
"tl": 296,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1030,
1031,
2292,
2293,
1055,
734,
143,
178
]
},
{
"tb": 440,
"tbk": 9,
"tl": 16,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1575,
1576,
1577,
1578,
1579,
1580,
1581,
1582,
1583,
1584,
1585,
1586,
1587,
1588,
1589,
1590,
1591,
1592,
1593,
1594,
1595,
1583,
1596,
1597,
1598,
1599,
418
]
},
{
"tb": 1056,
"tbk": 21,
"tl": 4015,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
182,
181,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 1472,
"tbk": 4,
"tl": 12513,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
437,
438,
439,
440,
441,
442,
756,
757,
758,
759,
760,
761,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143,
144
]
},
{
"tb": 128,
"tbk": 8,
"tl": 18,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1404,
1405,
1406,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143,
144
]
},
{
"tb": 512,
"tbk": 4,
"tl": 263,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
3915,
3916,
3917,
3918,
3919,
3920,
3921,
3922,
3923,
3924,
3925,
3926,
3927,
3928,
3929,
3930,
3931,
3932,
3933,
3934,
3935,
3936,
3937,
3938,
3939,
3930,
3931,
3933,
3940,
1017,
737,
143,
144
]
},
{
"tb": 240,
"tbk": 5,
"tl": 5,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
182,
182,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 432,
"tbk": 6,
"tl": 1,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
337,
338
]
},
{
"tb": 48,
"tbk": 2,
"tl": 0,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
337,
338
]
},
{
"tb": 256,
"tbk": 4,
"tl": 11,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1510,
1511,
1512,
1513,
1514,
1515,
1516,
1517,
1518,
3561,
3562,
3563,
3564,
3565,
3566,
3567,
3565,
3568,
3569,
1124,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 524,
"tbk": 3,
"tl": 29,
"mb": 440,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
1279,
1280,
1281,
1282,
1283,
1284,
1285,
1286,
1286,
1287,
1288,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1427,
1428,
1429,
3986,
3987,
3988,
144
]
},
{
"tb": 2304,
"tbk": 16,
"tl": 973,
"mb": 2048,
"mbk": 14,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
913,
914,
2927,
2928,
2929,
2930,
2929,
2931,
2932,
2933,
2934,
2935,
2936,
2937,
2938,
1966,
1967
]
},
{
"tb": 320,
"tbk": 4,
"tl": 401,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1381,
1382,
733,
737,
337,
338
]
},
{
"tb": 3872,
"tbk": 176,
"tl": 4881,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
762,
763,
4545,
4546,
4547,
4548,
2553,
2554,
2555,
2556,
2557,
2558,
2554,
2559,
2560,
2561,
2562,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370
]
},
{
"tb": 400,
"tbk": 2,
"tl": 8083,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3545,
3546,
3547,
3548,
3549,
981,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 535680,
"tbk": 8,
"tl": 461,
"mb": 245400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2072,
2073,
2074,
2075,
2076,
2077,
2078,
2079,
2080,
2081,
2082,
2083,
2084,
2085,
2086,
2864,
2865,
2866,
2867
]
},
{
"tb": 1073280,
"tbk": 33,
"tl": 163606,
"mb": 506880,
"mbk": 3,
"gb": 506880,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
2686,
2687,
2688,
2689,
2690,
2691,
2692,
2693,
2694,
2695,
2696,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143,
144
]
},
{
"tb": 4176,
"tbk": 24,
"tl": 35481,
"mb": 1152,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2217,
2218,
2219,
2220,
2221,
2222,
2223,
2224,
2225,
2226,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 1196,
"tbk": 3,
"tl": 23,
"mb": 1016,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
928,
929,
930,
931,
932,
933,
934,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
937,
944,
945,
946,
939,
940,
941,
947,
948,
949,
950,
951,
952,
953,
954,
917,
737,
143,
178
]
},
{
"tb": 864,
"tbk": 6,
"tl": 262483,
"mb": 432,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
3843,
3844,
3845,
3846,
3847,
3848,
3849,
3850,
3851,
3852,
3853,
3854,
3855,
3856,
3857,
3858,
3859,
3860,
3861,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 32,
"tbk": 2,
"tl": 53,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4439,
4440,
4441,
4442,
4443,
4444,
4445,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 10056,
"tbk": 36,
"tl": 431,
"mb": 2856,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2655,
2656,
2657,
2658,
2659,
2660,
2661,
2662,
2663,
2664,
2665,
2666,
2667,
2668,
2669,
2670,
2671,
2672,
2673,
2004,
2005,
2006,
2007,
2008,
2009,
2010,
2011,
2012,
2013,
2014,
2015,
2016,
2017,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 440,
"tbk": 9,
"tl": 20,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1407,
1408,
1409,
1410,
1411,
1412,
1413,
1414,
1415,
1416,
1417,
1418,
1419,
1420,
1421,
1422,
1423,
1424,
1425,
1426,
1427,
1428,
1429,
3986,
3987,
3988,
144
]
},
{
"tb": 672,
"tbk": 6,
"tl": 3501,
"mb": 384,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
183,
184,
185,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
337,
338
]
},
{
"tb": 320,
"tbk": 5,
"tl": 1896,
"mb": 192,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
2592,
2593,
2594,
2595,
2596,
2597,
2598,
2599,
2600,
2600,
2601,
2602,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42,
1508,
1509,
1188,
1189,
1190,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190
]
},
{
"tb": 1008,
"tbk": 63,
"tl": 714,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
762,
763,
4172,
4173,
4174,
4175,
4176,
4177,
2553,
2554,
2555,
2556,
2557,
2558,
2554,
2559,
2560,
2561,
2562,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42
]
},
{
"tb": 488,
"tbk": 5,
"tl": 0,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2349,
2350,
2351,
2183,
2184,
2185,
2186,
288
]
},
{
"tb": 144,
"tbk": 1,
"tl": 2666,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
94,
95,
96,
97,
98,
99,
100,
101,
102,
103,
103,
104,
105,
106,
107,
108,
109,
110,
111,
112,
113,
114,
115,
116,
117,
118,
119,
120,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 1152,
"tbk": 72,
"tl": 58,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
2543,
2544,
2545,
2546,
2547,
2548,
2549,
2550,
2551,
2552,
2553,
2554,
2555,
2556,
2557,
2558,
2554,
2559,
2560,
2561,
2562,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 40,
"tbk": 1,
"tl": 169607,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1231,
1232,
1233,
1234,
1235,
1236,
1237,
1238,
1239,
1240,
1241,
1242,
1243,
1244,
1245,
1245,
1246,
1247,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1191,
1192,
1193,
1194,
1195,
1196,
1197,
1198,
1199,
1200,
1201,
3474,
3475,
3476,
3477,
3478,
3479,
3480,
3481,
3482,
3483,
40,
41,
42,
1508,
1509,
1188,
1189,
1190,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507
]
},
{
"tb": 144,
"tbk": 9,
"tl": 41,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 288,
"tbk": 1,
"tl": 0,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3430,
3431,
3432,
3433,
3434,
3435,
3436,
3437,
3438,
3439,
3440,
3441,
3442,
3443,
3444,
3442,
3445,
3946,
3947,
3948,
3949,
3950,
3951,
3952,
3953,
3947,
3948,
3954,
3955,
3956,
3957,
3958,
3959,
3960,
3961,
177,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 576,
"tbk": 12,
"tl": 7,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
181,
181,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 64,
"tbk": 4,
"tl": 12,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143,
178
]
},
{
"tb": 432,
"tbk": 18,
"tl": 9,
"mb": 64,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
181,
181,
182,
181,
182,
182
]
},
{
"tb": 160,
"tbk": 4,
"tl": 17539,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
768,
769,
770,
771,
772,
773,
774,
775,
776,
777,
778,
778,
779,
780,
781,
782,
783,
784,
785,
786,
787,
788,
789,
790,
791,
792,
793,
794,
795,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 288,
"tbk": 1,
"tl": 221932,
"mb": 288,
"mbk": 1,
"gb": 288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1018,
1019,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
443,
444,
445,
446,
447,
448,
448,
449,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 236,
"tbk": 2,
"tl": 12,
"mb": 236,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
3816,
3817,
3818,
3819,
3820,
3821,
3822,
3823,
3823,
3824,
3825,
3826,
3827,
3828,
3829,
3830,
3831,
3825,
3826,
3832,
3833,
3834,
3828,
3829,
3830,
3835,
3836,
3837,
3838,
3839,
3840,
3841,
3842,
288
]
},
{
"tb": 144,
"tbk": 9,
"tl": 49,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 180,
"tbk": 1,
"tl": 106,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2968,
2969,
2970,
2971,
2972,
2973,
2974,
2975,
3152,
3153,
3154,
3155,
3156,
3157,
3158,
3158,
3159,
1851,
1852,
1853,
1854,
1855,
1856,
1857,
1858,
1859,
1860,
1861,
1862,
1863,
1864,
1865,
1866,
177,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 1440,
"tbk": 9,
"tl": 437322,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2353,
2354,
2355,
2356,
2357,
2358,
2359,
2360,
2361,
2362,
2363,
2364,
2365,
2366,
2367,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 336,
"tbk": 7,
"tl": 39,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
422,
422,
422,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 600,
"tbk": 15,
"tl": 1259993,
"mb": 160,
"mbk": 4,
"gb": 160,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
2746,
2747,
2748,
2749,
2750,
2751,
2752,
2753,
2754,
2755,
2756,
2757,
2758,
2759,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 428,
"tbk": 2,
"tl": 28,
"mb": 428,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
4320,
4321,
4322,
4323,
4324,
4325,
4326,
4327,
4327,
4328,
4329,
4330,
4331,
4332,
4333,
4334,
4335,
4329,
4330,
4336,
4337,
4338,
4332,
4333,
4334,
4339,
4340,
4341,
4342,
1572,
1573,
1574,
178
]
},
{
"tb": 624,
"tbk": 13,
"tl": 17,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
182,
182,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 5040,
"tbk": 45,
"tl": 15,
"mb": 384,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
181,
182,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 2208,
"tbk": 6,
"tl": 247647,
"mb": 1104,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2901,
2902,
2903,
2904,
2905,
2906,
2907,
2908,
2909,
2910,
2911,
2912,
2913,
2914,
2915,
2916,
2917,
2918,
2919,
2920,
2921,
2922,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 60720,
"tbk": 4,
"tl": 185,
"mb": 26064,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2384,
2385,
2386,
2387,
2388,
2389,
2390,
2391,
2392,
2393,
2394,
2395,
2396,
2397,
2398,
2651,
2652,
2653,
2654
]
},
{
"tb": 144,
"tbk": 3,
"tl": 501555,
"mb": 144,
"mbk": 3,
"gb": 144,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
339,
340,
341,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3937,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
339,
340,
341,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
481,
337,
338
]
},
{
"tb": 576,
"tbk": 5,
"tl": 445622,
"mb": 352,
"mbk": 3,
"gb": 352,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
3197,
3198,
3199,
3200,
3201,
3202,
3203,
3204,
3205,
3206,
3207,
3208,
3209,
3210,
3211,
3212,
3213,
3214,
3215,
3216,
3203,
3204,
3208,
3217,
3218,
3219,
3220,
3221,
3222,
3223,
3224,
3225,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 960,
"tbk": 8,
"tl": 4843,
"mb": 960,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
1464,
1465,
383,
337,
338
]
},
{
"tb": 264,
"tbk": 2,
"tl": 1,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42
]
},
{
"tb": 1196,
"tbk": 3,
"tl": 40,
"mb": 1016,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
928,
929,
930,
931,
932,
933,
934,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
937,
944,
945,
946,
939,
940,
941,
947,
948,
949,
950,
951,
952,
953,
954,
736,
734,
143,
178
]
},
{
"tb": 512,
"tbk": 4,
"tl": 1004,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
1883,
1884,
1055,
737,
337,
338
]
},
{
"tb": 2240,
"tbk": 56,
"tl": 3690766,
"mb": 360,
"mbk": 9,
"gb": 320,
"gbk": 8,
"eb": 0,
"ebk": 0,
"fs": [
2746,
2747,
2748,
2749,
2750,
2751,
2752,
2753,
2754,
2755,
2756,
2757,
2758,
2759,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 8128,
"tbk": 7,
"tl": 5234,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3040,
3041,
3042,
3043,
3044,
3045,
3046,
3047,
3048,
3049,
3050,
3051,
3048,
3052,
3053,
3054,
3055,
3056,
3057,
3058,
3059,
2018,
2019,
2020,
2021,
2022,
2023,
2024,
2025,
2026,
2023,
2027,
2028,
2029,
2030,
2031,
2032,
2033,
2034,
2035,
2036,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 1196,
"tbk": 3,
"tl": 190,
"mb": 1016,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
222,
223,
224,
225,
226,
227,
228,
229,
230,
231,
232,
233,
234,
235,
236,
237,
238,
239,
240,
241,
238,
242,
243,
244,
245,
246,
247,
248,
249,
250,
251,
418
]
},
{
"tb": 576,
"tbk": 36,
"tl": 1030,
"mb": 32,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1404,
1405,
1406,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 240,
"tbk": 5,
"tl": 8,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
421,
421,
422,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 96,
"tbk": 4,
"tl": 58,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
884,
885,
886,
887,
888,
889,
890,
891,
892,
893,
894,
895,
896,
897,
898,
899,
900,
901,
902,
903,
904,
901,
905,
906,
907,
908,
909,
910,
911,
912,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42
]
},
{
"tb": 240,
"tbk": 5,
"tl": 3,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
181,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1513,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
1729,
1730,
1731,
1732,
1733,
1734,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
1266,
1267,
1268,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
1266,
1267,
1268,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
3421,
3422,
3423,
3424,
3425,
3426,
3427,
3428,
3429,
40,
41,
42
]
},
{
"tb": 288,
"tbk": 1,
"tl": 123902,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1018,
1019,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
443,
444,
445,
446,
447,
448,
448,
449,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 480,
"tbk": 2,
"tl": 238,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1030,
1031,
1053,
1054,
1055,
734,
143,
144
]
},
{
"tb": 78552,
"tbk": 1,
"tl": 508560,
"mb": 78552,
"mbk": 1,
"gb": 78552,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
290,
291,
2697,
2698,
2699,
2700,
2701,
2702,
3772,
3773,
3774,
3775
]
},
{
"tb": 384,
"tbk": 8,
"tl": 75629,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
339,
340,
341,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143,
144
]
},
{
"tb": 1896,
"tbk": 9,
"tl": 429,
"mb": 1512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1984,
1985,
1986,
1987,
1988,
1989,
1990,
1991,
1992,
1993,
1994,
1995,
1996,
1997,
1998,
1999,
2000,
2001,
2002,
2003,
2004,
2005,
2006,
2007,
2008,
2009,
2010,
2011,
2012,
2013,
2014,
2015,
2016,
2017,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 576,
"tbk": 9,
"tl": 3970,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
2592,
2593,
2594,
2595,
2596,
2597,
2598,
2599,
2600,
2600,
2601,
2602,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42,
1508,
1509,
1188,
1189,
1190,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42
]
},
{
"tb": 768,
"tbk": 12,
"tl": 37255,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
94,
95,
96,
97,
756,
757,
758,
759,
760,
761,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
143,
178
]
},
{
"tb": 264,
"tbk": 1,
"tl": 31636,
"mb": 264,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1018,
1019,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
2173,
2174,
2175,
2176,
2177,
2178,
2179,
2180,
2181,
2182,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
2563,
2564,
2565,
2566,
2567,
2568,
2569,
2570,
2571,
40,
41,
42
]
},
{
"tb": 432,
"tbk": 9,
"tl": 307,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3657,
3658,
3659,
3660,
3661,
3662,
3663,
3664,
3665,
3666,
3667,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 4992,
"tbk": 78,
"tl": 2524412,
"mb": 768,
"mbk": 12,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
517,
518,
519,
520,
521,
522,
523,
524,
525,
526,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 288,
"tbk": 4,
"tl": 0,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
182,
183,
184,
185,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
337,
338
]
},
{
"tb": 64,
"tbk": 2,
"tl": 21885,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
2043,
2044,
2045,
2046,
2047,
2048,
481,
337,
338
]
},
{
"tb": 192,
"tbk": 4,
"tl": 18182,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1835,
1836,
1837,
1838,
1839,
1840,
1841,
1842,
1843,
1844,
1845,
1846,
1847,
1848,
1849,
1849,
1850,
780,
781,
782,
783,
784,
785,
786,
787,
788,
789,
790,
791,
792,
793,
794,
795,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 1296,
"tbk": 9,
"tl": 21045,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
3290,
3291,
3292,
3293,
3294,
3295,
3296,
3297,
3293,
3294,
3295,
3298,
481,
143,
144
]
},
{
"tb": 1536,
"tbk": 8,
"tl": 28563,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1086,
1087,
1088,
1089,
1090,
1091,
1092,
1093,
1094,
1095,
2838,
2839,
2840,
2841,
2839,
2842,
2843,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 192,
"tbk": 4,
"tl": 13269,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3020,
3021,
3022,
3023,
3024,
3025,
3026,
3027,
3028,
3029,
3030,
3031,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 80,
"tbk": 2,
"tl": 4741,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
768,
769,
770,
771,
772,
773,
774,
775,
776,
777,
778,
778,
779,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 7360,
"tbk": 115,
"tl": 40044,
"mb": 1088,
"mbk": 17,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
2592,
2593,
2594,
2595,
2596,
2597,
2598,
2599,
2600,
2600,
2601,
2602,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 600,
"tbk": 5,
"tl": 1,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2272,
2273,
2274,
2275,
841,
144
]
},
{
"tb": 40,
"tbk": 1,
"tl": 1287,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1171,
1172,
1173,
1174,
1175,
1176,
1177,
1178,
1178,
1179,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42,
1508,
1509,
1188,
1189,
1190,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42,
1508,
1509
]
},
{
"tb": 256,
"tbk": 4,
"tl": 2227,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
2592,
2593,
2594,
2595,
2596,
2597,
2598,
2599,
2600,
2600,
2601,
2602,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1191,
1192,
1193,
1194,
1195,
1196,
1197,
1198,
1199,
1200,
1201,
1202,
1203,
1204,
1205,
1206,
1207,
1208,
1209
]
},
{
"tb": 184352,
"tbk": 823,
"tl": 10398,
"mb": 672,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1637,
1638,
1639,
1640,
1641,
1642,
1643,
1644,
1645,
1646,
1647,
1648,
1649,
1650,
1650,
1651,
1652,
1652,
1653,
1654,
1655,
1656,
1657,
1658,
1659,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42
]
},
{
"tb": 144,
"tbk": 1,
"tl": 59168,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
555,
556,
557,
558,
559,
560,
561,
562,
563,
564,
565,
566,
567,
143,
178
]
},
{
"tb": 256,
"tbk": 2,
"tl": 0,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
913,
914,
915,
916,
917,
734,
143,
178
]
},
{
"tb": 1296,
"tbk": 9,
"tl": 20990,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
3290,
3291,
3292,
3293,
3294,
3295,
3296,
3297,
3293,
3294,
3295,
3298,
481,
337,
338
]
},
{
"tb": 144,
"tbk": 1,
"tl": 18533,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
527,
528,
529,
530,
531,
532,
533,
534,
535,
536,
537,
538,
539,
143,
144
]
},
{
"tb": 63216,
"tbk": 35,
"tl": 9103,
"mb": 18432,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1637,
2294,
2295,
2296,
2297,
2298,
2299,
2300,
805,
806,
807,
808,
809,
810,
811,
812,
813,
814,
815,
816,
817,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647
]
},
{
"tb": 240,
"tbk": 10,
"tl": 9,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
422,
422,
422,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 200,
"tbk": 5,
"tl": 1582,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2368,
2369,
2370,
2371,
2372,
2373,
2374,
2375,
2376,
2100,
2101,
2102,
2103,
2104,
2105,
2106,
2107,
2108,
2109,
2110,
2111,
2112,
2113,
2114,
2115,
2116,
2117,
2118,
2119,
2120,
40,
41,
42,
2121,
2122,
2108,
2109,
2110,
3178,
3179,
3180,
3181,
3182,
3183,
3184,
3185,
3186,
3187,
3188
]
},
{
"tb": 720,
"tbk": 6,
"tl": 14761,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
575,
576,
577,
578,
579,
580,
581,
582,
583,
584,
585,
586,
587,
588,
589,
590,
591,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 800,
"tbk": 4,
"tl": 441470,
"mb": 400,
"mbk": 2,
"gb": 400,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
1717,
1718,
1719,
1720,
1721,
1722,
1723,
1724,
1725,
1726,
1727,
1727,
1728,
105,
106,
107,
108,
109,
110,
111,
112,
113,
114,
115,
116,
117,
118,
119,
120,
981,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 192,
"tbk": 12,
"tl": 42,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
181,
181,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 40,
"tbk": 1,
"tl": 1109,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1171,
1172,
1173,
1174,
1175,
1176,
1177,
1178,
1178,
1179,
2923,
2924,
2925,
2926,
1188,
1189,
1190,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1191,
1192,
1193,
1194,
1195,
1196,
1197,
1198,
1199,
1200,
1201,
1248,
1249,
1250,
1251,
1252,
1253,
1254,
1255,
1256,
1257,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265
]
},
{
"tb": 48640,
"tbk": 32,
"tl": 17947082,
"mb": 48640,
"mbk": 32,
"gb": 48640,
"gbk": 32,
"eb": 48640,
"ebk": 32,
"fs": [
4873,
4874,
4875,
4876,
4877,
4878,
4879,
4880,
4881,
4882,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 1976,
"tbk": 118,
"tl": 157,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
648,
649,
650,
651,
652,
653,
654,
655,
656,
657,
658,
659,
660,
661,
662,
663,
664,
665,
666,
667,
668,
669,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 104,
"tbk": 3,
"tl": 0,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2349,
2350,
2351,
1706,
1572,
1573,
1574,
178
]
},
{
"tb": 160,
"tbk": 1,
"tl": 277,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1030,
1031,
1735,
1736,
1055,
734,
143,
144
]
},
{
"tb": 576,
"tbk": 5,
"tl": 126517,
"mb": 576,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
4446,
4447,
4448,
4449,
4450,
4451,
4452,
4453,
4454,
4455,
4456,
4457,
4458,
4459,
4460,
4448,
4449,
4450,
4451,
4452,
4453,
4454,
4455,
4456,
4458,
4461,
3086,
3087,
3088,
143,
178
]
},
{
"tb": 160,
"tbk": 2,
"tl": 8,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
708,
709,
710,
711,
712,
713,
714,
715,
716,
717,
718,
719,
720,
721,
722,
723,
724,
725,
726,
727,
728,
729,
730,
731,
716,
732,
736,
737,
143,
178
]
},
{
"tb": 483,
"tbk": 60,
"tl": 5594,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3146,
3147,
3148,
3149,
3150,
3151,
2472,
2473,
2474,
2475,
2476,
2477,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 768,
"tbk": 4,
"tl": 2751,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2603,
2604,
2605,
2606,
2607,
2608,
2609,
2610,
2611,
2612,
2613,
2614,
2615,
2616,
2614,
2617,
2618,
981,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 192,
"tbk": 2,
"tl": 92447,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
738,
739,
740,
741,
742,
743,
744,
745,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 737520,
"tbk": 5,
"tl": 519,
"mb": 238320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2072,
2073,
2074,
2075,
2076,
2077,
2078,
2079,
2080,
2081,
2082,
2083,
2084,
2085,
2086,
2399,
2400,
2401,
2402
]
},
{
"tb": 12288,
"tbk": 32,
"tl": 17975345,
"mb": 12288,
"mbk": 32,
"gb": 12288,
"gbk": 32,
"eb": 12288,
"ebk": 32,
"fs": [
4883,
4884,
4885,
4886,
2265,
2266,
2267,
2268,
2269,
2270,
2271,
1939,
1940,
1941,
1942,
1943,
1944,
1945,
1946,
1947,
1948,
1949,
1950,
1951,
1952,
1953,
1954,
1955,
1956,
1957,
1958,
1958,
1959,
1960,
1961,
1962,
1963,
1964,
1965,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
735
]
},
{
"tb": 11664,
"tbk": 30,
"tl": 17608,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3550,
3551,
3552,
3553,
3554,
3555,
3556,
3557,
3558,
3559,
3560,
1319,
1320,
1321,
1322,
1323,
1324,
1325,
1326,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 240,
"tbk": 6,
"tl": 20576,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4402,
4403,
4404,
4405,
4406,
4407,
4408,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 96,
"tbk": 1,
"tl": 57,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
3683,
3684,
3685,
1017,
734,
143,
178
]
},
{
"tb": 768,
"tbk": 6,
"tl": 356091,
"mb": 768,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
4446,
4447,
4448,
4449,
4450,
4451,
4452,
4453,
4454,
4455,
4456,
4457,
4458,
4459,
4460,
4448,
4449,
4450,
4451,
4452,
4453,
4454,
4455,
4456,
4458,
4461,
565,
566,
567,
337,
338
]
},
{
"tb": 576,
"tbk": 1,
"tl": 557518,
"mb": 576,
"mbk": 1,
"gb": 576,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
290,
291,
2697,
2698,
2699,
2700,
2701,
2702,
2768,
2769,
2770,
2771
]
},
{
"tb": 336,
"tbk": 7,
"tl": 102,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
421,
421,
421,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 24,
"tbk": 1,
"tl": 0,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
592,
593,
594,
595,
596,
597,
598,
599,
600,
601,
602,
603,
604,
605,
606,
607,
608,
609,
610,
611,
612,
613,
610,
614,
615,
616,
617,
618,
619,
620,
621,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 1416,
"tbk": 2,
"tl": 20,
"mb": 1368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1984,
1985,
1986,
1987,
1988,
1989,
1990,
1991,
1992,
1993,
1994,
1995,
1996,
1997,
1998,
1999,
2000,
2001,
2002,
2003,
2004,
2005,
2006,
2007,
2008,
2009,
2010,
2011,
2012,
2013,
2014,
2015,
2016,
2017,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647
]
},
{
"tb": 240,
"tbk": 10,
"tl": 2,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
422,
423,
424,
425,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
337,
338
]
},
{
"tb": 48,
"tbk": 3,
"tl": 9,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
182,
182,
181,
182,
181,
183,
184,
185
]
},
{
"tb": 1152,
"tbk": 6,
"tl": 53954,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2603,
2604,
2605,
2606,
2607,
2608,
2609,
2610,
2611,
2612,
2613,
2614,
2615,
2616,
2614,
2617,
2618,
1124,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 488,
"tbk": 5,
"tl": 0,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2349,
2350,
2351,
2183,
2184,
2185,
2186,
418
]
},
{
"tb": 112,
"tbk": 7,
"tl": 46,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
422,
421,
421,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 80,
"tbk": 2,
"tl": 8010,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3469,
3470,
3471,
3472,
3473,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 972,
"tbk": 3,
"tl": 129,
"mb": 824,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
818,
819,
820,
821,
822,
823,
824,
825,
826,
827,
828,
829,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
841,
144
]
},
{
"tb": 960,
"tbk": 30,
"tl": 3127,
"mb": 960,
"mbk": 30,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
2455,
2456,
2457,
2458,
2459,
2460,
2461,
2462,
2459,
2463,
2464,
2465,
2466,
2467,
2468,
2469,
3970,
3971,
3972,
3973
]
},
{
"tb": 524,
"tbk": 3,
"tl": 24,
"mb": 440,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
3816,
3817,
3818,
3819,
3820,
3821,
3822,
3823,
3823,
3824,
3825,
3826,
3827,
3828,
3829,
3830,
3831,
3825,
3826,
3832,
3833,
3834,
3828,
3829,
3830,
3835,
3836,
3837,
3838,
3839,
3840,
3841,
3842,
418
]
},
{
"tb": 560,
"tbk": 15,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
421,
423,
424,
425,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
178
]
},
{
"tb": 180,
"tbk": 1,
"tl": 129,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
2511,
2512,
2513,
2514,
2515,
2516,
2517,
2517,
2518,
105,
106,
107,
108,
109,
110,
111,
112,
113,
114,
115,
116,
117,
118,
119,
120,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 2688,
"tbk": 42,
"tl": 1164282,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
517,
518,
519,
520,
521,
522,
523,
524,
525,
526,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 96,
"tbk": 6,
"tl": 20,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
181,
181,
181,
182,
181,
183,
184,
185
]
},
{
"tb": 32,
"tbk": 2,
"tl": 6,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
183,
184,
185,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
143,
144
]
},
{
"tb": 192,
"tbk": 2,
"tl": 577,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
1883,
1884,
1055,
734,
143,
178
]
},
{
"tb": 80,
"tbk": 2,
"tl": 5007,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
768,
769,
770,
771,
772,
773,
774,
775,
776,
777,
778,
778,
779,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 672,
"tbk": 18,
"tl": 1178,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
182,
181,
181,
182,
182,
183,
184,
185
]
},
{
"tb": 7200,
"tbk": 30,
"tl": 18031,
"mb": 240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
1047,
1048,
1049,
1050,
1051,
1052,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 23232,
"tbk": 206,
"tl": 586,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
797,
798,
799,
800,
801,
4084,
803,
804,
805,
806,
807,
808,
809,
810,
811,
812,
813,
814,
815,
816,
817,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39
]
},
{
"tb": 540,
"tbk": 3,
"tl": 431,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
3735,
3736,
3737,
3738,
3739,
3740,
3741,
3741,
3742,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 80,
"tbk": 2,
"tl": 7966,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3469,
3470,
3471,
3472,
3473,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 240,
"tbk": 6,
"tl": 341674,
"mb": 160,
"mbk": 4,
"gb": 80,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
1231,
1232,
1233,
1234,
1235,
1236,
1237,
1238,
1239,
1240,
1241,
1242,
1243,
1244,
1245,
1245,
1246,
1247,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42,
1508,
1509,
1188,
1189,
1190,
1191,
1192,
1193,
1194,
1195,
1196,
1197,
1198,
1199,
1200,
1201,
1248,
1249,
1250,
1251,
1252,
1253,
1254,
1255,
1256,
1257,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
1266,
1267,
1268
]
},
{
"tb": 480,
"tbk": 1,
"tl": 236,
"mb": 480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1484,
1485,
3404,
3405,
3406,
3407,
3408,
3409,
3410,
3411,
3412,
3413,
3414,
1497,
337,
338
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
4887,
4888,
4889,
4890,
4891,
4892,
4893,
4894,
4895,
4896,
4897
]
},
{
"tb": 240,
"tbk": 6,
"tl": 24354,
"mb": 120,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
332,
333,
334,
335,
336,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 7200,
"tbk": 30,
"tl": 17977,
"mb": 240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
1047,
1048,
1049,
1050,
1051,
1052,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 96,
"tbk": 6,
"tl": 20,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
182,
181,
181,
181,
182,
181
]
},
{
"tb": 736,
"tbk": 2,
"tl": 6231,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1056,
1057,
1058,
1059,
1060,
1061,
756,
757,
758,
759,
760,
761,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
143,
178
]
},
{
"tb": 768,
"tbk": 6,
"tl": 111234,
"mb": 768,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2814,
2815,
2816,
2817,
2818,
2819,
2820,
2821,
2822,
2823,
2824,
2825,
2826,
2827,
2828,
2829,
2830,
2831,
2832,
2833,
2821,
2822,
2823,
2824,
2825,
2826,
2827,
2828,
2829,
2831,
2834,
537,
538,
539,
337,
338
]
},
{
"tb": 6816,
"tbk": 284,
"tl": 1145,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
884,
885,
886,
887,
888,
889,
890,
891,
892,
893,
894,
895,
896,
897,
605,
606,
607,
608,
609,
610,
611,
612,
613,
610,
614,
615,
616,
617,
618,
619,
620,
621,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42
]
},
{
"tb": 480,
"tbk": 8,
"tl": 12992,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
1338,
1339,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 104,
"tbk": 2,
"tl": 29,
"mb": 52,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
384,
385,
386,
387,
388,
389,
390,
391,
2444,
2445,
2446,
2447,
2448,
2449,
2450,
2451,
2452,
2452,
2453,
2454,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
917,
734,
143,
144
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 557169,
"mb": 4096,
"mbk": 1,
"gb": 4096,
"gbk": 1,
"eb": 4096,
"ebk": 1,
"fs": [
3717,
3718,
3719,
3720,
3721,
3722,
3776,
3777,
2710,
2711,
2712,
2713,
2714,
2715,
2716,
2717,
2718,
2719,
2720,
2721,
2722,
2723,
2724,
2725,
2726,
2727,
2728,
2729,
2730,
2731,
2732,
2733,
2733,
2734,
2735,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42,
1508,
1509,
1188,
1189,
1190
]
},
{
"tb": 120,
"tbk": 1,
"tl": 59109,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
555,
556,
557,
558,
559,
560,
561,
562,
563,
564,
3086,
3087,
3088,
143,
178
]
},
{
"tb": 112,
"tbk": 7,
"tl": 27,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
422,
422,
422,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 160,
"tbk": 1,
"tl": 67,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1000,
1001,
1002,
1003,
1004,
1005,
1006,
1007,
1008,
1009,
1010,
1011,
1012,
1013,
1014,
1015,
1006,
1007,
1009,
1016,
1017,
737,
337,
338
]
},
{
"tb": 128,
"tbk": 1,
"tl": 856,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1510,
1511,
1512,
1513,
1514,
1515,
1516,
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
1525,
1526,
1527,
1528,
1529,
1530,
3373,
3374,
3375,
3376,
3377,
3378,
3379,
3380,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
1266,
1267,
1268,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
1266,
1267,
1268,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
3421,
3422,
3423,
3424,
3425,
3426,
3427,
3428,
3429
]
},
{
"tb": 80,
"tbk": 5,
"tl": 52,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
422,
421,
422,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 720,
"tbk": 15,
"tl": 13,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
181,
182,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 736,
"tbk": 2,
"tl": 6320,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
437,
438,
439,
440,
441,
442,
756,
757,
758,
759,
760,
761,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
337,
338
]
},
{
"tb": 300,
"tbk": 3,
"tl": 44,
"mb": 248,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
384,
385,
386,
387,
388,
389,
390,
391,
2444,
2445,
2446,
2447,
2448,
2449,
2450,
2451,
2452,
2452,
2453,
2454,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
733,
734,
143,
144
]
},
{
"tb": 2304,
"tbk": 36,
"tl": 1560662,
"mb": 1152,
"mbk": 18,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
3843,
3844,
3845,
3846,
3847,
3848,
3849,
3850,
3851,
3852,
3853,
3854,
3855,
3856,
3857,
3858,
3859,
3860,
3861,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 120,
"tbk": 3,
"tl": 13022,
"mb": 120,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1163,
1164,
780,
781,
782,
783,
784,
785,
786,
787,
788,
789,
790,
791,
792,
793,
794,
795,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 288,
"tbk": 6,
"tl": 1,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
337,
338
]
},
{
"tb": 7056,
"tbk": 42,
"tl": 64,
"mb": 1152,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
421,
421,
421,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 128,
"tbk": 2,
"tl": 22,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4195,
4196,
981,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 240,
"tbk": 6,
"tl": 33843,
"mb": 200,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1166,
1167,
1168,
1169,
1170,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 96,
"tbk": 3,
"tl": 133,
"mb": 96,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
1660,
1661,
1662,
1663,
1663,
1664,
1665,
1666,
1667,
1668,
1669,
1670,
1671,
1665,
1666,
1672,
1673,
1674,
1668,
1669,
1670,
1675,
1676,
1677,
1678,
3710,
3711,
3712,
3713
]
},
{
"tb": 3456,
"tbk": 54,
"tl": 1700138,
"mb": 3456,
"mbk": 54,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
1213,
1214,
1215,
1216,
1217,
1218,
1219,
1220,
1221,
1222,
1223,
1224,
1225,
1226,
1227,
1228,
1229,
1230,
481,
143,
144
]
},
{
"tb": 96,
"tbk": 2,
"tl": 0,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
1703,
1704,
1705,
2183,
2184,
2185,
2186,
735
]
},
{
"tb": 1728,
"tbk": 36,
"tl": 3154315,
"mb": 480,
"mbk": 10,
"gb": 480,
"gbk": 10,
"eb": 0,
"ebk": 0,
"fs": [
339,
340,
341,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 864,
"tbk": 12,
"tl": 6,
"mb": 144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
182,
182,
181,
181,
182,
182
]
},
{
"tb": 17856,
"tbk": 60,
"tl": 13,
"mb": 1920,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
182,
182,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 288,
"tbk": 1,
"tl": 2647,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1018,
1019,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
98,
99,
100,
101,
102,
103,
103,
104,
105,
106,
107,
108,
109,
110,
111,
112,
113,
114,
115,
116,
117,
118,
119,
120,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 960,
"tbk": 6,
"tl": 1925,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1484,
1485,
2091,
2092,
2093,
2094,
2095,
2096,
2097,
2098,
2099,
2100,
2101,
2102,
2103,
2104,
2105,
2106,
2107,
2108,
2109,
2110,
3178,
3179,
3180,
3181,
3182,
3183,
3184,
3185,
3186,
3187,
3188,
3495,
3496,
3497,
3498,
3499,
3500,
3501,
3502,
3503,
3504,
2153,
2154,
2155,
2156,
2157,
2158,
2159,
2160,
2161,
2162,
2163
]
},
{
"tb": 524,
"tbk": 3,
"tl": 73,
"mb": 440,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
1279,
1280,
1281,
1282,
1283,
1284,
1285,
1286,
1286,
1287,
1288,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
736,
734,
143,
144
]
},
{
"tb": 384,
"tbk": 8,
"tl": 3,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143
]
},
{
"tb": 96,
"tbk": 2,
"tl": 8020,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3020,
3021,
3022,
3023,
3024,
3025,
3026,
3027,
3028,
3029,
3030,
3031,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 40,
"tbk": 1,
"tl": 28,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4409,
4410,
4411,
4412,
4413,
4414,
4415,
4416,
4417,
4418,
4419,
4420,
554
]
},
{
"tb": 428,
"tbk": 2,
"tl": 21,
"mb": 428,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
1442,
1443,
1444,
1445,
1446,
1447,
1448,
1449,
1449,
1450,
1451,
1452,
1453,
1454,
1455,
1456,
1457,
1458,
1459,
1460,
1461,
1462,
1463,
1017,
734,
143,
178
]
},
{
"tb": 27408,
"tbk": 156,
"tl": 4875477,
"mb": 8712,
"mbk": 33,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1815,
1816,
1817,
1818,
1819,
1820,
1821,
1822,
1823,
1824,
1825,
1826,
1827,
1828,
1829,
1830,
1831,
1832,
1822,
1823,
1833,
1834,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 2640,
"tbk": 1,
"tl": 45,
"mb": 2640,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
1383,
1384,
1385,
1386,
1387,
1388,
1389,
1390,
1391,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
418
]
},
{
"tb": 1196,
"tbk": 3,
"tl": 34,
"mb": 1016,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
928,
929,
930,
931,
932,
933,
934,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
937,
944,
945,
946,
939,
940,
941,
947,
948,
949,
950,
951,
952,
953,
954,
733,
737,
143,
144
]
},
{
"tb": 372,
"tbk": 2,
"tl": 21837,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
467,
468,
469,
470,
471,
472,
473,
474,
475,
476,
477,
478,
479,
480,
221,
337,
338
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
337,
338
]
},
{
"tb": 64,
"tbk": 2,
"tl": 23,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
3617,
3618,
3619,
3620,
1017,
734,
337,
338
]
},
{
"tb": 2496,
"tbk": 12,
"tl": 3,
"mb": 432,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
182,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436
]
},
{
"tb": 240,
"tbk": 6,
"tl": 21,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1407,
1408,
1409,
1410,
1411,
1412,
1413,
1414,
1415,
1416,
1417,
1418,
1419,
1420,
1421,
1422,
1423,
1424,
1425,
1426,
1305,
1306,
1307,
736,
734,
143,
178
]
},
{
"tb": 256,
"tbk": 4,
"tl": 10,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2984,
2985,
2986,
2987,
2988,
2989,
2990,
2991,
2992,
2993,
2994,
2995,
2996,
2997,
2998,
2999,
2997,
3000,
3001,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 24,
"tbk": 1,
"tl": 49057,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
746,
747,
748,
749,
750,
751,
752,
753,
754,
755,
2352
]
},
{
"tb": 63712,
"tbk": 3,
"tl": 134,
"mb": 40544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
2760,
2761,
2762,
2763,
2764,
2765,
2766,
2767,
1876,
1877,
1878,
2651,
2652,
2653,
2654
]
},
{
"tb": 5256,
"tbk": 32,
"tl": 300,
"mb": 1536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2655,
2656,
2657,
2658,
2659,
2660,
2661,
2662,
2663,
2664,
2665,
2666,
2667,
2668,
2669,
2670,
2671,
2672,
2673,
2004,
2005,
2006,
2007,
2008,
2009,
2010,
2011,
2012,
2013,
2014,
2015,
2016,
2017,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 48,
"tbk": 3,
"tl": 9,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
181,
182,
182,
181,
182,
183,
184,
185
]
},
{
"tb": 180,
"tbk": 1,
"tl": 139,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2968,
2969,
2970,
2971,
2972,
2973,
2974,
2975,
3152,
3153,
3154,
3155,
3156,
3157,
3158,
3158,
3159,
780,
781,
782,
783,
784,
785,
786,
787,
788,
789,
790,
791,
792,
793,
794,
795,
796,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 384,
"tbk": 12,
"tl": 442,
"mb": 384,
"mbk": 12,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
4299,
4300,
4301,
4302,
4302,
4303,
1451,
1452,
1453,
1454,
1455,
1456,
1457,
1458,
1459,
1460,
1461,
1462,
1463,
1017,
737,
337,
338
]
},
{
"tb": 168,
"tbk": 2,
"tl": 0,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3430,
3431,
3432,
3433,
3434,
3435,
3436,
3437,
3438,
3439,
3440,
3441,
3442,
3443,
3444,
3442,
3445,
3946,
3947,
3948,
3949,
3950,
3951,
3952,
3953,
3947,
3948,
3954,
3955,
3956,
3957,
3958,
3959,
3960,
3961,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 336,
"tbk": 7,
"tl": 19,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
421,
421,
421,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 240,
"tbk": 5,
"tl": 2,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
182,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 856,
"tbk": 4,
"tl": 18915,
"mb": 428,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
197,
198,
199,
200,
201,
202,
203,
204,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
337,
338
]
},
{
"tb": 380688,
"tbk": 4,
"tl": 641,
"mb": 203040,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
290,
291,
2697,
2698,
2699,
2700,
2701,
2702,
3002,
3003,
3004,
2087,
2088,
2089,
2090
]
},
{
"tb": 680,
"tbk": 8,
"tl": 75858,
"mb": 560,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2489,
2490,
2491,
2492,
2493,
2494,
2495,
2496,
2497,
2498,
2499,
2500,
2501,
2502,
2503,
2504,
2505,
2506,
2507,
2495,
2496,
2498,
2508,
2835,
2836,
2837,
143,
144
]
},
{
"tb": 384,
"tbk": 16,
"tl": 1547,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143
]
},
{
"tb": 80,
"tbk": 2,
"tl": 5,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
708,
709,
710,
711,
712,
713,
714,
715,
716,
717,
718,
719,
720,
721,
722,
723,
724,
725,
726,
727,
728,
729,
730,
731,
716,
732,
917,
734,
337,
338
]
},
{
"tb": 1536,
"tbk": 8,
"tl": 109789,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2603,
2604,
2605,
2606,
2607,
2608,
2609,
2610,
2611,
2612,
3299,
3300,
3301,
3302,
3300,
3303,
3304,
1124,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 64,
"tbk": 2,
"tl": 50,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
844,
845,
846,
847,
847,
848,
849,
850,
851,
852,
853,
854,
855,
849,
850,
856,
857,
858,
852,
853,
854,
859,
860,
861,
862,
863,
864,
865,
252
]
},
{
"tb": 144,
"tbk": 2,
"tl": 0,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
143,
144
]
},
{
"tb": 96,
"tbk": 2,
"tl": 0,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
1703,
1704,
1705,
1706,
1572,
1573,
1574,
178
]
},
{
"tb": 2736,
"tbk": 115,
"tl": 774,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
762,
763,
3810,
3811,
3812,
3813,
3814,
3815,
2553,
2554,
2555,
2556,
2557,
2558,
2554,
2559,
2560,
2561,
2562,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370
]
},
{
"tb": 1472,
"tbk": 4,
"tl": 12505,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1056,
1057,
1058,
1059,
1060,
1061,
756,
757,
758,
759,
760,
761,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143,
144
]
},
{
"tb": 192,
"tbk": 8,
"tl": 750,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
337,
338
]
},
{
"tb": 112,
"tbk": 7,
"tl": 87,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
422,
421,
422,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 288,
"tbk": 3,
"tl": 11323,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
2806,
2807,
2808,
2809,
2810,
2811,
2812,
2808,
2809,
2810,
2813,
481,
143,
144
]
},
{
"tb": 1680,
"tbk": 15,
"tl": 13,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
421,
422,
422,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 80,
"tbk": 2,
"tl": 5,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
708,
709,
710,
711,
712,
713,
714,
715,
716,
717,
718,
719,
720,
721,
722,
723,
724,
725,
726,
727,
728,
729,
730,
731,
716,
732,
733,
737,
143,
178
]
},
{
"tb": 1296,
"tbk": 9,
"tl": 281320,
"mb": 1296,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
1213,
1214,
1215,
1216,
1217,
1218,
1219,
1220,
1221,
1222,
1223,
1224,
1225,
1226,
1227,
1228,
1229,
1230,
481,
143,
178
]
},
{
"tb": 288,
"tbk": 18,
"tl": 61,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
181,
181,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 70560,
"tbk": 30,
"tl": 2088,
"mb": 3120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1752,
1753,
1754,
1755,
1756,
1757,
1758,
1759,
1760,
1761,
1762,
1763,
1764,
1765,
1766,
1767,
1768,
1769,
1770,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 1196,
"tbk": 3,
"tl": 33,
"mb": 1016,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
928,
929,
930,
931,
932,
933,
934,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
937,
944,
945,
946,
939,
940,
941,
947,
948,
949,
950,
951,
952,
953,
954,
736,
737,
143,
178
]
},
{
"tb": 2688,
"tbk": 18,
"tl": 2849,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1792,
1793,
1794,
1795,
1796,
1797,
1798,
1799,
1800,
1801,
1802,
1803,
1804,
1805,
1806,
1807,
1808,
1809,
1810,
1811,
1812,
1813,
1814,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 70560,
"tbk": 30,
"tl": 2328,
"mb": 3120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1752,
1753,
1754,
1755,
1756,
1757,
1758,
1759,
1760,
1761,
1762,
1763,
1764,
1765,
1766,
1767,
1768,
1769,
1770,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1785,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
4104,
4105,
4898,
4899,
4900,
4901,
4902,
4903,
1939,
1940,
1941,
1942,
1943,
1944,
1945,
1946,
1947,
1948,
1949,
1950,
1951,
1952,
1953,
1954,
1955,
1956,
1957,
1958,
1958,
1959,
1960,
1961,
1962,
1963,
1964,
1965,
1392,
1393,
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
735
]
},
{
"tb": 336,
"tbk": 7,
"tl": 14,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
422,
421,
421,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 368,
"tbk": 1,
"tl": 2672,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
437,
438,
439,
440,
441,
442,
98,
99,
100,
101,
102,
103,
103,
104,
105,
106,
107,
108,
109,
110,
111,
112,
113,
114,
115,
116,
117,
118,
119,
120,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 576,
"tbk": 3,
"tl": 52,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
60,
61,
62,
63,
64,
65,
66,
67,
68,
4904,
4905,
4906,
4907,
4908,
4909,
4910,
4911,
4912,
4913,
4914,
4915,
81
]
},
{
"tb": 1536,
"tbk": 24,
"tl": 74600,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
94,
95,
96,
97,
756,
757,
758,
759,
760,
761,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143,
178
]
},
{
"tb": 2208,
"tbk": 6,
"tl": 18759,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
437,
438,
439,
440,
441,
442,
756,
757,
758,
759,
760,
761,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
337,
338
]
},
{
"tb": 768,
"tbk": 12,
"tl": 37782,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
87,
88,
89,
91,
92,
93,
94,
95,
96,
97,
756,
757,
758,
759,
760,
761,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
337,
338
]
},
{
"tb": 240,
"tbk": 5,
"tl": 30,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
422,
422,
422,
421,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 768,
"tbk": 1,
"tl": 8815,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2206,
2207,
2208,
2209,
2210,
2211,
2212,
2213,
2214,
2215,
2216,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647,
40,
41,
42
]
},
{
"tb": 864,
"tbk": 18,
"tl": 16,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
182,
182,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 240,
"tbk": 5,
"tl": 4,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
181,
182,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 48,
"tbk": 2,
"tl": 189,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
221,
337,
338
]
},
{
"tb": 80,
"tbk": 2,
"tl": 0,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2123,
2124,
2125,
2126,
2127,
2128,
2129,
2130,
2131,
2132,
2133,
2134,
2135,
2136,
2137,
2138,
2139,
2140,
2141,
2142,
2143,
2144,
2145,
917,
737,
143,
144
]
},
{
"tb": 40,
"tbk": 1,
"tl": 167519,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2746,
2747,
2748,
2749,
2750,
2751,
2752,
2753,
2754,
2755,
2756,
2757,
2758,
2759,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
2541,
2542,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436
]
},
{
"tb": 80,
"tbk": 5,
"tl": 20,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
421,
421,
422,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 192,
"tbk": 12,
"tl": 39,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
181,
182,
181,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 192,
"tbk": 6,
"tl": 3,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
3484,
3485,
3486,
3487,
3488,
3489,
3490,
3491,
3492,
3493,
3494,
966,
967,
968,
969,
970,
971,
972,
973,
252
]
},
{
"tb": 300,
"tbk": 3,
"tl": 18,
"mb": 248,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
384,
385,
386,
387,
388,
389,
390,
391,
2444,
2445,
2446,
2447,
2448,
2449,
2450,
2451,
2452,
2452,
2453,
2454,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1427,
1428,
1429,
3986,
3987,
3988,
178
]
},
{
"tb": 372,
"tbk": 2,
"tl": 21891,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
467,
468,
469,
470,
471,
472,
473,
474,
475,
476,
477,
478,
479,
480,
221,
143,
178
]
},
{
"tb": 288,
"tbk": 1,
"tl": 2773,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1018,
1019,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
98,
99,
100,
101,
102,
103,
103,
104,
105,
106,
107,
108,
109,
110,
111,
112,
113,
114,
115,
116,
117,
118,
119,
120,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 576,
"tbk": 36,
"tl": 279,
"mb": 32,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1404,
1405,
1406,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 864,
"tbk": 9,
"tl": 10977,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
1340,
1341,
1342,
1343,
1344,
1345,
1346,
1347,
1348,
1349,
1350,
1351,
1352,
1353,
1354,
1355,
1356,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 432,
"tbk": 6,
"tl": 2,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
181,
182,
181,
182,
182,
182
]
},
{
"tb": 96,
"tbk": 1,
"tl": 52,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
3683,
3684,
3685,
1017,
734,
337,
338
]
},
{
"tb": 3584,
"tbk": 56,
"tl": 21346,
"mb": 640,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
2592,
2593,
2594,
2595,
2596,
2597,
2598,
2599,
2600,
2600,
2601,
2602,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1191,
1192,
1193,
1194,
1195,
1196,
1197,
1198,
1199,
1200,
1201,
1248,
1249,
1250,
1251,
1252,
1253,
1254,
1255,
1256,
1257
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3946,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
339,
340,
341,
327,
328,
329,
330,
331,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
481,
143,
178
]
},
{
"tb": 40,
"tbk": 1,
"tl": 353,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2368,
2369,
2370,
2371,
2372,
2373,
2374,
2375,
2376,
2111,
2112,
2113,
2114,
2115,
2116,
2117,
2118,
2119,
2120,
40,
41,
42,
2121,
2122,
2108,
2109,
2110,
3178,
3179,
3180,
3181,
3182,
3183,
3184,
3185,
3186,
3187,
3188,
3505,
3506,
3507,
3508,
3509,
3510,
3511,
3512,
3513,
3514,
40,
41,
42
]
},
{
"tb": 5992,
"tbk": 10,
"tl": 110,
"mb": 1312,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2403,
2404,
2405,
2406,
2407,
2408,
2409,
2410,
2411,
2412,
2413,
2414,
2415,
2416,
2417,
2418,
2419,
2420,
2421,
2422,
2423,
2424,
2425,
2426,
2427,
2428,
2429,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 720,
"tbk": 5,
"tl": 171685,
"mb": 432,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
94,
95,
96,
97,
2173,
2174,
2175,
2176,
2177,
2178,
2179,
2180,
2181,
2182,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 96,
"tbk": 4,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
178
]
},
{
"tb": 272,
"tbk": 17,
"tl": 40,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1404,
1405,
1406,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
178
]
},
{
"tb": 128,
"tbk": 4,
"tl": 1163,
"mb": 128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1327,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
1883,
1884,
1055,
737,
143,
144
]
},
{
"tb": 40,
"tbk": 1,
"tl": 12977,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1163,
1164,
1851,
1852,
1853,
1854,
1855,
1856,
1857,
1858,
1859,
1860,
1861,
1862,
1863,
1864,
1865,
1866,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 672,
"tbk": 18,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
144
]
},
{
"tb": 368,
"tbk": 1,
"tl": 123925,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1056,
1057,
1058,
1059,
1060,
1061,
443,
444,
445,
446,
447,
448,
448,
449,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 336,
"tbk": 14,
"tl": 40,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
421,
422,
422,
422,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 2592,
"tbk": 18,
"tl": 15263,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
568,
569,
570,
571,
572,
573,
574,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 720,
"tbk": 10,
"tl": 10,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
422,
422,
421,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 240,
"tbk": 6,
"tl": 5,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2123,
2124,
2125,
2126,
2127,
2128,
2129,
2130,
2131,
2132,
2133,
2134,
2135,
2136,
2137,
2138,
2139,
2140,
2141,
2142,
2143,
2144,
2145,
736,
734,
143,
178
]
},
{
"tb": 96,
"tbk": 3,
"tl": 170,
"mb": 96,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
844,
845,
846,
847,
847,
848,
849,
850,
851,
852,
853,
854,
855,
849,
850,
856,
857,
858,
852,
853,
854,
859,
860,
861,
862,
863,
864,
865,
288
]
},
{
"tb": 160,
"tbk": 1,
"tl": 259,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1030,
1031,
2292,
2293,
1055,
734,
143,
144
]
},
{
"tb": 512,
"tbk": 4,
"tl": 126101,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
371,
372,
373,
374,
375,
376,
377,
378,
379,
380,
2043,
2044,
2045,
2046,
2047,
2048,
221,
337,
338
]
},
{
"tb": 720,
"tbk": 10,
"tl": 9,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
422,
422,
422,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 160,
"tbk": 4,
"tl": 2297,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1231,
1232,
1233,
1234,
1235,
1236,
1237,
1238,
1239,
1240,
1241,
1242,
1243,
1244,
1245,
1245,
1246,
1247,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1191,
1192,
1193,
1194,
1195,
1196,
1197,
1198,
1199,
1200,
1201,
1202,
1203,
1204,
1205,
1206,
1207,
1208,
1209,
1210,
1211,
1212,
1248,
1249,
1250,
1251,
1252,
1253,
1254,
1255,
1256,
1257
]
},
{
"tb": 236,
"tbk": 2,
"tl": 15,
"mb": 236,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
253,
254,
255,
256,
257,
258,
259,
260,
1279,
1280,
1281,
1282,
1283,
1284,
1285,
1286,
1286,
1287,
1288,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1427,
1428,
1429,
3986,
3987,
3988,
178
]
},
{
"tb": 428,
"tbk": 2,
"tl": 35,
"mb": 428,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
4202,
4203,
4204,
4205,
4206,
4207,
4208,
4209,
4209,
4210,
4211,
4212,
4213,
4214,
4215,
4216,
4217,
4211,
4212,
4218,
4219,
4220,
4214,
4215,
4216,
4221,
4222,
4223,
4224,
4225,
4226,
4227,
252
]
},
{
"tb": 256,
"tbk": 4,
"tl": 10,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1510,
1511,
1512,
1513,
1514,
1515,
1516,
1517,
1518,
3561,
3562,
3563,
3564,
3565,
3566,
3567,
3565,
3568,
3569,
1124,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 40,
"tbk": 1,
"tl": 157,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
768,
769,
770,
771,
772,
773,
774,
775,
776,
777,
778,
778,
779,
1851,
1852,
1853,
1854,
1855,
1856,
1857,
1858,
1859,
1860,
1861,
1862,
1863,
1864,
1865,
1866,
177,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 320,
"tbk": 2,
"tl": 916,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1484,
1485,
2091,
2092,
2093,
2094,
2095,
2096,
2097,
2098,
2099,
2111,
2112,
2113,
2114,
2115,
2116,
2117,
2118,
2119,
2120,
40,
41,
42,
2121,
2122,
2108,
2109,
2110,
3178,
3179,
3180,
3181,
3182,
3183,
3184,
3185,
3186,
3187,
3188,
3495,
3496,
3497,
3498,
3499,
3500,
3501,
3502,
3503,
3504
]
},
{
"tb": 2688,
"tbk": 14,
"tl": 10418,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
60,
61,
62,
63,
64,
65,
66,
67,
68,
2173,
2174,
2175,
2176,
2177,
2178,
2179,
2180,
2181,
2182,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 1203408,
"tbk": 133,
"tl": 195280,
"mb": 221184,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1637,
2294,
2295,
2296,
2297,
2298,
2299,
2300,
805,
806,
807,
808,
809,
810,
811,
812,
813,
814,
815,
816,
817,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
143,
178
]
},
{
"tb": 160,
"tbk": 4,
"tl": 538199,
"mb": 120,
"mbk": 3,
"gb": 120,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
2746,
2747,
2748,
2749,
2750,
2751,
2752,
2753,
2754,
2755,
2756,
2757,
2758,
2759,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42
]
},
{
"tb": 80,
"tbk": 2,
"tl": 0,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2123,
2124,
2125,
2126,
2127,
2128,
2129,
2130,
2131,
2132,
2133,
2134,
2135,
2136,
2137,
2138,
2139,
2140,
2141,
2142,
2143,
2144,
2145,
733,
734,
337,
338
]
},
{
"tb": 80,
"tbk": 5,
"tl": 31,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
422,
421,
421,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 112,
"tbk": 7,
"tl": 52,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
419,
420,
422,
422,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
40,
41,
42
]
},
{
"tb": 256,
"tbk": 4,
"tl": 39,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2509,
2510,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 576,
"tbk": 4,
"tl": 12440,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
94,
95,
96,
97,
756,
757,
758,
759,
760,
761,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
221,
337,
338
]
},
{
"tb": 560,
"tbk": 1,
"tl": 696,
"mb": 560,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3621,
3622,
3623,
3624,
3625,
3626,
3627,
3628,
3629,
3630,
3631,
3632,
3633,
3634,
3635,
3636,
3637,
883,
143,
144
]
},
{
"tb": 824,
"tbk": 2,
"tl": 32,
"mb": 824,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
3784,
3785,
3786,
3787,
3788,
3789,
3790,
3791,
3791,
3792,
3793,
3794,
3795,
3796,
3797,
3798,
3799,
3793,
3794,
3800,
3801,
3802,
3796,
3797,
3798,
3803,
3804,
3805,
3806,
3807,
3808,
3809,
735
]
},
{
"tb": 64,
"tbk": 4,
"tl": 12,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
181,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
337,
338
]
},
{
"tb": 400,
"tbk": 2,
"tl": 164966,
"mb": 400,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1691,
1692,
1693,
1694,
1695,
1696,
1697,
1698,
1699,
1700,
1701,
1701,
1702,
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
1124,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 1196,
"tbk": 3,
"tl": 24,
"mb": 1016,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
866,
867,
868,
869,
870,
871,
872,
873,
928,
929,
930,
931,
932,
933,
934,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
937,
944,
945,
946,
939,
940,
941,
947,
948,
949,
950,
951,
952,
953,
954,
917,
737,
143,
144
]
},
{
"tb": 1196,
"tbk": 3,
"tl": 173,
"mb": 1016,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
222,
223,
224,
225,
226,
227,
228,
229,
2187,
2188,
2189,
2190,
2191,
2192,
2193,
2194,
2195,
2196,
2197,
2198,
2195,
2199,
2200,
2201,
2202,
2203,
2204,
2205,
1481,
1482,
1483,
144
]
},
{
"tb": 384,
"tbk": 4,
"tl": 6734,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3237,
3238,
3239,
3240,
3241,
3242,
3243,
3244,
3245,
3246,
3247,
3248,
3245,
3249,
3250,
3251,
3252,
3253,
3254,
3255,
3256,
3257,
3258,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 200,
"tbk": 5,
"tl": 13,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1407,
1408,
1409,
1410,
1411,
1412,
1413,
1414,
1415,
1416,
1417,
1418,
1419,
1420,
1421,
1422,
1423,
1424,
1425,
1426,
1427,
1428,
1429,
3986,
3987,
3988,
178
]
},
{
"tb": 3744,
"tbk": 27,
"tl": 162783,
"mb": 840,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3657,
3658,
3659,
3660,
3661,
3662,
3663,
3664,
3665,
3666,
3667,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
56,
57
]
},
{
"tb": 960,
"tbk": 5,
"tl": 132,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
60,
61,
62,
63,
64,
65,
66,
67,
68,
756,
757,
758,
759,
760,
761,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
143,
178
]
},
{
"tb": 120,
"tbk": 3,
"tl": 12872,
"mb": 120,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1163,
1164,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
796,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
337,
338
]
},
{
"tb": 6952,
"tbk": 35,
"tl": 9116,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2777,
2778,
2779,
2780,
2781,
2782,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 144,
"tbk": 1,
"tl": 2649,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
94,
95,
96,
97,
98,
99,
100,
101,
102,
103,
103,
104,
105,
106,
107,
108,
109,
110,
111,
112,
113,
114,
115,
116,
117,
118,
119,
120,
121,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 52,
"tbk": 1,
"tl": 0,
"mb": 52,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4609,
4610,
4611,
4612,
4613,
4614,
4615,
4616,
4916,
4917,
4918,
4919,
4920,
4921,
4922,
4923,
4924,
4925,
4926
]
},
{
"tb": 48,
"tbk": 3,
"tl": 9,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
182,
182,
181,
182,
181,
181
]
},
{
"tb": 180,
"tbk": 1,
"tl": 104,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2968,
2969,
2970,
2971,
2972,
2973,
2974,
2975,
3152,
3153,
3154,
3155,
3156,
3157,
3158,
3158,
3159,
1851,
1852,
1853,
1854,
1855,
1856,
1857,
1858,
1859,
1860,
1861,
1862,
1863,
1864,
1865,
1866,
177,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 624,
"tbk": 13,
"tl": 4,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
182,
181,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 288,
"tbk": 1,
"tl": 0,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3430,
3431,
3432,
3433,
3434,
3435,
3436,
3437,
3438,
3439,
3440,
3441,
3442,
3443,
3444,
3442,
3445,
3946,
3947,
3948,
3949,
3950,
3951,
3952,
3953,
3947,
3948,
3954,
3955,
3956,
3957,
3958,
3959,
3960,
3961,
177,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 200,
"tbk": 1,
"tl": 71642,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1000,
1001,
1002,
1003,
1004,
1005,
1006,
1007,
1008,
1009,
1010,
1011,
1012,
1013,
1014,
1015,
1006,
1007,
1009,
1016,
841,
178
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2703,
2704,
2705,
2706,
2844,
2845,
2846,
2847,
2848,
2849,
2850,
2851,
2852,
2853,
2854,
2855,
2856,
2857,
2858,
2859,
2860,
2861,
2861,
2862,
2863,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1191,
1192,
1193,
1194,
1195,
1196,
1197,
1198,
1199,
1200,
1201
]
},
{
"tb": 1184,
"tbk": 8,
"tl": 464,
"mb": 1184,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
4630,
4631,
4632,
4633,
4634,
4635,
4636,
4637,
4638,
4639,
4640,
4641,
4638,
4642,
4643,
4644,
4645,
4646,
4647,
4648,
4649,
4650,
4651,
735
]
},
{
"tb": 288,
"tbk": 18,
"tl": 57,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
181,
182,
182,
181,
182,
181,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 2256,
"tbk": 4,
"tl": 194,
"mb": 1368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2655,
2656,
2657,
2658,
2659,
2660,
2661,
2662,
2663,
2664,
2665,
2666,
2667,
2668,
2669,
2670,
2671,
2672,
2673,
2004,
2005,
2006,
2007,
2008,
2009,
2010,
2011,
2012,
2013,
2014,
2015,
2016,
2017,
622,
623,
624,
625,
626,
627,
628,
625,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
360,
361,
362,
363,
364,
365,
366,
367,
639,
640,
641,
642,
643,
644,
645,
646,
647
]
},
{
"tb": 48,
"tbk": 1,
"tl": 12827,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
146,
147,
148,
149,
150,
151,
152,
153,
154,
155,
156,
157,
158,
159,
159,
160,
1851,
1852,
1853,
1854,
1855,
1856,
1857,
1858,
1859,
1860,
1861,
1862,
1863,
1864,
1865,
1866,
1165,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 1296,
"tbk": 18,
"tl": 17,
"mb": 192,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
181,
181,
182,
181,
182,
182
]
},
{
"tb": 192,
"tbk": 6,
"tl": 2,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
842,
843,
3484,
3485,
3486,
3487,
3488,
3489,
3490,
3491,
3492,
3493,
3494,
3965,
3966,
3967,
3968,
3969,
1481,
1482,
1483,
178
]
},
{
"tb": 256,
"tbk": 4,
"tl": 10,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2814,
2815,
2816,
2817,
2818,
3462,
3463,
3464,
3465,
3466,
3464,
3467,
3468,
545,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 80,
"tbk": 2,
"tl": 0,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2123,
2124,
2125,
2126,
2127,
2128,
2129,
2130,
2131,
2132,
2133,
2134,
2135,
2136,
2137,
2138,
2139,
2140,
2141,
2142,
2143,
2144,
2145,
733,
734,
143,
178
]
},
{
"tb": 720,
"tbk": 10,
"tl": 10,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
918,
919,
421,
422,
421,
422,
421,
423,
424,
425,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716
]
},
{
"tb": 832,
"tbk": 13,
"tl": 4343,
"mb": 448,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
2592,
2593,
2594,
2595,
2596,
2597,
2598,
2599,
2600,
2600,
2601,
2602,
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
40,
41,
42,
1508,
1509,
1188,
1189,
1190
]
},
{
"tb": 368,
"tbk": 1,
"tl": 112702,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1056,
1057,
1058,
1059,
1060,
1061,
98,
99,
100,
101,
102,
103,
103,
104,
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1980,
1981,
1982,
1983,
466,
122,
123,
124,
125,
122,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
178
]
},
{
"tb": 128,
"tbk": 2,
"tl": 6,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
482,
483,
484,
485,
486,
487,
488,
489,
490,
491,
492,
493,
490,
494,
495,
496,
497,
498,
499,
500,
501,
502,
503,
504,
500,
501,
502,
505,
481,
337,
338
]
},
{
"tb": 576,
"tbk": 12,
"tl": 9,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
181,
182,
182,
182,
181,
182,
183,
184,
185
]
},
{
"tb": 43776,
"tbk": 2736,
"tl": 2450,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
762,
763,
764,
765,
766,
767,
2553,
2554,
2555,
2556,
2557,
2558,
2554,
2559,
2560,
2561,
2562,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 48,
"tbk": 1,
"tl": 70055,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
339,
340,
341,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 560,
"tbk": 28,
"tl": 5,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
967,
968,
969,
970,
971,
972,
973,
418
]
},
{
"tb": 120,
"tbk": 3,
"tl": 2,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2123,
2124,
2125,
2126,
2127,
2128,
2129,
2130,
2131,
2132,
2133,
2134,
2135,
2136,
2137,
2138,
2139,
2140,
2141,
2142,
2143,
2144,
2145,
733,
737,
337,
338
]
},
{
"tb": 240,
"tbk": 10,
"tl": 2,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
182,
181,
182,
183,
184,
185,
327,
328,
329,
330,
331,
212,
213,
214,
215,
216,
217,
218,
219,
215,
216,
217,
220,
481,
337,
338
]
},
{
"tb": 2160,
"tbk": 30,
"tl": 14,
"mb": 144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
182,
181,
182,
181,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
}
],
"ftbl": [
"[root]",
"0x55d276abf6ca: <dhat::Alloc as core::alloc::global::GlobalAlloc>::alloc (dhat-0.3.3/src/lib.rs:1176:9)",
"0x55d276a68009: alloc::raw_vec::finish_grow (core/src/result.rs:0:0)",
"0x55d276a6898e: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:486:19)",
"0x55d276a6898e: alloc::raw_vec::RawVec<T,A>::grow_one (alloc/src/raw_vec.rs:364:27)",
"0x55d276a26865: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276a26865: truck_meshalgo::tessellation::triangulation::triangulation_into_polymesh::{{closure}} (src/tessellation/triangulation.rs:600:13)",
"0x55d276a26865: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a26865: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:108:27)",
"0x55d276a26865: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d276a26865: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:114:9)",
"0x55d276a26865: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a26865: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a26865: <hashbrown::map::HashMap<K,V,S,A> as core::iter::traits::collect::Extend<(K,V)>>::extend (hashbrown-0.14.5/src/map.rs:6511:9)",
"0x55d276a26865: <std::collections::hash::map::HashMap<K,V,S> as core::iter::traits::collect::Extend<(K,V)>>::extend (collections/hash/map.rs:3144:9)",
"0x55d276a26865: <std::collections::hash::map::HashMap<K,V,S> as core::iter::traits::collect::FromIterator<(K,V)>>::from_iter (collections/hash/map.rs:3129:13)",
"0x55d276a26865: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a26865: truck_meshalgo::tessellation::triangulation::triangulation_into_polymesh (src/tessellation/triangulation.rs:603:10)",
"0x55d276a26865: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:528:20)",
"0x55d276a6a220: truck_meshalgo::tessellation::triangulation::shell_create_polygon::{{closure}} (src/tessellation/triangulation.rs:218:14)",
"0x55d276a6a220: truck_meshalgo::tessellation::triangulation::shell_create_polygon (src/tessellation/triangulation.rs:216:40)",
"0x55d276a6a220: truck_meshalgo::tessellation::triangulation::shell_tessellation::{{closure}} (src/tessellation/triangulation.rs:92:9)",
"0x55d276a6a220: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut (src/ops/function.rs:272:13)",
"0x55d276a6a220: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d276a6a220: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d276a6a220: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d276a6a220: rayon::iter::plumbing::Folder::consume_iter (iter/plumbing/mod.rs:177:21)",
"0x55d276a6a220: <rayon::iter::map::MapFolder<C,F> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/map.rs:248:21)",
"0x55d276a6a220: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d276a6a220: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d276a767be: rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (iter/plumbing/mod.rs:426:21)",
"0x55d276a767be: rayon_core::join::join_context::call_b::{{closure}} (src/join/mod.rs:129:25)",
"0x55d276a767be: rayon_core::job::JobResult<T>::call::{{closure}} (rayon-core-1.12.1/src/job.rs:218:41)",
"0x55d276a767be: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d276a767be: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d276a767be: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d276a767be: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d276a767be: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d276a767be: rayon_core::job::JobResult<T>::call (rayon-core-1.12.1/src/job.rs:218:15)",
"0x55d276a767be: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.12.1/src/job.rs:120:32)",
"0x55d276acc330: rayon_core::job::JobRef::execute (rayon-core-1.12.1/src/job.rs:64:9)",
"0x55d276acc330: rayon_core::registry::WorkerThread::execute (rayon-core-1.12.1/src/registry.rs:860:13)",
"0x55d276acc330: rayon_core::registry::WorkerThread::wait_until_cold (rayon-core-1.12.1/src/registry.rs:794:26)",
"0x55d276ace8d6: rayon_core::registry::WorkerThread::wait_until (rayon-core-1.12.1/src/registry.rs:769:13)",
"0x55d276ace8d6: rayon_core::registry::WorkerThread::wait_until_out_of_work (rayon-core-1.12.1/src/registry.rs:818:9)",
"0x55d276ace8d6: rayon_core::registry::main_loop (rayon-core-1.12.1/src/registry.rs:923:5)",
"0x55d276ace8d6: rayon_core::registry::ThreadBuilder::run (rayon-core-1.12.1/src/registry.rs:53:18)",
"0x55d276ace8d6: <rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn::{{closure}} (rayon-core-1.12.1/src/registry.rs:98:20)",
"0x55d276ace8d6: std::sys::backtrace::__rust_begin_short_backtrace (src/sys/backtrace.rs:155:18)",
"0x55d276ace6ea: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (src/thread/mod.rs:542:17)",
"0x55d276ace6ea: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d276ace6ea: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d276ace6ea: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d276ace6ea: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d276ace6ea: std::thread::Builder::spawn_unchecked_::{{closure}} (src/thread/mod.rs:541:30)",
"0x55d276ace6ea: core::ops::function::FnOnce::call_once{{vtable.shim}} (src/ops/function.rs:250:5)",
"0x55d276b1884b: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once (alloc/src/boxed.rs:2064:9)",
"0x55d276b1884b: std::sys::pal::unix::thread::Thread::new::thread_start (pal/unix/thread.rs:108:17)",
"0x55d276a736ad: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a736ad: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a736ad: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a736ad: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a736ad: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d276a736ad: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d276a736ad: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d276a736ad: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d276a736ad: <truck_geometry::nurbs::BSplineCurve<P> as core::clone::Clone>::clone (src/nurbs/mod.rs:50:5)",
"0x55d276a736ad: <truck_geometry::nurbs::NurbsCurve<V> as core::clone::Clone>::clone (src/nurbs/mod.rs:118:10)",
"0x55d276a736ad: <truck_modeling::geometry::Curve as core::clone::Clone>::clone (truck-modeling/src/geometry.rs:54:16)",
"0x55d276a2ab9c: truck_topology::edge::<impl truck_topology::Edge<P,C>>::curve (truck-topology/src/edge.rs:255:9)",
"0x55d276a2ab9c: truck_modeling::topo_impls::create_surface (truck-modeling/src/topo_impls.rs:25:37)",
"0x55d276a2ab9c: truck_modeling::topo_impls::sub_connect_wires (truck-modeling/src/topo_impls.rs:74:19)",
"0x55d276a2ab9c: truck_modeling::topo_impls::connect_raw_wires::{{closure}} (truck-modeling/src/topo_impls.rs:118:9)",
"0x55d276a2ab9c: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d276a2ab9c: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d276a2ab9c: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d276a2ab9c: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d276a2ab9c: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d276a2ab9c: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d276a2ab9c: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (truck-modeling/src/sweep.rs:235:15)",
"0x55d276a2ab9c: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d276a83afa: test_truck::main (test-truck/src/main.rs:60:20)",
"0x55d276a73e34: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a73e34: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a73e34: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a73e34: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a73e34: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d276a73e34: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d276a73e34: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d276a73e34: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d276a73e34: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x55d276a73e34: <truck_geometry::nurbs::BSplineSurface<P> as core::clone::Clone>::clone (src/nurbs/mod.rs:114:5)",
"0x55d276a73e34: <truck_geometry::nurbs::NurbsSurface<V> as core::clone::Clone>::clone (src/nurbs/mod.rs:122:10)",
"0x55d276a73e34: <truck_modeling::geometry::Surface as core::clone::Clone>::clone (truck-modeling/src/geometry.rs:171:18)",
"0x55d276a73745: <T as core::clone::CloneToUninit>::clone_to_uninit (core/src/clone.rs:278:29)",
"0x55d276a73745: <alloc::boxed::Box<T,A> as core::clone::Clone>::clone (alloc/src/boxed.rs:1351:13)",
"0x55d276a73745: <truck_geometry::decorators::IntersectionCurve<C,S> as core::clone::Clone>::clone (src/decorators/mod.rs:131:5)",
"0x55d276a73745: <truck_modeling::geometry::Curve as core::clone::Clone>::clone (truck-modeling/src/geometry.rs:56:23)",
"0x55d276a79651: truck_topology::edge::<impl truck_topology::Edge<P,C>>::curve (truck-topology/src/edge.rs:255:9)",
"0x55d276a79651: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:186:69)",
"0x55d276a79651: std::collections::hash::map::Entry<K,V>::or_insert_with (collections/hash/map.rs:2666:43)",
"0x55d276a79651: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}} (transversal/loops_store/mod.rs:185:21)",
"0x55d276a79651: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a79651: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a79651: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a3d5d1: <alloc::collections::vec_deque::iter_mut::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (collections/vec_deque/iter_mut.rs:71:21)",
"0x55d276a3d5d1: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d276a3d5d1: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d276a3d5d1: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d276a3d5d1: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a3d5d1: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a3d5d1: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d276a3d5d1: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d276a3d5d1: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d276a3d5d1: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d276a3d5d1: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d276a3d5d1: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex (transversal/loops_store/mod.rs:183:14)",
"0x55d276a3d5d1: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::change_vertex::{{closure}} (transversal/loops_store/mod.rs:295:31)",
"0x55d276a3d5d1: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d276a3d5d1: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::change_vertex (transversal/loops_store/mod.rs:294:9)",
"0x55d276a3d5d1: truck_shapeops::transversal::loops_store::LoopsStore<cgmath::point::Point3<f64>,C>::add_geom_vertex (transversal/loops_store/mod.rs:359:22)",
"0x55d276a36103: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:511:25)",
"0x55d276a0a504: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d276a0a504: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::try_fold (src/vec/into_iter.rs:340:25)",
"0x55d276a0a504: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d276a0a504: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:479:14)",
"0x55d276a0a504: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a0a504: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d276a0a504: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a0a504: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d276a0a504: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d276a3f7d5: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:507:30)",
"0x55d276a3f7d5: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d276a3f7d5: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a3f7d5: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d276a3f7d5: <core::iter::adapters::fuse::Fuse<I> as core::iter::adapters::fuse::FuseImpl<I>>::try_fold (iter/adapters/fuse.rs:375:19)",
"0x55d276a3f7d5: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/fuse.rs:89:9)",
"0x55d276a3f7d5: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_try_fold (iter/adapters/flatten.rs:515:25)",
"0x55d276a3f7d5: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/flatten.rs:653:9)",
"0x55d276a3f7d5: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/flatten.rs:81:20)",
"0x55d276a3f7d5: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:14)",
"0x55d276a3f7d5: truck_shapeops::transversal::loops_store::create_loops_stores (transversal/loops_store/mod.rs:464:10)",
"0x55d276a3f7d5: truck_shapeops::transversal::integrate::process_one_pair_of_shells (transversal/integrate/mod.rs:62:9)",
"0x55d276a416f0: truck_shapeops::transversal::integrate::and (transversal/integrate/mod.rs:112:30)",
"0x55d276a848f9: test_truck::main (test-truck/src/main.rs:86:26)",
"0x55d276a7a49e: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a7a49e: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a7a49e: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a7a49e: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a7a49e: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d276a7a49e: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d276a7a49e: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d276a7a49e: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d276a7a49e: <truck_polymesh::PolylineCurve<P> as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:101:29)",
"0x55d276a7a49e: truck_topology::edge::<impl truck_topology::Edge<P,C>>::curve (truck-topology/src/edge.rs:255:9)",
"0x55d276a7a49e: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:190:70)",
"0x55d276a7a49e: std::collections::hash::map::Entry<K,V>::or_insert_with (collections/hash/map.rs:2666:43)",
"0x55d276a7a49e: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}} (transversal/loops_store/mod.rs:189:21)",
"0x55d276a7a49e: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a7a49e: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a7a49e: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a39b91: <alloc::collections::vec_deque::iter_mut::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (collections/vec_deque/iter_mut.rs:71:21)",
"0x55d276a39b91: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d276a39b91: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d276a39b91: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d276a39b91: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a39b91: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a39b91: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d276a39b91: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d276a39b91: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d276a39b91: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d276a39b91: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d276a39b91: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex (transversal/loops_store/mod.rs:183:14)",
"0x55d276a39b91: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::change_vertex::{{closure}} (transversal/loops_store/mod.rs:295:31)",
"0x55d276a39b91: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d276a39b91: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::change_vertex (transversal/loops_store/mod.rs:294:9)",
"0x55d276a39b91: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::add_polygon_vertex (transversal/loops_store/mod.rs:326:22)",
"0x55d276a361a3: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:522:25)",
"0x55d276a83cfd: test_truck::main (test-truck/src/main.rs:69:22)",
"0x55d276b505df: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276b505df: truck_geotrait::algo::curve::sub_parameter_division (alloc/src/macros.rs:54:13)",
"0x55d276b506ce: truck_geotrait::algo::curve::sub_parameter_division (src/algo/curve.rs:117:37)",
"0x55d276b50528: truck_geotrait::algo::curve::sub_parameter_division (src/algo/curve.rs:109:37)",
"0x55d276b4f0e8: truck_geotrait::algo::curve::parameter_division (src/algo/curve.rs:79:5)",
"0x55d276b4f0e8: truck_geometry::decorators::intersection_curve::<impl truck_geotrait::traits::curve::ParameterDivision1D for truck_geometry::decorators::IntersectionCurve<C,S>>::parameter_division (src/decorators/intersection_curve.rs:168:9)",
"0x55d276b4f0e8: <truck_modeling::geometry::Curve as truck_geotrait::traits::curve::ParameterDivision1D>::parameter_division (truck-modeling/src/geometry.rs:42:5)",
"0x55d276a6d65e: <&C as truck_geotrait::traits::curve::ParameterDivision1D>::parameter_division (src/traits/curve.rs:155:9)",
"0x55d276a6d65e: truck_polymesh::meshing_shape::<impl truck_polymesh::PolylineCurve<P>>::from_curve (truck-polymesh/src/meshing_shape.rs:7:23)",
"0x55d276a6d65e: truck_meshalgo::tessellation::triangulation::shell_tessellation::{{closure}} (src/tessellation/triangulation.rs:73:24)",
"0x55d276a6d65e: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut (src/ops/function.rs:272:13)",
"0x55d276a6d65e: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d276a6d65e: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d276a6d65e: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d276a6d65e: rayon::iter::plumbing::Folder::consume_iter (iter/plumbing/mod.rs:177:21)",
"0x55d276a6d65e: <rayon::iter::map::MapFolder<C,F> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/map.rs:248:21)",
"0x55d276a6d65e: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d276a6d65e: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d276a7df00: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a7df00: hashbrown::raw::alloc::inner::do_alloc (src/raw/alloc.rs:15:15)",
"0x55d276a7df00: hashbrown::raw::RawTableInner::new_uninitialized (src/raw/mod.rs:1750:38)",
"0x55d276a7df00: hashbrown::raw::RawTableInner::fallible_with_capacity (src/raw/mod.rs:1788:30)",
"0x55d276a7df00: hashbrown::raw::RawTableInner::prepare_resize (src/raw/mod.rs:2864:13)",
"0x55d276a7df00: hashbrown::raw::RawTableInner::resize_inner (src/raw/mod.rs:3060:34)",
"0x55d276a7df00: hashbrown::raw::RawTableInner::reserve_rehash_inner (src/raw/mod.rs:2950:13)",
"0x55d276a7df00: hashbrown::raw::RawTable<T,A>::reserve_rehash (src/raw/mod.rs:1231:13)",
"0x55d276a64842: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d276a64842: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d276a64842: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.14.5/src/rustc_entry.rs:46:18)",
"0x55d276a64842: std::collections::hash::map::HashMap<K,V,S>::entry (collections/hash/map.rs:856:19)",
"0x55d276a64842: truck_shapeops::transversal::divide_face::create_parameter_boundary::{{closure}} (transversal/divide_face/mod.rs:25:26)",
"0x55d276a64842: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a64842: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a2d327: <alloc::collections::vec_deque::iter::Iter<T> as core::iter::traits::iterator::Iterator>::try_fold (collections/vec_deque/iter.rs:89:19)",
"0x55d276a2d327: truck_shapeops::transversal::divide_face::create_parameter_boundary (transversal/divide_face/mod.rs:24:15)",
"0x55d276a2d327: truck_shapeops::transversal::divide_face::divide_one_face::{{closure}} (transversal/divide_face/mod.rs:64:20)",
"0x55d276a2d327: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d276a2d327: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a2d327: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d276a2d327: truck_shapeops::transversal::divide_face::divide_one_face (transversal/divide_face/mod.rs:63:18)",
"0x55d276a2d327: truck_shapeops::transversal::divide_face::divide_faces::{{closure}} (transversal/divide_face/mod.rs:122:27)",
"0x55d276a2d327: truck_shapeops::transversal::divide_face::divide_faces (transversal/divide_face/mod.rs:115:10)",
"0x55d276a3f96f: truck_shapeops::transversal::integrate::process_one_pair_of_shells (transversal/integrate/mod.rs:63:20)",
"0x55d276a7d4ab: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a7d4ab: hashbrown::raw::alloc::inner::do_alloc (src/raw/alloc.rs:15:15)",
"0x55d276a7d4ab: hashbrown::raw::RawTableInner::new_uninitialized (src/raw/mod.rs:1750:38)",
"0x55d276a7d4ab: hashbrown::raw::RawTableInner::fallible_with_capacity (src/raw/mod.rs:1788:30)",
"0x55d276a7d4ab: hashbrown::raw::RawTableInner::prepare_resize (src/raw/mod.rs:2864:13)",
"0x55d276a7d4ab: hashbrown::raw::RawTableInner::resize_inner (src/raw/mod.rs:3060:34)",
"0x55d276a7d4ab: hashbrown::raw::RawTableInner::reserve_rehash_inner (src/raw/mod.rs:2950:13)",
"0x55d276a7d4ab: hashbrown::raw::RawTable<T,A>::reserve_rehash (src/raw/mod.rs:1231:13)",
"0x55d276a0fc88: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d276a0fc88: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d276a0fc88: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.14.5/src/rustc_entry.rs:46:18)",
"0x55d276a0fc88: std::collections::hash::map::HashMap<K,V,S>::entry (collections/hash/map.rs:856:19)",
"0x55d276a0fc88: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert (truck-base/src/entry_map.rs:59:14)",
"0x55d276a0fc88: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices::{{closure}} (truck-topology/src/shell.rs:532:37)",
"0x55d276a0fc88: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a0fc88: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a0fc88: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a0fc88: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d276a0fc88: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d276a0fc88: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d276a0fc88: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a0fc88: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d276a0fc88: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d276a0fc88: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d276a0fc88: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d276a0fc88: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d276a0fc88: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices (truck-topology/src/shell.rs:528:14)",
"0x55d276a0fc88: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:26:24)",
"0x55d276a0fc88: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d276a0fc88: <truck_topology::Solid<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:300:9)",
"0x55d276a83d41: test_truck::main (test-truck/src/main.rs:70:17)",
"0x55d276a7cf20: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a7cf20: hashbrown::raw::alloc::inner::do_alloc (src/raw/alloc.rs:15:15)",
"0x55d276a7cf20: hashbrown::raw::RawTableInner::new_uninitialized (src/raw/mod.rs:1750:38)",
"0x55d276a7cf20: hashbrown::raw::RawTableInner::fallible_with_capacity (src/raw/mod.rs:1788:30)",
"0x55d276a7cf20: hashbrown::raw::RawTableInner::prepare_resize (src/raw/mod.rs:2864:13)",
"0x55d276a7cf20: hashbrown::raw::RawTableInner::resize_inner (src/raw/mod.rs:3060:34)",
"0x55d276a7cf20: hashbrown::raw::RawTableInner::reserve_rehash_inner (src/raw/mod.rs:2950:13)",
"0x55d276a7cf20: hashbrown::raw::RawTable<T,A>::reserve_rehash (src/raw/mod.rs:1231:13)",
"0x55d276a0f4d0: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d276a0f4d0: hashbrown::raw::RawTable<T,A>::find_or_find_insert_slot (src/raw/mod.rs:1413:9)",
"0x55d276a0f4d0: hashbrown::map::HashMap<K,V,S,A>::insert (hashbrown-0.14.5/src/map.rs:1754:15)",
"0x55d276a0f4d0: std::collections::hash::map::HashMap<K,V,S>::insert (collections/hash/map.rs:1106:9)",
"0x55d276a0f4d0: truck_topology::shell::Boundaries<C>::insert (truck-topology/src/shell.rs:1097:33)",
"0x55d276a0f4d0: <truck_topology::shell::Boundaries<C> as core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>>>::from_iter::{{closure}} (truck-topology/src/shell.rs:1126:42)",
"0x55d276a0f4d0: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a0f4d0: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a0f4d0: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d276a0f4d0: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d276a0f4d0: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d276a0f4d0: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d276a0f4d0: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d276a0f4d0: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d276a0f4d0: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d276a0f4d0: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:321:9)",
"0x55d276a0f4d0: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d276a0f4d0: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a0f4d0: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a0f4d0: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d276a0f4d0: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a0f4d0: <truck_topology::shell::Boundaries<C> as core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>>>::from_iter (truck-topology/src/shell.rs:1126:9)",
"0x55d276a0f4d0: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a0f4d0: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::shell_condition (truck-topology/src/shell.rs:133:26)",
"0x55d276a0f4d0: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:24:23)",
"0x55d276a0f4d0: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d276a0f4d0: <truck_topology::Solid<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:300:9)",
"0x55d276a84315: test_truck::main (test-truck/src/main.rs:77:17)",
"0x55d276b58279: alloc::raw_vec::finish_grow (core/src/result.rs:0:0)",
"0x55d276b57ebc: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:486:19)",
"0x55d276b57ebc: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:349:31)",
"0x55d276b57b57: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:355:13)",
"0x55d276b57b57: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:972:18)",
"0x55d276b57b57: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2146:14)",
"0x55d276b57b57: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,alloc::vec::into_iter::IntoIter<T>>>::spec_extend (src/vec/spec_extend.rs:33:13)",
"0x55d276b57b57: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d276b57b57: truck_polymesh::polygon_mesh::<impl truck_polymesh::PolygonMesh>::merge (truck-polymesh/src/polygon_mesh.rs:123:33)",
"0x55d276a84a2d: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon::{{closure}} (src/tessellation/mod.rs:84:13)",
"0x55d276a84a2d: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d276a84a2d: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon (src/tessellation/mod.rs:83:9)",
"0x55d276a84a2d: test_truck::main (test-truck/src/main.rs:87:17)",
"0x55d276a044ca: truck_topology::edge::<impl truck_topology::Edge<P,C>>::oriented_curve (truck-topology/src/edge.rs:322:21)",
"0x55d276a044ca: truck_modeling::builder::try_attach_plane::{{closure}}::{{closure}} (truck-modeling/src/builder.rs:407:21)",
"0x55d276a044ca: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d276a044ca: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d276a044ca: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d276a044ca: <core::iter::adapters::fuse::Fuse<I> as core::iter::adapters::fuse::FuseImpl<I>>::next (iter/adapters/fuse.rs:359:9)",
"0x55d276a044ca: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/fuse.rs:50:9)",
"0x55d276a044ca: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next (iter/adapters/flatten.rs:610:29)",
"0x55d276a044ca: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/flatten.rs:66:9)",
"0x55d276a82051: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d276a82051: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d276a82051: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:43:9)",
"0x55d276a82051: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a82051: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a82051: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a82051: truck_modeling::builder::try_attach_plane::{{closure}} (truck-modeling/src/builder.rs:414:18)",
"0x55d276a82051: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a82051: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a82051: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a82051: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a82051: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d276a82051: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d276a82051: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d276a82051: truck_modeling::builder::try_attach_plane (truck-modeling/src/builder.rs:416:10)",
"0x55d276a82051: test_truck::main (test-truck/src/main.rs:59:16)",
"0x55d276a648a2: truck_shapeops::transversal::divide_face::create_parameter_boundary::{{closure}}::{{closure}} (transversal/divide_face/mod.rs:27:23)",
"0x55d276a648a2: std::collections::hash::map::Entry<K,V>::or_insert_with (collections/hash/map.rs:2666:43)",
"0x55d276a648a2: truck_shapeops::transversal::divide_face::create_parameter_boundary::{{closure}} (transversal/divide_face/mod.rs:25:20)",
"0x55d276a648a2: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a648a2: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a35e18: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a35e18: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a35e18: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a35e18: truck_topology::vertex::<impl truck_topology::Vertex<P>>::new (truck-topology/src/vertex.rs:17:20)",
"0x55d276a35e18: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:501:31)",
"0x55d276a83f5b: truck_shapeops::transversal::integrate::or (transversal/integrate/mod.rs:135:29)",
"0x55d276a83f5b: test_truck::main (test-truck/src/main.rs:76:21)",
"0x55d276b4eaf0: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276b4eaf0: truck_geometry::specifieds::line::<impl truck_geotrait::traits::curve::ParameterDivision1D for truck_geometry::specifieds::Line<P>>::parameter_division (alloc/src/macros.rs:54:13)",
"0x55d276b4eaf0: <truck_modeling::geometry::Curve as truck_geotrait::traits::curve::ParameterDivision1D>::parameter_division (truck-modeling/src/geometry.rs:42:5)",
"0x55d276b505a8: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276b505a8: truck_geotrait::algo::curve::sub_parameter_division (alloc/src/macros.rs:54:13)",
"0x55d276a68c62: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:486:19)",
"0x55d276a68c62: alloc::raw_vec::RawVec<T,A>::grow_one (alloc/src/raw_vec.rs:364:27)",
"0x55d276a713e2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276a713e2: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::get_conflict_resolutions (spade-2.12.1/src/cdt.rs:958:21)",
"0x55d276a713e2: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::try_add_constraint_inner (spade-2.12.1/src/cdt.rs:817:13)",
"0x55d276a713e2: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::add_constraint (spade-2.12.1/src/cdt.rs:550:9)",
"0x55d276a26ce8: truck_meshalgo::tessellation::triangulation::insert_surface::{{closure}}::{{closure}} (src/tessellation/triangulation.rs:564:25)",
"0x55d276a26ce8: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a26ce8: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::fold (iter/adapters/zip.rs:287:25)",
"0x55d276a26ce8: <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/zip.rs:103:9)",
"0x55d276a26ce8: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d276a26ce8: truck_meshalgo::tessellation::triangulation::insert_surface::{{closure}} (src/tessellation/triangulation.rs:560:40)",
"0x55d276a26ce8: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d276a26ce8: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a26ce8: truck_meshalgo::tessellation::triangulation::insert_surface (src/tessellation/triangulation.rs:559:27)",
"0x55d276a26ce8: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:527:5)",
"0x55d2769ffe2a: rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (iter/plumbing/mod.rs:417:21)",
"0x55d2769ffe2a: rayon_core::join::join_context::call_a::{{closure}} (src/join/mod.rs:124:17)",
"0x55d2769ffe2a: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d2769ffe2a: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d2769ffe2a: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d2769ffe2a: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d2769ffe2a: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d2769ffe2a: rayon_core::join::join_context::{{closure}} (src/join/mod.rs:142:24)",
"0x55d276a6a8d1: rayon_core::registry::in_worker (rayon-core-1.12.1/src/registry.rs:0:0)",
"0x55d276a6a8d1: rayon_core::join::join_context (src/join/mod.rs:132:5)",
"0x55d276a6a8d1: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:415:47)",
"0x55d276a77afd: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a77afd: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a77afd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a77afd: alloc::collections::vec_deque::VecDeque<T,A>::with_capacity_in (collections/vec_deque/mod.rs:619:42)",
"0x55d276a77afd: <alloc::collections::vec_deque::VecDeque<T,A> as core::clone::Clone>::clone (collections/vec_deque/mod.rs:111:23)",
"0x55d276a72d06: truck_topology::wire::<impl core::clone::Clone for truck_topology::Wire<P,C>>::clone (truck-topology/src/wire.rs:778:24)",
"0x55d276a72d06: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x55d276a72d06: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d276a72d06: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d276a72d06: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d276a3e639: truck_topology::face::<impl core::clone::Clone for truck_topology::Face<P,C,S>>::clone (truck-topology/src/face.rs:1029:25)",
"0x55d276a3e639: truck_shapeops::transversal::faces_classification::FacesClassification<P,C,S>::and_or_unknown (transversal/faces_classification/mod.rs:30:49)",
"0x55d276a404d5: truck_shapeops::transversal::integrate::process_one_pair_of_shells (transversal/integrate/mod.rs:82:41)",
"0x55d276a7b472: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a7b472: hashbrown::raw::alloc::inner::do_alloc (src/raw/alloc.rs:15:15)",
"0x55d276a7b472: hashbrown::raw::RawTableInner::new_uninitialized (src/raw/mod.rs:1750:38)",
"0x55d276a7b472: hashbrown::raw::RawTableInner::fallible_with_capacity (src/raw/mod.rs:1788:30)",
"0x55d276a7b472: hashbrown::raw::RawTableInner::prepare_resize (src/raw/mod.rs:2864:13)",
"0x55d276a7b472: hashbrown::raw::RawTableInner::resize_inner (src/raw/mod.rs:3060:34)",
"0x55d276a7b472: hashbrown::raw::RawTableInner::reserve_rehash_inner (src/raw/mod.rs:2950:13)",
"0x55d276a7b472: hashbrown::raw::RawTable<T,A>::reserve_rehash (src/raw/mod.rs:1231:13)",
"0x55d276a0e636: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d276a0e636: hashbrown::raw::RawTable<T,A>::find_or_find_insert_slot (src/raw/mod.rs:1413:9)",
"0x55d276a0e636: hashbrown::map::HashMap<K,V,S,A>::insert (hashbrown-0.14.5/src/map.rs:1754:15)",
"0x55d276a0e636: hashbrown::set::HashSet<T,S,A>::insert (hashbrown-0.14.5/src/set.rs:1115:9)",
"0x55d276a0e636: std::collections::hash::set::HashSet<T,S>::insert (collections/hash/set.rs:890:19)",
"0x55d276a0e636: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency::{{closure}} (truck-topology/src/shell.rs:231:26)",
"0x55d276a0e636: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a0e636: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a0e636: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d276a0e636: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d276a0e636: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d276a0e636: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d276a0e636: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d276a0e636: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d276a0e636: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d276a0e636: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:321:9)",
"0x55d276a0e636: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d276a0e636: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a0e636: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a0e636: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d276a0e636: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d276a0e636: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency (truck-topology/src/shell.rs:230:26)",
"0x55d276a0e636: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::is_connected (truck-topology/src/shell.rs:405:29)",
"0x55d276a0e636: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:22:24)",
"0x55d276a0e636: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d276a0e636: <truck_topology::Solid<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:300:9)",
"0x55d276a84945: test_truck::main (test-truck/src/main.rs:87:17)",
"0x55d276b4fd59: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276b4fd59: truck_geotrait::algo::curve::sub_parameter_division (alloc/src/macros.rs:54:13)",
"0x55d276b4fcdc: truck_geotrait::algo::curve::sub_parameter_division (src/algo/curve.rs:109:37)",
"0x55d276b4fe83: truck_geotrait::algo::curve::sub_parameter_division (src/algo/curve.rs:117:37)",
"0x55d276b4ef6d: truck_geotrait::algo::curve::parameter_division (src/algo/curve.rs:79:5)",
"0x55d276b4ef6d: truck_geometry::nurbs::nurbscurve::<impl truck_geotrait::traits::curve::ParameterDivision1D for truck_geometry::nurbs::NurbsCurve<V>>::parameter_division (src/nurbs/nurbscurve.rs:424:9)",
"0x55d276b4ef6d: <truck_modeling::geometry::Curve as truck_geotrait::traits::curve::ParameterDivision1D>::parameter_division (truck-modeling/src/geometry.rs:42:5)",
"0x55d276a01850: rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (iter/plumbing/mod.rs:417:21)",
"0x55d276a01850: rayon_core::join::join_context::call_a::{{closure}} (src/join/mod.rs:124:17)",
"0x55d276a01850: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d276a01850: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d276a01850: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d276a01850: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d276a01850: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d276a01850: rayon_core::join::join_context::{{closure}} (src/join/mod.rs:142:24)",
"0x55d276a6dbd6: rayon_core::registry::in_worker (rayon-core-1.12.1/src/registry.rs:0:0)",
"0x55d276a6dbd6: rayon_core::join::join_context (src/join/mod.rs:132:5)",
"0x55d276a6dbd6: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:415:47)",
"0x55d276a736d4: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a736d4: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:529:13)",
"0x55d276a736d4: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:491:15)",
"0x55d276a736d4: <alloc::boxed::Box<T,A> as core::clone::Clone>::clone (alloc/src/boxed.rs:1349:25)",
"0x55d276a736d4: <truck_geometry::decorators::IntersectionCurve<C,S> as core::clone::Clone>::clone (src/decorators/mod.rs:130:5)",
"0x55d276a736d4: <truck_modeling::geometry::Curve as core::clone::Clone>::clone (truck-modeling/src/geometry.rs:56:23)",
"0x55d276a798da: truck_topology::edge::<impl truck_topology::Edge<P,C>>::curve (truck-topology/src/edge.rs:255:9)",
"0x55d276a798da: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:190:70)",
"0x55d276a798da: std::collections::hash::map::Entry<K,V>::or_insert_with (collections/hash/map.rs:2666:43)",
"0x55d276a798da: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}} (transversal/loops_store/mod.rs:189:21)",
"0x55d276a798da: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a798da: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a798da: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a3d3d1: <alloc::collections::vec_deque::iter_mut::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (collections/vec_deque/iter_mut.rs:71:21)",
"0x55d276a3d3d1: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d276a3d3d1: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d276a3d3d1: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d276a3d3d1: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a3d3d1: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a3d3d1: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d276a3d3d1: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d276a3d3d1: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d276a3d3d1: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d276a3d3d1: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d276a3d3d1: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex (transversal/loops_store/mod.rs:183:14)",
"0x55d276a3d3d1: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::change_vertex::{{closure}} (transversal/loops_store/mod.rs:295:31)",
"0x55d276a3d3d1: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d276a3d3d1: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::change_vertex (transversal/loops_store/mod.rs:294:9)",
"0x55d276a3d3d1: truck_shapeops::transversal::loops_store::LoopsStore<cgmath::point::Point3<f64>,C>::add_geom_vertex (transversal/loops_store/mod.rs:366:22)",
"0x55d276a3620d: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:524:25)",
"0x55d276a3f42b: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d276a3f42b: hashbrown::raw::RawTable<T,A>::find_or_find_insert_slot (src/raw/mod.rs:1413:9)",
"0x55d276a3f42b: hashbrown::map::HashMap<K,V,S,A>::insert (hashbrown-0.14.5/src/map.rs:1754:15)",
"0x55d276a3f42b: std::collections::hash::map::HashMap<K,V,S>::insert (collections/hash/map.rs:1106:9)",
"0x55d276a3f42b: truck_shapeops::transversal::faces_classification::FacesClassification<P,C,S>::push (transversal/faces_classification/mod.rs:22:21)",
"0x55d276a2e0dd: truck_shapeops::transversal::divide_face::divide_faces::{{closure}}::{{closure}} (transversal/divide_face/mod.rs:124:48)",
"0x55d276a2e0dd: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a2e0dd: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d276a2e0dd: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a2e0dd: truck_shapeops::transversal::divide_face::divide_faces::{{closure}} (transversal/divide_face/mod.rs:124:22)",
"0x55d276a2e0dd: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d276a2e0dd: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a2e0dd: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d276a2e0dd: truck_shapeops::transversal::divide_face::divide_faces (transversal/divide_face/mod.rs:115:10)",
"0x55d276a3fbe4: truck_shapeops::transversal::integrate::process_one_pair_of_shells (transversal/integrate/mod.rs:65:20)",
"0x55d276a64445: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a64445: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a64445: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a64445: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a64445: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276a64445: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55d276a64445: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a64445: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a64445: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a64445: <core::option::Option<V> as core::iter::traits::collect::FromIterator<core::option::Option<A>>>::from_iter::{{closure}} (core/src/option.rs:2467:51)",
"0x55d276a64445: core::iter::adapters::try_process (iter/adapters/mod.rs:173:17)",
"0x55d276a64445: <core::option::Option<V> as core::iter::traits::collect::FromIterator<core::option::Option<A>>>::from_iter (core/src/option.rs:2467:9)",
"0x55d276a64445: truck_shapeops::transversal::divide_face::create_parameter_boundary::{{closure}} (transversal/divide_face/mod.rs:36:54)",
"0x55d276a64445: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a64445: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a2d387: <alloc::collections::vec_deque::iter::Iter<T> as core::iter::traits::iterator::Iterator>::try_fold (collections/vec_deque/iter.rs:90:9)",
"0x55d276a2d387: truck_shapeops::transversal::divide_face::create_parameter_boundary (transversal/divide_face/mod.rs:24:15)",
"0x55d276a2d387: truck_shapeops::transversal::divide_face::divide_one_face::{{closure}} (transversal/divide_face/mod.rs:64:20)",
"0x55d276a2d387: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d276a2d387: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a2d387: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d276a2d387: truck_shapeops::transversal::divide_face::divide_one_face (transversal/divide_face/mod.rs:63:18)",
"0x55d276a2d387: truck_shapeops::transversal::divide_face::divide_faces::{{closure}} (transversal/divide_face/mod.rs:122:27)",
"0x55d276a2d387: truck_shapeops::transversal::divide_face::divide_faces (transversal/divide_face/mod.rs:115:10)",
"0x55d276a73d72: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a73d72: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a73d72: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a73d72: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a73d72: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x55d276a73d72: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d276a73d72: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d276a73d72: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d276a73d72: <truck_geometry::nurbs::BSplineSurface<P> as core::clone::Clone>::clone (src/nurbs/mod.rs:114:5)",
"0x55d276a73d72: <truck_geometry::nurbs::NurbsSurface<V> as core::clone::Clone>::clone (src/nurbs/mod.rs:122:10)",
"0x55d276a73d72: <truck_modeling::geometry::Surface as core::clone::Clone>::clone (truck-modeling/src/geometry.rs:171:18)",
"0x55d276a69008: truck_topology::face::<impl truck_topology::Face<P,C,S>>::surface (truck-topology/src/face.rs:509:9)",
"0x55d276a69008: truck_meshalgo::tessellation::triangulation::shell_tessellation::{{closure}} (src/tessellation/triangulation.rs:92:31)",
"0x55d276a69008: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut (src/ops/function.rs:272:13)",
"0x55d276a69008: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d276a69008: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d276a69008: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d276a69008: rayon::iter::plumbing::Folder::consume_iter (iter/plumbing/mod.rs:177:21)",
"0x55d276a69008: <rayon::iter::map::MapFolder<C,F> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/map.rs:248:21)",
"0x55d276a69008: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d276a69008: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d276a58220: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a58220: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a58220: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a58220: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a58220: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276a58220: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d276a58220: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a58220: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a58220: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a58220: <truck_shapeops::transversal::loops_store::LoopsStore<P,C> as core::iter::traits::collect::FromIterator<&truck_topology::Face<P,C,S>>>::from_iter (transversal/loops_store/mod.rs:129:48)",
"0x55d276a3f66d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a3f66d: truck_shapeops::transversal::loops_store::create_loops_stores (transversal/loops_store/mod.rs:457:75)",
"0x55d276a3f66d: truck_shapeops::transversal::integrate::process_one_pair_of_shells (transversal/integrate/mod.rs:62:9)",
"0x55d276a3a395: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a3a395: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a3a395: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a3a395: truck_topology::edge::<impl truck_topology::Edge<P,C>>::cut_with_parameter (truck-topology/src/edge.rs:457:20)",
"0x55d276a3a395: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::add_polygon_vertex (transversal/loops_store/mod.rs:331:38)",
"0x55d276a363dd: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:548:25)",
"0x55d276a29d31: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a29d31: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a29d31: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a29d31: truck_topology::face::<impl truck_topology::Face<P,C,S>>::new_unchecked (truck-topology/src/face.rs:64:22)",
"0x55d276a29d31: truck_topology::face::<impl truck_topology::Face<P,C,S>>::debug_new (truck-topology/src/face.rs:76:22)",
"0x55d276a29d31: truck_topology::face::<impl truck_topology::Face<P,C,S>>::mapped (truck-topology/src/face.rs:491:24)",
"0x55d276a29d31: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (truck-modeling/src/sweep.rs:232:23)",
"0x55d276a29d31: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d276a80c4f: test_truck::main (test-truck/src/main.rs:44:16)",
"0x55d276a57fd0: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a57fd0: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a57fd0: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a57fd0: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a57fd0: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276a57fd0: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d276a57fd0: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a57fd0: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a57fd0: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a57fd0: <truck_shapeops::transversal::loops_store::LoopsStore<P,C> as core::iter::traits::collect::FromIterator<&truck_topology::Face<P,C,S>>>::from_iter (transversal/loops_store/mod.rs:129:48)",
"0x55d276a3f64b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a3f64b: truck_shapeops::transversal::loops_store::create_loops_stores (transversal/loops_store/mod.rs:456:75)",
"0x55d276a3f64b: truck_shapeops::transversal::integrate::process_one_pair_of_shells (transversal/integrate/mod.rs:62:9)",
"0x55d276a07691: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:474:17)",
"0x55d276a07691: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d276a07691: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a07691: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d276a07691: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a07691: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d276a07691: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d276a09213: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a09213: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a09213: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a09213: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a09213: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276a09213: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d276a09213: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:246:9)",
"0x55d276a09213: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a09213: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a09213: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:170:10)",
"0x55d276a09213: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d276a09213: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d276a09213: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a09213: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d276a09213: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a09213: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d276a09213: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d2769fe2ba: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d2769fe2ba: truck_meshalgo::tessellation::triangulation::PolyBoundaryPiece::try_new::{{closure}} (alloc/src/macros.rs:54:13)",
"0x55d2769fe2ba: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:28)",
"0x55d2769fe2ba: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::try_fold (src/vec/into_iter.rs:340:25)",
"0x55d2769fe2ba: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d2769fe2ba: <core::iter::adapters::fuse::Fuse<I> as core::iter::adapters::fuse::FuseImpl<I>>::try_fold (iter/adapters/fuse.rs:375:19)",
"0x55d2769fe2ba: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/fuse.rs:89:9)",
"0x55d2769fe2ba: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_try_fold (iter/adapters/flatten.rs:515:25)",
"0x55d2769fe2ba: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/flatten.rs:653:9)",
"0x55d2769fe2ba: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/flatten.rs:81:9)",
"0x55d2769fe2ba: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/mod.rs:204:9)",
"0x55d2769fe2ba: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d2769fe2ba: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::next (iter/adapters/mod.rs:187:14)",
"0x55d2769fefd8: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d2769fefd8: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d2769fefd8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:43:9)",
"0x55d2769fefd8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d2769fefd8: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d2769fefd8: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d2769fefd8: <core::option::Option<V> as core::iter::traits::collect::FromIterator<core::option::Option<A>>>::from_iter::{{closure}} (core/src/option.rs:2467:51)",
"0x55d2769fefd8: core::iter::adapters::try_process (iter/adapters/mod.rs:173:17)",
"0x55d2769fefd8: <core::option::Option<V> as core::iter::traits::collect::FromIterator<core::option::Option<A>>>::from_iter (core/src/option.rs:2467:9)",
"0x55d2769fefd8: truck_meshalgo::tessellation::triangulation::PolyBoundaryPiece::try_new (src/tessellation/triangulation.rs:272:14)",
"0x55d2769fefd8: truck_meshalgo::tessellation::triangulation::shell_create_polygon::{{closure}} (src/tessellation/triangulation.rs:213:13)",
"0x55d2769fefd8: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:28)",
"0x55d2769fefd8: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d2769fefd8: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d2769fefd8: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/mod.rs:204:9)",
"0x55d2769fefd8: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d2769fefd8: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::next (iter/adapters/mod.rs:187:14)",
"0x55d276a690c5: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:26:32)",
"0x55d276a690c5: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a690c5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a690c5: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a690c5: <core::option::Option<V> as core::iter::traits::collect::FromIterator<core::option::Option<A>>>::from_iter::{{closure}} (core/src/option.rs:2467:51)",
"0x55d276a690c5: core::iter::adapters::try_process (iter/adapters/mod.rs:173:17)",
"0x55d276a690c5: <core::option::Option<V> as core::iter::traits::collect::FromIterator<core::option::Option<A>>>::from_iter (core/src/option.rs:2467:9)",
"0x55d276a690c5: truck_meshalgo::tessellation::triangulation::shell_create_polygon (src/tessellation/triangulation.rs:215:10)",
"0x55d276a690c5: truck_meshalgo::tessellation::triangulation::shell_tessellation::{{closure}} (src/tessellation/triangulation.rs:92:9)",
"0x55d276a690c5: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut (src/ops/function.rs:272:13)",
"0x55d276a690c5: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d276a690c5: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d276a690c5: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d276a690c5: rayon::iter::plumbing::Folder::consume_iter (iter/plumbing/mod.rs:177:21)",
"0x55d276a690c5: <rayon::iter::map::MapFolder<C,F> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/map.rs:248:21)",
"0x55d276a690c5: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d276a690c5: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d276a757a1: rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (rayon-core-1.12.1/src/registry.rs:522:21)",
"0x55d276a757a1: rayon_core::job::JobResult<T>::call::{{closure}} (rayon-core-1.12.1/src/job.rs:218:41)",
"0x55d276a757a1: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d276a757a1: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d276a757a1: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d276a757a1: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d276a757a1: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d276a757a1: rayon_core::job::JobResult<T>::call (rayon-core-1.12.1/src/job.rs:218:15)",
"0x55d276a757a1: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.12.1/src/job.rs:120:32)",
"0x55d276b1d8b2: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276b1d8b2: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276b1d8b2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276b1d8b2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276b1d8b2: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d276b1d8b2: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d276b1d8b2: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d276b1d8b2: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d276b1d8b2: truck_meshalgo::analyzers::collision::colliding_segment_pairs::{{closure}} (src/analyzers/collision.rs:113:26)",
"0x55d276b1d8b2: core::iter::adapters::filter_map::filter_map_try_fold::{{closure}} (iter/adapters/filter_map.rs:49:28)",
"0x55d276b1d8b2: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::try_fold (src/vec/into_iter.rs:340:25)",
"0x55d276b1d8b2: <core::iter::adapters::filter_map::FilterMap<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/filter_map.rs:140:9)",
"0x55d276b1d8b2: <core::iter::adapters::fuse::Fuse<I> as core::iter::adapters::fuse::FuseImpl<I>>::try_fold (iter/adapters/fuse.rs:375:19)",
"0x55d276b1d8b2: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/fuse.rs:89:9)",
"0x55d276b1d8b2: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_try_fold (iter/adapters/flatten.rs:515:25)",
"0x55d276b1d8b2: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/flatten.rs:653:9)",
"0x55d276b1d8b2: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/flatten.rs:313:9)",
"0x55d276b1d8b2: core::iter::traits::iterator::Iterator::find_map (iter/traits/iterator.rs:2913:9)",
"0x55d276b1d8b2: <core::iter::adapters::filter_map::FilterMap<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/filter_map.rs:64:9)",
"0x55d276a089b2: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d276a089b2: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d276a089b2: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:43:9)",
"0x55d276a089b2: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a089b2: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a089b2: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a089b2: truck_meshalgo::analyzers::collision::collision (src/analyzers/collision.rs:229:10)",
"0x55d276a089b2: <truck_polymesh::PolygonMesh as truck_meshalgo::analyzers::collision::Collision>::extract_interference (src/analyzers/collision.rs:34:9)",
"0x55d276a089b2: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:157:34)",
"0x55d276a089b2: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d276a089b2: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d276a089b2: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a089b2: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d276a089b2: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a089b2: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d276a089b2: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d276a0e360: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a0e360: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a0e360: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a0e360: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a0e360: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276a0e360: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d276a0e360: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a0e360: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a0e360: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a0e360: truck_topology::face::<impl truck_topology::Face<P,C,S>>::boundary_iters (truck-topology/src/face.rs:211:14)",
"0x55d276a0e360: truck_topology::face::<impl truck_topology::Face<P,C,S>>::edge_iter (truck-topology/src/face.rs:224:14)",
"0x55d276a0e360: core::ops::function::FnMut::call_mut (src/ops/function.rs:166:5)",
"0x55d276a0e360: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a0e360: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a0e360: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a0e360: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d276a0e360: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d276a0e360: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d276a0e360: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d276a0e360: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d276a0e360: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency (truck-topology/src/shell.rs:230:26)",
"0x55d276a0e360: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::is_connected (truck-topology/src/shell.rs:405:29)",
"0x55d276a0e360: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:22:24)",
"0x55d276a0e360: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d276a0e360: <truck_topology::Solid<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:300:9)",
"0x55d276a44efe: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a44efe: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a44efe: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a44efe: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a44efe: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276a44efe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d276a44efe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a44efe: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a44efe: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a44efe: truck_topology::face::<impl truck_topology::Face<P,C,S>>::boundary_iters (truck-topology/src/face.rs:211:14)",
"0x55d276a44efe: truck_topology::face::<impl truck_topology::Face<P,C,S>>::edge_iter (truck-topology/src/face.rs:224:14)",
"0x55d276a44efe: core::ops::function::FnMut::call_mut (src/ops/function.rs:166:5)",
"0x55d276a44efe: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a44efe: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a44efe: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a44efe: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d276a44efe: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d276a44efe: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d276a44efe: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d276a44efe: <core::iter::adapters::filter_map::FilterMap<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/filter_map.rs:148:9)",
"0x55d276a44efe: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a44efe: <hashbrown::map::HashMap<K,V,S,A> as core::iter::traits::collect::Extend<(K,V)>>::extend (hashbrown-0.14.5/src/map.rs:6511:9)",
"0x55d276a44efe: <std::collections::hash::map::HashMap<K,V,S> as core::iter::traits::collect::Extend<(K,V)>>::extend (collections/hash/map.rs:3144:9)",
"0x55d276a44efe: <std::collections::hash::map::HashMap<K,V,S> as core::iter::traits::collect::FromIterator<(K,V)>>::from_iter (collections/hash/map.rs:3129:13)",
"0x55d276a44efe: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::extract_boundaries (truck-topology/src/shell.rs:180:14)",
"0x55d276a3e9e9: truck_shapeops::transversal::faces_classification::FacesClassification<P,C,S>::integrate_by_component (transversal/faces_classification/mod.rs:40:28)",
"0x55d276a3fc2f: truck_shapeops::transversal::integrate::process_one_pair_of_shells (transversal/integrate/mod.rs:66:5)",
"0x55d276a80c6c: test_truck::main (test-truck/src/main.rs:47:17)",
"0x55d276a3ea00: truck_shapeops::transversal::faces_classification::FacesClassification<P,C,S>::integrate_by_component (transversal/faces_classification/mod.rs:41:27)",
"0x55d276a3fbbd: truck_shapeops::transversal::integrate::process_one_pair_of_shells (transversal/integrate/mod.rs:64:5)",
"0x55d276a33c5c: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a33c5c: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a33c5c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a33c5c: alloc::collections::vec_deque::VecDeque<T,A>::with_capacity_in (collections/vec_deque/mod.rs:619:42)",
"0x55d276a33c5c: alloc::collections::vec_deque::VecDeque<T,A>::split_off (collections/vec_deque/mod.rs:1979:25)",
"0x55d276a33c5c: truck_topology::wire::<impl truck_topology::Wire<P,C>>::split_off (truck-topology/src/wire.rs:146:24)",
"0x55d276a33c5c: truck_shapeops::transversal::loops_store::Loops<P,C>::add_edge (transversal/loops_store/mod.rs:259:54)",
"0x55d276a36a52: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:563:21)",
"0x55d276a0e18b: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a0e18b: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a0e18b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a0e18b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a0e18b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276a0e18b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d276a0e18b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a0e18b: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a0e18b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a0e18b: <truck_topology::Solid<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:299:14)",
"0x55d276a64866: truck_topology::edge::<impl truck_topology::Edge<P,C>>::curve (truck-topology/src/edge.rs:255:9)",
"0x55d276a64866: truck_shapeops::transversal::divide_face::create_parameter_boundary::{{closure}}::{{closure}} (transversal/divide_face/mod.rs:26:25)",
"0x55d276a64866: std::collections::hash::map::Entry<K,V>::or_insert_with (collections/hash/map.rs:2666:43)",
"0x55d276a64866: truck_shapeops::transversal::divide_face::create_parameter_boundary::{{closure}} (transversal/divide_face/mod.rs:25:20)",
"0x55d276a64866: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a64866: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a68afa: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:486:19)",
"0x55d276a68afa: alloc::raw_vec::RawVec<T,A>::grow_one (alloc/src/raw_vec.rs:364:27)",
"0x55d276a71544: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276a71544: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::resolve_conflict_groups (spade-2.12.1/src/cdt.rs:1055:21)",
"0x55d276a71544: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::try_add_constraint_inner (spade-2.12.1/src/cdt.rs:823:13)",
"0x55d276a71544: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::add_constraint (spade-2.12.1/src/cdt.rs:550:9)",
"0x55d276a7a540: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a7a540: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a7a540: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a7a540: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new_unchecked (truck-topology/src/edge.rs:45:20)",
"0x55d276a7a540: truck_topology::edge::<impl truck_topology::Edge<P,C>>::try_new (truck-topology/src/edge.rs:20:16)",
"0x55d276a7a540: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new (truck-topology/src/edge.rs:33:9)",
"0x55d276a7a540: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:186:25)",
"0x55d276a7a540: std::collections::hash::map::Entry<K,V>::or_insert_with (collections/hash/map.rs:2666:43)",
"0x55d276a7a540: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}} (transversal/loops_store/mod.rs:185:21)",
"0x55d276a7a540: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a7a540: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a7a540: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a39d01: <alloc::collections::vec_deque::iter_mut::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (collections/vec_deque/iter_mut.rs:71:21)",
"0x55d276a39d01: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d276a39d01: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d276a39d01: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d276a39d01: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a39d01: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a39d01: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d276a39d01: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d276a39d01: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d276a39d01: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d276a39d01: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d276a39d01: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex (transversal/loops_store/mod.rs:183:14)",
"0x55d276a39d01: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::change_vertex::{{closure}} (transversal/loops_store/mod.rs:295:31)",
"0x55d276a39d01: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d276a39d01: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::change_vertex (transversal/loops_store/mod.rs:294:9)",
"0x55d276a39d01: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::add_polygon_vertex (transversal/loops_store/mod.rs:320:22)",
"0x55d276a36099: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:509:25)",
"0x55d276b28943: alloc::alloc::alloc (alloc/src/alloc.rs:100:9)",
"0x55d276b28943: smallvec::SmallVec<A>::try_grow (smallvec-1.13.2/src/lib.rs:1191:46)",
"0x55d276b28943: smallvec::SmallVec<A>::reserve_one_unchecked (smallvec-1.13.2/src/lib.rs:1231:20)",
"0x55d276b2874e: smallvec::SmallVec<A>::push (smallvec-1.13.2/src/lib.rs:1118:17)",
"0x55d276b2874e: spade::delaunay_core::triangulation_ext::TriangulationExt::legalize_edge (src/delaunay_core/triangulation_ext.rs:386:25)",
"0x55d276b27d33: spade::delaunay_core::triangulation_ext::TriangulationExt::insert_outside_of_convex_hull (src/delaunay_core/triangulation_ext.rs:257:17)",
"0x55d276b235fe: spade::delaunay_core::triangulation_ext::TriangulationExt::insert_with_hint_option_impl (src/delaunay_core/triangulation_ext.rs:0:0)",
"0x55d276b235fe: spade::delaunay_core::triangulation_ext::TriangulationExt::insert_with_hint_option (src/delaunay_core/triangulation_ext.rs:67:22)",
"0x55d276a214bb: spade::triangulation::Triangulation::insert (spade-2.12.1/src/triangulation.rs:552:9)",
"0x55d276a214bb: truck_meshalgo::tessellation::triangulation::PolyBoundary::insert_to::{{closure}} (src/tessellation/triangulation.rs:482:31)",
"0x55d276a214bb: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d276a214bb: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d276a214bb: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d276a214bb: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d276a214bb: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d276a214bb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:43:9)",
"0x55d276a214bb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a214bb: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a214bb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a214bb: truck_meshalgo::tessellation::triangulation::PolyBoundary::insert_to (src/tessellation/triangulation.rs:484:14)",
"0x55d276a214bb: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:526:5)",
"0x55d276a7e970: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a7e970: hashbrown::raw::alloc::inner::do_alloc (src/raw/alloc.rs:15:15)",
"0x55d276a7e970: hashbrown::raw::RawTableInner::new_uninitialized (src/raw/mod.rs:1750:38)",
"0x55d276a7e970: hashbrown::raw::RawTableInner::fallible_with_capacity (src/raw/mod.rs:1788:30)",
"0x55d276a7e970: hashbrown::raw::RawTableInner::prepare_resize (src/raw/mod.rs:2864:13)",
"0x55d276a7e970: hashbrown::raw::RawTableInner::resize_inner (src/raw/mod.rs:3060:34)",
"0x55d276a7e970: hashbrown::raw::RawTableInner::reserve_rehash_inner (src/raw/mod.rs:2950:13)",
"0x55d276a7e970: hashbrown::raw::RawTable<T,A>::reserve_rehash (src/raw/mod.rs:1231:13)",
"0x55d276a464fc: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d276a464fc: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d276a464fc: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.14.5/src/rustc_entry.rs:46:18)",
"0x55d276a464fc: std::collections::hash::map::HashMap<K,V,S>::entry (collections/hash/map.rs:856:19)",
"0x55d276a464fc: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert (truck-base/src/entry_map.rs:59:14)",
"0x55d276a464fc: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::face_adjacency::{{closure}}::{{closure}} (truck-topology/src/shell.rs:332:33)",
"0x55d276a464fc: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d276a464fc: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::face_adjacency::{{closure}} (truck-topology/src/shell.rs:331:13)",
"0x55d276a464fc: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a464fc: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d276a464fc: <hashbrown::map::IntoIter<K,V,A> as core::iter::traits::iterator::Iterator>::fold (hashbrown-0.14.5/src/map.rs:4827:9)",
"0x55d276a464fc: <std::collections::hash::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::fold (collections/hash/map.rs:2332:19)",
"0x55d276a464fc: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d276a464fc: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::face_adjacency (truck-topology/src/shell.rs:330:35)",
"0x55d276a464fc: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::connected_components (truck-topology/src/shell.rs:450:29)",
"0x55d276a418ea: truck_shapeops::transversal::integrate::and (transversal/integrate/mod.rs:121:22)",
"0x55d276a688c0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:486:19)",
"0x55d276a688c0: alloc::raw_vec::RawVec<T,A>::grow_one (alloc/src/raw_vec.rs:364:27)",
"0x55d276a0e83d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276a0e83d: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency::{{closure}} (truck-topology/src/shell.rs:234:17)",
"0x55d276a0e83d: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a0e83d: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a0e83d: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d276a0e83d: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d276a0e83d: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d276a0e83d: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d276a0e83d: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d276a0e83d: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d276a0e83d: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d276a0e83d: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:321:9)",
"0x55d276a0e83d: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d276a0e83d: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a0e83d: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a0e83d: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d276a0e83d: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d276a0e83d: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency (truck-topology/src/shell.rs:230:26)",
"0x55d276a0e83d: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::is_connected (truck-topology/src/shell.rs:405:29)",
"0x55d276a0e83d: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:22:24)",
"0x55d276a0e83d: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d276a0e83d: <truck_topology::Solid<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:300:9)",
"0x55d276a7c7f6: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a7c7f6: hashbrown::raw::alloc::inner::do_alloc (src/raw/alloc.rs:15:15)",
"0x55d276a7c7f6: hashbrown::raw::RawTableInner::new_uninitialized (src/raw/mod.rs:1750:38)",
"0x55d276a7c7f6: hashbrown::raw::RawTableInner::fallible_with_capacity (src/raw/mod.rs:1788:30)",
"0x55d276a7c7f6: hashbrown::raw::RawTableInner::prepare_resize (src/raw/mod.rs:2864:13)",
"0x55d276a7c7f6: hashbrown::raw::RawTableInner::resize_inner (src/raw/mod.rs:3060:34)",
"0x55d276a7c7f6: hashbrown::raw::RawTableInner::reserve_rehash_inner (src/raw/mod.rs:2950:13)",
"0x55d276a7c7f6: hashbrown::raw::RawTable<T,A>::reserve_rehash (src/raw/mod.rs:1231:13)",
"0x55d276a0d62f: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d276a0d62f: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d276a0d62f: std::collections::hash::map::HashMap<K,V,S>::reserve (collections/hash/map.rs:758:19)",
"0x55d276a0d62f: rayon::iter::extend::<impl rayon::iter::ParallelExtend<(K,V)> for std::collections::hash::map::HashMap<K,V,S>>::par_extend (src/iter/extend.rs:33:15)",
"0x55d276a0d62f: rayon::iter::from_par_iter::collect_extended (src/iter/from_par_iter.rs:20:5)",
"0x55d276a0d62f: rayon::iter::from_par_iter::<impl rayon::iter::FromParallelIterator<(K,V)> for std::collections::hash::map::HashMap<K,V,S>>::from_par_iter (src/iter/from_par_iter.rs:131:9)",
"0x55d276a0d62f: rayon::iter::ParallelIterator::collect (src/iter/mod.rs:2069:9)",
"0x55d276a0d62f: truck_meshalgo::tessellation::triangulation::shell_tessellation (src/tessellation/triangulation.rs:76:10)",
"0x55d276a0d62f: <truck_topology::Shell<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:261:19)",
"0x55d276a3f622: truck_shapeops::transversal::integrate::process_one_pair_of_shells (transversal/integrate/mod.rs:57:23)",
"0x55d2769fe575: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d2769fe575: truck_meshalgo::tessellation::triangulation::PolyBoundaryPiece::try_new::{{closure}}::{{closure}} (alloc/src/macros.rs:54:13)",
"0x55d2769fe575: truck_meshalgo::tessellation::triangulation::PolyBoundaryPiece::try_new::{{closure}} (src/tessellation/triangulation.rs:259:27)",
"0x55d2769fe575: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:28)",
"0x55d2769fe575: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::try_fold (src/vec/into_iter.rs:340:25)",
"0x55d2769fe575: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d2769fe575: <core::iter::adapters::fuse::Fuse<I> as core::iter::adapters::fuse::FuseImpl<I>>::try_fold (iter/adapters/fuse.rs:375:19)",
"0x55d2769fe575: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/fuse.rs:89:9)",
"0x55d2769fe575: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_try_fold (iter/adapters/flatten.rs:515:25)",
"0x55d2769fe575: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/flatten.rs:653:9)",
"0x55d2769fe575: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/flatten.rs:81:9)",
"0x55d2769fe575: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/mod.rs:204:9)",
"0x55d2769fe575: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d2769fe575: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::next (iter/adapters/mod.rs:187:14)",
"0x55d2769feeb7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:26:32)",
"0x55d2769feeb7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d2769feeb7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d2769feeb7: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d2769feeb7: <core::option::Option<V> as core::iter::traits::collect::FromIterator<core::option::Option<A>>>::from_iter::{{closure}} (core/src/option.rs:2467:51)",
"0x55d2769feeb7: core::iter::adapters::try_process (iter/adapters/mod.rs:173:17)",
"0x55d2769feeb7: <core::option::Option<V> as core::iter::traits::collect::FromIterator<core::option::Option<A>>>::from_iter (core/src/option.rs:2467:9)",
"0x55d2769feeb7: truck_meshalgo::tessellation::triangulation::PolyBoundaryPiece::try_new (src/tessellation/triangulation.rs:272:14)",
"0x55d2769feeb7: truck_meshalgo::tessellation::triangulation::shell_create_polygon::{{closure}} (src/tessellation/triangulation.rs:213:13)",
"0x55d2769feeb7: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:28)",
"0x55d2769feeb7: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d2769feeb7: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d2769feeb7: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/mod.rs:204:9)",
"0x55d2769feeb7: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d2769feeb7: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::next (iter/adapters/mod.rs:187:14)",
"0x55d276a685bf: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:486:19)",
"0x55d276a685bf: alloc::raw_vec::RawVec<T,A>::grow_one (alloc/src/raw_vec.rs:364:27)",
"0x55d276a45ae9: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276a45ae9: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::extract_boundaries (truck-topology/src/shell.rs:195:17)",
"0x55d276a3eb6c: truck_shapeops::transversal::faces_classification::FacesClassification<P,C,S>::integrate_by_component (transversal/faces_classification/mod.rs:44:28)",
"0x55d276b4fd8f: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276b4fd8f: truck_geotrait::algo::curve::sub_parameter_division (alloc/src/macros.rs:54:13)",
"0x55d276a34c7a: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a34c7a: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a34c7a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a34c7a: alloc::collections::vec_deque::VecDeque<T,A>::with_capacity_in (collections/vec_deque/mod.rs:619:42)",
"0x55d276a34c7a: alloc::collections::vec_deque::VecDeque<T,A>::split_off (collections/vec_deque/mod.rs:1979:25)",
"0x55d276a34c7a: truck_topology::wire::<impl truck_topology::Wire<P,C>>::split_off (truck-topology/src/wire.rs:146:24)",
"0x55d276a34c7a: truck_shapeops::transversal::loops_store::Loops<P,C>::add_edge (transversal/loops_store/mod.rs:259:54)",
"0x55d276a36a9a: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:564:21)",
"0x55d276a0660c: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d276a0660c: hashbrown::raw::RawTable<T,A>::find_or_find_insert_slot (src/raw/mod.rs:1413:9)",
"0x55d276a0660c: hashbrown::map::HashMap<K,V,S,A>::insert (hashbrown-0.14.5/src/map.rs:1754:15)",
"0x55d276a0660c: <hashbrown::map::HashMap<K,V,S,A> as core::iter::traits::collect::Extend<(K,V)>>::extend::{{closure}} (hashbrown-0.14.5/src/map.rs:6512:13)",
"0x55d276a0660c: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a0660c: core::iter::adapters::filter_map::filter_map_fold::{{closure}} (iter/adapters/filter_map.rs:40:20)",
"0x55d276a0660c: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a0660c: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d276a0660c: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d276a44fea: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d276a44fea: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d276a44fea: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d276a44fea: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d276a44fea: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d276a44fea: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:321:9)",
"0x55d276a44fea: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d276a44fea: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d276a44fea: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a44fea: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a44fea: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d276a44fea: <core::iter::adapters::filter_map::FilterMap<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/filter_map.rs:148:9)",
"0x55d276a44fea: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a44fea: <hashbrown::map::HashMap<K,V,S,A> as core::iter::traits::collect::Extend<(K,V)>>::extend (hashbrown-0.14.5/src/map.rs:6511:9)",
"0x55d276a44fea: <std::collections::hash::map::HashMap<K,V,S> as core::iter::traits::collect::Extend<(K,V)>>::extend (collections/hash/map.rs:3144:9)",
"0x55d276a44fea: <std::collections::hash::map::HashMap<K,V,S> as core::iter::traits::collect::FromIterator<(K,V)>>::from_iter (collections/hash/map.rs:3129:13)",
"0x55d276a44fea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a44fea: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::extract_boundaries (truck-topology/src/shell.rs:180:14)",
"0x55d276a05bf5: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a05bf5: truck_topology::shell::create_one_component (alloc/src/macros.rs:54:13)",
"0x55d276a05bf5: truck_topology::shell::check_connectivity (truck-topology/src/shell.rs:1133:5)",
"0x55d276a05bf5: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices::{{closure}}::{{closure}} (truck-topology/src/shell.rs:541:42)",
"0x55d276a05bf5: core::option::Option<T>::filter (core/src/option.rs:1479:16)",
"0x55d276a05bf5: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices::{{closure}} (truck-topology/src/shell.rs:541:17)",
"0x55d276a05bf5: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a05bf5: core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (iter/traits/iterator.rs:2907:32)",
"0x55d276a05bf5: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a05bf5: core::iter::traits::iterator::Iterator::find_map (iter/traits/iterator.rs:2913:9)",
"0x55d276a05bf5: <core::iter::adapters::filter_map::FilterMap<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/filter_map.rs:64:9)",
"0x55d276a10234: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:26:32)",
"0x55d276a10234: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a10234: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a10234: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a10234: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices (truck-topology/src/shell.rs:543:14)",
"0x55d276a10234: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:26:24)",
"0x55d276a10234: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d276a10234: <truck_topology::Solid<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:300:9)",
"0x55d276a3e028: truck_topology::wire::<impl core::clone::Clone for truck_topology::Wire<P,C>>::clone (truck-topology/src/wire.rs:778:24)",
"0x55d276a3e028: truck_shapeops::transversal::loops_store::Loops<P,C>::swap_edge_into_wire::{{closure}} (transversal/loops_store/mod.rs:212:60)",
"0x55d276a3e028: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d276a3e028: truck_shapeops::transversal::loops_store::Loops<P,C>::swap_edge_into_wire (transversal/loops_store/mod.rs:208:9)",
"0x55d276a3e028: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::swap_edge_into_wire::{{closure}} (transversal/loops_store/mod.rs:301:31)",
"0x55d276a3e028: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::swap_edge_into_wire (transversal/loops_store/mod.rs:300:9)",
"0x55d276a3e028: truck_shapeops::transversal::loops_store::LoopsStore<cgmath::point::Point3<f64>,C>::add_geom_vertex (transversal/loops_store/mod.rs:377:22)",
"0x55d276a3632f: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:537:25)",
"0x55d276a0ff40: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276a0ff40: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices::{{closure}} (truck-topology/src/shell.rs:535:21)",
"0x55d276a0ff40: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a0ff40: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a0ff40: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a0ff40: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d276a0ff40: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d276a0ff40: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d276a0ff40: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a0ff40: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d276a0ff40: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d276a0ff40: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d276a0ff40: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d276a0ff40: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d276a0ff40: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices (truck-topology/src/shell.rs:528:14)",
"0x55d276a0ff40: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:26:24)",
"0x55d276a0ff40: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d276a0ff40: <truck_topology::Solid<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:300:9)",
"0x55d276a46d07: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a46d07: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a46d07: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a46d07: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a46d07: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276a46d07: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d276a46d07: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:246:9)",
"0x55d276a46d07: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a46d07: truck_topology::shell::<impl core::iter::traits::collect::FromIterator<truck_topology::Face<P,C,S>> for truck_topology::Shell<P,C,S>>::from_iter (truck-topology/src/shell.rs:853:24)",
"0x55d276a46d07: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a46d07: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::connected_components::{{closure}} (truck-topology/src/shell.rs:454:49)",
"0x55d276a46d07: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:28)",
"0x55d276a46d07: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::try_fold (src/vec/into_iter.rs:340:25)",
"0x55d276a46d07: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d276a46d07: <I as alloc::vec::in_place_collect::SpecInPlaceCollect<T,I>>::collect_in_place (src/vec/in_place_collect.rs:379:13)",
"0x55d276a46d07: alloc::vec::in_place_collect::from_iter_in_place (src/vec/in_place_collect.rs:270:9)",
"0x55d276a46d07: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::connected_components (truck-topology/src/shell.rs:455:14)",
"0x55d276a3ea1d: truck_shapeops::transversal::faces_classification::FacesClassification<P,C,S>::integrate_by_component (transversal/faces_classification/mod.rs:42:26)",
"0x55d276a737c3: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a737c3: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a737c3: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a737c3: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a737c3: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d276a737c3: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d276a737c3: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d276a737c3: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d276a737c3: <truck_polymesh::PolylineCurve<P> as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:100:10)",
"0x55d276a737c3: <truck_modeling::geometry::Leader as core::clone::Clone>::clone (truck-modeling/src/geometry.rs:27:14)",
"0x55d276a737c3: <truck_geometry::decorators::IntersectionCurve<C,S> as core::clone::Clone>::clone (src/decorators/mod.rs:132:5)",
"0x55d276a737c3: <truck_modeling::geometry::Curve as core::clone::Clone>::clone (truck-modeling/src/geometry.rs:56:23)",
"0x55d276a6880e: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:486:19)",
"0x55d276a6880e: alloc::raw_vec::RawVec<T,A>::grow_one (alloc/src/raw_vec.rs:364:27)",
"0x55d276a3f506: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276a3f506: truck_shapeops::transversal::faces_classification::FacesClassification<P,C,S>::push (transversal/faces_classification/mod.rs:23:9)",
"0x55d276a72faa: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a72faa: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a72faa: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a72faa: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a72faa: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d276a72faa: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d276a72faa: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d276a72faa: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d276a72faa: <truck_polymesh::Faces<V> as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:75:5)",
"0x55d276a72faa: <truck_polymesh::PolygonMesh<V,A> as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:88:5)",
"0x55d276a72faa: <core::option::Option<T> as core::clone::Clone>::clone (core/src/option.rs:2038:29)",
"0x55d276a07501: truck_topology::face::<impl truck_topology::Face<P,C,S>>::surface (truck-topology/src/face.rs:509:9)",
"0x55d276a07501: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:469:28)",
"0x55d276a07501: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d276a07501: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a07501: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d276a07501: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a07501: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d276a07501: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d276a3e7d5: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276a3e7d5: truck_shapeops::transversal::faces_classification::FacesClassification<P,C,S>::and_or_unknown (transversal/faces_classification/mod.rs:31:39)",
"0x55d276a3e974: truck_shapeops::transversal::faces_classification::FacesClassification<P,C,S>::integrate_by_component (transversal/faces_classification/mod.rs:39:34)",
"0x55d276a73725: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a73725: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:529:13)",
"0x55d276a73725: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:491:15)",
"0x55d276a73725: <alloc::boxed::Box<T,A> as core::clone::Clone>::clone (alloc/src/boxed.rs:1349:25)",
"0x55d276a73725: <truck_geometry::decorators::IntersectionCurve<C,S> as core::clone::Clone>::clone (src/decorators/mod.rs:131:5)",
"0x55d276a73725: <truck_modeling::geometry::Curve as core::clone::Clone>::clone (truck-modeling/src/geometry.rs:56:23)",
"0x55d276a2ddd8: truck_topology::wire::<impl core::clone::Clone for truck_topology::Wire<P,C>>::clone (truck-topology/src/wire.rs:778:24)",
"0x55d276a2ddd8: truck_shapeops::transversal::divide_face::divide_one_face::{{closure}}::{{closure}} (transversal/divide_face/mod.rs:90:49)",
"0x55d276a2ddd8: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:28)",
"0x55d276a2ddd8: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::try_fold (src/vec/into_iter.rs:340:25)",
"0x55d276a2ddd8: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d276a2ddd8: <I as alloc::vec::in_place_collect::SpecInPlaceCollect<T,I>>::collect_in_place (src/vec/in_place_collect.rs:379:13)",
"0x55d276a2ddd8: alloc::vec::in_place_collect::from_iter_in_place (src/vec/in_place_collect.rs:270:9)",
"0x55d276a2ddd8: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:246:9)",
"0x55d276a2ddd8: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a2ddd8: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a2ddd8: truck_shapeops::transversal::divide_face::divide_one_face::{{closure}} (transversal/divide_face/mod.rs:91:18)",
"0x55d276a2ddd8: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a2ddd8: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d276a2ddd8: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a2ddd8: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a2ddd8: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d276a2ddd8: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d276a2ddd8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d276a2ddd8: truck_shapeops::transversal::divide_face::divide_one_face (transversal/divide_face/mod.rs:98:10)",
"0x55d276a2ddd8: truck_shapeops::transversal::divide_face::divide_faces::{{closure}} (transversal/divide_face/mod.rs:122:27)",
"0x55d276a2ddd8: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d276a2ddd8: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a2ddd8: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d276a2ddd8: truck_shapeops::transversal::divide_face::divide_faces (transversal/divide_face/mod.rs:115:10)",
"0x55d276a424ad: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a424ad: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a424ad: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a424ad: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a424ad: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276a424ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55d276a424ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a424ad: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a424ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a424ad: truck_topology::wire::<impl truck_topology::Wire<P,C>>::swap_edge_into_wire (truck-topology/src/wire.rs:364:55)",
"0x55d276a3a63b: truck_shapeops::transversal::loops_store::Loops<P,C>::swap_edge_into_wire::{{closure}} (transversal/loops_store/mod.rs:212:21)",
"0x55d276a3a63b: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d276a3a63b: truck_shapeops::transversal::loops_store::Loops<P,C>::swap_edge_into_wire (transversal/loops_store/mod.rs:208:9)",
"0x55d276a3a63b: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::swap_edge_into_wire::{{closure}} (transversal/loops_store/mod.rs:301:31)",
"0x55d276a3a63b: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::swap_edge_into_wire (transversal/loops_store/mod.rs:300:9)",
"0x55d276a3a63b: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::add_polygon_vertex (transversal/loops_store/mod.rs:333:22)",
"0x55d2769feaa3: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d2769feaa3: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d2769feaa3: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d2769feaa3: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d2769feaa3: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d2769feaa3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55d2769feaa3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d2769feaa3: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d2769feaa3: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d2769feaa3: truck_meshalgo::tessellation::triangulation::PolyBoundaryPiece::try_new (src/tessellation/triangulation.rs:243:14)",
"0x55d2769feaa3: truck_meshalgo::tessellation::triangulation::shell_create_polygon::{{closure}} (src/tessellation/triangulation.rs:213:13)",
"0x55d2769feaa3: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:28)",
"0x55d2769feaa3: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d2769feaa3: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d2769feaa3: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/mod.rs:204:9)",
"0x55d2769feaa3: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d2769feaa3: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::next (iter/adapters/mod.rs:187:14)",
"0x55d276a3db8f: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a3db8f: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a3db8f: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a3db8f: truck_topology::edge::<impl truck_topology::Edge<P,C>>::cut_with_parameter (truck-topology/src/edge.rs:452:20)",
"0x55d276a3db8f: truck_shapeops::transversal::loops_store::LoopsStore<cgmath::point::Point3<f64>,C>::add_geom_vertex (transversal/loops_store/mod.rs:375:38)",
"0x55d276a36447: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:550:25)",
"0x55d276b1cda6: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276b1cda6: truck_meshalgo::analyzers::collision::EndPoint::from_seg (alloc/src/macros.rs:54:13)",
"0x55d276b1cda6: truck_meshalgo::analyzers::collision::sorted_endpoints::{{closure}} (src/analyzers/collision.rs:87:30)",
"0x55d276b1cda6: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d276b1cda6: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d276b1cda6: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d276b1cda6: <core::iter::adapters::fuse::Fuse<I> as core::iter::adapters::fuse::FuseImpl<I>>::next (iter/adapters/fuse.rs:359:9)",
"0x55d276b1cda6: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/fuse.rs:50:9)",
"0x55d276b1cda6: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next (iter/adapters/flatten.rs:610:29)",
"0x55d276b1cda6: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/flatten.rs:66:9)",
"0x55d276b1cda6: core::ops::function::FnOnce::call_once (src/ops/function.rs:250:5)",
"0x55d276b1cda6: core::iter::adapters::chain::and_then_or_clear (iter/adapters/chain.rs:333:13)",
"0x55d276b1cda6: <core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::next (iter/adapters/chain.rs:84:9)",
"0x55d276a07ec5: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:26:32)",
"0x55d276a07ec5: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a07ec5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a07ec5: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a07ec5: truck_meshalgo::analyzers::collision::sorted_endpoints (src/analyzers/collision.rs:95:10)",
"0x55d276a07ec5: truck_meshalgo::analyzers::collision::collision (src/analyzers/collision.rs:220:29)",
"0x55d276a07ec5: <truck_polymesh::PolygonMesh as truck_meshalgo::analyzers::collision::Collision>::extract_interference (src/analyzers/collision.rs:34:9)",
"0x55d276a07ec5: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:157:34)",
"0x55d276a07ec5: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d276a07ec5: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d276a07ec5: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a07ec5: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d276a07ec5: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a07ec5: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d276a07ec5: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d276a7a6c2: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a7a6c2: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a7a6c2: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a7a6c2: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new_unchecked (truck-topology/src/edge.rs:45:20)",
"0x55d276a7a6c2: truck_topology::edge::<impl truck_topology::Edge<P,C>>::try_new (truck-topology/src/edge.rs:20:16)",
"0x55d276a7a6c2: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new (truck-topology/src/edge.rs:33:9)",
"0x55d276a7a6c2: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:190:25)",
"0x55d276a7a6c2: std::collections::hash::map::Entry<K,V>::or_insert_with (collections/hash/map.rs:2666:43)",
"0x55d276a7a6c2: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}} (transversal/loops_store/mod.rs:189:21)",
"0x55d276a7a6c2: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a7a6c2: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a7a6c2: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a362c5: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:535:25)",
"0x55d276a35c28: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a35c28: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a35c28: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a35c28: truck_topology::vertex::<impl truck_topology::Vertex<P>>::new (truck-topology/src/vertex.rs:17:20)",
"0x55d276a35c28: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:500:31)",
"0x55d276a7b0bb: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a7b0bb: <&A as core::alloc::Allocator>::allocate (src/alloc/mod.rs:381:9)",
"0x55d276a7b0bb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:529:13)",
"0x55d276a7b0bb: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:491:15)",
"0x55d276a7b0bb: alloc::boxed::Box<T,A>::new_in (alloc/src/boxed.rs:425:25)",
"0x55d276a7b0bb: alloc::collections::linked_list::LinkedList<T,A>::push_back (src/collections/linked_list.rs:897:20)",
"0x55d276a7b0bb: <rayon::iter::extend::ListVecFolder<T> as rayon::iter::plumbing::Folder<T>>::complete (src/iter/extend.rs:137:13)",
"0x55d276a7b0bb: <rayon::iter::map::MapFolder<C,F> as rayon::iter::plumbing::Folder<T>>::complete (src/iter/map.rs:253:9)",
"0x55d276a6bc74: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d276a0118c: rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (iter/plumbing/mod.rs:417:21)",
"0x55d276a0118c: rayon_core::join::join_context::call_a::{{closure}} (src/join/mod.rs:124:17)",
"0x55d276a0118c: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d276a0118c: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d276a0118c: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d276a0118c: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d276a0118c: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d276a0118c: rayon_core::join::join_context::{{closure}} (src/join/mod.rs:142:24)",
"0x55d276a6be96: rayon_core::registry::in_worker (rayon-core-1.12.1/src/registry.rs:0:0)",
"0x55d276a6be96: rayon_core::join::join_context (src/join/mod.rs:132:5)",
"0x55d276a6be96: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:415:47)",
"0x55d276a6e833: rayon::iter::plumbing::bridge_producer_consumer (iter/plumbing/mod.rs:396:12)",
"0x55d276a6e833: <rayon::iter::plumbing::bridge::Callback<C> as rayon::iter::plumbing::ProducerCallback<I>>::callback (iter/plumbing/mod.rs:372:13)",
"0x55d276a6e833: <rayon::vec::Drain<T> as rayon::iter::IndexedParallelIterator>::with_producer (rayon-1.10.0/src/vec.rs:147:13)",
"0x55d276a6e833: <rayon::vec::IntoIter<T> as rayon::iter::IndexedParallelIterator>::with_producer (rayon-1.10.0/src/vec.rs:83:9)",
"0x55d276a6e833: rayon::iter::plumbing::bridge (iter/plumbing/mod.rs:356:12)",
"0x55d276a6e833: <rayon::vec::IntoIter<T> as rayon::iter::ParallelIterator>::drive_unindexed (rayon-1.10.0/src/vec.rs:58:9)",
"0x55d276a6e833: <rayon::collections::vec_deque::IntoIter<T> as rayon::iter::ParallelIterator>::drive_unindexed (rayon-1.10.0/src/delegate.rs:21:28)",
"0x55d276a6e833: <rayon::iter::flatten::FlattenFolder<C,<C as rayon::iter::plumbing::Consumer<<T as rayon::iter::IntoParallelIterator>::Item>>::Result> as rayon::iter::plumbing::Folder<T>>::consume (src/iter/flatten.rs:114:22)",
"0x55d276a6e833: rayon::iter::plumbing::Folder::consume_iter (iter/plumbing/mod.rs:178:20)",
"0x55d276a6e833: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d276a6e833: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d2769ff80c: rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (iter/plumbing/mod.rs:417:21)",
"0x55d2769ff80c: rayon_core::join::join_context::call_a::{{closure}} (src/join/mod.rs:124:17)",
"0x55d2769ff80c: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d2769ff80c: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d2769ff80c: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d2769ff80c: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d2769ff80c: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d2769ff80c: rayon_core::join::join_context::{{closure}} (src/join/mod.rs:142:24)",
"0x55d276a6ed58: rayon_core::registry::in_worker (rayon-core-1.12.1/src/registry.rs:0:0)",
"0x55d276a6ed58: rayon_core::join::join_context (src/join/mod.rs:132:5)",
"0x55d276a6ed58: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:415:47)",
"0x55d276a2dd01: truck_topology::face::<impl truck_topology::Face<P,C,S>>::surface (truck-topology/src/face.rs:509:9)",
"0x55d276a2dd01: truck_shapeops::transversal::divide_face::divide_one_face::{{closure}} (transversal/divide_face/mod.rs:80:27)",
"0x55d276a2dd01: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a2dd01: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d276a2dd01: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a2dd01: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a2dd01: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d276a2dd01: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d276a2dd01: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d276a2dd01: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:246:9)",
"0x55d276a2dd01: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a2dd01: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a2dd01: truck_shapeops::transversal::divide_face::divide_one_face (transversal/divide_face/mod.rs:98:10)",
"0x55d276a2dd01: truck_shapeops::transversal::divide_face::divide_faces::{{closure}} (transversal/divide_face/mod.rs:122:27)",
"0x55d276a2dd01: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d276a2dd01: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a2dd01: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d276a2dd01: truck_shapeops::transversal::divide_face::divide_faces (transversal/divide_face/mod.rs:115:10)",
"0x55d276a6bae3: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a6bae3: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a6bae3: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a6bae3: truck_topology::vertex::<impl truck_topology::Vertex<P>>::new (truck-topology/src/vertex.rs:17:20)",
"0x55d276a6bae3: truck_topology::vertex::<impl truck_topology::Vertex<P>>::mapped (truck-topology/src/vertex.rs:90:9)",
"0x55d276a6bae3: truck_meshalgo::tessellation::triangulation::shell_tessellation::{{closure}} (src/tessellation/triangulation.rs:64:27)",
"0x55d276a6bae3: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut (src/ops/function.rs:272:13)",
"0x55d276a6bae3: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d276a6bae3: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d276a6bae3: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d276a6bae3: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d276a6bae3: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d276a6bae3: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d276a6bae3: <rayon::iter::extend::ListVecFolder<T> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/extend.rs:130:18)",
"0x55d276a6bae3: <rayon::iter::map::MapFolder<C,F> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/map.rs:248:21)",
"0x55d276a6bae3: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d276a6bae3: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d276a6c314: rayon::iter::plumbing::bridge_producer_consumer (iter/plumbing/mod.rs:396:12)",
"0x55d276a6c314: <rayon::iter::plumbing::bridge::Callback<C> as rayon::iter::plumbing::ProducerCallback<I>>::callback (iter/plumbing/mod.rs:372:13)",
"0x55d276a6c314: <rayon::vec::Drain<T> as rayon::iter::IndexedParallelIterator>::with_producer (rayon-1.10.0/src/vec.rs:147:13)",
"0x55d276a6c314: <rayon::vec::IntoIter<T> as rayon::iter::IndexedParallelIterator>::with_producer (rayon-1.10.0/src/vec.rs:83:9)",
"0x55d276a6c314: rayon::iter::plumbing::bridge (iter/plumbing/mod.rs:356:12)",
"0x55d276a6c314: <rayon::vec::IntoIter<T> as rayon::iter::ParallelIterator>::drive_unindexed (rayon-1.10.0/src/vec.rs:58:9)",
"0x55d276a6c314: <rayon::iter::flat_map::FlatMapFolder<C,F,<C as rayon::iter::plumbing::Consumer<<U as rayon::iter::IntoParallelIterator>::Item>>::Result> as rayon::iter::plumbing::Folder<T>>::consume (src/iter/flat_map.rs:127:22)",
"0x55d276a6c314: rayon::iter::plumbing::Folder::consume_iter (iter/plumbing/mod.rs:178:20)",
"0x55d276a6c314: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d276a6c314: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d276a002fa: rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (iter/plumbing/mod.rs:417:21)",
"0x55d276a002fa: rayon_core::join::join_context::call_a::{{closure}} (src/join/mod.rs:124:17)",
"0x55d276a002fa: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d276a002fa: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d276a002fa: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d276a002fa: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d276a002fa: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d276a002fa: rayon_core::join::join_context::{{closure}} (src/join/mod.rs:142:24)",
"0x55d276a6c81e: rayon_core::registry::in_worker (rayon-core-1.12.1/src/registry.rs:0:0)",
"0x55d276a6c81e: rayon_core::join::join_context (src/join/mod.rs:132:5)",
"0x55d276a6c81e: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:415:47)",
"0x55d276a74c94: rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (iter/plumbing/mod.rs:426:21)",
"0x55d276a74c94: rayon_core::join::join_context::call_b::{{closure}} (src/join/mod.rs:129:25)",
"0x55d276a74c94: rayon_core::job::JobResult<T>::call::{{closure}} (rayon-core-1.12.1/src/job.rs:218:41)",
"0x55d276a74c94: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d276a74c94: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d276a74c94: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d276a74c94: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d276a74c94: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d276a74c94: rayon_core::job::JobResult<T>::call (rayon-core-1.12.1/src/job.rs:218:15)",
"0x55d276a74c94: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.12.1/src/job.rs:120:32)",
"0x55d276a06ea8: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d276a06ea8: hashbrown::raw::RawTable<T,A>::find_or_find_insert_slot (src/raw/mod.rs:1413:9)",
"0x55d276a06ea8: hashbrown::map::HashMap<K,V,S,A>::insert (hashbrown-0.14.5/src/map.rs:1754:15)",
"0x55d276a06ea8: std::collections::hash::map::HashMap<K,V,S>::insert (collections/hash/map.rs:1106:9)",
"0x55d276a06ea8: truck_topology::shell::Boundaries<C>::insert (truck-topology/src/shell.rs:1097:33)",
"0x55d276a06ea8: <truck_topology::shell::Boundaries<C> as core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>>>::from_iter::{{closure}} (truck-topology/src/shell.rs:1126:42)",
"0x55d276a06ea8: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a06ea8: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a06ea8: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d276a06ea8: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d276a071d1: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d276a071d1: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d276a071d1: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d276a071d1: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d276a071d1: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d276a071d1: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:321:9)",
"0x55d276a071d1: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d276a6400d: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d276a6400d: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d276a6400d: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a6400d: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a6400d: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d276a6400d: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d276a6400d: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d276a6400d: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d276a6400d: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a44dfc: <truck_topology::shell::Boundaries<C> as core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>>>::from_iter (truck-topology/src/shell.rs:1126:9)",
"0x55d276a44dfc: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a44dfc: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::extract_boundaries (truck-topology/src/shell.rs:171:58)",
"0x55d276a72e13: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a72e13: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a72e13: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a72e13: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a72e13: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d276a72e13: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d276a72e13: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d276a72e13: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d276a72e13: <truck_polymesh::StandardAttributes as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:40:5)",
"0x55d276a72e13: <truck_polymesh::PolygonMesh<V,A> as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:87:5)",
"0x55d276a72e13: <core::option::Option<T> as core::clone::Clone>::clone (core/src/option.rs:2038:29)",
"0x55d276a075e1: truck_topology::face::<impl truck_topology::Face<P,C,S>>::surface (truck-topology/src/face.rs:509:9)",
"0x55d276a075e1: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:470:28)",
"0x55d276a075e1: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d276a075e1: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a075e1: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d276a075e1: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a075e1: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d276a075e1: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d276a72cd6: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a72cd6: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a72cd6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a72cd6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a72cd6: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x55d276a72cd6: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d276a72cd6: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d276a72cd6: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d276a3fc44: truck_shapeops::transversal::integrate::process_one_pair_of_shells (transversal/integrate/mod.rs:67:41)",
"0x55d276a2cdbc: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a2cdbc: truck_polymesh::polyline_curve::<impl truck_geotrait::traits::curve::Cut for truck_polymesh::PolylineCurve<P>>::cut (alloc/src/macros.rs:54:13)",
"0x55d276a3a23b: truck_topology::edge::<impl truck_topology::Edge<P,C>>::cut_with_parameter (truck-topology/src/edge.rs:448:22)",
"0x55d276a3a23b: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::add_polygon_vertex (transversal/loops_store/mod.rs:331:38)",
"0x55d276a693e3: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276a693e3: truck_meshalgo::tessellation::triangulation::PolyBoundary::new::{{closure}} (src/tessellation/triangulation.rs:344:21)",
"0x55d276a693e3: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a693e3: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d276a693e3: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a693e3: truck_meshalgo::tessellation::triangulation::PolyBoundary::new (src/tessellation/triangulation.rs:340:28)",
"0x55d276a693e3: truck_meshalgo::tessellation::triangulation::shell_create_polygon::{{closure}} (src/tessellation/triangulation.rs:217:24)",
"0x55d276a693e3: truck_meshalgo::tessellation::triangulation::shell_create_polygon (src/tessellation/triangulation.rs:216:40)",
"0x55d276a693e3: truck_meshalgo::tessellation::triangulation::shell_tessellation::{{closure}} (src/tessellation/triangulation.rs:92:9)",
"0x55d276a693e3: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut (src/ops/function.rs:272:13)",
"0x55d276a693e3: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d276a693e3: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d276a693e3: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d276a693e3: rayon::iter::plumbing::Folder::consume_iter (iter/plumbing/mod.rs:177:21)",
"0x55d276a693e3: <rayon::iter::map::MapFolder<C,F> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/map.rs:248:21)",
"0x55d276a693e3: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d276a693e3: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d276a809c5: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a809c5: truck_modeling::topo_impls::connect_edges (alloc/src/macros.rs:54:13)",
"0x55d276a809c5: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Edge<P,C>>::sweep (truck-modeling/src/sweep.rs:99:9)",
"0x55d276a809c5: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d276a809c5: test_truck::main (test-truck/src/main.rs:43:21)",
"0x55d276a0888d: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a0888d: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a0888d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a0888d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a0888d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276a0888d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55d276a0888d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a0888d: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a0888d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a0888d: truck_meshalgo::analyzers::collision::collision (src/analyzers/collision.rs:229:10)",
"0x55d276a0888d: <truck_polymesh::PolygonMesh as truck_meshalgo::analyzers::collision::Collision>::extract_interference (src/analyzers/collision.rs:34:9)",
"0x55d276a0888d: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:157:34)",
"0x55d276a0888d: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d276a0888d: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d276a0888d: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a0888d: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d276a0888d: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a0888d: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d276a0888d: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d276a45607: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a45607: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::extract_boundaries (alloc/src/macros.rs:54:13)",
"0x55d276a0c964: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d276a0c964: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d276a0c964: std::collections::hash::map::HashMap<K,V,S>::reserve (collections/hash/map.rs:758:19)",
"0x55d276a0c964: rayon::iter::extend::<impl rayon::iter::ParallelExtend<(K,V)> for std::collections::hash::map::HashMap<K,V,S>>::par_extend (src/iter/extend.rs:33:15)",
"0x55d276a0c964: rayon::iter::from_par_iter::collect_extended (src/iter/from_par_iter.rs:20:5)",
"0x55d276a0c964: rayon::iter::from_par_iter::<impl rayon::iter::FromParallelIterator<(K,V)> for std::collections::hash::map::HashMap<K,V,S>>::from_par_iter (src/iter/from_par_iter.rs:131:9)",
"0x55d276a0c964: rayon::iter::ParallelIterator::collect (src/iter/mod.rs:2069:9)",
"0x55d276a0c964: truck_meshalgo::tessellation::triangulation::shell_tessellation (src/tessellation/triangulation.rs:66:79)",
"0x55d276a0c964: <truck_topology::Shell<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:261:19)",
"0x55d276a0e1da: <truck_topology::Solid<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation::{{closure}} (src/tessellation/mod.rs:298:26)",
"0x55d276a0e1da: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a0e1da: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a0e1da: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a0e1da: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a0e1da: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d276a0e1da: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d276a0e1da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d276a0e1da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a0e1da: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a0e1da: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a0e1da: <truck_topology::Solid<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:299:14)",
"0x55d276b4eab6: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276b4eab6: truck_geometry::specifieds::line::<impl truck_geotrait::traits::curve::ParameterDivision1D for truck_geometry::specifieds::Line<P>>::parameter_division (alloc/src/macros.rs:54:13)",
"0x55d276b4eab6: <truck_modeling::geometry::Curve as truck_geotrait::traits::curve::ParameterDivision1D>::parameter_division (truck-modeling/src/geometry.rs:42:5)",
"0x55d276a63f18: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a63f18: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a63f18: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a63f18: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a63f18: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276a63f18: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d276a63f18: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a63f18: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a63f18: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a63f18: truck_topology::face::<impl truck_topology::Face<P,C,S>>::boundary_iters (truck-topology/src/face.rs:211:14)",
"0x55d276a63f18: truck_topology::face::<impl truck_topology::Face<P,C,S>>::edge_iter (truck-topology/src/face.rs:224:14)",
"0x55d276a63f18: core::ops::function::FnMut::call_mut (src/ops/function.rs:166:5)",
"0x55d276a63f18: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a63f18: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a63f18: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a63f18: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d276a63f18: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d276a63f18: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d276a63f18: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d276a63f18: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a441f7: <truck_topology::shell::Boundaries<C> as core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>>>::from_iter (truck-topology/src/shell.rs:1126:9)",
"0x55d276a441f7: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a441f7: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::shell_condition (truck-topology/src/shell.rs:133:26)",
"0x55d276a84228: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:24:23)",
"0x55d276a84228: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d276a84228: truck_shapeops::transversal::integrate::or (transversal/integrate/mod.rs:145:10)",
"0x55d276a84228: test_truck::main (test-truck/src/main.rs:76:21)",
"0x55d276a7bec0: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a7bec0: hashbrown::raw::alloc::inner::do_alloc (src/raw/alloc.rs:15:15)",
"0x55d276a7bec0: hashbrown::raw::RawTableInner::new_uninitialized (src/raw/mod.rs:1750:38)",
"0x55d276a7bec0: hashbrown::raw::RawTableInner::fallible_with_capacity (src/raw/mod.rs:1788:30)",
"0x55d276a7bec0: hashbrown::raw::RawTableInner::prepare_resize (src/raw/mod.rs:2864:13)",
"0x55d276a7bec0: hashbrown::raw::RawTableInner::resize_inner (src/raw/mod.rs:3060:34)",
"0x55d276a7bec0: hashbrown::raw::RawTableInner::reserve_rehash_inner (src/raw/mod.rs:2950:13)",
"0x55d276a7bec0: hashbrown::raw::RawTable<T,A>::reserve_rehash (src/raw/mod.rs:1231:13)",
"0x55d276a78dbe: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d276a78dbe: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d276a78dbe: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.14.5/src/rustc_entry.rs:46:18)",
"0x55d276a78dbe: std::collections::hash::map::HashMap<K,V,S>::entry (collections/hash/map.rs:856:19)",
"0x55d276a78dbe: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert (truck-base/src/entry_map.rs:59:14)",
"0x55d276a78dbe: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::face_adjacency::{{closure}}::{{closure}} (truck-topology/src/shell.rs:326:33)",
"0x55d276a78dbe: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a78dbe: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a78dbe: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a46054: <alloc::collections::vec_deque::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (collections/vec_deque/iter.rs:80:21)",
"0x55d276a46054: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d276a46054: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d276a46054: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a46054: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d276a46054: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d276a46054: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d276a46054: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:321:9)",
"0x55d276a46054: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d276a46054: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::face_adjacency::{{closure}} (truck-topology/src/shell.rs:327:57)",
"0x55d276a46054: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d276a46054: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::face_adjacency (truck-topology/src/shell.rs:325:9)",
"0x55d276a46054: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::connected_components (truck-topology/src/shell.rs:450:29)",
"0x55d276a3e785: truck_topology::face::<impl core::clone::Clone for truck_topology::Face<P,C,S>>::clone (truck-topology/src/face.rs:1029:25)",
"0x55d276a3e785: truck_shapeops::transversal::faces_classification::FacesClassification<P,C,S>::and_or_unknown (transversal/faces_classification/mod.rs:31:47)",
"0x55d276a44778: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276a44778: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices::{{closure}} (truck-topology/src/shell.rs:534:21)",
"0x55d276a44778: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a44778: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a44778: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a44778: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d276a44778: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d276a44778: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d276a44778: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a44778: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d276a44778: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d276a44778: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d276a44778: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d276a44778: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d276a44778: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices (truck-topology/src/shell.rs:528:14)",
"0x55d276a41972: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:26:24)",
"0x55d276a41972: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d276a41972: truck_shapeops::transversal::integrate::and (transversal/integrate/mod.rs:122:10)",
"0x55d276a6818c: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:486:19)",
"0x55d276a6818c: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:349:31)",
"0x55d276a0d9a1: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:355:13)",
"0x55d276a0d9a1: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:972:18)",
"0x55d276a0d9a1: rayon::iter::collect::collect_with_consumer (iter/collect/mod.rs:81:9)",
"0x55d276a0d9a1: rayon::iter::collect::special_extend (iter/collect/mod.rs:39:5)",
"0x55d276a0d9a1: rayon::iter::extend::<impl rayon::iter::ParallelExtend<T> for alloc::vec::Vec<T>>::par_extend (src/iter/extend.rs:584:17)",
"0x55d276a0d9a1: rayon::iter::from_par_iter::collect_extended (src/iter/from_par_iter.rs:20:5)",
"0x55d276a0d9a1: rayon::iter::from_par_iter::<impl rayon::iter::FromParallelIterator<T> for alloc::vec::Vec<T>>::from_par_iter (src/iter/from_par_iter.rs:33:9)",
"0x55d276a0d9a1: truck_topology::shell::<impl rayon::iter::FromParallelIterator<truck_topology::Face<P,C,S>> for truck_topology::Shell<P,C,S>>::from_par_iter (truck-topology/src/shell.rs:1199:20)",
"0x55d276a0d9a1: rayon::iter::ParallelIterator::collect (src/iter/mod.rs:2069:9)",
"0x55d276a0d9a1: truck_meshalgo::tessellation::triangulation::shell_tessellation (src/tessellation/triangulation.rs:94:44)",
"0x55d276a0d9a1: <truck_topology::Shell<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:261:19)",
"0x55d276a3f5ff: truck_shapeops::transversal::integrate::process_one_pair_of_shells (transversal/integrate/mod.rs:56:23)",
"0x55d276a76bf3: rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (iter/plumbing/mod.rs:426:21)",
"0x55d276a76bf3: rayon_core::join::join_context::call_b::{{closure}} (src/join/mod.rs:129:25)",
"0x55d276a76bf3: rayon_core::job::JobResult<T>::call::{{closure}} (rayon-core-1.12.1/src/job.rs:218:41)",
"0x55d276a76bf3: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d276a76bf3: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d276a76bf3: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d276a76bf3: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d276a76bf3: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d276a76bf3: rayon_core::job::JobResult<T>::call (rayon-core-1.12.1/src/job.rs:218:15)",
"0x55d276a76bf3: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.12.1/src/job.rs:120:32)",
"0x55d276a01357: rayon_core::registry::WorkerThread::wait_until (rayon-core-1.12.1/src/registry.rs:769:13)",
"0x55d276a01357: rayon_core::join::join_context::{{closure}} (src/join/mod.rs:167:17)",
"0x55d276a10a39: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a10a39: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a10a39: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a10a39: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a10a39: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276a10a39: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d276a10a39: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a10a39: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a10a39: <alloc::collections::vec_deque::VecDeque<T> as alloc::collections::vec_deque::spec_from_iter::SpecFromIter<T,I>>::spec_from_iter (collections/vec_deque/spec_from_iter.rs:17:9)",
"0x55d276a7aec4: <alloc::collections::vec_deque::VecDeque<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (collections/vec_deque/mod.rs:2863:9)",
"0x55d276a7aec4: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a7aec4: truck_topology::wire::<impl truck_topology::Wire<P,C>>::inverse (truck-topology/src/wire.rs:189:75)",
"0x55d276a7aec4: truck_topology::face::<impl truck_topology::Face<P,C,S>>::boundaries::{{closure}} (truck-topology/src/face.rs:104:61)",
"0x55d276a7aec4: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a7aec4: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a7aec4: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a7aec4: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a7aec4: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d276a7aec4: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d276a7aec4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d276a7aec4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a6b113: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a6b113: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a6b113: truck_topology::face::<impl truck_topology::Face<P,C,S>>::boundaries (truck-topology/src/face.rs:104:72)",
"0x55d276a6b113: core::ops::function::Fn::call (src/ops/function.rs:79:5)",
"0x55d276a6b113: <rayon::iter::flat_map::FlatMapFolder<C,F,<C as rayon::iter::plumbing::Consumer<<U as rayon::iter::IntoParallelIterator>::Item>>::Result> as rayon::iter::plumbing::Folder<T>>::consume (src/iter/flat_map.rs:125:24)",
"0x55d276a6b113: rayon::iter::plumbing::Folder::consume_iter (iter/plumbing/mod.rs:178:20)",
"0x55d276a6b113: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d276a6b113: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d276a75aa3: rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (iter/plumbing/mod.rs:426:21)",
"0x55d276a75aa3: rayon_core::join::join_context::call_b::{{closure}} (src/join/mod.rs:129:25)",
"0x55d276a75aa3: rayon_core::job::JobResult<T>::call::{{closure}} (rayon-core-1.12.1/src/job.rs:218:41)",
"0x55d276a75aa3: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d276a75aa3: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d276a75aa3: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d276a75aa3: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d276a75aa3: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d276a75aa3: rayon_core::job::JobResult<T>::call (rayon-core-1.12.1/src/job.rs:218:15)",
"0x55d276a75aa3: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.12.1/src/job.rs:120:32)",
"0x55d276a4362f: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d276a4362f: hashbrown::raw::RawTable<T,A>::find_or_find_insert_slot (src/raw/mod.rs:1413:9)",
"0x55d276a4362f: hashbrown::map::HashMap<K,V,S,A>::insert (hashbrown-0.14.5/src/map.rs:1754:15)",
"0x55d276a4362f: hashbrown::set::HashSet<T,S,A>::insert (hashbrown-0.14.5/src/set.rs:1115:9)",
"0x55d276a4362f: std::collections::hash::set::HashSet<T,S>::insert (collections/hash/set.rs:890:19)",
"0x55d276a4362f: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency::{{closure}} (truck-topology/src/shell.rs:231:26)",
"0x55d276a4362f: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a4362f: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a4362f: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d276a4362f: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d276a4362f: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d276a4362f: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d276a4362f: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d276a4362f: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d276a4362f: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d276a4362f: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:321:9)",
"0x55d276a4362f: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d276a4362f: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a4362f: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a4362f: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d276a4362f: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d276a4362f: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency (truck-topology/src/shell.rs:230:26)",
"0x55d276a4362f: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::is_connected (truck-topology/src/shell.rs:405:29)",
"0x55d276a41941: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:22:24)",
"0x55d276a41941: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d276a41941: truck_shapeops::transversal::integrate::and (transversal/integrate/mod.rs:122:10)",
"0x55d276a0f0de: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a0f0de: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a0f0de: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a0f0de: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a0f0de: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276a0f0de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d276a0f0de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a0f0de: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a0f0de: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a0f0de: truck_topology::face::<impl truck_topology::Face<P,C,S>>::boundary_iters (truck-topology/src/face.rs:211:14)",
"0x55d276a0f0de: truck_topology::face::<impl truck_topology::Face<P,C,S>>::edge_iter (truck-topology/src/face.rs:224:14)",
"0x55d276a0f0de: core::ops::function::FnMut::call_mut (src/ops/function.rs:166:5)",
"0x55d276a0f0de: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a0f0de: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a0f0de: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a0f0de: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d276a0f0de: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d276a0f0de: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d276a0f0de: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d276a0f0de: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a0f0de: <truck_topology::shell::Boundaries<C> as core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>>>::from_iter (truck-topology/src/shell.rs:1126:9)",
"0x55d276a0f0de: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::shell_condition (truck-topology/src/shell.rs:133:26)",
"0x55d276a0f0de: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:24:23)",
"0x55d276a0f0de: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d276a0f0de: <truck_topology::Solid<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:300:9)",
"0x55d276a041dc: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a041dc: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a041dc: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a041dc: truck_topology::vertex::<impl truck_topology::Vertex<P>>::new (truck-topology/src/vertex.rs:17:20)",
"0x55d276a041dc: truck_topology::vertex::<impl truck_topology::Vertex<P>>::mapped (truck-topology/src/vertex.rs:90:9)",
"0x55d276a041dc: truck_topology::wire::<impl truck_topology::Wire<P,C>>::mapped::{{closure}} (truck-topology/src/wire.rs:489:65)",
"0x55d276a041dc: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert::{{closure}} (truck-base/src/entry_map.rs:60:32)",
"0x55d276a041dc: std::collections::hash::map::Entry<K,V>::or_insert_with (collections/hash/map.rs:2666:43)",
"0x55d276a041dc: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert (truck-base/src/entry_map.rs:58:9)",
"0x55d276a783fc: truck_topology::wire::edge_entry_map_closure::{{closure}} (truck-topology/src/wire.rs:579:23)",
"0x55d276a783fc: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert::{{closure}} (truck-base/src/entry_map.rs:60:32)",
"0x55d276a783fc: std::collections::hash::map::Entry<K,V>::or_insert_with (collections/hash/map.rs:2666:43)",
"0x55d276a783fc: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert (truck-base/src/entry_map.rs:58:9)",
"0x55d276a783fc: truck_topology::wire::<impl truck_topology::Wire<P,C>>::sub_mapped::{{closure}} (truck-topology/src/wire.rs:433:32)",
"0x55d276a783fc: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a783fc: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a783fc: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a294be: <alloc::collections::vec_deque::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (collections/vec_deque/iter.rs:80:21)",
"0x55d276a294be: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a294be: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a294be: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d276a294be: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d276a294be: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d276a294be: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a294be: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a294be: <alloc::collections::vec_deque::VecDeque<T> as alloc::collections::vec_deque::spec_from_iter::SpecFromIter<T,I>>::spec_from_iter (collections/vec_deque/spec_from_iter.rs:17:9)",
"0x55d276a294be: <alloc::collections::vec_deque::VecDeque<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (collections/vec_deque/mod.rs:2863:9)",
"0x55d276a294be: truck_topology::wire::<impl core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>> for truck_topology::Wire<P,C>>::from_iter (truck-topology/src/wire.rs:599:20)",
"0x55d276a294be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a294be: truck_topology::wire::<impl truck_topology::Wire<P,C>>::sub_mapped (truck-topology/src/wire.rs:439:14)",
"0x55d276a294be: truck_topology::wire::<impl truck_topology::Wire<P,C>>::mapped (truck-topology/src/wire.rs:494:9)",
"0x55d276a294be: truck_topology::face::<impl truck_topology::Face<P,C,S>>::mapped::{{closure}} (truck-topology/src/face.rs:488:25)",
"0x55d276a294be: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a294be: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a294be: truck_topology::face::<impl truck_topology::Face<P,C,S>>::mapped (truck-topology/src/face.rs:489:14)",
"0x55d276a294be: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (truck-modeling/src/sweep.rs:232:23)",
"0x55d276a294be: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d276b3c389: alloc::raw_vec::finish_grow (core/src/result.rs:0:0)",
"0x55d276a8a642: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:486:19)",
"0x55d276a8a642: alloc::raw_vec::RawVec<T,A>::grow_one (alloc/src/raw_vec.rs:364:27)",
"0x55d276b23e02: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276b23e02: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::get_conflict_resolutions (spade-2.12.1/src/cdt.rs:958:21)",
"0x55d276b23e02: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::try_add_constraint_inner (spade-2.12.1/src/cdt.rs:817:13)",
"0x55d276b23e02: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::add_constraint (spade-2.12.1/src/cdt.rs:550:9)",
"0x55d276a216f2: truck_meshalgo::tessellation::triangulation::PolyBoundary::insert_to::{{closure}} (src/tessellation/triangulation.rs:0:0)",
"0x55d276a216f2: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a216f2: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a216f2: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d276a216f2: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d276a216f2: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d276a216f2: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d276a216f2: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a216f2: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a216f2: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d276a216f2: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d276a216f2: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d276a216f2: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:20)",
"0x55d276a216f2: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d276a216f2: truck_meshalgo::tessellation::triangulation::PolyBoundary::insert_to (src/tessellation/triangulation.rs:495:14)",
"0x55d276a216f2: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:526:5)",
"0x55d276a4384d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276a4384d: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency::{{closure}} (truck-topology/src/shell.rs:234:17)",
"0x55d276a4384d: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a4384d: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a4384d: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d276a4384d: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d276a4384d: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d276a4384d: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d276a4384d: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d276a4384d: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d276a4384d: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d276a4384d: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:321:9)",
"0x55d276a4384d: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d276a4384d: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a4384d: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a4384d: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d276a4384d: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d276a4384d: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency (truck-topology/src/shell.rs:230:26)",
"0x55d276a4384d: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::is_connected (truck-topology/src/shell.rs:405:29)",
"0x55d276a464a9: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a464a9: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::face_adjacency::{{closure}}::{{closure}}::{{closure}} (alloc/src/macros.rs:54:13)",
"0x55d276a464a9: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d276a464a9: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::face_adjacency::{{closure}}::{{closure}} (truck-topology/src/shell.rs:333:17)",
"0x55d276a464a9: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::face_adjacency::{{closure}} (truck-topology/src/shell.rs:331:13)",
"0x55d276a464a9: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a464a9: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d276a464a9: <hashbrown::map::IntoIter<K,V,A> as core::iter::traits::iterator::Iterator>::fold (hashbrown-0.14.5/src/map.rs:4827:9)",
"0x55d276a464a9: <std::collections::hash::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::fold (collections/hash/map.rs:2332:19)",
"0x55d276a464a9: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d276a464a9: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::face_adjacency (truck-topology/src/shell.rs:330:35)",
"0x55d276a464a9: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::connected_components (truck-topology/src/shell.rs:450:29)",
"0x55d276a79a8f: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a79a8f: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a79a8f: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a79a8f: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new_unchecked (truck-topology/src/edge.rs:45:20)",
"0x55d276a79a8f: truck_topology::edge::<impl truck_topology::Edge<P,C>>::try_new (truck-topology/src/edge.rs:20:16)",
"0x55d276a79a8f: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new (truck-topology/src/edge.rs:33:9)",
"0x55d276a79a8f: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:190:25)",
"0x55d276a79a8f: std::collections::hash::map::Entry<K,V>::or_insert_with (collections/hash/map.rs:2666:43)",
"0x55d276a79a8f: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}} (transversal/loops_store/mod.rs:189:21)",
"0x55d276a79a8f: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a79a8f: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a79a8f: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a4304b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276a4304b: truck_topology::shell::create_one_component (truck-topology/src/shell.rs:1165:13)",
"0x55d276a4304b: truck_topology::shell::check_connectivity (truck-topology/src/shell.rs:1133:5)",
"0x55d276a43f05: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::is_connected (truck-topology/src/shell.rs:415:9)",
"0x55d276a74aee: rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (iter/plumbing/mod.rs:426:21)",
"0x55d276a74aee: rayon_core::join::join_context::call_b::{{closure}} (src/join/mod.rs:129:25)",
"0x55d276a74aee: rayon_core::job::JobResult<T>::call::{{closure}} (rayon-core-1.12.1/src/job.rs:218:41)",
"0x55d276a74aee: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d276a74aee: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d276a74aee: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d276a74aee: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d276a74aee: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d276a74aee: rayon_core::job::JobResult<T>::call (rayon-core-1.12.1/src/job.rs:218:15)",
"0x55d276a74aee: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.12.1/src/job.rs:120:32)",
"0x55d276a79807: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a79807: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a79807: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a79807: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new_unchecked (truck-topology/src/edge.rs:45:20)",
"0x55d276a79807: truck_topology::edge::<impl truck_topology::Edge<P,C>>::try_new (truck-topology/src/edge.rs:20:16)",
"0x55d276a79807: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new (truck-topology/src/edge.rs:33:9)",
"0x55d276a79807: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:186:25)",
"0x55d276a79807: std::collections::hash::map::Entry<K,V>::or_insert_with (collections/hash/map.rs:2666:43)",
"0x55d276a79807: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}} (transversal/loops_store/mod.rs:185:21)",
"0x55d276a79807: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a79807: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a79807: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a6c1b4: truck_topology::face::<impl truck_topology::Face<P,C,S>>::boundaries (truck-topology/src/face.rs:103:21)",
"0x55d276a6c1b4: core::ops::function::Fn::call (src/ops/function.rs:79:5)",
"0x55d276a6c1b4: <rayon::iter::flat_map::FlatMapFolder<C,F,<C as rayon::iter::plumbing::Consumer<<U as rayon::iter::IntoParallelIterator>::Item>>::Result> as rayon::iter::plumbing::Folder<T>>::consume (src/iter/flat_map.rs:125:24)",
"0x55d276a6c1b4: rayon::iter::plumbing::Folder::consume_iter (iter/plumbing/mod.rs:178:20)",
"0x55d276a6c1b4: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d276a6c1b4: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d276a3e720: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276a3e720: truck_shapeops::transversal::faces_classification::FacesClassification<P,C,S>::and_or_unknown (transversal/faces_classification/mod.rs:32:44)",
"0x55d276a6462b: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a6462b: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a6462b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a6462b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a6462b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276a6462b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55d276a6462b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a6462b: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a6462b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a6462b: <core::option::Option<V> as core::iter::traits::collect::FromIterator<core::option::Option<A>>>::from_iter::{{closure}} (core/src/option.rs:2467:51)",
"0x55d276a6462b: core::iter::adapters::try_process (iter/adapters/mod.rs:173:17)",
"0x55d276a6462b: <core::option::Option<V> as core::iter::traits::collect::FromIterator<core::option::Option<A>>>::from_iter (core/src/option.rs:2467:9)",
"0x55d276a6462b: truck_shapeops::transversal::divide_face::create_parameter_boundary::{{closure}} (transversal/divide_face/mod.rs:37:61)",
"0x55d276a6462b: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a6462b: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276b1c8d3: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276b1c8d3: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276b1c8d3: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276b1c8d3: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276b1c8d3: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276b1c8d3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55d276b1c8d3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a07dd3: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a07dd3: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a07dd3: truck_meshalgo::analyzers::collision::collision (src/analyzers/collision.rs:217:47)",
"0x55d276a07dd3: <truck_polymesh::PolygonMesh as truck_meshalgo::analyzers::collision::Collision>::extract_interference (src/analyzers/collision.rs:34:9)",
"0x55d276a07dd3: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:157:34)",
"0x55d276a07dd3: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d276a07dd3: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d276a07dd3: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a07dd3: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d276a07dd3: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a07dd3: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d276a07dd3: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d276a7fa9c: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a7fa9c: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a7fa9c: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a7fa9c: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new_unchecked (truck-topology/src/edge.rs:45:20)",
"0x55d276a7fa9c: truck_topology::edge::<impl truck_topology::Edge<P,C>>::debug_new (truck-topology/src/edge.rs:57:22)",
"0x55d276a7fa9c: truck_modeling::topo_impls::connect_vertices (truck-modeling/src/topo_impls.rs:17:5)",
"0x55d276a7fa9c: truck_modeling::topo_impls::connect_edges (truck-modeling/src/topo_impls.rs:40:17)",
"0x55d276a7fa9c: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Edge<P,C>>::sweep (truck-modeling/src/sweep.rs:99:9)",
"0x55d276a7fa9c: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d276a7fa9c: test_truck::main (test-truck/src/main.rs:43:21)",
"0x55d276a0cfff: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a0cfff: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a0cfff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a0cfff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a0cfff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276a0cfff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55d276a0cfff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a0cfff: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a0cfff: rayon::collections::hash_map::<impl rayon::iter::IntoParallelIterator for std::collections::hash::map::HashMap<K,V,S>>::into_par_iter (src/collections/mod.rs:18:32)",
"0x55d276a0cfff: truck_meshalgo::tessellation::triangulation::shell_tessellation (src/tessellation/triangulation.rs:67:35)",
"0x55d276a0cfff: <truck_topology::Shell<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:261:19)",
"0x55d276a6873f: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:486:19)",
"0x55d276a6873f: alloc::raw_vec::RawVec<T,A>::grow_one (alloc/src/raw_vec.rs:364:27)",
"0x55d276a09702: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276a09702: truck_shapeops::transversal::intersection_curve::IntersectionCurveWithParameters<S>::try_new (transversal/intersection_curve/mod.rs:35:13)",
"0x55d276a09702: truck_shapeops::transversal::intersection_curve::intersection_curves::{{closure}} (transversal/intersection_curve/mod.rs:162:25)",
"0x55d276a09702: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a09702: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d276a09702: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a09702: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a09702: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d276a09702: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d276a09702: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d276a09702: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:246:9)",
"0x55d276a09702: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a09702: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a09702: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:170:10)",
"0x55d276a09702: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d276a09702: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d276a09702: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a09702: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d276a09702: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a09702: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d276a09702: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d276a21c77: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a21c77: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a21c77: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a21c77: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a21c77: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276a21c77: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d276a21c77: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a21c77: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a21c77: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a21c77: truck_meshalgo::tessellation::triangulation::insert_surface::{{closure}} (src/tessellation/triangulation.rs:556:18)",
"0x55d276a21c77: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a21c77: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d276a21c77: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a21c77: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a21c77: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d276a21c77: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d276a21c77: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d276a21c77: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:246:9)",
"0x55d276a21c77: truck_meshalgo::tessellation::triangulation::insert_surface (src/tessellation/triangulation.rs:558:10)",
"0x55d276a21c77: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:527:5)",
"0x55d276a7a40d: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a7a40d: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a7a40d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a7a40d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a7a40d: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d276a7a40d: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d276a7a40d: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d276a7a40d: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d276a7a40d: <truck_polymesh::PolylineCurve<P> as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:101:29)",
"0x55d276a7a40d: truck_topology::edge::<impl truck_topology::Edge<P,C>>::curve (truck-topology/src/edge.rs:255:9)",
"0x55d276a7a40d: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:186:69)",
"0x55d276a7a40d: std::collections::hash::map::Entry<K,V>::or_insert_with (collections/hash/map.rs:2666:43)",
"0x55d276a7a40d: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}} (transversal/loops_store/mod.rs:185:21)",
"0x55d276a7a40d: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a7a40d: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a7a40d: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a39d16: <alloc::collections::vec_deque::iter_mut::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (collections/vec_deque/iter_mut.rs:72:9)",
"0x55d276a39d16: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d276a39d16: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d276a39d16: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d276a39d16: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a39d16: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a39d16: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d276a39d16: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d276a39d16: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d276a39d16: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d276a39d16: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d276a39d16: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex (transversal/loops_store/mod.rs:183:14)",
"0x55d276a39d16: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::change_vertex::{{closure}} (transversal/loops_store/mod.rs:295:31)",
"0x55d276a39d16: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d276a39d16: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::change_vertex (transversal/loops_store/mod.rs:294:9)",
"0x55d276a39d16: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::add_polygon_vertex (transversal/loops_store/mod.rs:320:22)",
"0x55d276b57f70: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:486:19)",
"0x55d276b57f70: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:349:31)",
"0x55d276b57bed: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:355:13)",
"0x55d276b57bed: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:972:18)",
"0x55d276b57bed: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2146:14)",
"0x55d276b57bed: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,alloc::vec::into_iter::IntoIter<T>>>::spec_extend (src/vec/spec_extend.rs:33:13)",
"0x55d276b57bed: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d276b57bed: truck_polymesh::faces::<impl truck_polymesh::Faces<V>>::naive_concat (truck-polymesh/src/faces.rs:264:24)",
"0x55d276b57bed: truck_polymesh::polygon_mesh::<impl truck_polymesh::PolygonMesh>::merge (truck-polymesh/src/polygon_mesh.rs:124:9)",
"0x55d276b219b9: <truck_topology::Shell<cgmath::point::Point3<f64>,truck_polymesh::PolylineCurve<cgmath::point::Point3<f64>>,core::option::Option<truck_polymesh::PolygonMesh>> as truck_meshalgo::tessellation::MeshedShape>::to_polygon::{{closure}} (src/tessellation/mod.rs:71:17)",
"0x55d276b219b9: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d276b219b9: <truck_topology::Shell<cgmath::point::Point3<f64>,truck_polymesh::PolylineCurve<cgmath::point::Point3<f64>>,core::option::Option<truck_polymesh::PolygonMesh>> as truck_meshalgo::tessellation::MeshedShape>::to_polygon (src/tessellation/mod.rs:66:9)",
"0x55d276a80d42: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon::{{closure}} (src/tessellation/mod.rs:84:27)",
"0x55d276a80d42: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d276a80d42: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon (src/tessellation/mod.rs:83:9)",
"0x55d276a80d42: test_truck::main (test-truck/src/main.rs:47:17)",
"0x55d276a3e6c5: truck_topology::face::<impl core::clone::Clone for truck_topology::Face<P,C,S>>::clone (truck-topology/src/face.rs:1029:25)",
"0x55d276a3e6c5: truck_shapeops::transversal::faces_classification::FacesClassification<P,C,S>::and_or_unknown (transversal/faces_classification/mod.rs:32:57)",
"0x55d276a09749: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276a09749: truck_shapeops::transversal::intersection_curve::IntersectionCurveWithParameters<S>::try_new (transversal/intersection_curve/mod.rs:36:13)",
"0x55d276a09749: truck_shapeops::transversal::intersection_curve::intersection_curves::{{closure}} (transversal/intersection_curve/mod.rs:162:25)",
"0x55d276a09749: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a09749: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d276a09749: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a09749: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a09749: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d276a09749: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d276a09749: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d276a09749: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:246:9)",
"0x55d276a09749: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a09749: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a09749: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:170:10)",
"0x55d276a09749: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d276a09749: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d276a09749: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a09749: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d276a09749: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a09749: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d276a09749: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d276a08859: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:26:32)",
"0x55d276a08859: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a08859: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a08859: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a08859: truck_meshalgo::analyzers::collision::collision (src/analyzers/collision.rs:229:10)",
"0x55d276a08859: <truck_polymesh::PolygonMesh as truck_meshalgo::analyzers::collision::Collision>::extract_interference (src/analyzers/collision.rs:34:9)",
"0x55d276a08859: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:157:34)",
"0x55d276a08859: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d276a08859: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d276a08859: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a08859: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d276a08859: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a08859: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d276a08859: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d276a2d681: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a2d681: truck_shapeops::transversal::divide_face::divide_one_face::{{closure}} (alloc/src/macros.rs:54:13)",
"0x55d276a2d681: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d276a2d681: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a2d681: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d276a2d681: truck_shapeops::transversal::divide_face::divide_one_face (transversal/divide_face/mod.rs:63:18)",
"0x55d276a2d681: truck_shapeops::transversal::divide_face::divide_faces::{{closure}} (transversal/divide_face/mod.rs:122:27)",
"0x55d276a2d681: truck_shapeops::transversal::divide_face::divide_faces (transversal/divide_face/mod.rs:115:10)",
"0x55d276aea71a: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276aea71a: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276aea71a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276aea71a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276aea71a: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276aea71a: std::sys::pal::unix::thread::cgroups::quota (pal/unix/thread.rs:506:27)",
"0x55d276aea71a: std::sys::pal::unix::thread::available_parallelism (pal/unix/thread.rs:328:25)",
"0x55d276aea71a: std::thread::available_parallelism (src/thread/mod.rs:1855:5)",
"0x55d276acf87b: rayon_core::ThreadPoolBuilder<S>::get_num_threads::{{closure}} (rayon-core-1.12.1/src/lib.rs:473:17)",
"0x55d276acf87b: rayon_core::ThreadPoolBuilder<S>::get_num_threads (rayon-core-1.12.1/src/lib.rs:493:22)",
"0x55d276acf87b: rayon_core::registry::Registry::new (rayon-core-1.12.1/src/registry.rs:237:34)",
"0x55d276acf0ae: rayon_core::registry::default_global_registry (rayon-core-1.12.1/src/registry.rs:201:18)",
"0x55d276acf0ae: core::ops::function::FnOnce::call_once (src/ops/function.rs:250:5)",
"0x55d276acf0ae: rayon_core::registry::set_global_registry::{{closure}} (rayon-core-1.12.1/src/registry.rs:193:18)",
"0x55d276acf0ae: std::sync::once::Once::call_once::{{closure}} (src/sync/once.rs:158:41)",
"0x55d276acf0ae: std::sys::sync::once::futex::Once::call (sync/once/futex.rs:124:21)",
"0x55d276aceea4: std::sync::once::Once::call_once (src/sync/once.rs:158:9)",
"0x55d276aceea4: rayon_core::registry::set_global_registry (rayon-core-1.12.1/src/registry.rs:192:5)",
"0x55d276aceea4: rayon_core::registry::global_registry (rayon-core-1.12.1/src/registry.rs:166:5)",
"0x55d276a0c42c: rayon_core::registry::Registry::current_num_threads (rayon-core-1.12.1/src/registry.rs:334:17)",
"0x55d276a0c42c: rayon_core::current_num_threads (rayon-core-1.12.1/src/lib.rs:144:5)",
"0x55d276a0c42c: rayon::iter::plumbing::Splitter::new (iter/plumbing/mod.rs:266:21)",
"0x55d276a0c42c: rayon::iter::plumbing::LengthSplitter::new (iter/plumbing/mod.rs:314:20)",
"0x55d276a0c42c: rayon::iter::plumbing::bridge_producer_consumer (iter/plumbing/mod.rs:395:20)",
"0x55d276a0c42c: <rayon::iter::plumbing::bridge::Callback<C> as rayon::iter::plumbing::ProducerCallback<I>>::callback (iter/plumbing/mod.rs:372:13)",
"0x55d276a0c42c: <rayon::slice::Iter<T> as rayon::iter::IndexedParallelIterator>::with_producer (src/slice/mod.rs:826:9)",
"0x55d276a0c42c: rayon::iter::plumbing::bridge (iter/plumbing/mod.rs:356:12)",
"0x55d276a0c42c: <rayon::slice::Iter<T> as rayon::iter::ParallelIterator>::drive_unindexed (src/slice/mod.rs:802:9)",
"0x55d276a0c42c: <rayon::iter::flat_map::FlatMap<I,F> as rayon::iter::ParallelIterator>::drive_unindexed (src/iter/flat_map.rs:44:9)",
"0x55d276a0c42c: <rayon::iter::flatten::Flatten<I> as rayon::iter::ParallelIterator>::drive_unindexed (src/iter/flatten.rs:38:9)",
"0x55d276a0c42c: <rayon::iter::map::Map<I,F> as rayon::iter::ParallelIterator>::drive_unindexed (src/iter/map.rs:49:9)",
"0x55d276a0c42c: rayon::iter::extend::fast_collect (src/iter/extend.rs:80:31)",
"0x55d276a0c42c: rayon::iter::extend::<impl rayon::iter::ParallelExtend<(K,V)> for std::collections::hash::map::HashMap<K,V,S>>::par_extend (src/iter/extend.rs:32:20)",
"0x55d276a0c42c: rayon::iter::from_par_iter::collect_extended (src/iter/from_par_iter.rs:20:5)",
"0x55d276a0c42c: rayon::iter::from_par_iter::<impl rayon::iter::FromParallelIterator<(K,V)> for std::collections::hash::map::HashMap<K,V,S>>::from_par_iter (src/iter/from_par_iter.rs:131:9)",
"0x55d276a0c42c: rayon::iter::ParallelIterator::collect (src/iter/mod.rs:2069:9)",
"0x55d276a0c42c: truck_meshalgo::tessellation::triangulation::shell_tessellation (src/tessellation/triangulation.rs:65:10)",
"0x55d276a0c42c: <truck_topology::Shell<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:261:19)",
"0x55d276a841b7: truck_shapeops::transversal::integrate::or (transversal/integrate/mod.rs:144:22)",
"0x55d276a841b7: test_truck::main (test-truck/src/main.rs:76:21)",
"0x55d276a3d5e6: <alloc::collections::vec_deque::iter_mut::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (collections/vec_deque/iter_mut.rs:72:9)",
"0x55d276a3d5e6: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d276a3d5e6: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d276a3d5e6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d276a3d5e6: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a3d5e6: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a3d5e6: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d276a3d5e6: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d276a3d5e6: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d276a3d5e6: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d276a3d5e6: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d276a3d5e6: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex (transversal/loops_store/mod.rs:183:14)",
"0x55d276a3d5e6: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::change_vertex::{{closure}} (transversal/loops_store/mod.rs:295:31)",
"0x55d276a3d5e6: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d276a3d5e6: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::change_vertex (transversal/loops_store/mod.rs:294:9)",
"0x55d276a3d5e6: truck_shapeops::transversal::loops_store::LoopsStore<cgmath::point::Point3<f64>,C>::add_geom_vertex (transversal/loops_store/mod.rs:359:22)",
"0x55d276a05500: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a05500: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a05500: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a05500: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a05500: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276a05500: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d276a05500: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a05500: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a05500: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a05500: truck_polymesh::polyline_curve::<impl truck_geotrait::traits::Invertible for truck_polymesh::PolylineCurve<P>>::inverse (truck-polymesh/src/polyline_curve.rs:253:65)",
"0x55d276a05500: truck_topology::edge::<impl truck_topology::Edge<P,C>>::oriented_curve (truck-topology/src/edge.rs:323:22)",
"0x55d276a05500: core::ops::function::FnMut::call_mut (src/ops/function.rs:166:5)",
"0x55d276a05500: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d276a05500: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d276a05500: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d276a05500: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:9)",
"0x55d276a05500: <core::iter::adapters::fuse::Fuse<I> as core::iter::adapters::fuse::FuseImpl<I>>::next (iter/adapters/fuse.rs:359:9)",
"0x55d276a05500: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/fuse.rs:50:9)",
"0x55d276a05500: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next (iter/adapters/flatten.rs:610:29)",
"0x55d276a05500: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/flatten.rs:66:9)",
"0x55d2769feb67: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d2769feb67: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d2769feb67: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:43:9)",
"0x55d2769feb67: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d2769feb67: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d2769feb67: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d2769feb67: truck_meshalgo::tessellation::triangulation::PolyBoundaryPiece::try_new (src/tessellation/triangulation.rs:243:14)",
"0x55d2769feb67: truck_meshalgo::tessellation::triangulation::shell_create_polygon::{{closure}} (src/tessellation/triangulation.rs:213:13)",
"0x55d2769feb67: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:28)",
"0x55d2769feb67: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d2769feb67: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d2769feb67: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/mod.rs:204:9)",
"0x55d2769feb67: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d2769feb67: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::next (iter/adapters/mod.rs:187:14)",
"0x55d276a691c7: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d276a691c7: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d276a691c7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:43:9)",
"0x55d276a691c7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a691c7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a691c7: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a691c7: <core::option::Option<V> as core::iter::traits::collect::FromIterator<core::option::Option<A>>>::from_iter::{{closure}} (core/src/option.rs:2467:51)",
"0x55d276a691c7: core::iter::adapters::try_process (iter/adapters/mod.rs:173:17)",
"0x55d276a691c7: <core::option::Option<V> as core::iter::traits::collect::FromIterator<core::option::Option<A>>>::from_iter (core/src/option.rs:2467:9)",
"0x55d276a691c7: truck_meshalgo::tessellation::triangulation::shell_create_polygon (src/tessellation/triangulation.rs:215:10)",
"0x55d276a691c7: truck_meshalgo::tessellation::triangulation::shell_tessellation::{{closure}} (src/tessellation/triangulation.rs:92:9)",
"0x55d276a691c7: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut (src/ops/function.rs:272:13)",
"0x55d276a691c7: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d276a691c7: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d276a691c7: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d276a691c7: rayon::iter::plumbing::Folder::consume_iter (iter/plumbing/mod.rs:177:21)",
"0x55d276a691c7: <rayon::iter::map::MapFolder<C,F> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/map.rs:248:21)",
"0x55d276a691c7: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d276a691c7: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d276a21822: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a21822: truck_geometry::specifieds::plane::<impl truck_geotrait::traits::surface::ParameterDivision2D for truck_geometry::specifieds::Plane>::parameter_division (alloc/src/macros.rs:54:13)",
"0x55d276a21822: <truck_modeling::geometry::Surface as truck_geotrait::traits::surface::ParameterDivision2D>::parameter_division (truck-modeling/src/geometry.rs:161:5)",
"0x55d276a21822: <&S as truck_geotrait::traits::surface::ParameterDivision2D>::parameter_division (src/traits/surface.rs:155:9)",
"0x55d276a21822: truck_meshalgo::tessellation::triangulation::insert_surface (src/tessellation/triangulation.rs:547:24)",
"0x55d276a21822: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:527:5)",
"0x55d276a2d748: truck_topology::face::<impl core::clone::Clone for truck_topology::Face<P,C,S>>::clone (truck-topology/src/face.rs:1029:25)",
"0x55d276a2d748: truck_shapeops::transversal::divide_face::divide_faces::{{closure}} (transversal/divide_face/mod.rs:120:26)",
"0x55d276a2d748: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d276a2d748: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a2d748: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d276a2d748: truck_shapeops::transversal::divide_face::divide_faces (transversal/divide_face/mod.rs:115:10)",
"0x55d276a249c8: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276a249c8: truck_meshalgo::tessellation::triangulation::triangulation_into_polymesh::{{closure}} (src/tessellation/triangulation.rs:598:13)",
"0x55d276a249c8: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a249c8: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:108:27)",
"0x55d276a249c8: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d276a249c8: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:114:9)",
"0x55d276a249c8: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a249c8: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a249c8: <hashbrown::map::HashMap<K,V,S,A> as core::iter::traits::collect::Extend<(K,V)>>::extend (hashbrown-0.14.5/src/map.rs:6511:9)",
"0x55d276a249c8: <std::collections::hash::map::HashMap<K,V,S> as core::iter::traits::collect::Extend<(K,V)>>::extend (collections/hash/map.rs:3144:9)",
"0x55d276a249c8: <std::collections::hash::map::HashMap<K,V,S> as core::iter::traits::collect::FromIterator<(K,V)>>::from_iter (collections/hash/map.rs:3129:13)",
"0x55d276a249c8: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a249c8: truck_meshalgo::tessellation::triangulation::triangulation_into_polymesh (src/tessellation/triangulation.rs:603:10)",
"0x55d276a249c8: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:528:20)",
"0x55d276a80a5c: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a80a5c: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a80a5c: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a80a5c: truck_topology::face::<impl truck_topology::Face<P,C,S>>::new_unchecked (truck-topology/src/face.rs:64:22)",
"0x55d276a80a5c: truck_topology::face::<impl truck_topology::Face<P,C,S>>::debug_new (truck-topology/src/face.rs:76:22)",
"0x55d276a80a5c: truck_modeling::topo_impls::connect_edges (truck-modeling/src/topo_impls.rs:47:20)",
"0x55d276a80a5c: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Edge<P,C>>::sweep (truck-modeling/src/sweep.rs:99:9)",
"0x55d276a80a5c: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d276a80a5c: test_truck::main (test-truck/src/main.rs:43:21)",
"0x55d276b21bef: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276b21bef: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276b21bef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276b21bef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276b21bef: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d276b21bef: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d276b21bef: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d276b21bef: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d276b21bef: <truck_polymesh::Faces<V> as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:75:5)",
"0x55d276b21bef: <truck_polymesh::PolygonMesh<V,A> as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:88:5)",
"0x55d276b21bef: <core::option::Option<T> as core::clone::Clone>::clone (core/src/option.rs:2038:29)",
"0x55d276b21bef: truck_topology::face::<impl truck_topology::Face<P,C,S>>::surface (truck-topology/src/face.rs:509:9)",
"0x55d276b21bef: <truck_topology::Shell<cgmath::point::Point3<f64>,truck_polymesh::PolylineCurve<cgmath::point::Point3<f64>>,core::option::Option<truck_polymesh::PolygonMesh>> as truck_meshalgo::tessellation::MeshedShape>::to_polygon::{{closure}} (src/tessellation/mod.rs:67:37)",
"0x55d276b21bef: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d276b21bef: <truck_topology::Shell<cgmath::point::Point3<f64>,truck_polymesh::PolylineCurve<cgmath::point::Point3<f64>>,core::option::Option<truck_polymesh::PolygonMesh>> as truck_meshalgo::tessellation::MeshedShape>::to_polygon (src/tessellation/mod.rs:66:9)",
"0x55d276a843e2: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon::{{closure}} (src/tessellation/mod.rs:84:27)",
"0x55d276a843e2: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d276a843e2: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon (src/tessellation/mod.rs:83:9)",
"0x55d276a843e2: test_truck::main (test-truck/src/main.rs:77:17)",
"0x55d276a6e1b3: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:355:13)",
"0x55d276a6e1b3: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:972:18)",
"0x55d276a6e1b3: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3069:22)",
"0x55d276a6e1b3: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d276a6e1b3: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d276a6e1b3: <rayon::iter::extend::ListVecFolder<T> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/extend.rs:130:18)",
"0x55d276a6e1b3: <rayon::iter::map::MapFolder<C,F> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/map.rs:248:21)",
"0x55d276a6e1b3: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d276a6e1b3: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d276a01f13: rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (iter/plumbing/mod.rs:417:21)",
"0x55d276a01f13: rayon_core::join::join_context::call_a::{{closure}} (src/join/mod.rs:124:17)",
"0x55d276a01f13: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d276a01f13: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d276a01f13: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d276a01f13: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d276a01f13: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d276a01f13: rayon_core::join::join_context::{{closure}} (src/join/mod.rs:142:24)",
"0x55d276a6e4a8: rayon_core::registry::in_worker (rayon-core-1.12.1/src/registry.rs:0:0)",
"0x55d276a6e4a8: rayon_core::join::join_context (src/join/mod.rs:132:5)",
"0x55d276a6e4a8: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:415:47)",
"0x55d276a75e79: rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (iter/plumbing/mod.rs:426:21)",
"0x55d276a75e79: rayon_core::join::join_context::call_b::{{closure}} (src/join/mod.rs:129:25)",
"0x55d276a75e79: rayon_core::job::JobResult<T>::call::{{closure}} (rayon-core-1.12.1/src/job.rs:218:41)",
"0x55d276a75e79: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d276a75e79: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d276a75e79: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d276a75e79: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d276a75e79: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d276a75e79: rayon_core::job::JobResult<T>::call (rayon-core-1.12.1/src/job.rs:218:15)",
"0x55d276a75e79: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.12.1/src/job.rs:120:32)",
"0x55d276a0204c: rayon_core::registry::WorkerThread::wait_until (rayon-core-1.12.1/src/registry.rs:769:13)",
"0x55d276a0204c: rayon_core::join::join_context::{{closure}} (src/join/mod.rs:167:17)",
"0x55d276a45129: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a45129: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a45129: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a45129: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a45129: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276a45129: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d276a45129: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a45129: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a45129: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a45129: truck_topology::face::<impl truck_topology::Face<P,C,S>>::boundary_iters (truck-topology/src/face.rs:211:14)",
"0x55d276a45129: truck_topology::face::<impl truck_topology::Face<P,C,S>>::edge_iter (truck-topology/src/face.rs:224:14)",
"0x55d276a45129: core::ops::function::FnMut::call_mut (src/ops/function.rs:166:5)",
"0x55d276a45129: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:28)",
"0x55d276a45129: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a45129: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d276a45129: <core::iter::adapters::fuse::Fuse<I> as core::iter::adapters::fuse::FuseImpl<I>>::try_fold (iter/adapters/fuse.rs:375:19)",
"0x55d276a45129: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/fuse.rs:89:9)",
"0x55d276a45129: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_try_fold (iter/adapters/flatten.rs:515:25)",
"0x55d276a45129: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/flatten.rs:653:9)",
"0x55d276a45129: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/flatten.rs:81:9)",
"0x55d276a45129: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:19)",
"0x55d276a45129: core::iter::traits::iterator::Iterator::find_map (iter/traits/iterator.rs:2913:14)",
"0x55d276a45129: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::extract_boundaries (truck-topology/src/shell.rs:183:43)",
"0x55d276a7ae13: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a7ae13: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a7ae13: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a7ae13: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a7ae13: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276a7ae13: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d276a7ae13: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a00829: rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (iter/plumbing/mod.rs:417:21)",
"0x55d276a00829: rayon_core::join::join_context::call_a::{{closure}} (src/join/mod.rs:124:17)",
"0x55d276a00829: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d276a00829: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d276a00829: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d276a00829: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d276a00829: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d276a00829: rayon_core::join::join_context::{{closure}} (src/join/mod.rs:142:24)",
"0x55d276a6b5ee: rayon_core::registry::in_worker (rayon-core-1.12.1/src/registry.rs:0:0)",
"0x55d276a6b5ee: rayon_core::join::join_context (src/join/mod.rs:132:5)",
"0x55d276a6b5ee: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:415:47)",
"0x55d276a7f263: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a7f263: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a7f263: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a7f263: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new_unchecked (truck-topology/src/edge.rs:45:20)",
"0x55d276a7f263: truck_topology::edge::<impl truck_topology::Edge<P,C>>::debug_new (truck-topology/src/edge.rs:57:22)",
"0x55d276a7f263: truck_modeling::topo_impls::connect_vertices (truck-modeling/src/topo_impls.rs:17:5)",
"0x55d276a7f263: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Vertex<P>>::sweep (truck-modeling/src/sweep.rs:39:9)",
"0x55d276a7f263: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d276a7f263: test_truck::main (test-truck/src/main.rs:42:18)",
"0x55d276a6d62c: truck_topology::edge::<impl truck_topology::Edge<P,C>>::curve (truck-topology/src/edge.rs:255:9)",
"0x55d276a6d62c: truck_meshalgo::tessellation::triangulation::shell_tessellation::{{closure}} (src/tessellation/triangulation.rs:72:25)",
"0x55d276a6d62c: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut (src/ops/function.rs:272:13)",
"0x55d276a6d62c: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d276a6d62c: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d276a6d62c: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d276a6d62c: rayon::iter::plumbing::Folder::consume_iter (iter/plumbing/mod.rs:177:21)",
"0x55d276a6d62c: <rayon::iter::map::MapFolder<C,F> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/map.rs:248:21)",
"0x55d276a6d62c: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d276a6d62c: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d276a0ef35: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::is_connected (truck-topology/src/shell.rs:415:9)",
"0x55d276a0ef35: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:22:24)",
"0x55d276a0ef35: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d276a0ef35: <truck_topology::Solid<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:300:9)",
"0x55d276a4459d: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d276a4459d: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d276a4459d: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.14.5/src/rustc_entry.rs:46:18)",
"0x55d276a4459d: std::collections::hash::map::HashMap<K,V,S>::entry (collections/hash/map.rs:856:19)",
"0x55d276a4459d: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert (truck-base/src/entry_map.rs:59:14)",
"0x55d276a4459d: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices::{{closure}} (truck-topology/src/shell.rs:532:37)",
"0x55d276a4459d: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a4459d: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a4459d: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a4459d: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d276a4459d: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d276a4459d: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d276a4459d: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a4459d: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d276a4459d: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d276a4459d: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d276a4459d: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d276a4459d: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d276a4459d: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices (truck-topology/src/shell.rs:528:14)",
"0x55d276a213a8: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a213a8: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a213a8: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a213a8: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a213a8: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276a213a8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55d276a213a8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a213a8: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a213a8: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a213a8: truck_meshalgo::tessellation::triangulation::PolyBoundary::insert_to (src/tessellation/triangulation.rs:484:14)",
"0x55d276a213a8: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:526:5)",
"0x55d276a08c51: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a08c51: truck_shapeops::transversal::polyline_construction::construct_polylines (alloc/src/macros.rs:54:13)",
"0x55d276a08c51: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:158:21)",
"0x55d276a08c51: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d276a08c51: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d276a08c51: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a08c51: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d276a08c51: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a08c51: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d276a08c51: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d276a775b3: alloc::alloc::alloc (alloc/src/alloc.rs:100:9)",
"0x55d276a775b3: smallvec::SmallVec<A>::try_grow (smallvec-1.13.2/src/lib.rs:1191:46)",
"0x55d276a775b3: smallvec::SmallVec<A>::reserve_one_unchecked (smallvec-1.13.2/src/lib.rs:1231:20)",
"0x55d276a6f99e: smallvec::SmallVec<A>::push (smallvec-1.13.2/src/lib.rs:1118:17)",
"0x55d276a6f99e: spade::delaunay_core::triangulation_ext::TriangulationExt::legalize_edge (src/delaunay_core/triangulation_ext.rs:386:25)",
"0x55d276a7041f: spade::delaunay_core::triangulation_ext::TriangulationExt::legalize_vertex (src/delaunay_core/triangulation_ext.rs:320:13)",
"0x55d276a23117: spade::delaunay_core::triangulation_ext::TriangulationExt::insert_into_face (src/delaunay_core/triangulation_ext.rs:290:9)",
"0x55d276a23117: spade::delaunay_core::triangulation_ext::TriangulationExt::insert_with_hint_option_impl (src/delaunay_core/triangulation_ext.rs:97:60)",
"0x55d276a23117: spade::delaunay_core::triangulation_ext::TriangulationExt::insert_with_hint_option (src/delaunay_core/triangulation_ext.rs:67:22)",
"0x55d276a23117: spade::triangulation::Triangulation::insert (spade-2.12.1/src/triangulation.rs:552:9)",
"0x55d276a23117: truck_meshalgo::tessellation::triangulation::insert_surface::{{closure}}::{{closure}} (src/tessellation/triangulation.rs:553:43)",
"0x55d276a23117: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a23117: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a23117: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a23117: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a23117: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d276a23117: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d276a23117: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d276a23117: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a23117: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a23117: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a23117: truck_meshalgo::tessellation::triangulation::insert_surface::{{closure}} (src/tessellation/triangulation.rs:556:18)",
"0x55d276a23117: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d276a23117: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:246:9)",
"0x55d276a23117: truck_meshalgo::tessellation::triangulation::insert_surface (src/tessellation/triangulation.rs:558:10)",
"0x55d276a23117: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:527:5)",
"0x55d276ad1b5d: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276ad1b5d: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276ad1b5d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276ad1b5d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276ad1b5d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276ad1b5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d276ad1b5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276ad1b5d: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276ad1b5d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276ad1b5d: <alloc::boxed::Box<[I]> as core::iter::traits::collect::FromIterator<I>>::from_iter (alloc/src/boxed.rs:2121:9)",
"0x55d276ad1b5d: crossbeam_deque::deque::Buffer<T>::alloc (crossbeam-deque-0.8.5/src/deque.rs:44:18)",
"0x55d276ad1b5d: crossbeam_deque::deque::Worker<T>::new_fifo (crossbeam-deque-0.8.5/src/deque.rs:221:22)",
"0x55d276acfd07: rayon_core::registry::Registry::new::{{closure}} (rayon-core-1.12.1/src/registry.rs:256:30)",
"0x55d276acfd07: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276acfd07: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d276acfd07: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276acfd07: <(ExtendA,ExtendB) as core::iter::traits::collect::Extend<(A,B)>>::extend (iter/traits/collect.rs:519:9)",
"0x55d276acfd07: core::iter::traits::iterator::Iterator::unzip (iter/traits/iterator.rs:3396:9)",
"0x55d276acfd07: rayon_core::registry::Registry::new (rayon-core-1.12.1/src/registry.rs:254:66)",
"0x55d276a467f3: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a467f3: truck_topology::shell::create_one_component (alloc/src/macros.rs:54:13)",
"0x55d276a467f3: truck_topology::shell::create_components (truck-topology/src/shell.rs:1143:25)",
"0x55d276a467f3: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::connected_components (truck-topology/src/shell.rs:451:26)",
"0x55d276a21922: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a21922: truck_geotrait::algo::surface::parameter_division (alloc/src/macros.rs:54:13)",
"0x55d276a21922: truck_geometry::nurbs::nurbssurface::<impl truck_geotrait::traits::surface::ParameterDivision2D for truck_geometry::nurbs::NurbsSurface<V>>::parameter_division (src/nurbs/nurbssurface.rs:677:9)",
"0x55d276a21922: <truck_modeling::geometry::Surface as truck_geotrait::traits::surface::ParameterDivision2D>::parameter_division (truck-modeling/src/geometry.rs:161:5)",
"0x55d276a21922: <&S as truck_geotrait::traits::surface::ParameterDivision2D>::parameter_division (src/traits/surface.rs:155:9)",
"0x55d276a21922: truck_meshalgo::tessellation::triangulation::insert_surface (src/tessellation/triangulation.rs:547:24)",
"0x55d276a21922: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:527:5)",
"0x55d276a76185: rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (rayon-core-1.12.1/src/registry.rs:522:21)",
"0x55d276a76185: rayon_core::job::JobResult<T>::call::{{closure}} (rayon-core-1.12.1/src/job.rs:218:41)",
"0x55d276a76185: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d276a76185: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d276a76185: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d276a76185: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d276a76185: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d276a76185: rayon_core::job::JobResult<T>::call (rayon-core-1.12.1/src/job.rs:218:15)",
"0x55d276a76185: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.12.1/src/job.rs:120:32)",
"0x55d276a3e692: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276a3e692: truck_shapeops::transversal::faces_classification::FacesClassification<P,C,S>::and_or_unknown (transversal/faces_classification/mod.rs:30:40)",
"0x55d276b26718: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:486:19)",
"0x55d276b26718: alloc::raw_vec::RawVec<T,A>::grow_one (alloc/src/raw_vec.rs:364:27)",
"0x55d276b22ed1: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276b22ed1: spade::delaunay_core::dcel_operations::insert_second_vertex (src/delaunay_core/dcel_operations.rs:875:5)",
"0x55d276b22ed1: spade::delaunay_core::triangulation_ext::TriangulationExt::insert_second_vertex (src/delaunay_core/triangulation_ext.rs:179:29)",
"0x55d276b22ed1: spade::delaunay_core::triangulation_ext::TriangulationExt::insert_with_hint_option_impl (src/delaunay_core/triangulation_ext.rs:83:18)",
"0x55d276b22ed1: spade::delaunay_core::triangulation_ext::TriangulationExt::insert_with_hint_option (src/delaunay_core/triangulation_ext.rs:67:22)",
"0x55d276a448c2: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d276a448c2: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d276a448c2: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.14.5/src/rustc_entry.rs:46:18)",
"0x55d276a448c2: std::collections::hash::map::HashMap<K,V,S>::entry (collections/hash/map.rs:856:19)",
"0x55d276a448c2: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert (truck-base/src/entry_map.rs:59:14)",
"0x55d276a448c2: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices::{{closure}} (truck-topology/src/shell.rs:534:21)",
"0x55d276a448c2: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a448c2: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a448c2: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a448c2: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d276a448c2: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d276a448c2: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d276a448c2: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a448c2: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d276a448c2: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d276a448c2: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d276a448c2: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d276a448c2: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d276a448c2: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices (truck-topology/src/shell.rs:528:14)",
"0x55d276a46d9c: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a46d9c: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a46d9c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a46d9c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a46d9c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x55d276a46d9c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d276a46d9c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d276a46d9c: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d276a46d9c: truck_topology::face::<impl core::clone::Clone for truck_topology::Face<P,C,S>>::clone (truck-topology/src/face.rs:1029:25)",
"0x55d276a46d9c: core::ops::function::FnMut::call_mut (src/ops/function.rs:166:5)",
"0x55d276a46d9c: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a46d9c: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d276a46d9c: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a46d9c: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/cloned.rs:61:31)",
"0x55d276a46d9c: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a46d9c: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d276a46d9c: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d276a46d9c: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d276a46d9c: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:246:9)",
"0x55d276a46d9c: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a46d9c: truck_topology::shell::<impl core::iter::traits::collect::FromIterator<truck_topology::Face<P,C,S>> for truck_topology::Shell<P,C,S>>::from_iter (truck-topology/src/shell.rs:853:24)",
"0x55d276a46d9c: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a46d9c: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::connected_components::{{closure}} (truck-topology/src/shell.rs:454:49)",
"0x55d276a46d9c: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:28)",
"0x55d276a46d9c: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::try_fold (src/vec/into_iter.rs:340:25)",
"0x55d276a46d9c: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d276a46d9c: <I as alloc::vec::in_place_collect::SpecInPlaceCollect<T,I>>::collect_in_place (src/vec/in_place_collect.rs:379:13)",
"0x55d276a46d9c: alloc::vec::in_place_collect::from_iter_in_place (src/vec/in_place_collect.rs:270:9)",
"0x55d276a46d9c: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::connected_components (truck-topology/src/shell.rs:455:14)",
"0x55d276a42e7a: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a42e7a: truck_topology::shell::create_one_component (alloc/src/macros.rs:54:13)",
"0x55d276a42e7a: truck_topology::shell::check_connectivity (truck-topology/src/shell.rs:1133:5)",
"0x55d276a83b2f: test_truck::main (test-truck/src/main.rs:63:17)",
"0x55d276a6a372: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a6a372: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a6a372: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a6a372: truck_topology::face::<impl truck_topology::Face<P,C,S>>::new_unchecked (truck-topology/src/face.rs:64:22)",
"0x55d276a6a372: truck_topology::face::<impl truck_topology::Face<P,C,S>>::debug_new (truck-topology/src/face.rs:76:22)",
"0x55d276a6a372: truck_meshalgo::tessellation::triangulation::shell_create_polygon (src/tessellation/triangulation.rs:220:24)",
"0x55d276a6a372: truck_meshalgo::tessellation::triangulation::shell_tessellation::{{closure}} (src/tessellation/triangulation.rs:92:9)",
"0x55d276a6a372: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut (src/ops/function.rs:272:13)",
"0x55d276a6a372: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d276a6a372: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d276a6a372: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d276a6a372: rayon::iter::plumbing::Folder::consume_iter (iter/plumbing/mod.rs:177:21)",
"0x55d276a6a372: <rayon::iter::map::MapFolder<C,F> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/map.rs:248:21)",
"0x55d276a6a372: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d276a6a372: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d276a7afba: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a7afba: <&A as core::alloc::Allocator>::allocate (src/alloc/mod.rs:381:9)",
"0x55d276a7afba: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:529:13)",
"0x55d276a7afba: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:491:15)",
"0x55d276a7afba: alloc::boxed::Box<T,A>::new_in (alloc/src/boxed.rs:425:25)",
"0x55d276a7afba: alloc::collections::linked_list::LinkedList<T,A>::push_back (src/collections/linked_list.rs:897:20)",
"0x55d276a7afba: <rayon::iter::extend::ListVecFolder<T> as rayon::iter::plumbing::Folder<T>>::complete (src/iter/extend.rs:137:13)",
"0x55d276a7afba: <rayon::iter::map::MapFolder<C,F> as rayon::iter::plumbing::Folder<T>>::complete (src/iter/map.rs:253:9)",
"0x55d276a6e298: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d276a83a07: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a83a07: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a83a07: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a83a07: truck_topology::face::<impl truck_topology::Face<P,C,S>>::new_unchecked (truck-topology/src/face.rs:64:22)",
"0x55d276a83a07: truck_topology::face::<impl truck_topology::Face<P,C,S>>::try_new (truck-topology/src/face.rs:42:16)",
"0x55d276a83a07: truck_modeling::builder::try_attach_plane (truck-modeling/src/builder.rs:421:8)",
"0x55d276a83a07: test_truck::main (test-truck/src/main.rs:59:16)",
"0x55d276b21b3a: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276b21b3a: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276b21b3a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276b21b3a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276b21b3a: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d276b21b3a: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d276b21b3a: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d276b21b3a: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d276b21b3a: <truck_polymesh::StandardAttributes as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:44:5)",
"0x55d276b21b3a: <truck_polymesh::PolygonMesh<V,A> as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:87:5)",
"0x55d276b21b3a: <core::option::Option<T> as core::clone::Clone>::clone (core/src/option.rs:2038:29)",
"0x55d276b21b3a: truck_topology::face::<impl truck_topology::Face<P,C,S>>::surface (truck-topology/src/face.rs:509:9)",
"0x55d276b21b3a: <truck_topology::Shell<cgmath::point::Point3<f64>,truck_polymesh::PolylineCurve<cgmath::point::Point3<f64>>,core::option::Option<truck_polymesh::PolygonMesh>> as truck_meshalgo::tessellation::MeshedShape>::to_polygon::{{closure}} (src/tessellation/mod.rs:67:37)",
"0x55d276b21b3a: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d276b21b3a: <truck_topology::Shell<cgmath::point::Point3<f64>,truck_polymesh::PolylineCurve<cgmath::point::Point3<f64>>,core::option::Option<truck_polymesh::PolygonMesh>> as truck_meshalgo::tessellation::MeshedShape>::to_polygon (src/tessellation/mod.rs:66:9)",
"0x55d276a83c02: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon::{{closure}} (src/tessellation/mod.rs:84:27)",
"0x55d276a83c02: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d276a83c02: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon (src/tessellation/mod.rs:83:9)",
"0x55d276a83c02: test_truck::main (test-truck/src/main.rs:63:17)",
"0x55d276b59dd9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276b59dd9: hashbrown::raw::alloc::inner::do_alloc (src/raw/alloc.rs:15:15)",
"0x55d276b59dd9: hashbrown::raw::RawTableInner::new_uninitialized (src/raw/mod.rs:1750:38)",
"0x55d276b59dd9: hashbrown::raw::RawTableInner::fallible_with_capacity (src/raw/mod.rs:1788:30)",
"0x55d276b59dd9: hashbrown::raw::RawTableInner::prepare_resize (src/raw/mod.rs:2864:13)",
"0x55d276b59dd9: hashbrown::raw::RawTableInner::resize_inner (src/raw/mod.rs:3060:34)",
"0x55d276b59dd9: hashbrown::raw::RawTableInner::reserve_rehash_inner (src/raw/mod.rs:2950:13)",
"0x55d276b59dd9: hashbrown::raw::RawTable<T,A>::reserve_rehash (src/raw/mod.rs:1231:13)",
"0x55d276b586f6: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d276b586f6: hashbrown::raw::RawTable<T,A>::find_or_find_insert_slot (src/raw/mod.rs:1413:9)",
"0x55d276b586f6: hashbrown::map::HashMap<K,V,S,A>::insert (hashbrown-0.14.5/src/map.rs:1754:15)",
"0x55d276b586f6: std::collections::hash::map::HashMap<K,V,S>::insert (collections/hash/map.rs:1106:9)",
"0x55d276b586f6: truck_shapeops::transversal::polyline_construction::Graph::add_half_edge (transversal/polyline_construction/mod.rs:75:18)",
"0x55d276a08b0a: truck_shapeops::transversal::polyline_construction::Graph::add_edge (transversal/polyline_construction/mod.rs:81:13)",
"0x55d276a08b0a: <truck_shapeops::transversal::polyline_construction::Graph as core::iter::traits::collect::FromIterator<&(cgmath::point::Point3<f64>,cgmath::point::Point3<f64>)>>::from_iter::{{closure}} (transversal/polyline_construction/mod.rs:111:42)",
"0x55d276a08b0a: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d276a08b0a: <truck_shapeops::transversal::polyline_construction::Graph as core::iter::traits::collect::FromIterator<&(cgmath::point::Point3<f64>,cgmath::point::Point3<f64>)>>::from_iter (transversal/polyline_construction/mod.rs:111:9)",
"0x55d276a08b0a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a08b0a: truck_shapeops::transversal::polyline_construction::construct_polylines (transversal/polyline_construction/mod.rs:7:41)",
"0x55d276a08b0a: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:158:21)",
"0x55d276a08b0a: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d276a08b0a: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d276a08b0a: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a08b0a: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d276a08b0a: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a08b0a: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d276a08b0a: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d276aa24f0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:486:19)",
"0x55d276aa24f0: alloc::raw_vec::RawVec<T,A>::grow_one (alloc/src/raw_vec.rs:364:27)",
"0x55d276b1d856: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276b1d856: truck_meshalgo::analyzers::collision::colliding_segment_pairs::{{closure}} (src/analyzers/collision.rs:112:21)",
"0x55d276b1d856: core::iter::adapters::filter_map::filter_map_try_fold::{{closure}} (iter/adapters/filter_map.rs:49:28)",
"0x55d276b1d856: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::try_fold (src/vec/into_iter.rs:340:25)",
"0x55d276b1d856: <core::iter::adapters::filter_map::FilterMap<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/filter_map.rs:140:9)",
"0x55d276b1d856: <core::iter::adapters::fuse::Fuse<I> as core::iter::adapters::fuse::FuseImpl<I>>::try_fold (iter/adapters/fuse.rs:375:19)",
"0x55d276b1d856: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/fuse.rs:89:9)",
"0x55d276b1d856: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_try_fold (iter/adapters/flatten.rs:515:25)",
"0x55d276b1d856: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/flatten.rs:653:9)",
"0x55d276b1d856: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/flatten.rs:313:9)",
"0x55d276b1d856: core::iter::traits::iterator::Iterator::find_map (iter/traits/iterator.rs:2913:9)",
"0x55d276b1d856: <core::iter::adapters::filter_map::FilterMap<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/filter_map.rs:64:9)",
"0x55d276a06b32: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d276a06b32: hashbrown::raw::RawTable<T,A>::find_or_find_insert_slot (src/raw/mod.rs:1413:9)",
"0x55d276a06b32: hashbrown::map::HashMap<K,V,S,A>::insert (hashbrown-0.14.5/src/map.rs:1754:15)",
"0x55d276a06b32: hashbrown::set::HashSet<T,S,A>::insert (hashbrown-0.14.5/src/set.rs:1115:9)",
"0x55d276a06b32: std::collections::hash::set::HashSet<T,S>::insert (collections/hash/set.rs:890:19)",
"0x55d276a06b32: truck_topology::shell::Boundaries<C>::insert (truck-topology/src/shell.rs:1096:30)",
"0x55d276a06b32: <truck_topology::shell::Boundaries<C> as core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>>>::from_iter::{{closure}} (truck-topology/src/shell.rs:1126:42)",
"0x55d276a06b32: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a06b32: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a06b32: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d276a06b32: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d276a44860: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276a44860: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices::{{closure}} (truck-topology/src/shell.rs:535:21)",
"0x55d276a44860: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a44860: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a44860: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a44860: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d276a44860: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d276a44860: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d276a44860: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a44860: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d276a44860: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d276a44860: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d276a44860: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d276a44860: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d276a44860: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices (truck-topology/src/shell.rs:528:14)",
"0x55d276b55c06: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276b55c06: truck_geotrait::algo::surface::sub_parameter_division (alloc/src/macros.rs:54:13)",
"0x55d276a219a1: truck_geotrait::algo::surface::parameter_division (src/algo/surface.rs:194:5)",
"0x55d276a219a1: truck_geometry::nurbs::nurbssurface::<impl truck_geotrait::traits::surface::ParameterDivision2D for truck_geometry::nurbs::NurbsSurface<V>>::parameter_division (src/nurbs/nurbssurface.rs:677:9)",
"0x55d276a219a1: <truck_modeling::geometry::Surface as truck_geotrait::traits::surface::ParameterDivision2D>::parameter_division (truck-modeling/src/geometry.rs:161:5)",
"0x55d276a219a1: <&S as truck_geotrait::traits::surface::ParameterDivision2D>::parameter_division (src/traits/surface.rs:155:9)",
"0x55d276a219a1: truck_meshalgo::tessellation::triangulation::insert_surface (src/tessellation/triangulation.rs:547:24)",
"0x55d276a219a1: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:527:5)",
"0x55d276a81d62: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a81d62: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a81d62: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a81d62: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a81d62: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276a81d62: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d276a81d62: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a81d62: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a81d62: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a81d62: truck_modeling::builder::try_attach_plane (truck-modeling/src/builder.rs:416:10)",
"0x55d276a81d62: test_truck::main (test-truck/src/main.rs:59:16)",
"0x55d276a582f4: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a582f4: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a582f4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a582f4: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a582f4: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276a582f4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d276a582f4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a582f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a582f4: <truck_shapeops::transversal::loops_store::Loops<P,C> as core::iter::traits::collect::FromIterator<truck_shapeops::transversal::loops_store::BoundaryWire<P,C>>>::from_iter (transversal/loops_store/mod.rs:113:14)",
"0x55d276a582f4: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a582f4: <truck_shapeops::transversal::loops_store::Loops<P,C> as core::convert::From<&truck_topology::Face<P,C,S>>>::from (transversal/loops_store/mod.rs:123:14)",
"0x55d276a582f4: core::ops::function::FnMut::call_mut (src/ops/function.rs:166:5)",
"0x55d276a582f4: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a582f4: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a582f4: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a582f4: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a582f4: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d276a582f4: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d276a582f4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d276a582f4: <truck_shapeops::transversal::loops_store::LoopsStore<P,C> as core::iter::traits::collect::FromIterator<&truck_topology::Face<P,C,S>>>::from_iter (transversal/loops_store/mod.rs:129:48)",
"0x55d276a3a4a7: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a3a4a7: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::add_polygon_vertex (alloc/src/macros.rs:54:13)",
"0x55d276a79c89: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d276a79c89: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d276a79c89: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.14.5/src/rustc_entry.rs:46:18)",
"0x55d276a79c89: std::collections::hash::map::HashMap<K,V,S>::entry (collections/hash/map.rs:856:19)",
"0x55d276a79c89: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}} (transversal/loops_store/mod.rs:185:26)",
"0x55d276a79c89: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a79c89: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a79c89: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a2dea1: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a2dea1: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a2dea1: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a2dea1: truck_topology::face::<impl truck_topology::Face<P,C,S>>::new_unchecked (truck-topology/src/face.rs:64:22)",
"0x55d276a2dea1: truck_topology::face::<impl truck_topology::Face<P,C,S>>::debug_new (truck-topology/src/face.rs:76:22)",
"0x55d276a2dea1: truck_shapeops::transversal::divide_face::divide_one_face::{{closure}} (transversal/divide_face/mod.rs:92:32)",
"0x55d276a2dea1: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a2dea1: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d276a2dea1: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a2dea1: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a2dea1: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d276a2dea1: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d276a2dea1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d276a2dea1: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:246:9)",
"0x55d276a2dea1: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a2dea1: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a2dea1: truck_shapeops::transversal::divide_face::divide_one_face (transversal/divide_face/mod.rs:98:10)",
"0x55d276a2dea1: truck_shapeops::transversal::divide_face::divide_faces::{{closure}} (transversal/divide_face/mod.rs:122:27)",
"0x55d276a2dea1: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d276a2dea1: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a2dea1: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d276a2dea1: truck_shapeops::transversal::divide_face::divide_faces (transversal/divide_face/mod.rs:115:10)",
"0x55d276a01a06: rayon_core::registry::WorkerThread::wait_until (rayon-core-1.12.1/src/registry.rs:769:13)",
"0x55d276a01a06: rayon_core::join::join_context::{{closure}} (src/join/mod.rs:167:17)",
"0x55d276a68448: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:486:19)",
"0x55d276a68448: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:349:31)",
"0x55d276a72075: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:355:13)",
"0x55d276a72075: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:972:18)",
"0x55d276a72075: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3093:18)",
"0x55d276a72075: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d276a72075: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d276a72075: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::resolve_conflict_groups (spade-2.12.1/src/cdt.rs:1063:30)",
"0x55d276a72075: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::try_add_constraint_inner (spade-2.12.1/src/cdt.rs:823:13)",
"0x55d276a72075: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::add_constraint (spade-2.12.1/src/cdt.rs:550:9)",
"0x55d276a26b8c: truck_meshalgo::tessellation::triangulation::insert_surface::{{closure}}::{{closure}} (src/tessellation/triangulation.rs:569:25)",
"0x55d276a26b8c: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a26b8c: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::fold (iter/adapters/zip.rs:287:25)",
"0x55d276a26b8c: <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/zip.rs:103:9)",
"0x55d276a26b8c: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d276a26b8c: truck_meshalgo::tessellation::triangulation::insert_surface::{{closure}} (src/tessellation/triangulation.rs:560:40)",
"0x55d276a26b8c: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d276a26b8c: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a26b8c: truck_meshalgo::tessellation::triangulation::insert_surface (src/tessellation/triangulation.rs:559:27)",
"0x55d276a26b8c: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:527:5)",
"0x55d276a755fb: rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (rayon-core-1.12.1/src/registry.rs:522:21)",
"0x55d276a755fb: rayon_core::job::JobResult<T>::call::{{closure}} (rayon-core-1.12.1/src/job.rs:218:41)",
"0x55d276a755fb: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d276a755fb: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d276a755fb: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d276a755fb: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d276a755fb: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d276a755fb: rayon_core::job::JobResult<T>::call (rayon-core-1.12.1/src/job.rs:218:15)",
"0x55d276a755fb: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.12.1/src/job.rs:120:32)",
"0x55d276a0fe57: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276a0fe57: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices::{{closure}} (truck-topology/src/shell.rs:534:21)",
"0x55d276a0fe57: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a0fe57: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a0fe57: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a0fe57: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d276a0fe57: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d276a0fe57: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d276a0fe57: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a0fe57: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d276a0fe57: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d276a0fe57: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d276a0fe57: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d276a0fe57: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d276a0fe57: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices (truck-topology/src/shell.rs:528:14)",
"0x55d276a0fe57: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:26:24)",
"0x55d276a0fe57: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d276a0fe57: <truck_topology::Solid<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:300:9)",
"0x55d276a0098a: rayon_core::registry::WorkerThread::wait_until (rayon-core-1.12.1/src/registry.rs:769:13)",
"0x55d276a0098a: rayon_core::join::join_context::{{closure}} (src/join/mod.rs:167:17)",
"0x55d276a6823d: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:486:19)",
"0x55d276a6823d: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:349:31)",
"0x55d276a6bb65: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:355:13)",
"0x55d276a6bb65: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:972:18)",
"0x55d276a6bb65: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3069:22)",
"0x55d276a6bb65: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d276a6bb65: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d276a6bb65: <rayon::iter::extend::ListVecFolder<T> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/extend.rs:130:18)",
"0x55d276a6bb65: <rayon::iter::map::MapFolder<C,F> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/map.rs:248:21)",
"0x55d276a6bb65: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d276a6bb65: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d276a41d3e: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a41d3e: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a41d3e: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a41d3e: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a41d3e: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276a41d3e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55d276a41d3e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a41d3e: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a41d3e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a41d3e: truck_topology::wire::<impl truck_topology::Wire<P,C>>::swap_edge_into_wire (truck-topology/src/wire.rs:364:55)",
"0x55d276a3e038: truck_shapeops::transversal::loops_store::Loops<P,C>::swap_edge_into_wire::{{closure}} (transversal/loops_store/mod.rs:212:21)",
"0x55d276a3e038: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d276a3e038: truck_shapeops::transversal::loops_store::Loops<P,C>::swap_edge_into_wire (transversal/loops_store/mod.rs:208:9)",
"0x55d276a3e038: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::swap_edge_into_wire::{{closure}} (transversal/loops_store/mod.rs:301:31)",
"0x55d276a3e038: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::swap_edge_into_wire (transversal/loops_store/mod.rs:300:9)",
"0x55d276a3e038: truck_shapeops::transversal::loops_store::LoopsStore<cgmath::point::Point3<f64>,C>::add_geom_vertex (transversal/loops_store/mod.rs:377:22)",
"0x55d276b572c0: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276b572c0: truck_geotrait::algo::surface::sub_parameter_division (alloc/src/macros.rs:54:13)",
"0x55d276a096b0: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276a096b0: truck_shapeops::transversal::intersection_curve::IntersectionCurveWithParameters<S>::try_new (transversal/intersection_curve/mod.rs:34:13)",
"0x55d276a096b0: truck_shapeops::transversal::intersection_curve::intersection_curves::{{closure}} (transversal/intersection_curve/mod.rs:162:25)",
"0x55d276a096b0: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a096b0: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d276a096b0: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a096b0: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a096b0: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d276a096b0: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d276a096b0: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d276a096b0: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:246:9)",
"0x55d276a096b0: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a096b0: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a096b0: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:170:10)",
"0x55d276a096b0: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d276a096b0: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d276a096b0: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a096b0: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d276a096b0: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a096b0: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d276a096b0: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d276a7f75f: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a7f75f: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a7f75f: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a7f75f: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new_unchecked (truck-topology/src/edge.rs:45:20)",
"0x55d276a7f75f: truck_topology::edge::<impl truck_topology::Edge<P,C>>::debug_new (truck-topology/src/edge.rs:57:22)",
"0x55d276a7f75f: truck_topology::edge::<impl truck_topology::Edge<P,C>>::mapped (truck-topology/src/edge.rs:379:24)",
"0x55d276a7f75f: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Edge<P,C>>::sweep (truck-modeling/src/sweep.rs:98:20)",
"0x55d276a7f75f: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d276a7f75f: test_truck::main (test-truck/src/main.rs:43:21)",
"0x55d276a83e22: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon::{{closure}} (src/tessellation/mod.rs:84:27)",
"0x55d276a83e22: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d276a83e22: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon (src/tessellation/mod.rs:83:9)",
"0x55d276a83e22: test_truck::main (test-truck/src/main.rs:70:17)",
"0x55d276a0548a: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a0548a: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a0548a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a0548a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a0548a: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d276a0548a: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d276a0548a: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d276a0548a: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d276a0548a: <truck_polymesh::PolylineCurve<P> as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:101:29)",
"0x55d276a0548a: truck_topology::edge::<impl truck_topology::Edge<P,C>>::oriented_curve (truck-topology/src/edge.rs:322:21)",
"0x55d276a0548a: core::ops::function::FnMut::call_mut (src/ops/function.rs:166:5)",
"0x55d276a0548a: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d276a0548a: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d276a0548a: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d276a0548a: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:9)",
"0x55d276a0548a: <core::iter::adapters::fuse::Fuse<I> as core::iter::adapters::fuse::FuseImpl<I>>::next (iter/adapters/fuse.rs:359:9)",
"0x55d276a0548a: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/fuse.rs:50:9)",
"0x55d276a0548a: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next (iter/adapters/flatten.rs:610:29)",
"0x55d276a0548a: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/flatten.rs:66:9)",
"0x55d2769fe915: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:26:32)",
"0x55d2769fe915: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d2769fe915: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d2769fe915: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d2769fe915: truck_meshalgo::tessellation::triangulation::PolyBoundaryPiece::try_new (src/tessellation/triangulation.rs:243:14)",
"0x55d2769fe915: truck_meshalgo::tessellation::triangulation::shell_create_polygon::{{closure}} (src/tessellation/triangulation.rs:213:13)",
"0x55d2769fe915: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:28)",
"0x55d2769fe915: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d2769fe915: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d2769fe915: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/mod.rs:204:9)",
"0x55d2769fe915: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d2769fe915: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::next (iter/adapters/mod.rs:187:14)",
"0x55d276a26f74: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a26f74: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a26f74: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a26f74: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a26f74: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276a26f74: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55d276a26f74: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a26f74: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a26f74: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a26f74: truck_meshalgo::tessellation::triangulation::triangulation_into_polymesh (src/tessellation/triangulation.rs:618:10)",
"0x55d276a26f74: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:528:20)",
"0x55d276b57a86: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:355:13)",
"0x55d276b57a86: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:972:18)",
"0x55d276b57a86: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2146:14)",
"0x55d276b57a86: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,alloc::vec::into_iter::IntoIter<T>>>::spec_extend (src/vec/spec_extend.rs:33:13)",
"0x55d276b57a86: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d276b57a86: truck_polymesh::polygon_mesh::<impl truck_polymesh::PolygonMesh>::merge (truck-polymesh/src/polygon_mesh.rs:121:35)",
"0x55d276acb86c: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276acb86c: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276acb86c: parking_lot_core::parking_lot::HashTable::new (parking_lot_core-0.9.10/src/parking_lot.rs:81:9)",
"0x55d276acb680: parking_lot_core::parking_lot::create_hashtable (parking_lot_core-0.9.10/src/parking_lot.rs:237:35)",
"0x55d276acb510: parking_lot_core::parking_lot::get_hashtable (parking_lot_core-0.9.10/src/parking_lot.rs:225:9)",
"0x55d276acb510: parking_lot_core::parking_lot::grow_hashtable (parking_lot_core-0.9.10/src/parking_lot.rs:267:21)",
"0x55d276acb510: parking_lot_core::parking_lot::ThreadData::new (parking_lot_core-0.9.10/src/parking_lot.rs:180:9)",
"0x55d276acadec: parking_lot_core::parking_lot::with_thread_data::THREAD_DATA::__init (parking_lot_core-0.9.10/src/parking_lot.rs:202:52)",
"0x55d276acadec: core::ops::function::FnOnce::call_once (src/ops/function.rs:250:5)",
"0x55d276acadec: core::option::Option<T>::unwrap_or_else (core/src/option.rs:1008:21)",
"0x55d276acadec: std::sys::thread_local::native::lazy::Storage<T,D>::initialize (thread_local/native/lazy.rs:65:42)",
"0x55d276acb1dc: std::sys::thread_local::native::lazy::Storage<T,D>::get_or_init (thread_local/native/lazy.rs:57:40)",
"0x55d276acb1dc: parking_lot_core::parking_lot::with_thread_data::THREAD_DATA::{{constant}}::{{closure}} (thread_local/native/mod.rs:93:25)",
"0x55d276acb1dc: core::ops::function::FnOnce::call_once (src/ops/function.rs:250:5)",
"0x55d276acb1dc: std::thread::local::LocalKey<T>::try_with (src/thread/local.rs:282:37)",
"0x55d276acb1dc: parking_lot_core::parking_lot::with_thread_data (parking_lot_core-0.9.10/src/parking_lot.rs:203:27)",
"0x55d276acb1dc: parking_lot_core::parking_lot::park (parking_lot_core-0.9.10/src/parking_lot.rs:600:5)",
"0x55d276acb1dc: parking_lot::raw_mutex::RawMutex::lock_slow (parking_lot-0.12.3/src/raw_mutex.rs:262:17)",
"0x55d276a6baad: <parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex>::lock (parking_lot-0.12.3/src/raw_mutex.rs:72:13)",
"0x55d276a6baad: lock_api::mutex::Mutex<R,T>::lock (lock_api-0.4.12/src/mutex.rs:223:18)",
"0x55d276a6baad: truck_topology::vertex::<impl truck_topology::Vertex<P>>::mapped (truck-topology/src/vertex.rs:90:48)",
"0x55d276a6baad: truck_meshalgo::tessellation::triangulation::shell_tessellation::{{closure}} (src/tessellation/triangulation.rs:64:27)",
"0x55d276a6baad: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut (src/ops/function.rs:272:13)",
"0x55d276a6baad: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d276a6baad: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d276a6baad: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d276a6baad: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d276a6baad: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d276a6baad: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d276a6baad: <rayon::iter::extend::ListVecFolder<T> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/extend.rs:130:18)",
"0x55d276a6baad: <rayon::iter::map::MapFolder<C,F> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/map.rs:248:21)",
"0x55d276a6baad: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d276a6baad: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d276a06c1b: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d276a06c1b: hashbrown::raw::RawTable<T,A>::find_or_find_insert_slot (src/raw/mod.rs:1413:9)",
"0x55d276a06c1b: hashbrown::map::HashMap<K,V,S,A>::insert (hashbrown-0.14.5/src/map.rs:1754:15)",
"0x55d276a06c1b: std::collections::hash::map::HashMap<K,V,S>::insert (collections/hash/map.rs:1106:9)",
"0x55d276a06c1b: truck_topology::shell::Boundaries<C>::insert (truck-topology/src/shell.rs:1097:33)",
"0x55d276a06c1b: <truck_topology::shell::Boundaries<C> as core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>>>::from_iter::{{closure}} (truck-topology/src/shell.rs:1126:42)",
"0x55d276a06c1b: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a06c1b: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a06c1b: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d276a06c1b: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d276a6d6f3: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a6d6f3: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a6d6f3: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a6d6f3: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new_unchecked (truck-topology/src/edge.rs:45:20)",
"0x55d276a6d6f3: truck_topology::edge::<impl truck_topology::Edge<P,C>>::debug_new (truck-topology/src/edge.rs:57:22)",
"0x55d276a6d6f3: truck_meshalgo::tessellation::triangulation::shell_tessellation::{{closure}} (src/tessellation/triangulation.rs:74:18)",
"0x55d276a6d6f3: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut (src/ops/function.rs:272:13)",
"0x55d276a6d6f3: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d276a6d6f3: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d276a6d6f3: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d276a6d6f3: rayon::iter::plumbing::Folder::consume_iter (iter/plumbing/mod.rs:177:21)",
"0x55d276a6d6f3: <rayon::iter::map::MapFolder<C,F> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/map.rs:248:21)",
"0x55d276a6d6f3: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d276a6d6f3: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d276ad1e2d: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:486:19)",
"0x55d276ad1e2d: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:349:31)",
"0x55d276b57af2: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:355:13)",
"0x55d276b57af2: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:972:18)",
"0x55d276b57af2: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2146:14)",
"0x55d276b57af2: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,alloc::vec::into_iter::IntoIter<T>>>::spec_extend (src/vec/spec_extend.rs:33:13)",
"0x55d276b57af2: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d276b57af2: truck_polymesh::polygon_mesh::<impl truck_polymesh::PolygonMesh>::merge (truck-polymesh/src/polygon_mesh.rs:122:35)",
"0x55d276a80d4d: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon::{{closure}} (src/tessellation/mod.rs:84:13)",
"0x55d276a80d4d: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d276a80d4d: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon (src/tessellation/mod.rs:83:9)",
"0x55d276a80d4d: test_truck::main (test-truck/src/main.rs:47:17)",
"0x55d276a2d7b1: truck_shapeops::transversal::divide_face::divide_faces::{{closure}} (transversal/divide_face/mod.rs:120:17)",
"0x55d276a2d7b1: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d276a2d7b1: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a2d7b1: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d276a2d7b1: truck_shapeops::transversal::divide_face::divide_faces (transversal/divide_face/mod.rs:115:10)",
"0x55d276a2123e: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a2123e: spade::delaunay_core::dcel_operations::new (alloc/src/macros.rs:54:13)",
"0x55d276a2123e: <spade::delaunay_core::dcel::Dcel<V,DE,UE,F> as core::default::Default>::default (src/delaunay_core/dcel.rs:114:9)",
"0x55d276a2123e: <spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L> as core::default::Default>::default (spade-2.12.1/src/cdt.rs:174:19)",
"0x55d276a2123e: spade::triangulation::Triangulation::new (spade-2.12.1/src/triangulation.rs:131:9)",
"0x55d276a2123e: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:525:29)",
"0x55d276a2dc32: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a2dc32: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a2dc32: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a2dc32: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a2dc32: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276a2dc32: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d276a2dc32: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:246:9)",
"0x55d276a2dc32: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a2dc32: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a2dc32: truck_shapeops::transversal::divide_face::divide_one_face (transversal/divide_face/mod.rs:98:10)",
"0x55d276a2dc32: truck_shapeops::transversal::divide_face::divide_faces::{{closure}} (transversal/divide_face/mod.rs:122:27)",
"0x55d276a2dc32: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d276a2dc32: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a2dc32: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d276a2dc32: truck_shapeops::transversal::divide_face::divide_faces (transversal/divide_face/mod.rs:115:10)",
"0x55d276a783c4: truck_topology::wire::edge_entry_map_closure::{{closure}} (truck-topology/src/wire.rs:577:23)",
"0x55d276a783c4: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert::{{closure}} (truck-base/src/entry_map.rs:60:32)",
"0x55d276a783c4: std::collections::hash::map::Entry<K,V>::or_insert_with (collections/hash/map.rs:2666:43)",
"0x55d276a783c4: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert (truck-base/src/entry_map.rs:58:9)",
"0x55d276a783c4: truck_topology::wire::<impl truck_topology::Wire<P,C>>::sub_mapped::{{closure}} (truck-topology/src/wire.rs:433:32)",
"0x55d276a783c4: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a783c4: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a783c4: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a2d6cf: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276a2d6cf: truck_shapeops::transversal::divide_face::divide_one_face::{{closure}} (transversal/divide_face/mod.rs:66:21)",
"0x55d276a2d6cf: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d276a2d6cf: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a2d6cf: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d276a2d6cf: truck_shapeops::transversal::divide_face::divide_one_face (transversal/divide_face/mod.rs:63:18)",
"0x55d276a2d6cf: truck_shapeops::transversal::divide_face::divide_faces::{{closure}} (transversal/divide_face/mod.rs:122:27)",
"0x55d276a2d6cf: truck_shapeops::transversal::divide_face::divide_faces (transversal/divide_face/mod.rs:115:10)",
"0x55d276a77e9d: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a77e9d: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a77e9d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a77e9d: alloc::collections::vec_deque::VecDeque<T,A>::with_capacity_in (collections/vec_deque/mod.rs:619:42)",
"0x55d276a77e9d: <alloc::collections::vec_deque::VecDeque<T,A> as core::clone::Clone>::clone (collections/vec_deque/mod.rs:111:23)",
"0x55d276a5831e: truck_topology::wire::<impl core::clone::Clone for truck_topology::Wire<P,C>>::clone (truck-topology/src/wire.rs:778:24)",
"0x55d276a5831e: <truck_shapeops::transversal::loops_store::Loops<P,C> as core::convert::From<&truck_topology::Face<P,C,S>>>::from::{{closure}} (transversal/loops_store/mod.rs:122:48)",
"0x55d276a5831e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a5831e: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a5831e: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a5831e: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a5831e: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d276a5831e: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d276a5831e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d276a5831e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a5831e: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a5831e: <truck_shapeops::transversal::loops_store::Loops<P,C> as core::iter::traits::collect::FromIterator<truck_shapeops::transversal::loops_store::BoundaryWire<P,C>>>::from_iter (transversal/loops_store/mod.rs:113:14)",
"0x55d276a5831e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a5831e: <truck_shapeops::transversal::loops_store::Loops<P,C> as core::convert::From<&truck_topology::Face<P,C,S>>>::from (transversal/loops_store/mod.rs:123:14)",
"0x55d276a5831e: core::ops::function::FnMut::call_mut (src/ops/function.rs:166:5)",
"0x55d276a5831e: <truck_shapeops::transversal::loops_store::LoopsStore<P,C> as core::iter::traits::collect::FromIterator<&truck_topology::Face<P,C,S>>>::from_iter (transversal/loops_store/mod.rs:129:48)",
"0x55d276a3f6c0: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a3f6c0: truck_shapeops::transversal::loops_store::create_loops_stores (transversal/loops_store/mod.rs:459:75)",
"0x55d276a3f6c0: truck_shapeops::transversal::integrate::process_one_pair_of_shells (transversal/integrate/mod.rs:62:9)",
"0x55d276a3a694: truck_shapeops::transversal::loops_store::Loops<P,C>::swap_edge_into_wire::{{closure}} (transversal/loops_store/mod.rs:214:21)",
"0x55d276a3a694: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d276a3a694: truck_shapeops::transversal::loops_store::Loops<P,C>::swap_edge_into_wire (transversal/loops_store/mod.rs:208:9)",
"0x55d276a3a694: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::swap_edge_into_wire::{{closure}} (transversal/loops_store/mod.rs:301:31)",
"0x55d276a3a694: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::swap_edge_into_wire (transversal/loops_store/mod.rs:300:9)",
"0x55d276a3a694: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::add_polygon_vertex (transversal/loops_store/mod.rs:333:22)",
"0x55d276acaefb: parking_lot_core::parking_lot::get_hashtable (parking_lot_core-0.9.10/src/parking_lot.rs:225:9)",
"0x55d276acaefb: parking_lot_core::parking_lot::lock_bucket (parking_lot_core-0.9.10/src/parking_lot.rs:360:25)",
"0x55d276acaefb: parking_lot_core::parking_lot::unpark_one (parking_lot_core-0.9.10/src/parking_lot.rs:737:18)",
"0x55d276acaefb: parking_lot::raw_mutex::RawMutex::unlock_slow (parking_lot-0.12.3/src/raw_mutex.rs:321:13)",
"0x55d276a6bb29: <parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex>::unlock (parking_lot-0.12.3/src/raw_mutex.rs:109:9)",
"0x55d276a6bb29: <lock_api::mutex::MutexGuard<R,T> as core::ops::drop::Drop>::drop (lock_api-0.4.12/src/mutex.rs:671:13)",
"0x55d276a6bb29: core::ptr::drop_in_place<lock_api::mutex::MutexGuard<parking_lot::raw_mutex::RawMutex,cgmath::point::Point3<f64>>> (src/ptr/mod.rs:542:1)",
"0x55d276a6bb29: truck_topology::vertex::<impl truck_topology::Vertex<P>>::mapped (truck-topology/src/vertex.rs:91:5)",
"0x55d276a6bb29: truck_meshalgo::tessellation::triangulation::shell_tessellation::{{closure}} (src/tessellation/triangulation.rs:64:27)",
"0x55d276a6bb29: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut (src/ops/function.rs:272:13)",
"0x55d276a6bb29: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d276a6bb29: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d276a6bb29: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d276a6bb29: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d276a6bb29: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d276a6bb29: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d276a6bb29: <rayon::iter::extend::ListVecFolder<T> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/extend.rs:130:18)",
"0x55d276a6bb29: <rayon::iter::map::MapFolder<C,F> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/map.rs:248:21)",
"0x55d276a6bb29: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d276a6bb29: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d276a84a22: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon::{{closure}} (src/tessellation/mod.rs:84:27)",
"0x55d276a84a22: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d276a84a22: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon (src/tessellation/mod.rs:83:9)",
"0x55d276a84a22: test_truck::main (test-truck/src/main.rs:87:17)",
"0x55d276b21a5c: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276b21a5c: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276b21a5c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276b21a5c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276b21a5c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d276b21a5c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d276b21a5c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d276b21a5c: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d276b21a5c: <truck_polymesh::StandardAttributes as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:40:5)",
"0x55d276b21a5c: <truck_polymesh::PolygonMesh<V,A> as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:87:5)",
"0x55d276b21a5c: <core::option::Option<T> as core::clone::Clone>::clone (core/src/option.rs:2038:29)",
"0x55d276b21a5c: truck_topology::face::<impl truck_topology::Face<P,C,S>>::surface (truck-topology/src/face.rs:509:9)",
"0x55d276b21a5c: <truck_topology::Shell<cgmath::point::Point3<f64>,truck_polymesh::PolylineCurve<cgmath::point::Point3<f64>>,core::option::Option<truck_polymesh::PolygonMesh>> as truck_meshalgo::tessellation::MeshedShape>::to_polygon::{{closure}} (src/tessellation/mod.rs:67:37)",
"0x55d276b21a5c: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d276b21a5c: <truck_topology::Shell<cgmath::point::Point3<f64>,truck_polymesh::PolylineCurve<cgmath::point::Point3<f64>>,core::option::Option<truck_polymesh::PolygonMesh>> as truck_meshalgo::tessellation::MeshedShape>::to_polygon (src/tessellation/mod.rs:66:9)",
"0x55d276a68d9c: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a68d9c: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a68d9c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a68d9c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a68d9c: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276a68d9c: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d276a68d9c: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a68d9c: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a68d9c: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a68d9c: truck_meshalgo::tessellation::triangulation::shell_tessellation::{{closure}} (src/tessellation/triangulation.rs:91:14)",
"0x55d276a68d9c: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut (src/ops/function.rs:272:13)",
"0x55d276a68d9c: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d276a68d9c: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d276a68d9c: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d276a68d9c: rayon::iter::plumbing::Folder::consume_iter (iter/plumbing/mod.rs:177:21)",
"0x55d276a68d9c: <rayon::iter::map::MapFolder<C,F> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/map.rs:248:21)",
"0x55d276a68d9c: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d276a68d9c: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d276a09a18: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a09a18: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a09a18: truck_shapeops::transversal::intersection_curve::IntersectionCurveWithParameters<S>::try_new (transversal/intersection_curve/mod.rs:57:17)",
"0x55d276a09a18: truck_shapeops::transversal::intersection_curve::intersection_curves::{{closure}} (transversal/intersection_curve/mod.rs:162:25)",
"0x55d276a09a18: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a09a18: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d276a09a18: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a09a18: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a09a18: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d276a09a18: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d276a09a18: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d276a09a18: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:246:9)",
"0x55d276a09a18: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a09a18: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a09a18: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:170:10)",
"0x55d276a09a18: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d276a09a18: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d276a09a18: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a09a18: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d276a09a18: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a09a18: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d276a09a18: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d276a0127b: rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (iter/plumbing/mod.rs:426:21)",
"0x55d276a0127b: rayon_core::join::join_context::call_b::{{closure}} (src/join/mod.rs:129:25)",
"0x55d276a0127b: rayon_core::job::StackJob<L,F,R>::run_inline (rayon-core-1.12.1/src/job.rs:102:9)",
"0x55d276a0127b: rayon_core::join::join_context::{{closure}} (src/join/mod.rs:159:36)",
"0x55d276a464d4: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276a464d4: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::face_adjacency::{{closure}}::{{closure}}::{{closure}} (truck-topology/src/shell.rs:346:25)",
"0x55d276a464d4: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d276a464d4: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::face_adjacency::{{closure}}::{{closure}} (truck-topology/src/shell.rs:333:17)",
"0x55d276a464d4: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::face_adjacency::{{closure}} (truck-topology/src/shell.rs:331:13)",
"0x55d276a464d4: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a464d4: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d276a464d4: <hashbrown::map::IntoIter<K,V,A> as core::iter::traits::iterator::Iterator>::fold (hashbrown-0.14.5/src/map.rs:4827:9)",
"0x55d276a464d4: <std::collections::hash::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::fold (collections/hash/map.rs:2332:19)",
"0x55d276a464d4: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d276a464d4: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::face_adjacency (truck-topology/src/shell.rs:330:35)",
"0x55d276a464d4: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::connected_components (truck-topology/src/shell.rs:450:29)",
"0x55d276b21ac6: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276b21ac6: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276b21ac6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276b21ac6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276b21ac6: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d276b21ac6: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d276b21ac6: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d276b21ac6: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d276b21ac6: <truck_polymesh::StandardAttributes as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:42:5)",
"0x55d276b21ac6: <truck_polymesh::PolygonMesh<V,A> as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:87:5)",
"0x55d276b21ac6: <core::option::Option<T> as core::clone::Clone>::clone (core/src/option.rs:2038:29)",
"0x55d276b21ac6: truck_topology::face::<impl truck_topology::Face<P,C,S>>::surface (truck-topology/src/face.rs:509:9)",
"0x55d276b21ac6: <truck_topology::Shell<cgmath::point::Point3<f64>,truck_polymesh::PolylineCurve<cgmath::point::Point3<f64>>,core::option::Option<truck_polymesh::PolygonMesh>> as truck_meshalgo::tessellation::MeshedShape>::to_polygon::{{closure}} (src/tessellation/mod.rs:67:37)",
"0x55d276b21ac6: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d276b21ac6: <truck_topology::Shell<cgmath::point::Point3<f64>,truck_polymesh::PolylineCurve<cgmath::point::Point3<f64>>,core::option::Option<truck_polymesh::PolygonMesh>> as truck_meshalgo::tessellation::MeshedShape>::to_polygon (src/tessellation/mod.rs:66:9)",
"0x55d276a2b847: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d276a2b847: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d276a2b847: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.14.5/src/rustc_entry.rs:46:18)",
"0x55d276a2b847: std::collections::hash::map::HashMap<K,V,S>::entry (collections/hash/map.rs:856:19)",
"0x55d276a2b847: truck_modeling::topo_impls::sub_connect_wires (truck-modeling/src/topo_impls.rs:62:10)",
"0x55d276a2b847: truck_modeling::topo_impls::connect_raw_wires::{{closure}} (truck-modeling/src/topo_impls.rs:118:9)",
"0x55d276a2b847: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d276a2b847: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d276a2b847: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d276a2b847: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d276a2b847: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d276a2b847: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d276a2b847: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (truck-modeling/src/sweep.rs:235:15)",
"0x55d276a2b847: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d276a7c44b: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a7c44b: hashbrown::raw::alloc::inner::do_alloc (src/raw/alloc.rs:15:15)",
"0x55d276a7c44b: hashbrown::raw::RawTableInner::new_uninitialized (src/raw/mod.rs:1750:38)",
"0x55d276a7c44b: hashbrown::raw::RawTableInner::fallible_with_capacity (src/raw/mod.rs:1788:30)",
"0x55d276a7c44b: hashbrown::raw::RawTableInner::prepare_resize (src/raw/mod.rs:2864:13)",
"0x55d276a7c44b: hashbrown::raw::RawTableInner::resize_inner (src/raw/mod.rs:3060:34)",
"0x55d276a7c44b: hashbrown::raw::RawTableInner::reserve_rehash_inner (src/raw/mod.rs:2950:13)",
"0x55d276a7c44b: hashbrown::raw::RawTable<T,A>::reserve_rehash (src/raw/mod.rs:1231:13)",
"0x55d276a7a7f1: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d276a7a7f1: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d276a7a7f1: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.14.5/src/rustc_entry.rs:46:18)",
"0x55d276a7a7f1: std::collections::hash::map::HashMap<K,V,S>::entry (collections/hash/map.rs:856:19)",
"0x55d276a7a7f1: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}} (transversal/loops_store/mod.rs:189:26)",
"0x55d276a7a7f1: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a7a7f1: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a7a7f1: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a10ce9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a10ce9: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a10ce9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a10ce9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a10ce9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276a10ce9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d276a10ce9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a10ce9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a10ce9: <alloc::collections::vec_deque::VecDeque<T> as alloc::collections::vec_deque::spec_from_iter::SpecFromIter<T,I>>::spec_from_iter (collections/vec_deque/spec_from_iter.rs:17:9)",
"0x55d276a3a681: <alloc::collections::vec_deque::VecDeque<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (collections/vec_deque/mod.rs:2863:9)",
"0x55d276a3a681: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a3a681: truck_topology::wire::<impl truck_topology::Wire<P,C>>::inverse (truck-topology/src/wire.rs:189:75)",
"0x55d276a3a681: truck_shapeops::transversal::loops_store::Loops<P,C>::swap_edge_into_wire::{{closure}} (transversal/loops_store/mod.rs:214:60)",
"0x55d276a3a681: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d276a3a681: truck_shapeops::transversal::loops_store::Loops<P,C>::swap_edge_into_wire (transversal/loops_store/mod.rs:208:9)",
"0x55d276a3a681: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::swap_edge_into_wire::{{closure}} (transversal/loops_store/mod.rs:301:31)",
"0x55d276a3a681: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::swap_edge_into_wire (transversal/loops_store/mod.rs:300:9)",
"0x55d276a3a681: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::add_polygon_vertex (transversal/loops_store/mod.rs:333:22)",
"0x55d276b21efe: <truck_topology::Shell<cgmath::point::Point3<f64>,truck_polymesh::PolylineCurve<cgmath::point::Point3<f64>>,core::option::Option<truck_polymesh::PolygonMesh>> as truck_meshalgo::tessellation::MeshedShape>::to_polygon::{{closure}} (src/tessellation/mod.rs:71:17)",
"0x55d276b21efe: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d276b21efe: <truck_topology::Shell<cgmath::point::Point3<f64>,truck_polymesh::PolylineCurve<cgmath::point::Point3<f64>>,core::option::Option<truck_polymesh::PolygonMesh>> as truck_meshalgo::tessellation::MeshedShape>::to_polygon (src/tessellation/mod.rs:66:9)",
"0x55d276a81c24: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a81c24: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a81c24: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a81c24: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new_unchecked (truck-topology/src/edge.rs:45:20)",
"0x55d276a81c24: truck_topology::edge::<impl truck_topology::Edge<P,C>>::debug_new (truck-topology/src/edge.rs:57:22)",
"0x55d276a81c24: truck_modeling::topo_impls::connect_vertices (truck-modeling/src/topo_impls.rs:17:5)",
"0x55d276a81c24: truck_modeling::closed_sweep::<impl truck_modeling::topo_traits::ClosedSweep<P,C,S> for truck_topology::Vertex<P>>::closed_sweep (truck-modeling/src/closed_sweep.rs:30:24)",
"0x55d276a81c24: truck_modeling::builder::whole_rsweep (truck-modeling/src/builder.rs:679:5)",
"0x55d276a81c24: truck_modeling::builder::rsweep (truck-modeling/src/builder.rs:636:9)",
"0x55d276a81c24: test_truck::main (test-truck/src/main.rs:53:18)",
"0x55d276ad0098: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276ad0098: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276ad0098: <crossbeam_deque::deque::Injector<T> as core::default::Default>::default (crossbeam-deque-0.8.5/src/deque.rs:1316:35)",
"0x55d276ad0098: crossbeam_deque::deque::Injector<T>::new (crossbeam-deque-0.8.5/src/deque.rs:1342:9)",
"0x55d276ad0098: rayon_core::registry::Registry::new (rayon-core-1.12.1/src/registry.rs:265:28)",
"0x55d276a39e9d: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a39e9d: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a39e9d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a39e9d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a39e9d: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d276a39e9d: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d276a39e9d: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d276a39e9d: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d276a39e9d: <truck_polymesh::PolylineCurve<P> as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:101:29)",
"0x55d276a39e9d: truck_topology::edge::<impl truck_topology::Edge<P,C>>::curve (truck-topology/src/edge.rs:255:9)",
"0x55d276a39e9d: truck_topology::edge::<impl truck_topology::Edge<P,C>>::cut_with_parameter (truck-topology/src/edge.rs:440:26)",
"0x55d276a39e9d: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::add_polygon_vertex (transversal/loops_store/mod.rs:331:38)",
"0x55d276a2d72a: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276a2d72a: truck_shapeops::transversal::divide_face::divide_one_face::{{closure}} (transversal/divide_face/mod.rs:67:22)",
"0x55d276a2d72a: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d276a2d72a: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a2d72a: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d276a2d72a: truck_shapeops::transversal::divide_face::divide_one_face (transversal/divide_face/mod.rs:63:18)",
"0x55d276a2d72a: truck_shapeops::transversal::divide_face::divide_faces::{{closure}} (transversal/divide_face/mod.rs:122:27)",
"0x55d276a2d72a: truck_shapeops::transversal::divide_face::divide_faces (transversal/divide_face/mod.rs:115:10)",
"0x55d2769feeeb: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d2769feeeb: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d2769feeeb: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d2769feeeb: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d2769feeeb: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d2769feeeb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55d2769feeeb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d2769feeeb: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d2769feeeb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d2769feeeb: <core::option::Option<V> as core::iter::traits::collect::FromIterator<core::option::Option<A>>>::from_iter::{{closure}} (core/src/option.rs:2467:51)",
"0x55d2769feeeb: core::iter::adapters::try_process (iter/adapters/mod.rs:173:17)",
"0x55d2769feeeb: <core::option::Option<V> as core::iter::traits::collect::FromIterator<core::option::Option<A>>>::from_iter (core/src/option.rs:2467:9)",
"0x55d2769feeeb: truck_meshalgo::tessellation::triangulation::PolyBoundaryPiece::try_new (src/tessellation/triangulation.rs:272:14)",
"0x55d2769feeeb: truck_meshalgo::tessellation::triangulation::shell_create_polygon::{{closure}} (src/tessellation/triangulation.rs:213:13)",
"0x55d2769feeeb: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:28)",
"0x55d2769feeeb: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d2769feeeb: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d2769feeeb: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/mod.rs:204:9)",
"0x55d2769feeeb: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d2769feeeb: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::next (iter/adapters/mod.rs:187:14)",
"0x55d276a6b0a0: truck_topology::face::<impl truck_topology::Face<P,C,S>>::boundaries (truck-topology/src/face.rs:103:21)",
"0x55d276a6b0a0: core::ops::function::Fn::call (src/ops/function.rs:79:5)",
"0x55d276a6b0a0: <rayon::iter::flat_map::FlatMapFolder<C,F,<C as rayon::iter::plumbing::Consumer<<U as rayon::iter::IntoParallelIterator>::Item>>::Result> as rayon::iter::plumbing::Folder<T>>::consume (src/iter/flat_map.rs:125:24)",
"0x55d276a6b0a0: rayon::iter::plumbing::Folder::consume_iter (iter/plumbing/mod.rs:178:20)",
"0x55d276a6b0a0: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d276a6b0a0: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d276a580a4: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a580a4: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a580a4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a580a4: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a580a4: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276a580a4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d276a580a4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a580a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a580a4: <truck_shapeops::transversal::loops_store::Loops<P,C> as core::iter::traits::collect::FromIterator<truck_shapeops::transversal::loops_store::BoundaryWire<P,C>>>::from_iter (transversal/loops_store/mod.rs:113:14)",
"0x55d276a580a4: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a580a4: <truck_shapeops::transversal::loops_store::Loops<P,C> as core::convert::From<&truck_topology::Face<P,C,S>>>::from (transversal/loops_store/mod.rs:123:14)",
"0x55d276a580a4: core::ops::function::FnMut::call_mut (src/ops/function.rs:166:5)",
"0x55d276a580a4: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a580a4: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a580a4: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a580a4: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a580a4: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d276a580a4: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d276a580a4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d276a580a4: <truck_shapeops::transversal::loops_store::LoopsStore<P,C> as core::iter::traits::collect::FromIterator<&truck_topology::Face<P,C,S>>>::from_iter (transversal/loops_store/mod.rs:129:48)",
"0x55d276a3f685: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a3f685: truck_shapeops::transversal::loops_store::create_loops_stores (transversal/loops_store/mod.rs:458:75)",
"0x55d276a3f685: truck_shapeops::transversal::integrate::process_one_pair_of_shells (transversal/integrate/mod.rs:62:9)",
"0x55d276a81680: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a81680: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a81680: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a81680: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new_unchecked (truck-topology/src/edge.rs:45:20)",
"0x55d276a81680: truck_topology::edge::<impl truck_topology::Edge<P,C>>::debug_new (truck-topology/src/edge.rs:57:22)",
"0x55d276a81680: truck_modeling::topo_impls::connect_vertices (truck-modeling/src/topo_impls.rs:17:5)",
"0x55d276a81680: truck_modeling::closed_sweep::<impl truck_modeling::topo_traits::ClosedSweep<P,C,S> for truck_topology::Vertex<P>>::closed_sweep::{{closure}} (truck-modeling/src/closed_sweep.rs:25:28)",
"0x55d276a81680: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a81680: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d276a81680: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a81680: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a81680: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d276a81680: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d276a81680: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d276a81680: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a81680: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a81680: <alloc::collections::vec_deque::VecDeque<T> as alloc::collections::vec_deque::spec_from_iter::SpecFromIter<T,I>>::spec_from_iter (collections/vec_deque/spec_from_iter.rs:17:9)",
"0x55d276a81680: <alloc::collections::vec_deque::VecDeque<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (collections/vec_deque/mod.rs:2863:9)",
"0x55d276a81680: truck_topology::wire::<impl core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>> for truck_topology::Wire<P,C>>::from_iter (truck-topology/src/wire.rs:599:20)",
"0x55d276a81680: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a81680: truck_modeling::closed_sweep::<impl truck_modeling::topo_traits::ClosedSweep<P,C,S> for truck_topology::Vertex<P>>::closed_sweep (truck-modeling/src/closed_sweep.rs:29:14)",
"0x55d276a81680: truck_modeling::builder::whole_rsweep (truck-modeling/src/builder.rs:679:5)",
"0x55d276a81680: truck_modeling::builder::rsweep (truck-modeling/src/builder.rs:636:9)",
"0x55d276a81680: test_truck::main (test-truck/src/main.rs:53:18)",
"0x55d276a72e84: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a72e84: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a72e84: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a72e84: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a72e84: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d276a72e84: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d276a72e84: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d276a72e84: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d276a72e84: <truck_polymesh::StandardAttributes as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:42:5)",
"0x55d276a72e84: <truck_polymesh::PolygonMesh<V,A> as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:87:5)",
"0x55d276a72e84: <core::option::Option<T> as core::clone::Clone>::clone (core/src/option.rs:2038:29)",
"0x55d276a24a19: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276a24a19: truck_meshalgo::tessellation::triangulation::triangulation_into_polymesh::{{closure}} (src/tessellation/triangulation.rs:599:13)",
"0x55d276a24a19: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a24a19: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:108:27)",
"0x55d276a24a19: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d276a24a19: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:114:9)",
"0x55d276a24a19: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a24a19: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a24a19: <hashbrown::map::HashMap<K,V,S,A> as core::iter::traits::collect::Extend<(K,V)>>::extend (hashbrown-0.14.5/src/map.rs:6511:9)",
"0x55d276a24a19: <std::collections::hash::map::HashMap<K,V,S> as core::iter::traits::collect::Extend<(K,V)>>::extend (collections/hash/map.rs:3144:9)",
"0x55d276a24a19: <std::collections::hash::map::HashMap<K,V,S> as core::iter::traits::collect::FromIterator<(K,V)>>::from_iter (collections/hash/map.rs:3129:13)",
"0x55d276a24a19: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a24a19: truck_meshalgo::tessellation::triangulation::triangulation_into_polymesh (src/tessellation/triangulation.rs:603:10)",
"0x55d276a24a19: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:528:20)",
"0x55d276a074ad: truck_topology::face::<impl truck_topology::Face<P,C,S>>::surface (truck-topology/src/face.rs:509:9)",
"0x55d276a074ad: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:468:28)",
"0x55d276a074ad: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d276a074ad: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a074ad: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d276a074ad: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a074ad: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d276a074ad: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d276b55b43: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:248:9)",
"0x55d276b55b43: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:232:38)",
"0x55d276b55b43: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:176:15)",
"0x55d276b55b43: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x55d276b55b43: alloc::vec::from_elem (src/vec/mod.rs:2738:5)",
"0x55d276b55b43: truck_geotrait::algo::surface::sub_parameter_division (alloc/src/macros.rs:47:9)",
"0x55d276a7a7c6: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d276a7a7c6: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d276a7a7c6: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.14.5/src/rustc_entry.rs:46:18)",
"0x55d276a7a7c6: std::collections::hash::map::HashMap<K,V,S>::entry (collections/hash/map.rs:856:19)",
"0x55d276a7a7c6: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}} (transversal/loops_store/mod.rs:185:26)",
"0x55d276a7a7c6: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a7a7c6: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a7a7c6: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a2bdfe: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a2bdfe: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a2bdfe: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a2bdfe: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new_unchecked (truck-topology/src/edge.rs:45:20)",
"0x55d276a2bdfe: truck_topology::edge::<impl truck_topology::Edge<P,C>>::debug_new (truck-topology/src/edge.rs:57:22)",
"0x55d276a2bdfe: truck_modeling::topo_impls::connect_vertices (truck-modeling/src/topo_impls.rs:17:5)",
"0x55d276a2bdfe: truck_modeling::topo_impls::sub_connect_wires::{{closure}} (truck-modeling/src/topo_impls.rs:67:28)",
"0x55d276a2bdfe: std::collections::hash::map::Entry<K,V>::or_insert_with (collections/hash/map.rs:2666:43)",
"0x55d276a2bdfe: truck_modeling::topo_impls::sub_connect_wires (truck-modeling/src/topo_impls.rs:65:17)",
"0x55d276a2bdfe: truck_modeling::topo_impls::connect_raw_wires::{{closure}} (truck-modeling/src/topo_impls.rs:118:9)",
"0x55d276a2bdfe: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d276a2bdfe: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d276a2bdfe: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d276a2bdfe: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d276a2bdfe: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d276a2bdfe: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d276a2bdfe: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (truck-modeling/src/sweep.rs:235:15)",
"0x55d276a2bdfe: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d276a6cd8e: rayon::iter::plumbing::bridge_producer_consumer (iter/plumbing/mod.rs:396:12)",
"0x55d276a6cd8e: <rayon::iter::plumbing::bridge::Callback<C> as rayon::iter::plumbing::ProducerCallback<I>>::callback (iter/plumbing/mod.rs:372:13)",
"0x55d276a6cd8e: <rayon::vec::Drain<T> as rayon::iter::IndexedParallelIterator>::with_producer (rayon-1.10.0/src/vec.rs:147:13)",
"0x55d276a6cd8e: <rayon::vec::IntoIter<T> as rayon::iter::IndexedParallelIterator>::with_producer (rayon-1.10.0/src/vec.rs:83:9)",
"0x55d276a6cd8e: rayon::iter::plumbing::bridge (iter/plumbing/mod.rs:356:12)",
"0x55d276a6cd8e: <rayon::vec::IntoIter<T> as rayon::iter::ParallelIterator>::drive_unindexed (rayon-1.10.0/src/vec.rs:58:9)",
"0x55d276a6cd8e: <rayon::collections::vec_deque::IntoIter<T> as rayon::iter::ParallelIterator>::drive_unindexed (rayon-1.10.0/src/delegate.rs:21:28)",
"0x55d276a6cd8e: <rayon::iter::flatten::FlattenFolder<C,<C as rayon::iter::plumbing::Consumer<<T as rayon::iter::IntoParallelIterator>::Item>>::Result> as rayon::iter::plumbing::Folder<T>>::consume (src/iter/flatten.rs:114:22)",
"0x55d276a6cd8e: rayon::iter::plumbing::Folder::consume_iter (iter/plumbing/mod.rs:178:20)",
"0x55d276a6cd8e: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d276a6cd8e: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d276a00c72: rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (iter/plumbing/mod.rs:417:21)",
"0x55d276a00c72: rayon_core::join::join_context::call_a::{{closure}} (src/join/mod.rs:124:17)",
"0x55d276a00c72: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d276a00c72: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d276a00c72: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d276a00c72: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d276a00c72: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d276a00c72: rayon_core::join::join_context::{{closure}} (src/join/mod.rs:142:24)",
"0x55d276a68e97: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a68e97: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a68e97: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a68e97: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a68e97: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276a68e97: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d276a68e97: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a68e97: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a68e97: <alloc::collections::vec_deque::VecDeque<T> as alloc::collections::vec_deque::spec_from_iter::SpecFromIter<T,I>>::spec_from_iter (collections/vec_deque/spec_from_iter.rs:17:9)",
"0x55d276a68e97: <alloc::collections::vec_deque::VecDeque<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (collections/vec_deque/mod.rs:2863:9)",
"0x55d276a68e97: truck_topology::wire::<impl core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>> for truck_topology::Wire<P,C>>::from_iter (truck-topology/src/wire.rs:599:20)",
"0x55d276a68e97: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a68e97: truck_meshalgo::tessellation::triangulation::shell_tessellation::{{closure}} (src/tessellation/triangulation.rs:85:84)",
"0x55d276a68e97: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a68e97: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a68e97: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a68e97: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a68e97: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d276a68e97: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d276a68e97: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d276a68e97: truck_meshalgo::tessellation::triangulation::shell_tessellation::{{closure}} (src/tessellation/triangulation.rs:91:14)",
"0x55d276a68e97: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut (src/ops/function.rs:272:13)",
"0x55d276a68e97: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d276a68e97: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d276a68e97: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d276a68e97: rayon::iter::plumbing::Folder::consume_iter (iter/plumbing/mod.rs:177:21)",
"0x55d276a68e97: <rayon::iter::map::MapFolder<C,F> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/map.rs:248:21)",
"0x55d276a68e97: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d276a68e97: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d276a2a6ff: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a2a6ff: truck_modeling::topo_impls::sub_connect_wires (alloc/src/macros.rs:54:13)",
"0x55d276a2a6ff: truck_modeling::topo_impls::connect_raw_wires::{{closure}} (truck-modeling/src/topo_impls.rs:118:9)",
"0x55d276a2a6ff: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d276a2a6ff: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d276a2a6ff: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d276a2a6ff: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d276a2a6ff: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d276a2a6ff: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d276a2a6ff: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (truck-modeling/src/sweep.rs:235:15)",
"0x55d276a2a6ff: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d276a6912d: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a6912d: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a6912d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a6912d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a6912d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276a6912d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55d276a6912d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a6912d: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a6912d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a6912d: <core::option::Option<V> as core::iter::traits::collect::FromIterator<core::option::Option<A>>>::from_iter::{{closure}} (core/src/option.rs:2467:51)",
"0x55d276a6912d: core::iter::adapters::try_process (iter/adapters/mod.rs:173:17)",
"0x55d276a6912d: <core::option::Option<V> as core::iter::traits::collect::FromIterator<core::option::Option<A>>>::from_iter (core/src/option.rs:2467:9)",
"0x55d276a6912d: truck_meshalgo::tessellation::triangulation::shell_create_polygon (src/tessellation/triangulation.rs:215:10)",
"0x55d276a6912d: truck_meshalgo::tessellation::triangulation::shell_tessellation::{{closure}} (src/tessellation/triangulation.rs:92:9)",
"0x55d276a6912d: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut (src/ops/function.rs:272:13)",
"0x55d276a6912d: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d276a6912d: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d276a6912d: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d276a6912d: rayon::iter::plumbing::Folder::consume_iter (iter/plumbing/mod.rs:177:21)",
"0x55d276a6912d: <rayon::iter::map::MapFolder<C,F> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/map.rs:248:21)",
"0x55d276a6912d: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d276a6912d: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d276a2d29f: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a2d29f: truck_shapeops::transversal::divide_face::create_parameter_boundary (alloc/src/macros.rs:54:13)",
"0x55d276a2d29f: truck_shapeops::transversal::divide_face::divide_one_face::{{closure}} (transversal/divide_face/mod.rs:64:20)",
"0x55d276a2d29f: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d276a2d29f: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a2d29f: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d276a2d29f: truck_shapeops::transversal::divide_face::divide_one_face (transversal/divide_face/mod.rs:63:18)",
"0x55d276a2d29f: truck_shapeops::transversal::divide_face::divide_faces::{{closure}} (transversal/divide_face/mod.rs:122:27)",
"0x55d276a2d29f: truck_shapeops::transversal::divide_face::divide_faces (transversal/divide_face/mod.rs:115:10)",
"0x55d276a0e92d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276a0e92d: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency::{{closure}} (truck-topology/src/shell.rs:235:17)",
"0x55d276a0e92d: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a0e92d: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a0e92d: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d276a0e92d: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d276a0e92d: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d276a0e92d: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d276a0e92d: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d276a0e92d: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d276a0e92d: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d276a0e92d: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:321:9)",
"0x55d276a0e92d: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d276a0e92d: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a0e92d: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a0e92d: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d276a0e92d: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d276a0e92d: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency (truck-topology/src/shell.rs:230:26)",
"0x55d276a0e92d: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::is_connected (truck-topology/src/shell.rs:405:29)",
"0x55d276a0e92d: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:22:24)",
"0x55d276a0e92d: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d276a0e92d: <truck_topology::Solid<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:300:9)",
"0x55d276a2d153: truck_topology::face::<impl truck_topology::Face<P,C,S>>::surface (truck-topology/src/face.rs:509:9)",
"0x55d276a2d153: truck_shapeops::transversal::divide_face::create_parameter_boundary (transversal/divide_face/mod.rs:21:19)",
"0x55d276a2d153: truck_shapeops::transversal::divide_face::divide_one_face::{{closure}} (transversal/divide_face/mod.rs:64:20)",
"0x55d276a2d153: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d276a2d153: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a2d153: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d276a2d153: truck_shapeops::transversal::divide_face::divide_one_face (transversal/divide_face/mod.rs:63:18)",
"0x55d276a2d153: truck_shapeops::transversal::divide_face::divide_faces::{{closure}} (transversal/divide_face/mod.rs:122:27)",
"0x55d276a2d153: truck_shapeops::transversal::divide_face::divide_faces (transversal/divide_face/mod.rs:115:10)",
"0x55d276a3e08c: truck_shapeops::transversal::loops_store::Loops<P,C>::swap_edge_into_wire::{{closure}} (transversal/loops_store/mod.rs:214:21)",
"0x55d276a3e08c: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d276a3e08c: truck_shapeops::transversal::loops_store::Loops<P,C>::swap_edge_into_wire (transversal/loops_store/mod.rs:208:9)",
"0x55d276a3e08c: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::swap_edge_into_wire::{{closure}} (transversal/loops_store/mod.rs:301:31)",
"0x55d276a3e08c: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::swap_edge_into_wire (transversal/loops_store/mod.rs:300:9)",
"0x55d276a3e08c: truck_shapeops::transversal::loops_store::LoopsStore<cgmath::point::Point3<f64>,C>::add_geom_vertex (transversal/loops_store/mod.rs:377:22)",
"0x55d276acf9fb: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276acf9fb: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276acf9fb: <T as crossbeam_epoch::atomic::Pointable>::init (crossbeam-epoch-0.9.18/src/atomic.rs:200:23)",
"0x55d276acf9fb: crossbeam_epoch::atomic::Owned<T>::init (crossbeam-epoch-0.9.18/src/atomic.rs:1147:35)",
"0x55d276acf9fb: crossbeam_epoch::atomic::Atomic<T>::init (crossbeam-epoch-0.9.18/src/atomic.rs:330:20)",
"0x55d276acf9fb: crossbeam_epoch::atomic::Atomic<T>::new (crossbeam-epoch-0.9.18/src/atomic.rs:314:9)",
"0x55d276acf9fb: crossbeam_deque::deque::Worker<T>::new_lifo (crossbeam-deque-0.8.5/src/deque.rs:254:38)",
"0x55d276acf9fb: rayon_core::registry::Registry::new::{{closure}} (rayon-core-1.12.1/src/registry.rs:246:21)",
"0x55d276acf9fb: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276acf9fb: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d276acf9fb: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276acf9fb: <(ExtendA,ExtendB) as core::iter::traits::collect::Extend<(A,B)>>::extend (iter/traits/collect.rs:519:9)",
"0x55d276acf9fb: core::iter::traits::iterator::Iterator::unzip (iter/traits/iterator.rs:3396:9)",
"0x55d276acf9fb: rayon_core::registry::Registry::new (rayon-core-1.12.1/src/registry.rs:241:53)",
"0x55d276a97c0e: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:486:19)",
"0x55d276a97c0e: alloc::raw_vec::RawVec<T,A>::grow_one (alloc/src/raw_vec.rs:364:27)",
"0x55d276b22d19: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276b22d19: spade::delaunay_core::dcel_operations::insert_first_vertex (src/delaunay_core/dcel_operations.rs:855:5)",
"0x55d276b22d19: spade::delaunay_core::triangulation_ext::TriangulationExt::insert_with_hint_option_impl (src/delaunay_core/triangulation_ext.rs:82:25)",
"0x55d276b22d19: spade::delaunay_core::triangulation_ext::TriangulationExt::insert_with_hint_option (src/delaunay_core/triangulation_ext.rs:67:22)",
"0x55d276a2135e: spade::triangulation::Triangulation::insert (spade-2.12.1/src/triangulation.rs:552:9)",
"0x55d276a2135e: truck_meshalgo::tessellation::triangulation::PolyBoundary::insert_to::{{closure}} (src/tessellation/triangulation.rs:482:31)",
"0x55d276a2135e: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d276a2135e: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d276a2135e: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d276a2135e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:26:32)",
"0x55d276a2135e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a2135e: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a2135e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a2135e: truck_meshalgo::tessellation::triangulation::PolyBoundary::insert_to (src/tessellation/triangulation.rs:484:14)",
"0x55d276a2135e: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:526:5)",
"0x55d276b5942e: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:486:19)",
"0x55d276b5942e: alloc::raw_vec::RawVec<T,A>::grow_one (alloc/src/raw_vec.rs:364:27)",
"0x55d276a0909f: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276a0909f: truck_shapeops::transversal::polyline_construction::construct_polylines (transversal/polyline_construction/mod.rs:21:9)",
"0x55d276a0909f: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:158:21)",
"0x55d276a0909f: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d276a0909f: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d276a0909f: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a0909f: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d276a0909f: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a0909f: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d276a0909f: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d276a08b1d: truck_shapeops::transversal::polyline_construction::Graph::add_edge (transversal/polyline_construction/mod.rs:82:13)",
"0x55d276a08b1d: <truck_shapeops::transversal::polyline_construction::Graph as core::iter::traits::collect::FromIterator<&(cgmath::point::Point3<f64>,cgmath::point::Point3<f64>)>>::from_iter::{{closure}} (transversal/polyline_construction/mod.rs:111:42)",
"0x55d276a08b1d: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d276a08b1d: <truck_shapeops::transversal::polyline_construction::Graph as core::iter::traits::collect::FromIterator<&(cgmath::point::Point3<f64>,cgmath::point::Point3<f64>)>>::from_iter (transversal/polyline_construction/mod.rs:111:9)",
"0x55d276a08b1d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a08b1d: truck_shapeops::transversal::polyline_construction::construct_polylines (transversal/polyline_construction/mod.rs:7:41)",
"0x55d276a08b1d: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:158:21)",
"0x55d276a08b1d: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d276a08b1d: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d276a08b1d: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a08b1d: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d276a08b1d: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a08b1d: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d276a08b1d: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d276ad0027: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276ad0027: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276ad0027: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276ad0027: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276ad0027: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276ad0027: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d276ad0027: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276ad0027: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276ad0027: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276ad0027: rayon_core::sleep::Sleep::new (src/sleep/mod.rs:64:77)",
"0x55d276ad0027: rayon_core::registry::Registry::new (rayon-core-1.12.1/src/registry.rs:264:20)",
"0x55d276a6c230: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a6c230: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a6c230: truck_topology::face::<impl truck_topology::Face<P,C,S>>::boundaries (truck-topology/src/face.rs:104:72)",
"0x55d276a6c230: core::ops::function::Fn::call (src/ops/function.rs:79:5)",
"0x55d276a6c230: <rayon::iter::flat_map::FlatMapFolder<C,F,<C as rayon::iter::plumbing::Consumer<<U as rayon::iter::IntoParallelIterator>::Item>>::Result> as rayon::iter::plumbing::Folder<T>>::consume (src/iter/flat_map.rs:125:24)",
"0x55d276a6c230: rayon::iter::plumbing::Folder::consume_iter (iter/plumbing/mod.rs:178:20)",
"0x55d276a6c230: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d276a6c230: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d276b281bf: spade::delaunay_core::triangulation_ext::TriangulationExt::legalize_vertex (src/delaunay_core/triangulation_ext.rs:320:13)",
"0x55d276b236a2: spade::delaunay_core::triangulation_ext::TriangulationExt::insert_with_hint_option_impl (spade-2.12.1/src/cdt.rs:0:0)",
"0x55d276b236a2: spade::delaunay_core::triangulation_ext::TriangulationExt::insert_with_hint_option (src/delaunay_core/triangulation_ext.rs:67:22)",
"0x55d276a081d2: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a081d2: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a081d2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a081d2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a081d2: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276a081d2: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55d276a081d2: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a081d2: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a081d2: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a081d2: truck_meshalgo::analyzers::collision::sorted_endpoints (src/analyzers/collision.rs:95:10)",
"0x55d276a081d2: truck_meshalgo::analyzers::collision::collision (src/analyzers/collision.rs:220:29)",
"0x55d276a081d2: <truck_polymesh::PolygonMesh as truck_meshalgo::analyzers::collision::Collision>::extract_interference (src/analyzers/collision.rs:34:9)",
"0x55d276a081d2: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:157:34)",
"0x55d276a081d2: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d276a081d2: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d276a081d2: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a081d2: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d276a081d2: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a081d2: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d276a081d2: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d276a0d392: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:355:13)",
"0x55d276a0d392: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:972:18)",
"0x55d276a0d392: rayon::iter::collect::collect_with_consumer (iter/collect/mod.rs:81:9)",
"0x55d276a0d392: rayon::iter::collect::special_extend (iter/collect/mod.rs:39:5)",
"0x55d276a0d392: rayon::iter::extend::fast_collect (src/iter/extend.rs:77:13)",
"0x55d276a0d392: rayon::iter::extend::<impl rayon::iter::ParallelExtend<(K,V)> for std::collections::hash::map::HashMap<K,V,S>>::par_extend (src/iter/extend.rs:32:20)",
"0x55d276a0d392: rayon::iter::from_par_iter::collect_extended (src/iter/from_par_iter.rs:20:5)",
"0x55d276a0d392: rayon::iter::from_par_iter::<impl rayon::iter::FromParallelIterator<(K,V)> for std::collections::hash::map::HashMap<K,V,S>>::from_par_iter (src/iter/from_par_iter.rs:131:9)",
"0x55d276a0d392: rayon::iter::ParallelIterator::collect (src/iter/mod.rs:2069:9)",
"0x55d276a0d392: truck_meshalgo::tessellation::triangulation::shell_tessellation (src/tessellation/triangulation.rs:76:10)",
"0x55d276a0d392: <truck_topology::Shell<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:261:19)",
"0x55d276b55b9a: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:248:9)",
"0x55d276b55b9a: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:232:38)",
"0x55d276b55b9a: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:176:15)",
"0x55d276b55b9a: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x55d276b55b9a: alloc::vec::from_elem (src/vec/mod.rs:2738:5)",
"0x55d276b55b9a: truck_geotrait::algo::surface::sub_parameter_division (alloc/src/macros.rs:47:9)",
"0x55d276a76021: rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (rayon-core-1.12.1/src/registry.rs:522:21)",
"0x55d276a76021: rayon_core::job::JobResult<T>::call::{{closure}} (rayon-core-1.12.1/src/job.rs:218:41)",
"0x55d276a76021: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d276a76021: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d276a76021: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d276a76021: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d276a76021: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d276a76021: rayon_core::job::JobResult<T>::call (rayon-core-1.12.1/src/job.rs:218:15)",
"0x55d276a76021: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.12.1/src/job.rs:120:32)",
"0x55d276a64d3a: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a64d3a: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a64d3a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a64d3a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a64d3a: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d276a64d3a: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d276a64d3a: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d276a64d3a: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d276a64d3a: <truck_polymesh::PolylineCurve<P> as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:101:29)",
"0x55d276a64d3a: truck_topology::edge::<impl truck_topology::Edge<P,C>>::curve (truck-topology/src/edge.rs:255:9)",
"0x55d276a64d3a: truck_shapeops::transversal::loops_store::Loops<P,C>::search_parameter::{{closure}} (transversal/loops_store/mod.rs:167:29)",
"0x55d276a64d3a: core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (iter/traits/iterator.rs:2907:32)",
"0x55d276a64d3a: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a64d3a: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d276a64d3a: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::try_fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:87:27)",
"0x55d276a64d3a: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a397da: <alloc::collections::vec_deque::iter::Iter<T> as core::iter::traits::iterator::Iterator>::try_fold (collections/vec_deque/iter.rs:89:19)",
"0x55d276a397da: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/enumerate.rs:93:9)",
"0x55d276a397da: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d276a397da: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d276a397da: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:507:30)",
"0x55d276a397da: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d276a397da: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::try_fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:87:27)",
"0x55d276a397da: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a397da: <core::iter::adapters::fuse::Fuse<I> as core::iter::adapters::fuse::FuseImpl<I>>::try_fold (iter/adapters/fuse.rs:375:19)",
"0x55d276a397da: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/fuse.rs:89:9)",
"0x55d276a397da: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_try_fold (iter/adapters/flatten.rs:515:25)",
"0x55d276a397da: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/flatten.rs:653:9)",
"0x55d276a397da: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/flatten.rs:81:9)",
"0x55d276a397da: core::iter::traits::iterator::Iterator::find_map (iter/traits/iterator.rs:2913:14)",
"0x55d276a397da: truck_shapeops::transversal::loops_store::Loops<P,C>::search_parameter (transversal/loops_store/mod.rs:166:14)",
"0x55d276a397da: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::add_polygon_vertex (transversal/loops_store/mod.rs:314:46)",
"0x55d276a3a628: truck_topology::wire::<impl core::clone::Clone for truck_topology::Wire<P,C>>::clone (truck-topology/src/wire.rs:778:24)",
"0x55d276a3a628: truck_shapeops::transversal::loops_store::Loops<P,C>::swap_edge_into_wire::{{closure}} (transversal/loops_store/mod.rs:212:60)",
"0x55d276a3a628: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d276a3a628: truck_shapeops::transversal::loops_store::Loops<P,C>::swap_edge_into_wire (transversal/loops_store/mod.rs:208:9)",
"0x55d276a3a628: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::swap_edge_into_wire::{{closure}} (transversal/loops_store/mod.rs:301:31)",
"0x55d276a3a628: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::swap_edge_into_wire (transversal/loops_store/mod.rs:300:9)",
"0x55d276a3a628: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::add_polygon_vertex (transversal/loops_store/mod.rs:333:22)",
"0x55d276a3a2b8: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a3a2b8: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a3a2b8: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a3a2b8: truck_topology::edge::<impl truck_topology::Edge<P,C>>::cut_with_parameter (truck-topology/src/edge.rs:452:20)",
"0x55d276a3a2b8: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::add_polygon_vertex (transversal/loops_store/mod.rs:331:38)",
"0x55d276a76943: rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (iter/plumbing/mod.rs:426:21)",
"0x55d276a76943: rayon_core::join::join_context::call_b::{{closure}} (src/join/mod.rs:129:25)",
"0x55d276a76943: rayon_core::job::JobResult<T>::call::{{closure}} (rayon-core-1.12.1/src/job.rs:218:41)",
"0x55d276a76943: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d276a76943: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d276a76943: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d276a76943: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d276a76943: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d276a76943: rayon_core::job::JobResult<T>::call (rayon-core-1.12.1/src/job.rs:218:15)",
"0x55d276a76943: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.12.1/src/job.rs:120:32)",
"0x55d276a05deb: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276a05deb: truck_topology::shell::create_one_component (truck-topology/src/shell.rs:1165:13)",
"0x55d276a05deb: truck_topology::shell::check_connectivity (truck-topology/src/shell.rs:1133:5)",
"0x55d276a05deb: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices::{{closure}}::{{closure}} (truck-topology/src/shell.rs:541:42)",
"0x55d276a05deb: core::option::Option<T>::filter (core/src/option.rs:1479:16)",
"0x55d276a05deb: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices::{{closure}} (truck-topology/src/shell.rs:541:17)",
"0x55d276a05deb: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a05deb: core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (iter/traits/iterator.rs:2907:32)",
"0x55d276a05deb: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a05deb: core::iter::traits::iterator::Iterator::find_map (iter/traits/iterator.rs:2913:9)",
"0x55d276a05deb: <core::iter::adapters::filter_map::FilterMap<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/filter_map.rs:64:9)",
"0x55d276a6b1d6: rayon::iter::plumbing::bridge_producer_consumer (iter/plumbing/mod.rs:396:12)",
"0x55d276a6b1d6: <rayon::iter::plumbing::bridge::Callback<C> as rayon::iter::plumbing::ProducerCallback<I>>::callback (iter/plumbing/mod.rs:372:13)",
"0x55d276a6b1d6: <rayon::vec::Drain<T> as rayon::iter::IndexedParallelIterator>::with_producer (rayon-1.10.0/src/vec.rs:147:13)",
"0x55d276a6b1d6: <rayon::vec::IntoIter<T> as rayon::iter::IndexedParallelIterator>::with_producer (rayon-1.10.0/src/vec.rs:83:9)",
"0x55d276a6b1d6: rayon::iter::plumbing::bridge (iter/plumbing/mod.rs:356:12)",
"0x55d276a6b1d6: <rayon::vec::IntoIter<T> as rayon::iter::ParallelIterator>::drive_unindexed (rayon-1.10.0/src/vec.rs:58:9)",
"0x55d276a6b1d6: <rayon::iter::flat_map::FlatMapFolder<C,F,<C as rayon::iter::plumbing::Consumer<<U as rayon::iter::IntoParallelIterator>::Item>>::Result> as rayon::iter::plumbing::Folder<T>>::consume (src/iter/flat_map.rs:127:22)",
"0x55d276a6b1d6: rayon::iter::plumbing::Folder::consume_iter (iter/plumbing/mod.rs:178:20)",
"0x55d276a6b1d6: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d276a6b1d6: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d276a770f9: rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (iter/plumbing/mod.rs:426:21)",
"0x55d276a770f9: rayon_core::join::join_context::call_b::{{closure}} (src/join/mod.rs:129:25)",
"0x55d276a770f9: rayon_core::job::JobResult<T>::call::{{closure}} (rayon-core-1.12.1/src/job.rs:218:41)",
"0x55d276a770f9: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d276a770f9: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d276a770f9: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d276a770f9: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d276a770f9: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d276a770f9: rayon_core::job::JobResult<T>::call (rayon-core-1.12.1/src/job.rs:218:15)",
"0x55d276a770f9: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.12.1/src/job.rs:120:32)",
"0x55d276a09a63: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a09a63: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a09a63: truck_shapeops::transversal::intersection_curve::IntersectionCurveWithParameters<S>::try_new (transversal/intersection_curve/mod.rs:58:17)",
"0x55d276a09a63: truck_shapeops::transversal::intersection_curve::intersection_curves::{{closure}} (transversal/intersection_curve/mod.rs:162:25)",
"0x55d276a09a63: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a09a63: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d276a09a63: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a09a63: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a09a63: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d276a09a63: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d276a09a63: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d276a09a63: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:246:9)",
"0x55d276a09a63: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a09a63: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a09a63: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:170:10)",
"0x55d276a09a63: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d276a09a63: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d276a09a63: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a09a63: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d276a09a63: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a09a63: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d276a09a63: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d276a829d8: truck_topology::wire::<impl core::clone::Clone for truck_topology::Wire<P,C>>::clone (truck-topology/src/wire.rs:778:24)",
"0x55d276a829d8: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x55d276a829d8: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d276a829d8: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d276a829d8: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:437:14)",
"0x55d276a829d8: alloc::slice::<impl alloc::borrow::ToOwned for [T]>::to_owned (alloc/src/slice.rs:844:14)",
"0x55d276a829d8: truck_modeling::builder::try_attach_plane (truck-modeling/src/builder.rs:421:28)",
"0x55d276a829d8: test_truck::main (test-truck/src/main.rs:59:16)",
"0x55d276a3dd61: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a3dd61: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a3dd61: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a3dd61: truck_topology::edge::<impl truck_topology::Edge<P,C>>::cut_with_parameter (truck-topology/src/edge.rs:457:20)",
"0x55d276a3dd61: truck_shapeops::transversal::loops_store::LoopsStore<cgmath::point::Point3<f64>,C>::add_geom_vertex (transversal/loops_store/mod.rs:375:38)",
"0x55d276a72ef5: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a72ef5: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a72ef5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a72ef5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a72ef5: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d276a72ef5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d276a72ef5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d276a72ef5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d276a72ef5: <truck_polymesh::StandardAttributes as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:44:5)",
"0x55d276a72ef5: <truck_polymesh::PolygonMesh<V,A> as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:87:5)",
"0x55d276a72ef5: <core::option::Option<T> as core::clone::Clone>::clone (core/src/option.rs:2038:29)",
"0x55d276a3e079: <alloc::collections::vec_deque::VecDeque<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (collections/vec_deque/mod.rs:2863:9)",
"0x55d276a3e079: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a3e079: truck_topology::wire::<impl truck_topology::Wire<P,C>>::inverse (truck-topology/src/wire.rs:189:75)",
"0x55d276a3e079: truck_shapeops::transversal::loops_store::Loops<P,C>::swap_edge_into_wire::{{closure}} (transversal/loops_store/mod.rs:214:60)",
"0x55d276a3e079: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d276a3e079: truck_shapeops::transversal::loops_store::Loops<P,C>::swap_edge_into_wire (transversal/loops_store/mod.rs:208:9)",
"0x55d276a3e079: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::swap_edge_into_wire::{{closure}} (transversal/loops_store/mod.rs:301:31)",
"0x55d276a3e079: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::swap_edge_into_wire (transversal/loops_store/mod.rs:300:9)",
"0x55d276a3e079: truck_shapeops::transversal::loops_store::LoopsStore<cgmath::point::Point3<f64>,C>::add_geom_vertex (transversal/loops_store/mod.rs:377:22)",
"0x55d276a43b02: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d276a43b02: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d276a43b02: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.14.5/src/rustc_entry.rs:46:18)",
"0x55d276a43b02: std::collections::hash::map::HashMap<K,V,S>::entry (collections/hash/map.rs:856:19)",
"0x55d276a43b02: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert (truck-base/src/entry_map.rs:59:14)",
"0x55d276a43b02: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency::{{closure}} (truck-topology/src/shell.rs:235:17)",
"0x55d276a43b02: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a43b02: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a43b02: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d276a43b02: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d276a43b02: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d276a43b02: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d276a43b02: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d276a43b02: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d276a43b02: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d276a43b02: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:321:9)",
"0x55d276a43b02: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d276a43b02: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a43b02: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a43b02: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d276a43b02: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d276a43b02: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency (truck-topology/src/shell.rs:230:26)",
"0x55d276a43b02: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::is_connected (truck-topology/src/shell.rs:405:29)",
"0x55d276a289cb: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a289cb: truck_modeling::geom_impls::unit_circle_arc (alloc/src/macros.rs:54:13)",
"0x55d276a289cb: truck_modeling::geom_impls::circle_arc (truck-modeling/src/geom_impls.rs:53:26)",
"0x55d276a289cb: truck_modeling::builder::whole_rsweep::{{closure}} (truck-modeling/src/builder.rs:683:23)",
"0x55d276a289cb: truck_modeling::topo_impls::create_edge (truck-modeling/src/topo_impls.rs:9:5)",
"0x55d276a818c0: truck_modeling::topo_impls::connect_vertices (truck-modeling/src/topo_impls.rs:17:29)",
"0x55d276a818c0: truck_modeling::closed_sweep::<impl truck_modeling::topo_traits::ClosedSweep<P,C,S> for truck_topology::Vertex<P>>::closed_sweep::{{closure}} (truck-modeling/src/closed_sweep.rs:25:28)",
"0x55d276a818c0: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a818c0: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d276a818c0: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a818c0: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a818c0: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d276a818c0: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d276a818c0: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d276a818c0: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a818c0: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a818c0: <alloc::collections::vec_deque::VecDeque<T> as alloc::collections::vec_deque::spec_from_iter::SpecFromIter<T,I>>::spec_from_iter (collections/vec_deque/spec_from_iter.rs:17:9)",
"0x55d276a818c0: <alloc::collections::vec_deque::VecDeque<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (collections/vec_deque/mod.rs:2863:9)",
"0x55d276a818c0: truck_topology::wire::<impl core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>> for truck_topology::Wire<P,C>>::from_iter (truck-topology/src/wire.rs:599:20)",
"0x55d276a818c0: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a818c0: truck_modeling::closed_sweep::<impl truck_modeling::topo_traits::ClosedSweep<P,C,S> for truck_topology::Vertex<P>>::closed_sweep (truck-modeling/src/closed_sweep.rs:29:14)",
"0x55d276a818c0: truck_modeling::builder::whole_rsweep (truck-modeling/src/builder.rs:679:5)",
"0x55d276a818c0: truck_modeling::builder::rsweep (truck-modeling/src/builder.rs:636:9)",
"0x55d276a818c0: test_truck::main (test-truck/src/main.rs:53:18)",
"0x55d276a469cf: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276a469cf: truck_topology::shell::create_one_component (truck-topology/src/shell.rs:1165:13)",
"0x55d276a469cf: truck_topology::shell::create_components (truck-topology/src/shell.rs:1143:25)",
"0x55d276a469cf: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::connected_components (truck-topology/src/shell.rs:451:26)",
"0x55d276a7b7ee: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a7b7ee: hashbrown::raw::alloc::inner::do_alloc (src/raw/alloc.rs:15:15)",
"0x55d276a7b7ee: hashbrown::raw::RawTableInner::new_uninitialized (src/raw/mod.rs:1750:38)",
"0x55d276a7b7ee: hashbrown::raw::RawTableInner::fallible_with_capacity (src/raw/mod.rs:1788:30)",
"0x55d276a7b7ee: hashbrown::raw::RawTableInner::prepare_resize (src/raw/mod.rs:2864:13)",
"0x55d276a7b7ee: hashbrown::raw::RawTableInner::resize_inner (src/raw/mod.rs:3060:34)",
"0x55d276a7b7ee: hashbrown::raw::RawTableInner::reserve_rehash_inner (src/raw/mod.rs:2950:13)",
"0x55d276a7b7ee: hashbrown::raw::RawTable<T,A>::reserve_rehash (src/raw/mod.rs:1231:13)",
"0x55d276a0c4dc: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d276a0c4dc: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d276a0c4dc: std::collections::hash::map::HashMap<K,V,S>::reserve (collections/hash/map.rs:758:19)",
"0x55d276a0c4dc: rayon::iter::extend::<impl rayon::iter::ParallelExtend<(K,V)> for std::collections::hash::map::HashMap<K,V,S>>::par_extend (src/iter/extend.rs:33:15)",
"0x55d276a0c4dc: rayon::iter::from_par_iter::collect_extended (src/iter/from_par_iter.rs:20:5)",
"0x55d276a0c4dc: rayon::iter::from_par_iter::<impl rayon::iter::FromParallelIterator<(K,V)> for std::collections::hash::map::HashMap<K,V,S>>::from_par_iter (src/iter/from_par_iter.rs:131:9)",
"0x55d276a0c4dc: rayon::iter::ParallelIterator::collect (src/iter/mod.rs:2069:9)",
"0x55d276a0c4dc: truck_meshalgo::tessellation::triangulation::shell_tessellation (src/tessellation/triangulation.rs:65:10)",
"0x55d276a0c4dc: <truck_topology::Shell<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:261:19)",
"0x55d276a16257: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276a16257: truck_geometry::nurbs::bspsurface::<impl truck_geometry::nurbs::BSplineSurface<P>>::homotopy (src/nurbs/bspsurface.rs:1594:13)",
"0x55d276a2b160: truck_modeling::builder::tsweep::{{closure}} (truck-modeling/src/builder.rs:519:35)",
"0x55d276a2b160: truck_modeling::topo_impls::create_surface (truck-modeling/src/topo_impls.rs:25:5)",
"0x55d276a2b160: truck_modeling::topo_impls::sub_connect_wires (truck-modeling/src/topo_impls.rs:74:19)",
"0x55d276a2b160: truck_modeling::topo_impls::connect_raw_wires::{{closure}} (truck-modeling/src/topo_impls.rs:118:9)",
"0x55d276a2b160: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d276a2b160: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d276a2b160: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d276a2b160: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d276a2b160: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d276a2b160: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d276a2b160: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (truck-modeling/src/sweep.rs:235:15)",
"0x55d276a2b160: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d276a04357: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d276a04357: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d276a04357: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.14.5/src/rustc_entry.rs:46:18)",
"0x55d276a04357: std::collections::hash::map::HashMap<K,V,S>::entry (collections/hash/map.rs:856:19)",
"0x55d276a04357: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert (truck-base/src/entry_map.rs:59:14)",
"0x55d276a21b6b: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a21b6b: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a21b6b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a21b6b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a21b6b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276a21b6b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d276a21b6b: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:246:9)",
"0x55d276a21b6b: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a21b6b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a21b6b: truck_meshalgo::tessellation::triangulation::insert_surface (src/tessellation/triangulation.rs:558:10)",
"0x55d276a21b6b: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:527:5)",
"0x55d276a2b30b: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a2b30b: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a2b30b: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a2b30b: truck_topology::face::<impl truck_topology::Face<P,C,S>>::new_unchecked (truck-topology/src/face.rs:64:22)",
"0x55d276a2b30b: truck_topology::face::<impl truck_topology::Face<P,C,S>>::debug_new (truck-topology/src/face.rs:76:22)",
"0x55d276a2b30b: truck_modeling::topo_impls::sub_connect_wires (truck-modeling/src/topo_impls.rs:75:20)",
"0x55d276a2b30b: truck_modeling::topo_impls::connect_raw_wires::{{closure}} (truck-modeling/src/topo_impls.rs:118:9)",
"0x55d276a2b30b: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d276a2b30b: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d276a2b30b: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d276a2b30b: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d276a2b30b: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d276a2b30b: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d276a2b30b: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (truck-modeling/src/sweep.rs:235:15)",
"0x55d276a2b30b: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d276a46bb8: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276a46bb8: truck_topology::shell::create_components (truck-topology/src/shell.rs:1146:22)",
"0x55d276a46bb8: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::connected_components (truck-topology/src/shell.rs:451:26)",
"0x55d276a80e16: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a80e16: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a80e16: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a80e16: truck_topology::vertex::<impl truck_topology::Vertex<P>>::new (truck-topology/src/vertex.rs:17:20)",
"0x55d276a80e16: truck_modeling::builder::vertex (truck-modeling/src/builder.rs:15:39)",
"0x55d276a80e16: test_truck::main (test-truck/src/main.rs:52:17)",
"0x55d276a2ba81: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a2ba81: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a2ba81: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a2ba81: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new_unchecked (truck-topology/src/edge.rs:45:20)",
"0x55d276a2ba81: truck_topology::edge::<impl truck_topology::Edge<P,C>>::debug_new (truck-topology/src/edge.rs:57:22)",
"0x55d276a2ba81: truck_modeling::topo_impls::connect_vertices (truck-modeling/src/topo_impls.rs:17:5)",
"0x55d276a2ba81: truck_modeling::topo_impls::sub_connect_wires::{{closure}} (truck-modeling/src/topo_impls.rs:63:28)",
"0x55d276a2ba81: std::collections::hash::map::Entry<K,V>::or_insert_with (collections/hash/map.rs:2666:43)",
"0x55d276a2ba81: truck_modeling::topo_impls::sub_connect_wires (truck-modeling/src/topo_impls.rs:61:17)",
"0x55d276a2ba81: truck_modeling::topo_impls::connect_raw_wires::{{closure}} (truck-modeling/src/topo_impls.rs:118:9)",
"0x55d276a2ba81: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d276a2ba81: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d276a2ba81: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d276a2ba81: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d276a2ba81: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d276a2ba81: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d276a2ba81: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (truck-modeling/src/sweep.rs:235:15)",
"0x55d276a2ba81: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d276a84211: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:22:24)",
"0x55d276a84211: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d276a84211: truck_shapeops::transversal::integrate::or (transversal/integrate/mod.rs:145:10)",
"0x55d276a84211: test_truck::main (test-truck/src/main.rs:76:21)",
"0x55d276a34ad6: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a34ad6: truck_shapeops::transversal::loops_store::Loops<P,C>::add_edge (alloc/src/macros.rs:54:13)",
"0x55d276a3698e: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:562:21)",
"0x55d276acb74d: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276acb74d: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276acb74d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276acb74d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276acb74d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276acb74d: parking_lot_core::parking_lot::HashTable::new (parking_lot_core-0.9.10/src/parking_lot.rs:75:27)",
"0x55d276a07b96: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a07b96: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a07b96: truck_meshalgo::analyzers::collision::collision (src/analyzers/collision.rs:216:47)",
"0x55d276a07b96: <truck_polymesh::PolygonMesh as truck_meshalgo::analyzers::collision::Collision>::extract_interference (src/analyzers/collision.rs:34:9)",
"0x55d276a07b96: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:157:34)",
"0x55d276a07b96: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d276a07b96: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d276a07b96: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a07b96: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d276a07b96: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a07b96: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d276a07b96: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d276a79cbf: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d276a79cbf: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d276a79cbf: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.14.5/src/rustc_entry.rs:46:18)",
"0x55d276a79cbf: std::collections::hash::map::HashMap<K,V,S>::entry (collections/hash/map.rs:856:19)",
"0x55d276a79cbf: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}} (transversal/loops_store/mod.rs:189:26)",
"0x55d276a79cbf: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a79cbf: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a79cbf: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a78637: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a78637: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a78637: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a78637: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new_unchecked (truck-topology/src/edge.rs:45:20)",
"0x55d276a78637: truck_topology::edge::<impl truck_topology::Edge<P,C>>::debug_new (truck-topology/src/edge.rs:57:22)",
"0x55d276a78637: truck_topology::wire::edge_entry_map_closure::{{closure}} (truck-topology/src/wire.rs:581:9)",
"0x55d276a78637: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert::{{closure}} (truck-base/src/entry_map.rs:60:32)",
"0x55d276a78637: std::collections::hash::map::Entry<K,V>::or_insert_with (collections/hash/map.rs:2666:43)",
"0x55d276a78637: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert (truck-base/src/entry_map.rs:58:9)",
"0x55d276a78637: truck_topology::wire::<impl truck_topology::Wire<P,C>>::sub_mapped::{{closure}} (truck-topology/src/wire.rs:433:32)",
"0x55d276a78637: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a78637: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a78637: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a7e28e: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a7e28e: hashbrown::raw::alloc::inner::do_alloc (src/raw/alloc.rs:15:15)",
"0x55d276a7e28e: hashbrown::raw::RawTableInner::new_uninitialized (src/raw/mod.rs:1750:38)",
"0x55d276a7e28e: hashbrown::raw::RawTableInner::fallible_with_capacity (src/raw/mod.rs:1788:30)",
"0x55d276a7e28e: hashbrown::raw::RawTableInner::prepare_resize (src/raw/mod.rs:2864:13)",
"0x55d276a7e28e: hashbrown::raw::RawTableInner::resize_inner (src/raw/mod.rs:3060:34)",
"0x55d276a7e28e: hashbrown::raw::RawTableInner::reserve_rehash_inner (src/raw/mod.rs:2950:13)",
"0x55d276a7e28e: hashbrown::raw::RawTable<T,A>::reserve_rehash (src/raw/mod.rs:1231:13)",
"0x55d276a24454: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d276a24454: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d276a24454: <hashbrown::map::HashMap<K,V,S,A> as core::iter::traits::collect::Extend<(K,V)>>::extend (hashbrown-0.14.5/src/map.rs:6510:14)",
"0x55d276a24454: <std::collections::hash::map::HashMap<K,V,S> as core::iter::traits::collect::Extend<(K,V)>>::extend (collections/hash/map.rs:3144:9)",
"0x55d276a24454: <std::collections::hash::map::HashMap<K,V,S> as core::iter::traits::collect::FromIterator<(K,V)>>::from_iter (collections/hash/map.rs:3129:13)",
"0x55d276a24454: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a24454: truck_meshalgo::tessellation::triangulation::triangulation_into_polymesh (src/tessellation/triangulation.rs:603:10)",
"0x55d276a24454: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:528:20)",
"0x55d276a83c0d: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon::{{closure}} (src/tessellation/mod.rs:84:13)",
"0x55d276a83c0d: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d276a83c0d: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon (src/tessellation/mod.rs:83:9)",
"0x55d276a83c0d: test_truck::main (test-truck/src/main.rs:63:17)",
"0x55d276acb531: parking_lot_core::parking_lot::grow_hashtable (parking_lot_core-0.9.10/src/parking_lot.rs:294:25)",
"0x55d276acb531: parking_lot_core::parking_lot::ThreadData::new (parking_lot_core-0.9.10/src/parking_lot.rs:180:9)",
"0x55d276b2587a: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:486:19)",
"0x55d276b2587a: alloc::raw_vec::RawVec<T,A>::grow_one (alloc/src/raw_vec.rs:364:27)",
"0x55d276b23f64: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276b23f64: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::resolve_conflict_groups (spade-2.12.1/src/cdt.rs:1055:21)",
"0x55d276b23f64: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::try_add_constraint_inner (spade-2.12.1/src/cdt.rs:823:13)",
"0x55d276b23f64: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::add_constraint (spade-2.12.1/src/cdt.rs:550:9)",
"0x55d276a0eb08: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d276a0eb08: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d276a0eb08: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.14.5/src/rustc_entry.rs:46:18)",
"0x55d276a0eb08: std::collections::hash::map::HashMap<K,V,S>::entry (collections/hash/map.rs:856:19)",
"0x55d276a0eb08: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert (truck-base/src/entry_map.rs:59:14)",
"0x55d276a0eb08: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency::{{closure}} (truck-topology/src/shell.rs:235:17)",
"0x55d276a0eb08: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a0eb08: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a0eb08: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d276a0eb08: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d276a0eb08: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d276a0eb08: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d276a0eb08: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d276a0eb08: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d276a0eb08: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d276a0eb08: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:321:9)",
"0x55d276a0eb08: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d276a0eb08: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a0eb08: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a0eb08: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d276a0eb08: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d276a0eb08: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency (truck-topology/src/shell.rs:230:26)",
"0x55d276a0eb08: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::is_connected (truck-topology/src/shell.rs:405:29)",
"0x55d276a0eb08: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:22:24)",
"0x55d276a0eb08: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d276a0eb08: <truck_topology::Solid<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:300:9)",
"0x55d276a71882: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276a71882: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::resolve_conflict_region::{{closure}} (spade-2.12.1/src/cdt.rs:629:17)",
"0x55d276a71882: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::resolve_conflict_region (spade-2.12.1/src/cdt.rs:634:9)",
"0x55d276a71882: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::resolve_conflict_groups (spade-2.12.1/src/cdt.rs:1063:37)",
"0x55d276a71882: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::try_add_constraint_inner (spade-2.12.1/src/cdt.rs:823:13)",
"0x55d276a71882: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::add_constraint (spade-2.12.1/src/cdt.rs:550:9)",
"0x55d276a0f6e9: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d276a0f6e9: hashbrown::raw::RawTable<T,A>::find_or_find_insert_slot (src/raw/mod.rs:1413:9)",
"0x55d276a0f6e9: hashbrown::map::HashMap<K,V,S,A>::insert (hashbrown-0.14.5/src/map.rs:1754:15)",
"0x55d276a0f6e9: std::collections::hash::map::HashMap<K,V,S>::insert (collections/hash/map.rs:1106:9)",
"0x55d276a0f6e9: truck_topology::shell::Boundaries<C>::insert (truck-topology/src/shell.rs:1097:33)",
"0x55d276a0f6e9: <truck_topology::shell::Boundaries<C> as core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>>>::from_iter::{{closure}} (truck-topology/src/shell.rs:1126:42)",
"0x55d276a0f6e9: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a0f6e9: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a0f6e9: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d276a0f6e9: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d276a0f6e9: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d276a0f6e9: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d276a0f6e9: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d276a0f6e9: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d276a0f6e9: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d276a0f6e9: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:321:9)",
"0x55d276a0f6e9: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d276a0f6e9: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a0f6e9: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a0f6e9: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d276a0f6e9: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a0f6e9: <truck_topology::shell::Boundaries<C> as core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>>>::from_iter (truck-topology/src/shell.rs:1126:9)",
"0x55d276a0f6e9: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a0f6e9: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::shell_condition (truck-topology/src/shell.rs:133:26)",
"0x55d276a0f6e9: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:24:23)",
"0x55d276a0f6e9: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d276a0f6e9: <truck_topology::Solid<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:300:9)",
"0x55d276a093ee: truck_shapeops::transversal::intersection_curve::intersection_curves::{{closure}} (transversal/intersection_curve/mod.rs:164:17)",
"0x55d276a093ee: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a093ee: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d276a093ee: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a093ee: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a093ee: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d276a093ee: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d276a093ee: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d276a093ee: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:246:9)",
"0x55d276a093ee: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a093ee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a093ee: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:170:10)",
"0x55d276a093ee: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d276a093ee: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d276a093ee: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a093ee: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d276a093ee: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a093ee: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d276a093ee: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d276a21854: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a21854: truck_geometry::specifieds::plane::<impl truck_geotrait::traits::surface::ParameterDivision2D for truck_geometry::specifieds::Plane>::parameter_division (alloc/src/macros.rs:54:13)",
"0x55d276a21854: <truck_modeling::geometry::Surface as truck_geotrait::traits::surface::ParameterDivision2D>::parameter_division (truck-modeling/src/geometry.rs:161:5)",
"0x55d276a21854: <&S as truck_geotrait::traits::surface::ParameterDivision2D>::parameter_division (src/traits/surface.rs:155:9)",
"0x55d276a21854: truck_meshalgo::tessellation::triangulation::insert_surface (src/tessellation/triangulation.rs:547:24)",
"0x55d276a21854: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:527:5)",
"0x55d276a81f87: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a81f87: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a81f87: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a81f87: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a81f87: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276a81f87: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55d276a81f87: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a81f87: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a81f87: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a81f87: truck_modeling::builder::try_attach_plane::{{closure}} (truck-modeling/src/builder.rs:414:18)",
"0x55d276a81f87: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a81f87: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a81f87: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a81f87: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a81f87: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d276a81f87: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d276a81f87: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d276a81f87: truck_modeling::builder::try_attach_plane (truck-modeling/src/builder.rs:416:10)",
"0x55d276a81f87: test_truck::main (test-truck/src/main.rs:59:16)",
"0x55d276a0f3d5: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d276a0f3d5: hashbrown::raw::RawTable<T,A>::find_or_find_insert_slot (src/raw/mod.rs:1413:9)",
"0x55d276a0f3d5: hashbrown::map::HashMap<K,V,S,A>::insert (hashbrown-0.14.5/src/map.rs:1754:15)",
"0x55d276a0f3d5: hashbrown::set::HashSet<T,S,A>::insert (hashbrown-0.14.5/src/set.rs:1115:9)",
"0x55d276a0f3d5: std::collections::hash::set::HashSet<T,S>::insert (collections/hash/set.rs:890:19)",
"0x55d276a0f3d5: truck_topology::shell::Boundaries<C>::insert (truck-topology/src/shell.rs:1096:30)",
"0x55d276a0f3d5: <truck_topology::shell::Boundaries<C> as core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>>>::from_iter::{{closure}} (truck-topology/src/shell.rs:1126:42)",
"0x55d276a0f3d5: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a0f3d5: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a0f3d5: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d276a0f3d5: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d276a0f3d5: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d276a0f3d5: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d276a0f3d5: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d276a0f3d5: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d276a0f3d5: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d276a0f3d5: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:321:9)",
"0x55d276a0f3d5: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d276a0f3d5: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a0f3d5: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a0f3d5: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d276a0f3d5: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a0f3d5: <truck_topology::shell::Boundaries<C> as core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>>>::from_iter (truck-topology/src/shell.rs:1126:9)",
"0x55d276a0f3d5: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a0f3d5: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::shell_condition (truck-topology/src/shell.rs:133:26)",
"0x55d276a0f3d5: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:24:23)",
"0x55d276a0f3d5: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d276a0f3d5: <truck_topology::Solid<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:300:9)",
"0x55d276a46dd6: truck_topology::wire::<impl core::clone::Clone for truck_topology::Wire<P,C>>::clone (truck-topology/src/wire.rs:778:24)",
"0x55d276a46dd6: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x55d276a46dd6: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d276a46dd6: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d276a46dd6: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d276a46dd6: truck_topology::face::<impl core::clone::Clone for truck_topology::Face<P,C,S>>::clone (truck-topology/src/face.rs:1029:25)",
"0x55d276a46dd6: core::ops::function::FnMut::call_mut (src/ops/function.rs:166:5)",
"0x55d276a46dd6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a46dd6: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d276a46dd6: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a46dd6: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/cloned.rs:61:31)",
"0x55d276a46dd6: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a46dd6: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d276a46dd6: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d276a46dd6: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d276a46dd6: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:246:9)",
"0x55d276a46dd6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a46dd6: truck_topology::shell::<impl core::iter::traits::collect::FromIterator<truck_topology::Face<P,C,S>> for truck_topology::Shell<P,C,S>>::from_iter (truck-topology/src/shell.rs:853:24)",
"0x55d276a46dd6: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a46dd6: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::connected_components::{{closure}} (truck-topology/src/shell.rs:454:49)",
"0x55d276a46dd6: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:28)",
"0x55d276a46dd6: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::try_fold (src/vec/into_iter.rs:340:25)",
"0x55d276a46dd6: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d276a46dd6: <I as alloc::vec::in_place_collect::SpecInPlaceCollect<T,I>>::collect_in_place (src/vec/in_place_collect.rs:379:13)",
"0x55d276a46dd6: alloc::vec::in_place_collect::from_iter_in_place (src/vec/in_place_collect.rs:270:9)",
"0x55d276a46dd6: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::connected_components (truck-topology/src/shell.rs:455:14)",
"0x55d276a805ee: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a805ee: truck_modeling::topo_impls::connect_edges (alloc/src/macros.rs:54:13)",
"0x55d276a805ee: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Edge<P,C>>::sweep (truck-modeling/src/sweep.rs:99:9)",
"0x55d276a805ee: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d276a805ee: test_truck::main (test-truck/src/main.rs:43:21)",
"0x55d276a39801: <alloc::collections::vec_deque::iter::Iter<T> as core::iter::traits::iterator::Iterator>::try_fold (collections/vec_deque/iter.rs:90:9)",
"0x55d276a39801: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/enumerate.rs:93:9)",
"0x55d276a39801: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d276a39801: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d276a39801: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:507:30)",
"0x55d276a39801: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d276a39801: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::try_fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:87:27)",
"0x55d276a39801: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a39801: <core::iter::adapters::fuse::Fuse<I> as core::iter::adapters::fuse::FuseImpl<I>>::try_fold (iter/adapters/fuse.rs:375:19)",
"0x55d276a39801: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/fuse.rs:89:9)",
"0x55d276a39801: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_try_fold (iter/adapters/flatten.rs:515:25)",
"0x55d276a39801: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/flatten.rs:653:9)",
"0x55d276a39801: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/flatten.rs:81:9)",
"0x55d276a39801: core::iter::traits::iterator::Iterator::find_map (iter/traits/iterator.rs:2913:14)",
"0x55d276a39801: truck_shapeops::transversal::loops_store::Loops<P,C>::search_parameter (transversal/loops_store/mod.rs:166:14)",
"0x55d276a39801: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::add_polygon_vertex (transversal/loops_store/mod.rs:314:46)",
"0x55d276a291bb: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a291bb: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (alloc/src/macros.rs:54:13)",
"0x55d276a291bb: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d276a44b47: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:26:32)",
"0x55d276a44b47: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a44b47: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a44b47: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a44b47: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices (truck-topology/src/shell.rs:543:14)",
"0x55d276a84242: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:26:24)",
"0x55d276a84242: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d276a84242: truck_shapeops::transversal::integrate::or (transversal/integrate/mod.rs:145:10)",
"0x55d276a84242: test_truck::main (test-truck/src/main.rs:76:21)",
"0x55d276a292b3: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a292b3: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a292b3: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a292b3: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a292b3: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276a292b3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d276a292b3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a292b3: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a292b3: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a292b3: truck_topology::face::<impl truck_topology::Face<P,C,S>>::mapped (truck-topology/src/face.rs:489:14)",
"0x55d276a292b3: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (truck-modeling/src/sweep.rs:232:23)",
"0x55d276a292b3: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d276a41958: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:24:23)",
"0x55d276a41958: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d276a41958: truck_shapeops::transversal::integrate::and (transversal/integrate/mod.rs:122:10)",
"0x55d276a6839d: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:486:19)",
"0x55d276a6839d: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:349:31)",
"0x55d276a41dc3: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:355:13)",
"0x55d276a41dc3: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:972:18)",
"0x55d276a41dc3: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3093:18)",
"0x55d276a41dc3: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d276a41dc3: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d276a41dc3: truck_topology::wire::<impl truck_topology::Wire<P,C>>::swap_edge_into_wire (truck-topology/src/wire.rs:365:18)",
"0x55d276a291e4: truck_topology::face::<impl core::clone::Clone for truck_topology::Face<P,C,S>>::clone (truck-topology/src/face.rs:1029:25)",
"0x55d276a291e4: truck_topology::face::<impl truck_topology::Face<P,C,S>>::inverse (truck-topology/src/face.rs:670:24)",
"0x55d276a291e4: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (truck-modeling/src/sweep.rs:231:35)",
"0x55d276a291e4: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d276ad0c8f: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276ad0c8f: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276ad0c8f: std::sys::pal::unix::thread::Thread::new (pal/unix/thread.rs:52:31)",
"0x55d276ad0c8f: std::thread::Builder::spawn_unchecked_ (src/thread/mod.rs:581:30)",
"0x55d276ad0c8f: std::thread::Builder::spawn_unchecked (src/thread/mod.rs:456:32)",
"0x55d276ad0c8f: std::thread::Builder::spawn (src/thread/mod.rs:388:18)",
"0x55d276ad0c8f: <rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn (rayon-core-1.12.1/src/registry.rs:98:11)",
"0x55d276ad0c8f: rayon_core::registry::Registry::new (rayon-core-1.12.1/src/registry.rs:304:29)",
"0x55d276a81e20: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:26:32)",
"0x55d276a81e20: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a81e20: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a81e20: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a81e20: truck_modeling::builder::try_attach_plane::{{closure}} (truck-modeling/src/builder.rs:414:18)",
"0x55d276a81e20: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a81e20: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a81e20: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a81e20: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a81e20: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d276a81e20: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d276a81e20: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d276a81e20: truck_modeling::builder::try_attach_plane (truck-modeling/src/builder.rs:416:10)",
"0x55d276a81e20: test_truck::main (test-truck/src/main.rs:59:16)",
"0x55d276a7ef0f: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a7ef0f: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a7ef0f: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a7ef0f: truck_topology::vertex::<impl truck_topology::Vertex<P>>::new (truck-topology/src/vertex.rs:17:20)",
"0x55d276a7ef0f: truck_modeling::builder::vertex (truck-modeling/src/builder.rs:15:39)",
"0x55d276a7ef0f: test_truck::main (test-truck/src/main.rs:41:18)",
"0x55d276ab4c98: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276ab4c98: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276ab4c98: <T as crossbeam_epoch::atomic::Pointable>::init (crossbeam-epoch-0.9.18/src/atomic.rs:200:23)",
"0x55d276ab4c98: crossbeam_epoch::atomic::Owned<T>::init (crossbeam-epoch-0.9.18/src/atomic.rs:1147:35)",
"0x55d276ab4c98: crossbeam_epoch::atomic::Owned<T>::new (crossbeam-epoch-0.9.18/src/atomic.rs:1132:9)",
"0x55d276ab4c98: crossbeam_epoch::sync::queue::Queue<T>::new (src/sync/queue.rs:50:24)",
"0x55d276ab4c98: crossbeam_epoch::internal::Global::new (crossbeam-epoch-0.9.18/src/internal.rs:176:20)",
"0x55d276ab4c98: <crossbeam_epoch::collector::Collector as core::default::Default>::default (crossbeam-epoch-0.9.18/src/collector.rs:32:30)",
"0x55d276ab4c98: crossbeam_epoch::collector::Collector::new (crossbeam-epoch-0.9.18/src/collector.rs:40:9)",
"0x55d276ab4c98: core::ops::function::FnOnce::call_once (src/ops/function.rs:250:5)",
"0x55d276ab4c98: crossbeam_epoch::sync::once_lock::OnceLock<T>::initialize::{{closure}} (src/sync/once_lock.rs:67:25)",
"0x55d276ab4c98: std::sync::once::Once::call_once::{{closure}} (src/sync/once.rs:158:41)",
"0x55d276ab4c98: std::sys::sync::once::futex::Once::call (sync/once/futex.rs:124:21)",
"0x55d276ab4b4b: std::sync::once::Once::call_once (src/sync/once.rs:158:9)",
"0x55d276ab4b4b: crossbeam_epoch::sync::once_lock::OnceLock<T>::initialize (src/sync/once_lock.rs:66:9)",
"0x55d276accc4b: crossbeam_epoch::sync::once_lock::OnceLock<T>::get_or_init (src/sync/once_lock.rs:53:9)",
"0x55d276accc4b: crossbeam_epoch::default::collector (crossbeam-epoch-0.9.18/src/default.rs:18:9)",
"0x55d276accc4b: crossbeam_epoch::default::HANDLE::__init (crossbeam-epoch-0.9.18/src/default.rs:34:34)",
"0x55d276accc4b: core::ops::function::FnOnce::call_once (src/ops/function.rs:250:5)",
"0x55d276accc4b: core::option::Option<T>::unwrap_or_else (core/src/option.rs:1008:21)",
"0x55d276accc4b: std::sys::thread_local::native::lazy::Storage<T,D>::initialize (thread_local/native/lazy.rs:65:42)",
"0x55d276accead: std::sys::thread_local::native::lazy::Storage<T,D>::get_or_init (thread_local/native/lazy.rs:57:40)",
"0x55d276accead: crossbeam_epoch::default::HANDLE::{{constant}}::{{closure}} (thread_local/native/mod.rs:93:25)",
"0x55d276accead: core::ops::function::FnOnce::call_once (src/ops/function.rs:250:5)",
"0x55d276accead: std::thread::local::LocalKey<T>::try_with (src/thread/local.rs:282:37)",
"0x55d276accead: crossbeam_epoch::default::with_handle (crossbeam-epoch-0.9.18/src/default.rs:59:5)",
"0x55d276accead: crossbeam_epoch::default::is_pinned (crossbeam-epoch-0.9.18/src/default.rs:46:5)",
"0x55d276accead: crossbeam_deque::deque::Stealer<T>::steal (crossbeam-deque-0.8.5/src/deque.rs:641:12)",
"0x55d276acc58b: rayon_core::registry::WorkerThread::take_local_job (rayon-core-1.12.1/src/registry.rs:751:19)",
"0x55d276acbcc0: rayon_core::registry::WorkerThread::wait_until_cold (rayon-core-1.12.1/src/registry.rs:785:32)",
"0x55d276a29445: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a29445: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a29445: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a29445: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a29445: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276a29445: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d276a29445: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a29445: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a29445: <alloc::collections::vec_deque::VecDeque<T> as alloc::collections::vec_deque::spec_from_iter::SpecFromIter<T,I>>::spec_from_iter (collections/vec_deque/spec_from_iter.rs:17:9)",
"0x55d276a29445: <alloc::collections::vec_deque::VecDeque<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (collections/vec_deque/mod.rs:2863:9)",
"0x55d276a29445: truck_topology::wire::<impl core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>> for truck_topology::Wire<P,C>>::from_iter (truck-topology/src/wire.rs:599:20)",
"0x55d276a29445: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a29445: truck_topology::wire::<impl truck_topology::Wire<P,C>>::sub_mapped (truck-topology/src/wire.rs:439:14)",
"0x55d276a29445: truck_topology::wire::<impl truck_topology::Wire<P,C>>::mapped (truck-topology/src/wire.rs:494:9)",
"0x55d276a29445: truck_topology::face::<impl truck_topology::Face<P,C,S>>::mapped::{{closure}} (truck-topology/src/face.rs:488:25)",
"0x55d276a29445: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a29445: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a29445: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a29445: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a29445: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d276a29445: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d276a29445: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d276a29445: truck_topology::face::<impl truck_topology::Face<P,C,S>>::mapped (truck-topology/src/face.rs:489:14)",
"0x55d276a29445: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (truck-modeling/src/sweep.rs:232:23)",
"0x55d276a29445: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d276b27cc5: spade::delaunay_core::triangulation_ext::TriangulationExt::insert_outside_of_convex_hull (src/delaunay_core/triangulation_ext.rs:245:9)",
"0x55d276a4393e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276a4393e: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency::{{closure}} (truck-topology/src/shell.rs:235:17)",
"0x55d276a4393e: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a4393e: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a4393e: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d276a4393e: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d276a4393e: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d276a4393e: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d276a4393e: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d276a4393e: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d276a4393e: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d276a4393e: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:321:9)",
"0x55d276a4393e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d276a4393e: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a4393e: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a4393e: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d276a4393e: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d276a4393e: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency (truck-topology/src/shell.rs:230:26)",
"0x55d276a4393e: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::is_connected (truck-topology/src/shell.rs:405:29)",
"0x55d276ad1d84: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:486:19)",
"0x55d276ad1d84: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:349:31)",
"0x55d276acfc90: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:355:13)",
"0x55d276acfc90: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:972:18)",
"0x55d276acfc90: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend_reserve (src/vec/mod.rs:3049:14)",
"0x55d276acfc90: <(ExtendA,ExtendB) as core::iter::traits::collect::Extend<(A,B)>>::extend (iter/traits/collect.rs:515:13)",
"0x55d276acfc90: core::iter::traits::iterator::Iterator::unzip (iter/traits/iterator.rs:3396:9)",
"0x55d276acfc90: rayon_core::registry::Registry::new (rayon-core-1.12.1/src/registry.rs:254:66)",
"0x55d276b1d21c: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276b1d21c: truck_meshalgo::analyzers::collision::EndPoint::from_seg (alloc/src/macros.rs:54:13)",
"0x55d276b1d21c: truck_meshalgo::analyzers::collision::sorted_endpoints::{{closure}} (src/analyzers/collision.rs:93:38)",
"0x55d276b1d21c: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d276b1d21c: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d276b1d21c: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d276b1d21c: <core::iter::adapters::fuse::Fuse<I> as core::iter::adapters::fuse::FuseImpl<I>>::next (iter/adapters/fuse.rs:359:9)",
"0x55d276b1d21c: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/fuse.rs:50:9)",
"0x55d276b1d21c: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next (iter/adapters/flatten.rs:610:29)",
"0x55d276b1d21c: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/flatten.rs:66:9)",
"0x55d276b1d21c: <core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::next::{{closure}} (iter/adapters/chain.rs:84:67)",
"0x55d276b1d21c: core::option::Option<T>::or_else (core/src/option.rs:1543:21)",
"0x55d276b1d21c: <core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::next (iter/adapters/chain.rs:84:9)",
"0x55d276a0836b: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d276a0836b: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d276a0836b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:43:9)",
"0x55d276a0836b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a0836b: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a0836b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a0836b: truck_meshalgo::analyzers::collision::sorted_endpoints (src/analyzers/collision.rs:95:10)",
"0x55d276a0836b: truck_meshalgo::analyzers::collision::collision (src/analyzers/collision.rs:220:29)",
"0x55d276a0836b: <truck_polymesh::PolygonMesh as truck_meshalgo::analyzers::collision::Collision>::extract_interference (src/analyzers/collision.rs:34:9)",
"0x55d276a0836b: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:157:34)",
"0x55d276a0836b: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d276a0836b: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d276a0836b: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a0836b: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d276a0836b: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a0836b: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d276a0836b: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d276a36806: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a36806: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a36806: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a36806: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new_unchecked (truck-topology/src/edge.rs:45:20)",
"0x55d276a36806: truck_topology::edge::<impl truck_topology::Edge<P,C>>::try_new (truck-topology/src/edge.rs:20:16)",
"0x55d276a36806: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new (truck-topology/src/edge.rs:33:9)",
"0x55d276a36806: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:561:33)",
"0x55d276a81223: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a81223: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a81223: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a81223: truck_topology::vertex::<impl truck_topology::Vertex<P>>::new (truck-topology/src/vertex.rs:17:20)",
"0x55d276a81223: truck_topology::vertex::<impl truck_topology::Vertex<P>>::mapped (truck-topology/src/vertex.rs:90:9)",
"0x55d276a81223: truck_modeling::closed_sweep::<impl truck_modeling::topo_traits::ClosedSweep<P,C,S> for truck_topology::Vertex<P>>::closed_sweep::{{closure}} (truck-modeling/src/closed_sweep.rs:24:34)",
"0x55d276a81223: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a81223: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d276a81223: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a81223: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a81223: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d276a81223: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d276a81223: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d276a81223: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a81223: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a81223: <alloc::collections::vec_deque::VecDeque<T> as alloc::collections::vec_deque::spec_from_iter::SpecFromIter<T,I>>::spec_from_iter (collections/vec_deque/spec_from_iter.rs:17:9)",
"0x55d276a81223: <alloc::collections::vec_deque::VecDeque<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (collections/vec_deque/mod.rs:2863:9)",
"0x55d276a81223: truck_topology::wire::<impl core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>> for truck_topology::Wire<P,C>>::from_iter (truck-topology/src/wire.rs:599:20)",
"0x55d276a81223: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a81223: truck_modeling::closed_sweep::<impl truck_modeling::topo_traits::ClosedSweep<P,C,S> for truck_topology::Vertex<P>>::closed_sweep (truck-modeling/src/closed_sweep.rs:29:14)",
"0x55d276a81223: truck_modeling::builder::whole_rsweep (truck-modeling/src/builder.rs:679:5)",
"0x55d276a81223: truck_modeling::builder::rsweep (truck-modeling/src/builder.rs:636:9)",
"0x55d276a81223: test_truck::main (test-truck/src/main.rs:53:18)",
"0x55d276a718db: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276a718db: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::resolve_conflict_region::{{closure}} (spade-2.12.1/src/cdt.rs:629:17)",
"0x55d276a718db: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::resolve_conflict_region (spade-2.12.1/src/cdt.rs:635:9)",
"0x55d276a718db: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::resolve_conflict_groups (spade-2.12.1/src/cdt.rs:1063:37)",
"0x55d276a718db: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::try_add_constraint_inner (spade-2.12.1/src/cdt.rs:823:13)",
"0x55d276a718db: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::add_constraint (spade-2.12.1/src/cdt.rs:550:9)",
"0x55d276a36adb: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:565:21)",
"0x55d276a04531: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a04531: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a04531: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a04531: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a04531: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d276a04531: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d276a04531: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d276a04531: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d276a04531: truck_modeling::builder::try_attach_plane::{{closure}}::{{closure}} (truck-modeling/src/builder.rs:407:21)",
"0x55d276a04531: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d276a04531: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d276a04531: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d276a04531: <core::iter::adapters::fuse::Fuse<I> as core::iter::adapters::fuse::FuseImpl<I>>::next (iter/adapters/fuse.rs:359:9)",
"0x55d276a04531: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/fuse.rs:50:9)",
"0x55d276a04531: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next (iter/adapters/flatten.rs:610:29)",
"0x55d276a04531: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/flatten.rs:66:9)",
"0x55d276a3dea8: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a3dea8: truck_shapeops::transversal::loops_store::LoopsStore<cgmath::point::Point3<f64>,C>::add_geom_vertex (alloc/src/macros.rs:54:13)",
"0x55d276a36009: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a36009: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a36009: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a36009: truck_topology::vertex::<impl truck_topology::Vertex<P>>::new (truck-topology/src/vertex.rs:17:20)",
"0x55d276a36009: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:503:31)",
"0x55d276a0ea34: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d276a0ea34: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d276a0ea34: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.14.5/src/rustc_entry.rs:46:18)",
"0x55d276a0ea34: std::collections::hash::map::HashMap<K,V,S>::entry (collections/hash/map.rs:856:19)",
"0x55d276a0ea34: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert (truck-base/src/entry_map.rs:59:14)",
"0x55d276a0ea34: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency::{{closure}} (truck-topology/src/shell.rs:234:17)",
"0x55d276a0ea34: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a0ea34: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a0ea34: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d276a0ea34: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d276a0ea34: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d276a0ea34: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d276a0ea34: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d276a0ea34: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d276a0ea34: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d276a0ea34: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:321:9)",
"0x55d276a0ea34: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d276a0ea34: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a0ea34: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a0ea34: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d276a0ea34: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d276a0ea34: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency (truck-topology/src/shell.rs:230:26)",
"0x55d276a0ea34: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::is_connected (truck-topology/src/shell.rs:405:29)",
"0x55d276a0ea34: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:22:24)",
"0x55d276a0ea34: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d276a0ea34: <truck_topology::Solid<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:300:9)",
"0x55d276a84542: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a84542: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a84542: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a84542: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a84542: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x55d276a84542: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d276a84542: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d276a84542: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d276a84542: <truck_topology::Solid<P,C,S> as core::clone::Clone>::clone (truck-topology/src/lib.rs:172:10)",
"0x55d276a84542: test_truck::main (test-truck/src/main.rs:83:37)",
"0x55d276a819f6: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a819f6: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a819f6: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a819f6: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new_unchecked (truck-topology/src/edge.rs:45:20)",
"0x55d276a819f6: truck_topology::edge::<impl truck_topology::Edge<P,C>>::debug_new (truck-topology/src/edge.rs:57:22)",
"0x55d276a819f6: truck_modeling::topo_impls::connect_vertices (truck-modeling/src/topo_impls.rs:17:5)",
"0x55d276a819f6: truck_modeling::closed_sweep::<impl truck_modeling::topo_traits::ClosedSweep<P,C,S> for truck_topology::Vertex<P>>::closed_sweep::{{closure}} (truck-modeling/src/closed_sweep.rs:25:28)",
"0x55d276a819f6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a819f6: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d276a819f6: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a819f6: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a819f6: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d276a819f6: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d276a819f6: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d276a819f6: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a819f6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a819f6: <alloc::collections::vec_deque::VecDeque<T> as alloc::collections::vec_deque::spec_from_iter::SpecFromIter<T,I>>::spec_from_iter (collections/vec_deque/spec_from_iter.rs:17:9)",
"0x55d276a819f6: <alloc::collections::vec_deque::VecDeque<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (collections/vec_deque/mod.rs:2863:9)",
"0x55d276a819f6: truck_topology::wire::<impl core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>> for truck_topology::Wire<P,C>>::from_iter (truck-topology/src/wire.rs:599:20)",
"0x55d276a819f6: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a819f6: truck_modeling::closed_sweep::<impl truck_modeling::topo_traits::ClosedSweep<P,C,S> for truck_topology::Vertex<P>>::closed_sweep (truck-modeling/src/closed_sweep.rs:29:14)",
"0x55d276a819f6: truck_modeling::builder::whole_rsweep (truck-modeling/src/builder.rs:679:5)",
"0x55d276a819f6: truck_modeling::builder::rsweep (truck-modeling/src/builder.rs:636:9)",
"0x55d276a819f6: test_truck::main (test-truck/src/main.rs:53:18)",
"0x55d276a4253f: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:355:13)",
"0x55d276a4253f: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:972:18)",
"0x55d276a4253f: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3093:18)",
"0x55d276a4253f: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d276a4253f: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d276a4253f: truck_topology::wire::<impl truck_topology::Wire<P,C>>::swap_edge_into_wire (truck-topology/src/wire.rs:365:18)",
"0x55d276acf946: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:355:13)",
"0x55d276acf946: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:972:18)",
"0x55d276acf946: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend_reserve (src/vec/mod.rs:3049:14)",
"0x55d276acf946: <(ExtendA,ExtendB) as core::iter::traits::collect::Extend<(A,B)>>::extend (iter/traits/collect.rs:516:13)",
"0x55d276acf946: core::iter::traits::iterator::Iterator::unzip (iter/traits/iterator.rs:3396:9)",
"0x55d276acf946: rayon_core::registry::Registry::new (rayon-core-1.12.1/src/registry.rs:241:53)",
"0x55d276a81ae0: truck_modeling::topo_impls::connect_vertices (truck-modeling/src/topo_impls.rs:17:29)",
"0x55d276a81ae0: truck_modeling::closed_sweep::<impl truck_modeling::topo_traits::ClosedSweep<P,C,S> for truck_topology::Vertex<P>>::closed_sweep (truck-modeling/src/closed_sweep.rs:30:24)",
"0x55d276a81ae0: truck_modeling::builder::whole_rsweep (truck-modeling/src/builder.rs:679:5)",
"0x55d276a81ae0: truck_modeling::builder::rsweep (truck-modeling/src/builder.rs:636:9)",
"0x55d276a81ae0: test_truck::main (test-truck/src/main.rs:53:18)",
"0x55d276ad0215: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276ad0215: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276ad0215: alloc::sync::Arc<T>::new (alloc/src/sync.rs:393:25)",
"0x55d276ad0215: rayon_core::registry::Registry::new (rayon-core-1.12.1/src/registry.rs:262:24)",
"0x55d276b5a40b: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276b5a40b: hashbrown::raw::alloc::inner::do_alloc (src/raw/alloc.rs:15:15)",
"0x55d276b5a40b: hashbrown::raw::RawTableInner::new_uninitialized (src/raw/mod.rs:1750:38)",
"0x55d276b5a40b: hashbrown::raw::RawTableInner::fallible_with_capacity (src/raw/mod.rs:1788:30)",
"0x55d276b5a40b: hashbrown::raw::RawTableInner::prepare_resize (src/raw/mod.rs:2864:13)",
"0x55d276b5a40b: hashbrown::raw::RawTableInner::resize_inner (src/raw/mod.rs:3060:34)",
"0x55d276b5a40b: hashbrown::raw::RawTableInner::reserve_rehash_inner (src/raw/mod.rs:2950:13)",
"0x55d276b5a40b: hashbrown::raw::RawTable<T,A>::reserve_rehash (src/raw/mod.rs:1231:13)",
"0x55d276b59937: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d276b59937: hashbrown::raw::RawTable<T,A>::find_or_find_insert_slot (src/raw/mod.rs:1413:9)",
"0x55d276b59937: hashbrown::map::HashMap<K,V,S,A>::insert (hashbrown-0.14.5/src/map.rs:1754:15)",
"0x55d276b5866a: hashbrown::set::HashSet<T,S,A>::insert (hashbrown-0.14.5/src/set.rs:1115:9)",
"0x55d276b5866a: std::collections::hash::set::HashSet<T,S>::insert (collections/hash/set.rs:890:19)",
"0x55d276b5866a: truck_shapeops::transversal::polyline_construction::Graph::add_half_edge (transversal/polyline_construction/mod.rs:74:17)",
"0x55d276a162c2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276a162c2: truck_geometry::nurbs::bspsurface::<impl truck_geometry::nurbs::BSplineSurface<P>>::homotopy (src/nurbs/bspsurface.rs:1595:13)",
"0x55d276a78d8c: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276a78d8c: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::face_adjacency::{{closure}}::{{closure}} (truck-topology/src/shell.rs:326:33)",
"0x55d276a78d8c: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a78d8c: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a78d8c: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276ad0c33: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276ad0c33: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276ad0c33: std::thread::Builder::spawn_unchecked_ (src/thread/mod.rs:561:20)",
"0x55d276ad0c33: std::thread::Builder::spawn_unchecked (src/thread/mod.rs:456:32)",
"0x55d276ad0c33: std::thread::Builder::spawn (src/thread/mod.rs:388:18)",
"0x55d276ad0c33: <rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn (rayon-core-1.12.1/src/registry.rs:98:11)",
"0x55d276ad0c33: rayon_core::registry::Registry::new (rayon-core-1.12.1/src/registry.rs:304:29)",
"0x55d276ab4e65: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276ab4e65: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276ab4e65: alloc::sync::Arc<T>::new (alloc/src/sync.rs:393:25)",
"0x55d276ab4e65: <crossbeam_epoch::collector::Collector as core::default::Default>::default (crossbeam-epoch-0.9.18/src/collector.rs:32:21)",
"0x55d276ab4e65: crossbeam_epoch::collector::Collector::new (crossbeam-epoch-0.9.18/src/collector.rs:40:9)",
"0x55d276ab4e65: core::ops::function::FnOnce::call_once (src/ops/function.rs:250:5)",
"0x55d276ab4e65: crossbeam_epoch::sync::once_lock::OnceLock<T>::initialize::{{closure}} (src/sync/once_lock.rs:67:25)",
"0x55d276ab4e65: std::sync::once::Once::call_once::{{closure}} (src/sync/once.rs:158:41)",
"0x55d276ab4e65: std::sys::sync::once::futex::Once::call (sync/once/futex.rs:124:21)",
"0x55d276a43a2c: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d276a43a2c: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d276a43a2c: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.14.5/src/rustc_entry.rs:46:18)",
"0x55d276a43a2c: std::collections::hash::map::HashMap<K,V,S>::entry (collections/hash/map.rs:856:19)",
"0x55d276a43a2c: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert (truck-base/src/entry_map.rs:59:14)",
"0x55d276a43a2c: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency::{{closure}} (truck-topology/src/shell.rs:234:17)",
"0x55d276a43a2c: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a43a2c: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a43a2c: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d276a43a2c: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d276a43a2c: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d276a43a2c: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d276a43a2c: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d276a43a2c: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d276a43a2c: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d276a43a2c: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:321:9)",
"0x55d276a43a2c: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d276a43a2c: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a43a2c: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a43a2c: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d276a43a2c: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d276a43a2c: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency (truck-topology/src/shell.rs:230:26)",
"0x55d276a43a2c: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::is_connected (truck-topology/src/shell.rs:405:29)",
"0x55d276a43358: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a43358: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a43358: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a43358: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a43358: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276a43358: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d276a43358: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a43358: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a43358: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a43358: truck_topology::face::<impl truck_topology::Face<P,C,S>>::boundary_iters (truck-topology/src/face.rs:211:14)",
"0x55d276a43358: truck_topology::face::<impl truck_topology::Face<P,C,S>>::edge_iter (truck-topology/src/face.rs:224:14)",
"0x55d276a43358: core::ops::function::FnMut::call_mut (src/ops/function.rs:166:5)",
"0x55d276a43358: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a43358: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a43358: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a43358: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d276a43358: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d276a43358: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d276a43358: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d276a43358: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d276a43358: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency (truck-topology/src/shell.rs:230:26)",
"0x55d276a43358: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::is_connected (truck-topology/src/shell.rs:405:29)",
"0x55d276a829a3: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a829a3: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a829a3: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a829a3: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a829a3: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x55d276a829a3: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d276a829a3: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d276a829a3: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:437:14)",
"0x55d276a829a3: alloc::slice::<impl alloc::borrow::ToOwned for [T]>::to_owned (alloc/src/slice.rs:844:14)",
"0x55d276a829a3: truck_modeling::builder::try_attach_plane (truck-modeling/src/builder.rs:421:28)",
"0x55d276a829a3: test_truck::main (test-truck/src/main.rs:59:16)",
"0x55d276a29dcb: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a29dcb: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a29dcb: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a29dcb: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a29dcb: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276a29dcb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d276a29dcb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a29dcb: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a29dcb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a29dcb: truck_topology::face::<impl truck_topology::Face<P,C,S>>::boundary_iters (truck-topology/src/face.rs:211:14)",
"0x55d276a29dcb: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (truck-modeling/src/sweep.rs:233:27)",
"0x55d276a29dcb: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d276ad0af4: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276ad0af4: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276ad0af4: alloc::sync::Arc<T>::new (alloc/src/sync.rs:393:25)",
"0x55d276ad0af4: std::thread::Builder::spawn_unchecked_ (src/thread/mod.rs:497:49)",
"0x55d276ad0af4: std::thread::Builder::spawn_unchecked (src/thread/mod.rs:456:32)",
"0x55d276ad0af4: std::thread::Builder::spawn (src/thread/mod.rs:388:18)",
"0x55d276ad0af4: <rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn (rayon-core-1.12.1/src/registry.rs:98:11)",
"0x55d276ad0af4: rayon_core::registry::Registry::new (rayon-core-1.12.1/src/registry.rs:304:29)",
"0x55d276acfcb8: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:355:13)",
"0x55d276acfcb8: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:972:18)",
"0x55d276acfcb8: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend_reserve (src/vec/mod.rs:3049:14)",
"0x55d276acfcb8: <(ExtendA,ExtendB) as core::iter::traits::collect::Extend<(A,B)>>::extend (iter/traits/collect.rs:516:13)",
"0x55d276acfcb8: core::iter::traits::iterator::Iterator::unzip (iter/traits/iterator.rs:3396:9)",
"0x55d276acfcb8: rayon_core::registry::Registry::new (rayon-core-1.12.1/src/registry.rs:254:66)",
"0x55d276a36541: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a36541: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a36541: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a36541: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new_unchecked (truck-topology/src/edge.rs:45:20)",
"0x55d276a36541: truck_topology::edge::<impl truck_topology::Edge<P,C>>::try_new (truck-topology/src/edge.rs:20:16)",
"0x55d276a36541: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new (truck-topology/src/edge.rs:33:9)",
"0x55d276a36541: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:560:33)",
"0x55d276a29eac: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a29eac: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a29eac: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a29eac: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a29eac: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276a29eac: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d276a29eac: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a29eac: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a29eac: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a29eac: truck_topology::face::<impl truck_topology::Face<P,C,S>>::boundary_iters (truck-topology/src/face.rs:211:14)",
"0x55d276a29eac: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (truck-modeling/src/sweep.rs:234:30)",
"0x55d276a29eac: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d276a7f44d: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a7f44d: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a7f44d: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a7f44d: truck_topology::vertex::<impl truck_topology::Vertex<P>>::new (truck-topology/src/vertex.rs:17:20)",
"0x55d276a7f44d: truck_topology::vertex::<impl truck_topology::Vertex<P>>::mapped (truck-topology/src/vertex.rs:90:9)",
"0x55d276a7f44d: truck_topology::edge::<impl truck_topology::Edge<P,C>>::mapped (truck-topology/src/edge.rs:377:18)",
"0x55d276a7f44d: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Edge<P,C>>::sweep (truck-modeling/src/sweep.rs:98:20)",
"0x55d276a7f44d: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d276a7f44d: test_truck::main (test-truck/src/main.rs:43:21)",
"0x55d276a7f358: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a7f358: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a7f358: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a7f358: truck_topology::vertex::<impl truck_topology::Vertex<P>>::new (truck-topology/src/vertex.rs:17:20)",
"0x55d276a7f358: truck_topology::vertex::<impl truck_topology::Vertex<P>>::mapped (truck-topology/src/vertex.rs:90:9)",
"0x55d276a7f358: truck_topology::edge::<impl truck_topology::Edge<P,C>>::mapped (truck-topology/src/edge.rs:376:18)",
"0x55d276a7f358: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Edge<P,C>>::sweep (truck-modeling/src/sweep.rs:98:20)",
"0x55d276a7f358: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d276a7f358: test_truck::main (test-truck/src/main.rs:43:21)",
"0x55d276a218f0: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a218f0: truck_geotrait::algo::surface::parameter_division (alloc/src/macros.rs:54:13)",
"0x55d276a218f0: truck_geometry::nurbs::nurbssurface::<impl truck_geotrait::traits::surface::ParameterDivision2D for truck_geometry::nurbs::NurbsSurface<V>>::parameter_division (src/nurbs/nurbssurface.rs:677:9)",
"0x55d276a218f0: <truck_modeling::geometry::Surface as truck_geotrait::traits::surface::ParameterDivision2D>::parameter_division (truck-modeling/src/geometry.rs:161:5)",
"0x55d276a218f0: <&S as truck_geotrait::traits::surface::ParameterDivision2D>::parameter_division (src/traits/surface.rs:155:9)",
"0x55d276a218f0: truck_meshalgo::tessellation::triangulation::insert_surface (src/tessellation/triangulation.rs:547:24)",
"0x55d276a218f0: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:527:5)",
"0x55d276a580ce: truck_topology::wire::<impl core::clone::Clone for truck_topology::Wire<P,C>>::clone (truck-topology/src/wire.rs:778:24)",
"0x55d276a580ce: <truck_shapeops::transversal::loops_store::Loops<P,C> as core::convert::From<&truck_topology::Face<P,C,S>>>::from::{{closure}} (transversal/loops_store/mod.rs:122:48)",
"0x55d276a580ce: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a580ce: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a580ce: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a580ce: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a580ce: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d276a580ce: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d276a580ce: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d276a580ce: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a580ce: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a580ce: <truck_shapeops::transversal::loops_store::Loops<P,C> as core::iter::traits::collect::FromIterator<truck_shapeops::transversal::loops_store::BoundaryWire<P,C>>>::from_iter (transversal/loops_store/mod.rs:113:14)",
"0x55d276a580ce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a580ce: <truck_shapeops::transversal::loops_store::Loops<P,C> as core::convert::From<&truck_topology::Face<P,C,S>>>::from (transversal/loops_store/mod.rs:123:14)",
"0x55d276a580ce: core::ops::function::FnMut::call_mut (src/ops/function.rs:166:5)",
"0x55d276a580ce: <truck_shapeops::transversal::loops_store::LoopsStore<P,C> as core::iter::traits::collect::FromIterator<&truck_topology::Face<P,C,S>>>::from_iter (transversal/loops_store/mod.rs:129:48)",
"0x55d276a843ed: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon::{{closure}} (src/tessellation/mod.rs:84:13)",
"0x55d276a843ed: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d276a843ed: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon (src/tessellation/mod.rs:83:9)",
"0x55d276a843ed: test_truck::main (test-truck/src/main.rs:77:17)",
"0x55d276a83e2d: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon::{{closure}} (src/tessellation/mod.rs:84:13)",
"0x55d276a83e2d: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d276a83e2d: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon (src/tessellation/mod.rs:83:9)",
"0x55d276a83e2d: test_truck::main (test-truck/src/main.rs:70:17)",
"0x55d276ad1b7f: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276ad1b7f: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276ad1b7f: <T as crossbeam_epoch::atomic::Pointable>::init (crossbeam-epoch-0.9.18/src/atomic.rs:200:23)",
"0x55d276ad1b7f: crossbeam_epoch::atomic::Owned<T>::init (crossbeam-epoch-0.9.18/src/atomic.rs:1147:35)",
"0x55d276ad1b7f: crossbeam_epoch::atomic::Atomic<T>::init (crossbeam-epoch-0.9.18/src/atomic.rs:330:20)",
"0x55d276ad1b7f: crossbeam_epoch::atomic::Atomic<T>::new (crossbeam-epoch-0.9.18/src/atomic.rs:314:9)",
"0x55d276ad1b7f: crossbeam_deque::deque::Worker<T>::new_fifo (crossbeam-deque-0.8.5/src/deque.rs:226:38)",
"0x55d276a78843: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d276a78843: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d276a78843: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.14.5/src/rustc_entry.rs:46:18)",
"0x55d276a78843: std::collections::hash::map::HashMap<K,V,S>::entry (collections/hash/map.rs:856:19)",
"0x55d276a78843: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert (truck-base/src/entry_map.rs:59:14)",
"0x55d276a78843: truck_topology::wire::<impl truck_topology::Wire<P,C>>::sub_mapped::{{closure}} (truck-topology/src/wire.rs:433:32)",
"0x55d276a78843: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a78843: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a78843: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a84671: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a84671: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a84671: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a84671: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a84671: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x55d276a84671: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d276a84671: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d276a84671: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d276a84671: truck_topology::shell::<impl core::clone::Clone for truck_topology::Shell<P,C,S>>::clone (truck-topology/src/shell.rs:833:24)",
"0x55d276a84671: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x55d276a84671: <truck_topology::Solid<P,C,S> as core::clone::Clone>::clone (truck-topology/src/lib.rs:172:10)",
"0x55d276a84671: test_truck::main (test-truck/src/main.rs:83:37)",
"0x55d276a8475a: truck_topology::wire::<impl core::clone::Clone for truck_topology::Wire<P,C>>::clone (truck-topology/src/wire.rs:778:24)",
"0x55d276a8475a: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x55d276a8475a: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d276a8475a: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d276a8475a: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d276a8475a: truck_topology::face::<impl core::clone::Clone for truck_topology::Face<P,C,S>>::clone (truck-topology/src/face.rs:1029:25)",
"0x55d276a8475a: truck_topology::shell::<impl core::clone::Clone for truck_topology::Shell<P,C,S>>::clone (truck-topology/src/shell.rs:833:24)",
"0x55d276a8475a: <truck_topology::Solid<P,C,S> as core::clone::Clone>::clone (truck-topology/src/lib.rs:172:10)",
"0x55d276a8475a: test_truck::main (test-truck/src/main.rs:83:37)",
"0x55d276a09444: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a09444: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a09444: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a09444: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a09444: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d276a09444: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d276a09444: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d276a09444: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d276a09444: <truck_polymesh::PolylineCurve<P> as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:100:10)",
"0x55d276a09444: truck_shapeops::transversal::intersection_curve::intersection_curves::{{closure}} (transversal/intersection_curve/mod.rs:165:26)",
"0x55d276a09444: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a09444: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d276a09444: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a09444: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a09444: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d276a09444: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d276a09444: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d276a09444: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:246:9)",
"0x55d276a09444: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a09444: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a09444: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:170:10)",
"0x55d276a09444: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d276a09444: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d276a09444: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a09444: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d276a09444: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a09444: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d276a09444: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d276acff25: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276acff25: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276acff25: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276acff25: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276acff25: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276acff25: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d276acff25: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:246:9)",
"0x55d276acff25: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276acff25: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276acff25: rayon_core::registry::Registry::new (rayon-core-1.12.1/src/registry.rs:263:69)",
"0x55d276a71361: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276a71361: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::get_conflict_resolutions (spade-2.12.1/src/cdt.rs:910:25)",
"0x55d276a71361: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::try_add_constraint_inner (spade-2.12.1/src/cdt.rs:817:13)",
"0x55d276a71361: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::add_constraint (spade-2.12.1/src/cdt.rs:550:9)",
"0x55d276a8154e: truck_modeling::topo_impls::connect_vertices (truck-modeling/src/topo_impls.rs:17:29)",
"0x55d276a8154e: truck_modeling::closed_sweep::<impl truck_modeling::topo_traits::ClosedSweep<P,C,S> for truck_topology::Vertex<P>>::closed_sweep::{{closure}} (truck-modeling/src/closed_sweep.rs:25:28)",
"0x55d276a8154e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a8154e: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d276a8154e: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a8154e: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a8154e: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d276a8154e: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d276a8154e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d276a8154e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a8154e: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a8154e: <alloc::collections::vec_deque::VecDeque<T> as alloc::collections::vec_deque::spec_from_iter::SpecFromIter<T,I>>::spec_from_iter (collections/vec_deque/spec_from_iter.rs:17:9)",
"0x55d276a8154e: <alloc::collections::vec_deque::VecDeque<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (collections/vec_deque/mod.rs:2863:9)",
"0x55d276a8154e: truck_topology::wire::<impl core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>> for truck_topology::Wire<P,C>>::from_iter (truck-topology/src/wire.rs:599:20)",
"0x55d276a8154e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a8154e: truck_modeling::closed_sweep::<impl truck_modeling::topo_traits::ClosedSweep<P,C,S> for truck_topology::Vertex<P>>::closed_sweep (truck-modeling/src/closed_sweep.rs:29:14)",
"0x55d276a8154e: truck_modeling::builder::whole_rsweep (truck-modeling/src/builder.rs:679:5)",
"0x55d276a8154e: truck_modeling::builder::rsweep (truck-modeling/src/builder.rs:636:9)",
"0x55d276a8154e: test_truck::main (test-truck/src/main.rs:53:18)",
"0x55d276aeb08c: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276aeb08c: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276aeb08c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276aeb08c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276aeb08c: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276aeb08c: std::sys::os_str::bytes::Buf::with_capacity (sys/os_str/bytes.rs:112:22)",
"0x55d276aeb08c: std::ffi::os_str::OsString::with_capacity (src/ffi/os_str.rs:291:27)",
"0x55d276aeb08c: std::path::PathBuf::with_capacity (std/src/path.rs:1204:26)",
"0x55d276aeb08c: std::sys::pal::unix::thread::cgroups::quota_v2 (pal/unix/thread.rs:547:24)",
"0x55d276aeb08c: std::sys::pal::unix::thread::cgroups::quota (pal/unix/thread.rs:537:31)",
"0x55d276aeb08c: std::sys::pal::unix::thread::available_parallelism (pal/unix/thread.rs:328:25)",
"0x55d276aeb08c: std::thread::available_parallelism (src/thread/mod.rs:1855:5)",
"0x55d276a2b279: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a2b279: truck_modeling::topo_impls::sub_connect_wires (alloc/src/macros.rs:54:13)",
"0x55d276a2b279: truck_modeling::topo_impls::connect_raw_wires::{{closure}} (truck-modeling/src/topo_impls.rs:118:9)",
"0x55d276a2b279: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d276a2b279: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d276a2b279: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d276a2b279: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d276a2b279: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d276a2b279: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d276a2b279: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (truck-modeling/src/sweep.rs:235:15)",
"0x55d276a2b279: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d276aeb0c1: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276aeb0c1: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276aeb0c1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276aeb0c1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276aeb0c1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276aeb0c1: alloc::string::String::with_capacity (alloc/src/string.rs:492:23)",
"0x55d276aeb0c1: std::sys::pal::unix::thread::cgroups::quota_v2 (pal/unix/thread.rs:548:28)",
"0x55d276aeb0c1: std::sys::pal::unix::thread::cgroups::quota (pal/unix/thread.rs:537:31)",
"0x55d276aeb0c1: std::sys::pal::unix::thread::available_parallelism (pal/unix/thread.rs:328:25)",
"0x55d276aeb0c1: std::thread::available_parallelism (src/thread/mod.rs:1855:5)",
"0x55d276a7ef86: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a7ef86: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a7ef86: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a7ef86: truck_topology::vertex::<impl truck_topology::Vertex<P>>::new (truck-topology/src/vertex.rs:17:20)",
"0x55d276a7ef86: truck_topology::vertex::<impl truck_topology::Vertex<P>>::mapped (truck-topology/src/vertex.rs:90:9)",
"0x55d276a7ef86: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Vertex<P>>::sweep (truck-modeling/src/sweep.rs:38:17)",
"0x55d276a7ef86: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d276a7ef86: test_truck::main (test-truck/src/main.rs:42:18)",
"0x55d276a7d86b: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a7d86b: hashbrown::raw::alloc::inner::do_alloc (src/raw/alloc.rs:15:15)",
"0x55d276a7d86b: hashbrown::raw::RawTableInner::new_uninitialized (src/raw/mod.rs:1750:38)",
"0x55d276a7d86b: hashbrown::raw::RawTableInner::fallible_with_capacity (src/raw/mod.rs:1788:30)",
"0x55d276a7d86b: hashbrown::raw::RawTableInner::prepare_resize (src/raw/mod.rs:2864:13)",
"0x55d276a7d86b: hashbrown::raw::RawTableInner::resize_inner (src/raw/mod.rs:3060:34)",
"0x55d276a7d86b: hashbrown::raw::RawTableInner::reserve_rehash_inner (src/raw/mod.rs:2950:13)",
"0x55d276a7d86b: hashbrown::raw::RawTable<T,A>::reserve_rehash (src/raw/mod.rs:1231:13)",
"0x55d276a82e23: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d276a82e23: hashbrown::raw::RawTable<T,A>::find_or_find_insert_slot (src/raw/mod.rs:1413:9)",
"0x55d276a82e23: hashbrown::map::HashMap<K,V,S,A>::insert (hashbrown-0.14.5/src/map.rs:1754:15)",
"0x55d276a82e23: hashbrown::set::HashSet<T,S,A>::insert (hashbrown-0.14.5/src/set.rs:1115:9)",
"0x55d276a82e23: std::collections::hash::set::HashSet<T,S>::insert (collections/hash/set.rs:890:19)",
"0x55d276a82e23: truck_topology::wire::<impl truck_topology::Wire<P,C>>::is_simple::{{closure}} (truck-topology/src/wire.rs:277:36)",
"0x55d276a82e23: core::iter::traits::iterator::Iterator::all::check::{{closure}} (iter/traits/iterator.rs:2758:20)",
"0x55d276a82e23: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a82e23: core::iter::traits::iterator::Iterator::all (iter/traits/iterator.rs:2761:9)",
"0x55d276a82e23: truck_topology::wire::<impl truck_topology::Wire<P,C>>::is_simple (truck-topology/src/wire.rs:277:14)",
"0x55d276a82e23: truck_topology::face::<impl truck_topology::Face<P,C,S>>::try_new (truck-topology/src/face.rs:35:24)",
"0x55d276a82e23: truck_modeling::builder::try_attach_plane (truck-modeling/src/builder.rs:421:8)",
"0x55d276a82e23: test_truck::main (test-truck/src/main.rs:59:16)",
"0x55d276a0ffa3: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d276a0ffa3: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d276a0ffa3: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.14.5/src/rustc_entry.rs:46:18)",
"0x55d276a0ffa3: std::collections::hash::map::HashMap<K,V,S>::entry (collections/hash/map.rs:856:19)",
"0x55d276a0ffa3: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert (truck-base/src/entry_map.rs:59:14)",
"0x55d276a0ffa3: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices::{{closure}} (truck-topology/src/shell.rs:534:21)",
"0x55d276a0ffa3: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d276a0ffa3: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a0ffa3: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276a0ffa3: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d276a0ffa3: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d276a0ffa3: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d276a0ffa3: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a0ffa3: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d276a0ffa3: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d276a0ffa3: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d276a0ffa3: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d276a0ffa3: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d276a0ffa3: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices (truck-topology/src/shell.rs:528:14)",
"0x55d276a0ffa3: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:26:24)",
"0x55d276a0ffa3: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d276a0ffa3: <truck_topology::Solid<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:300:9)",
"0x55d276a33ab0: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a33ab0: truck_shapeops::transversal::loops_store::Loops<P,C>::add_edge (alloc/src/macros.rs:54:13)",
"0x55d276a2bbd3: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d276a2bbd3: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d276a2bbd3: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.14.5/src/rustc_entry.rs:46:18)",
"0x55d276a2bbd3: std::collections::hash::map::HashMap<K,V,S>::entry (collections/hash/map.rs:856:19)",
"0x55d276a2bbd3: truck_modeling::topo_impls::sub_connect_wires (truck-modeling/src/topo_impls.rs:66:10)",
"0x55d276a2bbd3: truck_modeling::topo_impls::connect_raw_wires::{{closure}} (truck-modeling/src/topo_impls.rs:118:9)",
"0x55d276a2bbd3: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d276a2bbd3: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d276a2bbd3: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d276a2bbd3: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d276a2bbd3: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d276a2bbd3: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d276a2bbd3: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (truck-modeling/src/sweep.rs:235:15)",
"0x55d276a2bbd3: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d276a35e8b: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a35e8b: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a35e8b: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a35e8b: truck_topology::vertex::<impl truck_topology::Vertex<P>>::new (truck-topology/src/vertex.rs:17:20)",
"0x55d276a35e8b: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:502:31)",
"0x55d276a811a8: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a811a8: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a811a8: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a811a8: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a811a8: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276a811a8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d276a811a8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a811a8: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a811a8: <alloc::collections::vec_deque::VecDeque<T> as alloc::collections::vec_deque::spec_from_iter::SpecFromIter<T,I>>::spec_from_iter (collections/vec_deque/spec_from_iter.rs:17:9)",
"0x55d276a811a8: <alloc::collections::vec_deque::VecDeque<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (collections/vec_deque/mod.rs:2863:9)",
"0x55d276a811a8: truck_topology::wire::<impl core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>> for truck_topology::Wire<P,C>>::from_iter (truck-topology/src/wire.rs:599:20)",
"0x55d276a811a8: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a811a8: truck_modeling::closed_sweep::<impl truck_modeling::topo_traits::ClosedSweep<P,C,S> for truck_topology::Vertex<P>>::closed_sweep (truck-modeling/src/closed_sweep.rs:29:14)",
"0x55d276a811a8: truck_modeling::builder::whole_rsweep (truck-modeling/src/builder.rs:679:5)",
"0x55d276a811a8: truck_modeling::builder::rsweep (truck-modeling/src/builder.rs:636:9)",
"0x55d276a811a8: test_truck::main (test-truck/src/main.rs:53:18)",
"0x55d276a81796: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a81796: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a81796: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a81796: truck_topology::vertex::<impl truck_topology::Vertex<P>>::new (truck-topology/src/vertex.rs:17:20)",
"0x55d276a81796: truck_topology::vertex::<impl truck_topology::Vertex<P>>::mapped (truck-topology/src/vertex.rs:90:9)",
"0x55d276a81796: truck_modeling::closed_sweep::<impl truck_modeling::topo_traits::ClosedSweep<P,C,S> for truck_topology::Vertex<P>>::closed_sweep::{{closure}} (truck-modeling/src/closed_sweep.rs:24:34)",
"0x55d276a81796: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a81796: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d276a81796: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276a81796: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d276a81796: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d276a81796: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d276a81796: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d276a81796: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276a81796: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276a81796: <alloc::collections::vec_deque::VecDeque<T> as alloc::collections::vec_deque::spec_from_iter::SpecFromIter<T,I>>::spec_from_iter (collections/vec_deque/spec_from_iter.rs:17:9)",
"0x55d276a81796: <alloc::collections::vec_deque::VecDeque<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (collections/vec_deque/mod.rs:2863:9)",
"0x55d276a81796: truck_topology::wire::<impl core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>> for truck_topology::Wire<P,C>>::from_iter (truck-topology/src/wire.rs:599:20)",
"0x55d276a81796: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276a81796: truck_modeling::closed_sweep::<impl truck_modeling::topo_traits::ClosedSweep<P,C,S> for truck_topology::Vertex<P>>::closed_sweep (truck-modeling/src/closed_sweep.rs:29:14)",
"0x55d276a81796: truck_modeling::builder::whole_rsweep (truck-modeling/src/builder.rs:679:5)",
"0x55d276a81796: truck_modeling::builder::rsweep (truck-modeling/src/builder.rs:636:9)",
"0x55d276a81796: test_truck::main (test-truck/src/main.rs:53:18)",
"0x55d276a6d176: rayon_core::registry::in_worker (rayon-core-1.12.1/src/registry.rs:0:0)",
"0x55d276a6d176: rayon_core::join::join_context (src/join/mod.rs:132:5)",
"0x55d276a6d176: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:415:47)",
"0x55d276a84717: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a84717: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a84717: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a84717: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a84717: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x55d276a84717: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d276a84717: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d276a84717: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d276a84717: truck_topology::face::<impl core::clone::Clone for truck_topology::Face<P,C,S>>::clone (truck-topology/src/face.rs:1029:25)",
"0x55d276a84717: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x55d276a84717: truck_topology::shell::<impl core::clone::Clone for truck_topology::Shell<P,C,S>>::clone (truck-topology/src/shell.rs:833:24)",
"0x55d276a84717: <truck_topology::Solid<P,C,S> as core::clone::Clone>::clone (truck-topology/src/lib.rs:172:10)",
"0x55d276a84717: test_truck::main (test-truck/src/main.rs:83:37)",
"0x55d276acfa55: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276acfa55: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276acfa55: alloc::sync::Arc<T>::new (alloc/src/sync.rs:393:25)",
"0x55d276acfa55: crossbeam_deque::deque::Worker<T>::new_lifo (crossbeam-deque-0.8.5/src/deque.rs:251:21)",
"0x55d276acfa55: rayon_core::registry::Registry::new::{{closure}} (rayon-core-1.12.1/src/registry.rs:246:21)",
"0x55d276acfa55: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276acfa55: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d276acfa55: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276acfa55: <(ExtendA,ExtendB) as core::iter::traits::collect::Extend<(A,B)>>::extend (iter/traits/collect.rs:519:9)",
"0x55d276acfa55: core::iter::traits::iterator::Iterator::unzip (iter/traits/iterator.rs:3396:9)",
"0x55d276acfa55: rayon_core::registry::Registry::new (rayon-core-1.12.1/src/registry.rs:241:53)",
"0x55d276a2c026: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a2c026: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (alloc/src/macros.rs:54:13)",
"0x55d276a2c026: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d276ab4264: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276ab4264: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276ab4264: <T as crossbeam_epoch::atomic::Pointable>::init (crossbeam-epoch-0.9.18/src/atomic.rs:200:23)",
"0x55d276ab4264: crossbeam_epoch::atomic::Owned<T>::init (crossbeam-epoch-0.9.18/src/atomic.rs:1147:35)",
"0x55d276ab4264: crossbeam_epoch::atomic::Owned<T>::new (crossbeam-epoch-0.9.18/src/atomic.rs:1132:9)",
"0x55d276ab4264: crossbeam_epoch::internal::Local::register (crossbeam-epoch-0.9.18/src/internal.rs:320:25)",
"0x55d276ab4264: crossbeam_epoch::collector::Collector::register (crossbeam-epoch-0.9.18/src/collector.rs:45:9)",
"0x55d276accbd1: crossbeam_epoch::default::HANDLE::__init (crossbeam-epoch-0.9.18/src/default.rs:34:34)",
"0x55d276accbd1: core::ops::function::FnOnce::call_once (src/ops/function.rs:250:5)",
"0x55d276accbd1: core::option::Option<T>::unwrap_or_else (core/src/option.rs:1008:21)",
"0x55d276accbd1: std::sys::thread_local::native::lazy::Storage<T,D>::initialize (thread_local/native/lazy.rs:65:42)",
"0x55d276a2ad2d: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a2ad2d: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a2ad2d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a2ad2d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a2ad2d: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d276a2ad2d: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d276a2ad2d: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d276a2ad2d: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d276a2ad2d: <truck_geometry::nurbs::BSplineCurve<P> as core::clone::Clone>::clone (src/nurbs/mod.rs:50:5)",
"0x55d276a2ad2d: truck_modeling::builder::tsweep::{{closure}} (truck-modeling/src/builder.rs:520:21)",
"0x55d276a2ad2d: truck_modeling::topo_impls::create_surface (truck-modeling/src/topo_impls.rs:25:5)",
"0x55d276a2ad2d: truck_modeling::topo_impls::sub_connect_wires (truck-modeling/src/topo_impls.rs:74:19)",
"0x55d276a2ad2d: truck_modeling::topo_impls::connect_raw_wires::{{closure}} (truck-modeling/src/topo_impls.rs:118:9)",
"0x55d276a2ad2d: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d276a2ad2d: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d276a2ad2d: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d276a2ad2d: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d276a2ad2d: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d276a2ad2d: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d276a2ad2d: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (truck-modeling/src/sweep.rs:235:15)",
"0x55d276a2ad2d: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d276a2af4d: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276a2af4d: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276a2af4d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276a2af4d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276a2af4d: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d276a2af4d: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d276a2af4d: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d276a2af4d: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d276a2af4d: <truck_geometry::nurbs::BSplineCurve<P> as core::clone::Clone>::clone (src/nurbs/mod.rs:50:5)",
"0x55d276a2af4d: truck_modeling::builder::tsweep::{{closure}} (truck-modeling/src/builder.rs:521:21)",
"0x55d276a2af4d: truck_modeling::topo_impls::create_surface (truck-modeling/src/topo_impls.rs:25:5)",
"0x55d276a2af4d: truck_modeling::topo_impls::sub_connect_wires (truck-modeling/src/topo_impls.rs:74:19)",
"0x55d276a2af4d: truck_modeling::topo_impls::connect_raw_wires::{{closure}} (truck-modeling/src/topo_impls.rs:118:9)",
"0x55d276a2af4d: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d276a2af4d: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d276a2af4d: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d276a2af4d: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d276a2af4d: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d276a2af4d: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d276a2af4d: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (truck-modeling/src/sweep.rs:235:15)",
"0x55d276a2af4d: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d276aeaf28: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276aeaf28: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276aeaf28: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276aeaf28: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276aeaf28: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d276aeaf28: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d276aeaf28: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d276aeaf28: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:437:14)",
"0x55d276aeaf28: alloc::slice::<impl alloc::borrow::ToOwned for [T]>::to_owned (alloc/src/slice.rs:844:14)",
"0x55d276aeaf28: std::sys::pal::unix::thread::cgroups::quota::{{closure}} (pal/unix/thread.rs:531:37)",
"0x55d276aeaf28: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d276aeaf28: std::sys::pal::unix::thread::cgroups::quota (pal/unix/thread.rs:510:17)",
"0x55d276aeaf28: std::sys::pal::unix::thread::available_parallelism (pal/unix/thread.rs:328:25)",
"0x55d276aeaf28: std::thread::available_parallelism (src/thread/mod.rs:1855:5)",
"0x55d276a7fd6a: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276a7fd6a: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276a7fd6a: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d276a7fd6a: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new_unchecked (truck-topology/src/edge.rs:45:20)",
"0x55d276a7fd6a: truck_topology::edge::<impl truck_topology::Edge<P,C>>::debug_new (truck-topology/src/edge.rs:57:22)",
"0x55d276a7fd6a: truck_modeling::topo_impls::connect_vertices (truck-modeling/src/topo_impls.rs:17:5)",
"0x55d276a7fd6a: truck_modeling::topo_impls::connect_edges (truck-modeling/src/topo_impls.rs:41:17)",
"0x55d276a7fd6a: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Edge<P,C>>::sweep (truck-modeling/src/sweep.rs:99:9)",
"0x55d276a7fd6a: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d276a7fd6a: test_truck::main (test-truck/src/main.rs:43:21)",
"0x55d276acf9d9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276acf9d9: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276acf9d9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276acf9d9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276acf9d9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d276acf9d9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d276acf9d9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d276acf9d9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d276acf9d9: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d276acf9d9: <alloc::boxed::Box<[I]> as core::iter::traits::collect::FromIterator<I>>::from_iter (alloc/src/boxed.rs:2121:9)",
"0x55d276acf9d9: crossbeam_deque::deque::Buffer<T>::alloc (crossbeam-deque-0.8.5/src/deque.rs:44:18)",
"0x55d276acf9d9: crossbeam_deque::deque::Worker<T>::new_lifo (crossbeam-deque-0.8.5/src/deque.rs:249:22)",
"0x55d276acf9d9: rayon_core::registry::Registry::new::{{closure}} (rayon-core-1.12.1/src/registry.rs:246:21)",
"0x55d276acf9d9: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276acf9d9: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d276acf9d9: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d276acf9d9: <(ExtendA,ExtendB) as core::iter::traits::collect::Extend<(A,B)>>::extend (iter/traits/collect.rs:519:9)",
"0x55d276acf9d9: core::iter::traits::iterator::Iterator::unzip (iter/traits/iterator.rs:3396:9)",
"0x55d276acf9d9: rayon_core::registry::Registry::new (rayon-core-1.12.1/src/registry.rs:241:53)",
"0x55d276ae8253: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276ae8253: alloc::sync::Arc<T>::new_uninit::{{closure}} (alloc/src/sync.rs:536:33)",
"0x55d276ae8253: alloc::sync::Arc<T>::allocate_for_layout (alloc/src/sync.rs:1889:19)",
"0x55d276ae8253: alloc::sync::Arc<T>::new_uninit (alloc/src/sync.rs:534:27)",
"0x55d276ae8253: std::thread::Thread::new_inner (src/thread/mod.rs:1344:27)",
"0x55d276ad06fc: std::thread::Thread::new_unnamed (src/thread/mod.rs:1327:18)",
"0x55d276ad06fc: core::ops::function::FnOnce::call_once (src/ops/function.rs:250:5)",
"0x55d276ad06fc: core::option::Option<T>::map_or_else (core/src/option.rs:1209:21)",
"0x55d276ad06fc: std::thread::Builder::spawn_unchecked_ (src/thread/mod.rs:490:25)",
"0x55d276ad06fc: std::thread::Builder::spawn_unchecked (src/thread/mod.rs:456:32)",
"0x55d276ad06fc: std::thread::Builder::spawn (src/thread/mod.rs:388:18)",
"0x55d276ad06fc: <rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn (rayon-core-1.12.1/src/registry.rs:98:11)",
"0x55d276ad06fc: rayon_core::registry::Registry::new (rayon-core-1.12.1/src/registry.rs:304:29)",
"0x55d276b2da99: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d276b2da99: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d276b2da99: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d276b2da99: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d276b2da99: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d276b2da99: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d276b2da99: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d276b2da99: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d276b2da99: <truck_geometry::nurbs::BSplineCurve<P> as core::clone::Clone>::clone (src/nurbs/mod.rs:50:5)",
"0x55d276b2da99: <truck_geometry::nurbs::NurbsCurve<V> as core::clone::Clone>::clone (src/nurbs/mod.rs:119:26)",
"0x55d276b2da99: truck_geotrait::traits::Transformed::transformed (src/traits/mod.rs:62:23)",
"0x55d276b2da99: <truck_modeling::geometry::Curve as truck_geotrait::traits::Transformed<cgmath::matrix::Matrix4<f64>>>::transformed (truck-modeling/src/geometry.rs:75:57)",
"0x55d276a7848a: truck_modeling::builder::tsweep::{{closure}} (truck-modeling/src/builder.rs:508:23)",
"0x55d276a7848a: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut (src/ops/function.rs:272:13)",
"0x55d276a7848a: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d276a7848a: truck_topology::wire::edge_entry_map_closure::{{closure}} (truck-topology/src/wire.rs:580:21)",
"0x55d276a7848a: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert::{{closure}} (truck-base/src/entry_map.rs:60:32)",
"0x55d276a7848a: std::collections::hash::map::Entry<K,V>::or_insert_with (collections/hash/map.rs:2666:43)",
"0x55d276a7848a: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert (truck-base/src/entry_map.rs:58:9)",
"0x55d276a7848a: truck_topology::wire::<impl truck_topology::Wire<P,C>>::sub_mapped::{{closure}} (truck-topology/src/wire.rs:433:32)",
"0x55d276a7848a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d276a7848a: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d276acd7cf: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276acd7cf: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276acd7cf: <crossbeam_deque::deque::Injector<T> as core::default::Default>::default (crossbeam-deque-0.8.5/src/deque.rs:1316:35)",
"0x55d276acd7cf: crossbeam_deque::deque::Injector<T>::new (crossbeam-deque-0.8.5/src/deque.rs:1342:9)",
"0x55d276acd7cf: rayon_core::job::JobFifo::new (rayon-core-1.12.1/src/job.rs:245:20)",
"0x55d276acd7cf: <rayon_core::registry::WorkerThread as core::convert::From<rayon_core::registry::ThreadBuilder>>::from (rayon-core-1.12.1/src/registry.rs:673:19)",
"0x55d276ace81b: rayon_core::registry::main_loop (rayon-core-1.12.1/src/registry.rs:905:26)",
"0x55d276ace81b: rayon_core::registry::ThreadBuilder::run (rayon-core-1.12.1/src/registry.rs:53:18)",
"0x55d276ace81b: <rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn::{{closure}} (rayon-core-1.12.1/src/registry.rs:98:20)",
"0x55d276ace81b: std::sys::backtrace::__rust_begin_short_backtrace (src/sys/backtrace.rs:155:18)",
"0x55d276ad1bcf: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d276ad1bcf: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d276ad1bcf: alloc::sync::Arc<T>::new (alloc/src/sync.rs:393:25)",
"0x55d276ad1bcf: crossbeam_deque::deque::Worker<T>::new_fifo (crossbeam-deque-0.8.5/src/deque.rs:223:21)",
"0x55d276a83706: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d276a83706: truck_topology::wire::<impl truck_topology::Wire<P,C>>::disjoint_wires::{{closure}}::{{closure}} (truck-topology/src/wire.rs:303:17)",
"0x55d276a83706: core::iter::traits::iterator::Iterator::all::check::{{closure}} (iter/traits/iterator.rs:2758:20)",
"0x55d276a83706: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d276a83706: core::iter::traits::iterator::Iterator::all (iter/traits/iterator.rs:2761:9)",
"0x55d276a83706: truck_topology::wire::<impl truck_topology::Wire<P,C>>::disjoint_wires::{{closure}} (truck-topology/src/wire.rs:302:42)",
"0x55d276a83706: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::all (slice/iter/macros.rs:268:25)",
"0x55d276a83706: truck_topology::wire::<impl truck_topology::Wire<P,C>>::disjoint_wires (truck-topology/src/wire.rs:300:9)",
"0x55d276a83706: truck_topology::face::<impl truck_topology::Face<P,C,S>>::try_new (truck-topology/src/face.rs:39:13)",
"0x55d276a83706: truck_modeling::builder::try_attach_plane (truck-modeling/src/builder.rs:421:8)",
"0x55d276a83706: test_truck::main (test-truck/src/main.rs:59:16)",
"0x55d276acf91e: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:355:13)",
"0x55d276acf91e: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:972:18)",
"0x55d276acf91e: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend_reserve (src/vec/mod.rs:3049:14)",
"0x55d276acf91e: <(ExtendA,ExtendB) as core::iter::traits::collect::Extend<(A,B)>>::extend (iter/traits/collect.rs:515:13)",
"0x55d276acf91e: core::iter::traits::iterator::Iterator::unzip (iter/traits/iterator.rs:3396:9)",
"0x55d276acf91e: rayon_core::registry::Registry::new (rayon-core-1.12.1/src/registry.rs:241:53)",
"0x55d276a2ab62: truck_topology::edge::<impl truck_topology::Edge<P,C>>::curve (truck-topology/src/edge.rs:255:9)",
"0x55d276a2ab62: truck_modeling::topo_impls::create_surface (truck-modeling/src/topo_impls.rs:25:21)",
"0x55d276a2ab62: truck_modeling::topo_impls::sub_connect_wires (truck-modeling/src/topo_impls.rs:74:19)",
"0x55d276a2ab62: truck_modeling::topo_impls::connect_raw_wires::{{closure}} (truck-modeling/src/topo_impls.rs:118:9)",
"0x55d276a2ab62: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d276a2ab62: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d276a2ab62: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d276a2ab62: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d276a2ab62: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d276a2ab62: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d276a2ab62: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (truck-modeling/src/sweep.rs:235:15)",
"0x55d276a2ab62: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d276a837c6: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d276a837c6: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d276a837c6: <hashbrown::map::HashMap<K,V,S,A> as core::iter::traits::collect::Extend<(K,V)>>::extend (hashbrown-0.14.5/src/map.rs:6510:14)",
"0x55d276a837c6: <hashbrown::set::HashSet<T,S,A> as core::iter::traits::collect::Extend<T>>::extend (hashbrown-0.14.5/src/set.rs:1355:9)",
"0x55d276a837c6: <std::collections::hash::set::HashSet<T,S> as core::iter::traits::collect::Extend<T>>::extend (collections/hash/set.rs:1077:9)",
"0x55d276a837c6: truck_topology::wire::<impl truck_topology::Wire<P,C>>::disjoint_wires::{{closure}} (truck-topology/src/wire.rs:306:17)",
"0x55d276a837c6: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::all (slice/iter/macros.rs:268:25)",
"0x55d276a837c6: truck_topology::wire::<impl truck_topology::Wire<P,C>>::disjoint_wires (truck-topology/src/wire.rs:300:9)",
"0x55d276a837c6: truck_topology::face::<impl truck_topology::Face<P,C,S>>::try_new (truck-topology/src/face.rs:39:13)",
"0x55d276a837c6: truck_modeling::builder::try_attach_plane (truck-modeling/src/builder.rs:421:8)",
"0x55d276a837c6: test_truck::main (test-truck/src/main.rs:59:16)"
]
}