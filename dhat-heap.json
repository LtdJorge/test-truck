{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "target/release/test-truck",
"pid": 567310,
"tg": 487822,
"te": 639698,
"pps": [
{
"tb": 144,
"tbk": 1,
"tl": 2719,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
16,
17,
18,
19,
20,
21,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 384,
"tbk": 6,
"tl": 824996,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
12,
13,
14,
15,
75,
76,
77,
78,
79,
80,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 120,
"tbk": 1,
"tl": 58688,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
100,
101,
102,
103,
104,
105,
106,
107,
108,
109,
110,
111,
112,
113,
114
]
},
{
"tb": 1152,
"tbk": 18,
"tl": 2985689,
"mb": 1152,
"mbk": 18,
"gb": 768,
"gbk": 12,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
12,
13,
14,
15,
75,
76,
77,
78,
79,
80,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 256,
"tbk": 6,
"tl": 4086,
"mb": 256,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
123,
124,
125,
113,
114
]
},
{
"tb": 320,
"tbk": 4,
"tl": 9,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
126,
127,
128,
129,
61,
62
]
},
{
"tb": 640,
"tbk": 14,
"tl": 80,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
151,
152,
153,
154,
155
]
},
{
"tb": 40,
"tbk": 1,
"tl": 756,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
158,
159,
160,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
170,
171,
172,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
197,
198,
199,
200,
201,
202,
203,
204,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 600,
"tbk": 3,
"tl": 1904316,
"mb": 600,
"mbk": 3,
"gb": 600,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
223,
224,
225,
226,
227,
228,
229,
230,
231,
232,
233,
234,
235,
236,
237,
238,
239,
240,
241,
242,
243,
244,
245,
246,
247,
248,
249,
250,
251,
252,
237,
238,
239,
240,
241,
242,
243,
247,
253,
254,
255,
256
]
},
{
"tb": 960,
"tbk": 5,
"tl": 128,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
257,
258,
259,
260,
261,
262,
263,
264,
265,
266,
267,
268,
269,
270,
271,
272,
273,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
113,
114
]
},
{
"tb": 64,
"tbk": 2,
"tl": 462,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
284,
285,
286,
287,
288,
289,
290,
291,
292,
293,
294,
295,
296,
297,
298,
299,
300,
290,
291,
292,
293,
294,
295,
296,
297,
301,
302,
303,
304,
305,
306,
307,
308,
309,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 48,
"tbk": 3,
"tl": 9,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
113,
114
]
},
{
"tb": 640,
"tbk": 6,
"tl": 158389,
"mb": 640,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
328,
329,
330,
331,
332,
333,
334,
335,
336,
337,
338,
339,
340,
341,
342,
343,
344,
345,
335,
336,
337,
346,
347,
348,
349,
350,
351,
322,
113,
114
]
},
{
"tb": 360,
"tbk": 1,
"tl": 47597,
"mb": 360,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
354,
355,
356,
357,
358,
359,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
379
]
},
{
"tb": 64,
"tbk": 4,
"tl": 12,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61,
62
]
},
{
"tb": 16,
"tbk": 2,
"tl": 5,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
380,
381,
382,
383,
384,
385,
61,
62
]
},
{
"tb": 1544,
"tbk": 33,
"tl": 14,
"mb": 216,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
312,
313,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 288,
"tbk": 12,
"tl": 19,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
408,
408,
408,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 200,
"tbk": 5,
"tl": 12,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
422,
423,
424,
425,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
437,
438,
439,
440,
441,
442,
430,
443,
444,
445,
446,
447
]
},
{
"tb": 192,
"tbk": 8,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
61
]
},
{
"tb": 5120,
"tbk": 5,
"tl": 108,
"mb": 2048,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
468,
469,
470,
471,
472,
473,
474,
475,
476,
477,
478,
479,
480,
481,
482,
483,
484,
485,
486,
487,
488,
489,
490,
490,
491,
492,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 672,
"tbk": 18,
"tl": 47,
"mb": 128,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
407,
408,
408,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 2636,
"tbk": 8,
"tl": 16940,
"mb": 824,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
503,
504,
505,
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
517,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
99
]
},
{
"tb": 128,
"tbk": 1,
"tl": 41,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
518,
519,
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
533,
534,
535,
536,
537,
538,
539,
540,
541,
542,
543,
544,
545,
546,
547,
548,
548,
549,
550,
551,
552,
553,
554,
555,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
556
]
},
{
"tb": 96,
"tbk": 4,
"tl": 0,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
113,
114
]
},
{
"tb": 480,
"tbk": 2,
"tl": 264,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
557,
558,
559,
560,
125,
61,
62
]
},
{
"tb": 896,
"tbk": 6,
"tl": 90826,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
561,
562,
563,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 488,
"tbk": 5,
"tl": 2,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
564,
565,
566,
567,
568,
569,
570,
155
]
},
{
"tb": 160,
"tbk": 1,
"tl": 70,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
571,
572,
573,
574,
575,
576,
577,
578,
579,
580,
581,
582,
583,
584,
585,
586,
577,
578,
580,
587,
384,
129,
113,
114
]
},
{
"tb": 1328,
"tbk": 1,
"tl": 15,
"mb": 1328,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
596,
597,
598,
599,
600,
601,
602,
603,
604,
605,
113,
114
]
},
{
"tb": 32,
"tbk": 2,
"tl": 6,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
314,
315,
316,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
61,
99
]
},
{
"tb": 160,
"tbk": 4,
"tl": 17897,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
606,
607,
608,
609,
610,
611,
612,
613,
614,
615,
616,
616,
617,
618,
619,
620,
621,
622,
623,
624,
625,
626,
627,
628,
629,
630,
631,
632,
633,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 144,
"tbk": 2,
"tl": 0,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
113,
114
]
},
{
"tb": 320,
"tbk": 2,
"tl": 879,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
354,
355,
637,
638,
639,
640,
641,
642,
643,
644,
645,
646,
647,
648,
649,
650,
651,
652,
653,
654,
655,
656,
657,
658,
659,
660,
661,
662,
663,
664,
665,
666,
667,
668,
669,
670,
671,
672,
673,
674,
675,
676,
677,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 160,
"tbk": 4,
"tl": 8,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
678,
679,
680,
681,
682,
683,
684,
685,
686,
687,
688,
689,
690,
691,
692,
693,
694,
695,
696,
697,
698,
699,
700,
701,
686,
702,
128,
129,
61,
99
]
},
{
"tb": 160,
"tbk": 1,
"tl": 132,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
354,
355,
637,
638,
639,
640,
641,
642,
643,
644,
645,
703,
704,
705,
706,
707,
708,
709,
710,
711,
712,
205,
206,
207,
713,
714,
654,
655,
656,
657,
658,
659,
660,
661,
662,
663,
664,
665,
666,
667,
715,
716,
717,
718,
719,
720,
721,
722
]
},
{
"tb": 864,
"tbk": 6,
"tl": 206860,
"mb": 432,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
723,
724,
725,
726,
727,
728,
729,
730,
731,
732,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 192,
"tbk": 2,
"tl": 0,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
733,
734,
735,
736,
737,
738,
739,
740,
741,
742,
743,
744,
741,
745,
746,
747,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
61,
62
]
},
{
"tb": 672,
"tbk": 1,
"tl": 1902,
"mb": 672,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
748,
749,
750,
751,
752,
753,
754,
755,
756,
605,
113,
114
]
},
{
"tb": 320,
"tbk": 8,
"tl": 3007,
"mb": 120,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
757,
758,
759,
760,
761,
762,
763,
764,
765,
703,
704,
705,
706,
707,
708,
709,
710,
711,
712,
205,
206,
207,
713,
714,
654,
655,
656,
646,
647,
648,
649,
650,
651,
652,
653,
654,
655,
656,
657,
658,
659,
660,
661,
662,
663,
664,
665,
666,
667
]
},
{
"tb": 180,
"tbk": 1,
"tl": 153,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
766,
767,
768,
769,
770,
771,
772,
773,
774,
775,
776,
777,
778,
779,
780,
780,
781,
618,
619,
620,
621,
622,
623,
624,
625,
626,
627,
628,
629,
630,
631,
632,
633,
782,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 40,
"tbk": 1,
"tl": 634856,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
783,
784,
785,
786,
787,
788
]
},
{
"tb": 144,
"tbk": 2,
"tl": 0,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
313,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 240,
"tbk": 1,
"tl": 62754,
"mb": 240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
354,
355,
356,
357,
358,
359,
360,
361,
362,
363,
364,
365,
366,
789,
113,
114
]
},
{
"tb": 78552,
"tbk": 1,
"tl": 567889,
"mb": 78552,
"mbk": 1,
"gb": 78552,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
791,
792,
793,
794,
795,
796,
797,
798,
799,
800,
801,
802
]
},
{
"tb": 14272,
"tbk": 30,
"tl": 14689,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
803,
804,
805,
806,
807,
808,
809,
810,
811,
812,
813,
814,
811,
815,
816,
817,
818,
819,
820,
821,
822,
823,
824,
825,
826,
827,
828,
829,
826,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 576,
"tbk": 8,
"tl": 1,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
61
]
},
{
"tb": 720,
"tbk": 10,
"tl": 5,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
313,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 384,
"tbk": 3,
"tl": 1555,
"mb": 384,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
865,
866,
867,
61,
99
]
},
{
"tb": 200,
"tbk": 5,
"tl": 16,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
868,
869,
870,
871,
872,
873,
874,
875,
876,
877,
878,
879,
880,
881,
882,
883,
884,
885,
886,
887,
888,
889,
890,
891,
892,
893,
62
]
},
{
"tb": 532800,
"tbk": 4,
"tl": 466,
"mb": 245400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
894,
895,
896,
897,
898,
899,
900,
901,
902,
903,
904,
905,
906,
907,
908,
909,
910,
911,
912
]
},
{
"tb": 696,
"tbk": 24,
"tl": 11,
"mb": 88,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
313,
312,
313,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 40,
"tbk": 1,
"tl": 164,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
606,
607,
608,
609,
610,
611,
612,
613,
614,
615,
616,
616,
617,
913,
914,
915,
916,
917,
918,
919,
920,
921,
922,
923,
924,
925,
926,
927,
928,
929,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 524,
"tbk": 3,
"tl": 74,
"mb": 440,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
944,
945,
945,
946,
947,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
967,
385,
61,
99
]
},
{
"tb": 256,
"tbk": 4,
"tl": 12,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
968,
969,
970,
971,
972,
973,
974,
975,
976,
977,
975,
978,
979,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 1296,
"tbk": 9,
"tl": 20728,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
981,
982,
983,
984,
985,
986,
987,
988,
984,
985,
986,
989,
283,
113,
114
]
},
{
"tb": 2304,
"tbk": 16,
"tl": 1048,
"mb": 2048,
"mbk": 14,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
990,
991,
992,
993,
994,
995,
994,
996,
997,
998,
999,
1000,
1001,
1002,
1003,
1004,
1005
]
},
{
"tb": 480,
"tbk": 1,
"tl": 278,
"mb": 480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
354,
355,
1006,
1007,
1008,
1009,
1010,
1011,
1012,
1013,
1014,
1015,
1016,
789,
61,
99
]
},
{
"tb": 128,
"tbk": 2,
"tl": 551,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
123,
124,
1017,
129,
113,
114
]
},
{
"tb": 80,
"tbk": 2,
"tl": 6,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
678,
679,
680,
681,
682,
683,
684,
685,
686,
687,
688,
689,
690,
691,
692,
693,
694,
695,
696,
697,
698,
699,
700,
701,
686,
702,
967,
129,
61,
99
]
},
{
"tb": 15808,
"tbk": 178,
"tl": 369802,
"mb": 1536,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1018,
1019,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 160,
"tbk": 4,
"tl": 19003,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
606,
607,
608,
609,
610,
611,
612,
613,
614,
615,
616,
616,
617,
618,
619,
620,
621,
622,
623,
624,
625,
626,
627,
628,
629,
630,
631,
632,
633,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 736,
"tbk": 2,
"tl": 6241,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1047,
1048,
1049,
1050,
1051,
1052,
268,
269,
270,
271,
272,
273,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
61,
62
]
},
{
"tb": 192,
"tbk": 2,
"tl": 22141,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
1053,
1054,
1055,
1056,
1057,
1058,
283,
61,
62
]
},
{
"tb": 17856,
"tbk": 60,
"tl": 14,
"mb": 1920,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
313,
313,
312,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 576,
"tbk": 24,
"tl": 8,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
313,
312,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 40,
"tbk": 1,
"tl": 96,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
158,
159,
160,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
170,
171,
172,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
1059,
1060,
298,
299,
300,
1061,
1062,
1063,
1064,
1065,
1066,
1067,
1068,
1069,
1070,
205,
206,
207
]
},
{
"tb": 1976,
"tbk": 118,
"tl": 149,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1071,
1072,
1073,
1074,
1075,
1076,
1077,
1078,
1079,
1080,
1081,
1082,
1083,
1084,
1085,
1086,
1087,
1088,
1089,
1090,
1091,
1092,
1093,
1094,
1095,
1096,
1097,
1098,
1099,
1100,
1101,
1102,
1103,
1104,
1105,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 1752,
"tbk": 16,
"tl": 2,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1106,
1107,
1108,
1109,
1110,
1111,
1112,
1113,
1114,
1115,
1116,
1117,
1118,
1119,
1120,
1118,
1121,
1122,
1123,
1124,
1125,
1126,
1127,
1128,
1129,
1123,
1124,
1130,
1131,
1132,
1133,
1134,
1135,
1136,
1137,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 1232,
"tbk": 33,
"tl": 16,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
312,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 1552,
"tbk": 20,
"tl": 6,
"mb": 232,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
313,
312,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 288,
"tbk": 1,
"tl": 126044,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1138,
1139,
1140,
1141,
1142,
1143,
1144,
1145,
1146,
1147,
1148,
1149,
16,
17,
18,
19,
20,
21,
21,
22,
1150,
1151,
1152,
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1164,
1165,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 372,
"tbk": 2,
"tl": 21966,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
1166,
1167,
1168,
1169,
1170,
1171,
1172,
1173,
1174,
1175,
1176,
1177,
1178,
1179,
322,
61,
99
]
},
{
"tb": 1152,
"tbk": 3,
"tl": 1904114,
"mb": 1152,
"mbk": 3,
"gb": 1152,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1191,
1192,
1193,
1194,
256
]
},
{
"tb": 180,
"tbk": 1,
"tl": 137,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
766,
767,
768,
769,
770,
771,
772,
773,
774,
775,
776,
777,
778,
779,
780,
780,
781,
618,
619,
620,
621,
622,
623,
624,
625,
626,
627,
628,
629,
630,
631,
632,
633,
782,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 1792,
"tbk": 22,
"tl": 22,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1195,
1196,
1197,
1198,
1199,
1200,
1201,
1202,
1203,
1204,
1205,
1206,
1203,
1207,
1208,
1209,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
113,
114
]
},
{
"tb": 840,
"tbk": 1,
"tl": 36036,
"mb": 840,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
354,
355,
1006,
1007,
1008,
1009,
1010,
1011,
1012,
1013,
1014,
1015,
1016,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
379
]
},
{
"tb": 96,
"tbk": 1,
"tl": 54,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1210,
1211,
1212,
1213,
1214,
384,
385,
113,
114
]
},
{
"tb": 288,
"tbk": 9,
"tl": 341,
"mb": 288,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
1217,
1218,
1219,
1220,
1220,
1221,
1222,
1223,
1224,
1225,
1226,
1227,
1228,
1229,
1230,
1231,
1232,
1233,
1234,
1235,
62
]
},
{
"tb": 32,
"tbk": 1,
"tl": 20,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1236,
1237,
1238,
463,
464,
465,
466,
467,
468,
469,
470,
471,
472,
473,
474,
475,
476,
477,
478,
479,
480,
481,
482,
483,
484,
485,
486,
487,
488,
489,
490,
490,
491,
492,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
1239,
1240
]
},
{
"tb": 256,
"tbk": 4,
"tl": 48,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1241,
1242,
1243,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 368,
"tbk": 1,
"tl": 2722,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1244,
1245,
1246,
1247,
1248,
1249,
16,
17,
18,
19,
20,
21,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 120,
"tbk": 3,
"tl": 6,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
678,
679,
680,
681,
682,
683,
684,
685,
686,
687,
688,
689,
690,
691,
692,
693,
694,
695,
696,
697,
698,
699,
700,
701,
686,
702,
1250,
385,
61,
62
]
},
{
"tb": 224,
"tbk": 6,
"tl": 0,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
314,
315,
316,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
61,
99
]
},
{
"tb": 368,
"tbk": 1,
"tl": 126068,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1244,
1245,
1246,
1247,
1248,
1249,
16,
17,
18,
19,
20,
21,
21,
22,
1150,
1151,
1152,
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1164,
1165,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 236,
"tbk": 2,
"tl": 19,
"mb": 236,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1251,
1252,
1253,
1254,
1255,
1256,
1257,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
1266,
1267,
1268,
1269,
1270,
1271,
236,
237,
238,
239,
240,
241,
242,
243,
244,
245,
246,
247,
248,
249,
250,
251,
252,
237,
238,
239,
240,
241,
242,
243,
247,
253,
254,
255,
1272
]
},
{
"tb": 300,
"tbk": 3,
"tl": 16,
"mb": 248,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1273,
1274,
1275,
1276,
1277,
1278,
1279,
1280,
1281,
1282,
1283,
1284,
1285,
1286,
1287,
1288,
1289,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1291,
1292,
1298,
1299,
1300,
1294,
1295,
1296,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
1308,
447
]
},
{
"tb": 288,
"tbk": 4,
"tl": 381,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
61
]
},
{
"tb": 1196,
"tbk": 5,
"tl": 67,
"mb": 896,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1273,
1274,
1275,
1276,
1277,
1278,
1279,
1280,
1309,
1310,
1311,
1312,
1313,
1314,
1315,
1316,
1316,
1317,
1318,
1319,
1320,
1321,
1322,
1323,
1324,
1318,
1319,
1325,
1326,
1327,
1321,
1322,
1323,
1328,
1329,
1330,
1331,
1332,
1333,
1334,
1335
]
},
{
"tb": 288,
"tbk": 6,
"tl": 124,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
408,
407,
407,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 7200,
"tbk": 30,
"tl": 18736,
"mb": 240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1338,
1339,
1340,
1341,
1342,
1343,
1344,
1345,
1346,
1347,
1348,
1349,
1350,
1351,
1352,
1353,
1354,
1355,
1356,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 288,
"tbk": 1,
"tl": 0,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1106,
1107,
1108,
1109,
1110,
1111,
1112,
1113,
1114,
1115,
1116,
1117,
1118,
1119,
1120,
1118,
1121,
1357,
1358,
1359,
1360,
1361,
1362,
1363,
1364,
1358,
1359,
1365,
1366,
1367,
1368,
1369,
1370,
1371,
1372,
929,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 288,
"tbk": 12,
"tl": 734,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
408,
407,
407,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 2592,
"tbk": 18,
"tl": 18351,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
1373,
1374,
1375,
1376,
1377,
1378,
1379,
1380,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 192,
"tbk": 12,
"tl": 36,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
312,
313,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 48,
"tbk": 3,
"tl": 9,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
312,
313,
313,
312,
313,
314,
315,
316
]
},
{
"tb": 96,
"tbk": 2,
"tl": 0,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
1381,
1382,
1383,
567,
568,
569,
570,
447
]
},
{
"tb": 144,
"tbk": 2,
"tl": 0,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
408,
409,
410,
411,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
283,
61,
62
]
},
{
"tb": 800,
"tbk": 4,
"tl": 100428,
"mb": 400,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1384,
1385,
1386,
1387,
1388,
1389,
1390,
1391,
1392,
1393,
1394,
1394,
1395,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
1396,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 816,
"tbk": 17,
"tl": 33986,
"mb": 288,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1397,
1398,
1399,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
99
]
},
{
"tb": 24,
"tbk": 1,
"tl": 84739,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1400,
1401,
1402,
1403,
1404,
1405,
1406,
1407,
1408,
1409,
1410
]
},
{
"tb": 48,
"tbk": 2,
"tl": 0,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
113,
114
]
},
{
"tb": 2208,
"tbk": 6,
"tl": 277170,
"mb": 1104,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1411,
1412,
1413,
1414,
1415,
1416,
1417,
1418,
1419,
1420,
1421,
1422,
1423,
1424,
1425,
1426,
1427,
1428,
1429,
1430,
1431,
1432,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 96,
"tbk": 6,
"tl": 19,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
313,
312,
312,
312,
313,
312
]
},
{
"tb": 140,
"tbk": 2,
"tl": 34,
"mb": 140,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1273,
1274,
1275,
1276,
1277,
1278,
1279,
1280,
1433,
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
1441,
1442,
1443,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
1250,
129,
113,
114
]
},
{
"tb": 48,
"tbk": 1,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
407,
409,
410,
411,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
283,
61,
99
]
},
{
"tb": 5849088,
"tbk": 6528,
"tl": 103589,
"mb": 2688,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1444,
1445,
1446,
1447,
1448,
1449,
1450,
1451,
1452,
1453,
1454,
1455,
1456,
1457,
1453,
1458,
1459,
1460,
1461,
1462,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 1368,
"tbk": 1,
"tl": 17,
"mb": 1368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1463,
1464,
1465,
1466,
1467,
1468,
1469,
1470,
1471,
1472,
1473,
1474,
1475,
1476,
1477,
1478,
1479,
1480,
1481,
1482,
1483,
1484,
1485,
1486,
1487,
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
1497,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1502,
1506,
1507,
1508,
1509,
1510,
1511,
1512,
1513,
1514,
1515,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207
]
},
{
"tb": 6912,
"tbk": 108,
"tl": 108385,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
1373,
1374,
1375,
1376,
1377,
1378,
1379,
1380,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 18240,
"tbk": 114,
"tl": 28390,
"mb": 2720,
"mbk": 17,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
354,
355,
637,
638,
639,
640,
641,
642,
643,
644,
645,
703,
704,
705,
706,
707,
708,
709,
710,
711,
712,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 864,
"tbk": 3,
"tl": 267377,
"mb": 864,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1138,
1139,
1140,
1141,
1142,
1143,
1144,
1145,
1146,
1147,
1148,
1149,
75,
76,
77,
78,
79,
80,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 488,
"tbk": 5,
"tl": 1,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
564,
565,
566,
1516,
1332,
1333,
1334,
1335
]
},
{
"tb": 2960,
"tbk": 20,
"tl": 2337,
"mb": 2960,
"mbk": 20,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
1525,
1526,
1527,
1528,
1529,
1530,
1531,
1532,
1533,
1534,
1535,
1536,
1533,
1537,
1538,
1539,
1540,
1541,
1542,
1543,
1544,
1545,
1546,
1547
]
},
{
"tb": 104,
"tbk": 2,
"tl": 27,
"mb": 52,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1273,
1274,
1275,
1276,
1277,
1278,
1279,
1280,
1433,
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
1441,
1442,
1443,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
128,
385,
113,
114
]
},
{
"tb": 1104,
"tbk": 3,
"tl": 101725,
"mb": 736,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1244,
1245,
1246,
1247,
1248,
1249,
723,
724,
725,
726,
727,
728,
729,
730,
731,
732,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 1440,
"tbk": 36,
"tl": 1479587,
"mb": 240,
"mbk": 6,
"gb": 80,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
158,
159,
160,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
170,
171,
172,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
1551,
1552,
1553,
1554,
1555,
1556,
1557,
1558,
1559,
1560,
290,
291,
292,
293,
294,
295,
296,
297,
298,
299,
300
]
},
{
"tb": 8640,
"tbk": 48,
"tl": 16,
"mb": 960,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
313,
313,
312,
313,
312,
314,
315,
316
]
},
{
"tb": 192,
"tbk": 2,
"tl": 18524,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1210,
1211,
1561,
1562,
1563,
1564,
1565,
1566,
1567,
1563,
1564,
1565,
1568,
322,
113,
114
]
},
{
"tb": 64,
"tbk": 4,
"tl": 11,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
113,
114
]
},
{
"tb": 1536,
"tbk": 24,
"tl": 74491,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
12,
13,
14,
15,
268,
269,
270,
271,
272,
273,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61,
99
]
},
{
"tb": 1440,
"tbk": 36,
"tl": 11666,
"mb": 240,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
757,
758,
759,
760,
761,
762,
763,
764,
765,
646,
647,
648,
649,
650,
651,
652,
653,
654,
655,
656,
646,
647,
648,
649,
650,
651,
652,
653,
654,
655,
656,
657,
658,
659,
660,
661,
662,
663,
664,
665,
666,
667,
1569,
1570,
1571,
1572,
1573,
1574,
1575,
1576,
1577,
1578,
1579,
1580,
1581,
1582,
1583,
1584,
1585,
1586
]
},
{
"tb": 864,
"tbk": 9,
"tl": 179,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1587,
1588,
1589,
1590,
1591,
1592,
1593,
1594,
1595,
1596,
1597,
1598,
1595,
1599,
1600,
1601,
1602,
1603,
1604,
1605,
1606,
1607,
1608,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 48,
"tbk": 2,
"tl": 0,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
408,
409,
410,
411,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
283,
61,
62
]
},
{
"tb": 2160,
"tbk": 30,
"tl": 15,
"mb": 144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
313,
312,
312,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 576,
"tbk": 4,
"tl": 12383,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
268,
269,
270,
271,
272,
273,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61,
62
]
},
{
"tb": 48,
"tbk": 1,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
113,
114
]
},
{
"tb": 144,
"tbk": 6,
"tl": 592,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
312,
313,
312,
312,
312,
313
]
},
{
"tb": 428,
"tbk": 2,
"tl": 53,
"mb": 428,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1609,
1610,
1611,
1612,
1613,
1614,
1615,
1616,
1617,
1618,
1619,
1620,
1621,
1622,
1623,
1624,
1625,
1626,
1627,
1628,
1629,
1630,
1631,
384,
129,
113,
114
]
},
{
"tb": 148,
"tbk": 1,
"tl": 11,
"mb": 148,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
1632,
1633,
1634,
1635,
1636,
1637,
1638,
1639,
1639,
1640,
1641,
1642,
1643,
1644,
1645,
1646,
1647,
1641,
1642,
1648,
1649,
1650,
1644,
1645,
1646,
1651,
1652,
1653,
1654,
1655,
1656,
1657,
62
]
},
{
"tb": 524,
"tbk": 2,
"tl": 20,
"mb": 524,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
1658,
1659,
1660,
1661,
1662,
1663,
1664,
1664,
1665,
1666,
1667,
1668,
1669,
1670,
1671,
1672,
1673,
1667,
1674,
1675,
1676,
1669,
1670,
1671,
1677,
1678,
1679,
1680,
1681,
1682,
1683,
1684,
967,
129,
61,
99
]
},
{
"tb": 11664,
"tbk": 30,
"tl": 18528,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1685,
1686,
1687,
1688,
1689,
1690,
1691,
1692,
1693,
1694,
1695,
1696,
1697,
1698,
1699,
1700,
1701,
1702,
1703,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 2016,
"tbk": 18,
"tl": 6,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
313,
312,
313,
312,
312,
312
]
},
{
"tb": 2960,
"tbk": 20,
"tl": 2857,
"mb": 2960,
"mbk": 20,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
1704,
1705,
1706,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1712,
1716,
1717,
1718,
1719,
1720,
1721,
1722,
1723,
1724,
1725,
155
]
},
{
"tb": 1296,
"tbk": 9,
"tl": 323588,
"mb": 1296,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
1726,
1727,
1728,
1729,
1730,
1731,
1732,
1733,
1734,
1735,
1736,
1737,
1738,
1739,
1740,
1741,
1742,
1743,
283,
61,
99
]
},
{
"tb": 256,
"tbk": 2,
"tl": 0,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
990,
991,
1744,
1745,
128,
385,
61,
99
]
},
{
"tb": 144,
"tbk": 3,
"tl": 3,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
312,
312,
313,
313,
312,
313
]
},
{
"tb": 840,
"tbk": 1,
"tl": 36034,
"mb": 840,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1746,
1747,
1748,
1749,
1750,
1751,
1752,
1753,
1754,
1755,
1756,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
379
]
},
{
"tb": 288,
"tbk": 6,
"tl": 3,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
313,
312,
312,
312,
313,
312
]
},
{
"tb": 288,
"tbk": 12,
"tl": 7,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
313,
313,
312,
312,
313,
314,
315,
316
]
},
{
"tb": 672,
"tbk": 18,
"tl": 24,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
407,
408,
407,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 480,
"tbk": 15,
"tl": 4862,
"mb": 96,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
1757,
1758,
1759,
1760,
1761,
1762,
1579,
1580,
1581,
1582,
1583,
1584,
1585,
1586,
1763,
1764,
1765,
1766,
1767,
1768,
1769,
1770,
1771,
1772,
1773,
1774,
1775,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 1120,
"tbk": 7,
"tl": 2136,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
354,
355,
637,
638,
639,
640,
641,
642,
643,
644,
645,
646,
647,
648,
649,
650,
651,
652,
653,
654,
655,
656,
657,
658,
659,
660,
661,
662,
663,
664,
665,
666,
667,
1569,
1570,
1571,
1572,
1573,
1574,
1575,
1576,
1577,
1578,
1579,
1580,
1581,
1582,
1583,
1584,
1585,
1586,
1763,
1764,
1765
]
},
{
"tb": 4320,
"tbk": 24,
"tl": 82,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
407,
407,
408,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 96,
"tbk": 6,
"tl": 45,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
408,
407,
408,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 288,
"tbk": 6,
"tl": 6,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
313,
313,
312,
312,
313,
314,
315,
316
]
},
{
"tb": 60720,
"tbk": 1,
"tl": 417165,
"mb": 60720,
"mbk": 1,
"gb": 60720,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
791,
792,
793,
794,
795,
796,
797,
798,
1776,
1777,
1778,
1779
]
},
{
"tb": 336,
"tbk": 42,
"tl": 1673,
"mb": 336,
"mbk": 42,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1780,
1781,
1782,
1783,
1782,
1784,
1785,
1786,
1787,
1788,
1789,
1790,
1791,
1235,
99
]
},
{
"tb": 192,
"tbk": 2,
"tl": 33,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1792,
1793,
1794,
1795,
1796,
1797,
1798,
1799,
1800,
1801,
1802,
1803,
1804,
1805,
1806,
1807
]
},
{
"tb": 2304,
"tbk": 28,
"tl": 4,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1106,
1107,
1108,
1109,
1110,
1111,
1112,
1113,
1114,
1115,
1116,
1117,
1118,
1119,
1120,
1118,
1121,
1122,
1123,
1124,
1125,
1126,
1127,
1128,
1129,
1123,
1124,
1130,
1131,
1132,
1133,
1134,
1135,
1136,
1137,
782,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 524,
"tbk": 3,
"tl": 20,
"mb": 440,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
1808,
1809,
1810,
1811,
1812,
1813,
1814,
1815,
1815,
1816,
1817,
1818,
1819,
1820,
1821,
1822,
1823,
1817,
1818,
1824,
1825,
1826,
1820,
1821,
1822,
1827,
1828,
1829,
1830,
1831,
1832,
1833,
1834,
379
]
},
{
"tb": 240,
"tbk": 10,
"tl": 8,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207
]
},
{
"tb": 720,
"tbk": 15,
"tl": 8,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
312,
313,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 192,
"tbk": 2,
"tl": 1070,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1210,
1211,
1835,
1836,
1837,
1838,
1839,
1840,
1841,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847
]
},
{
"tb": 32,
"tbk": 1,
"tl": 601,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
284,
285,
286,
287,
288,
289,
1061,
1062,
1063,
1064,
1065,
1066,
1067,
1068,
1069,
1070,
205,
206,
207,
1239,
1240,
181,
182,
183,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194
]
},
{
"tb": 80,
"tbk": 2,
"tl": 14,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
868,
869,
870,
871,
872,
873,
874,
875,
876,
877,
878,
879,
880,
881,
882,
883,
884,
885,
886,
887,
964,
965,
966,
1250,
129,
61,
62
]
},
{
"tb": 1584,
"tbk": 22,
"tl": 10,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
312,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 2072,
"tbk": 1,
"tl": 638822,
"mb": 2072,
"mbk": 1,
"gb": 2072,
"gbk": 1,
"eb": 2072,
"ebk": 1,
"fs": [
1842,
1843,
1844,
1845,
1846,
1847,
1848,
1849,
1850,
1851,
1852,
1853,
1854,
1855,
1856,
1857,
1858,
1859,
1860,
1861,
1862,
1863,
1864,
1865,
1866,
1867,
1868,
1869,
1870,
1871,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 96,
"tbk": 6,
"tl": 87,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
407,
407,
407,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 160,
"tbk": 1,
"tl": 313,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
557,
558,
1872,
1873,
1017,
129,
61,
99
]
},
{
"tb": 400,
"tbk": 10,
"tl": 657917,
"mb": 160,
"mbk": 4,
"gb": 80,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
158,
159,
160,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
170,
171,
172,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
1239,
1240,
181,
182,
183,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 144,
"tbk": 6,
"tl": 3,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
313,
313,
312,
312,
313,
312
]
},
{
"tb": 120,
"tbk": 1,
"tl": 59931,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
100,
101,
102,
103,
104,
105,
106,
107,
108,
109,
110,
111,
112,
61,
99
]
},
{
"tb": 384,
"tbk": 8,
"tl": 75211,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1397,
1398,
1399,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61,
99
]
},
{
"tb": 80,
"tbk": 2,
"tl": 10415,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1874,
1875,
1876,
1877,
1878,
1879,
1880,
1881,
1882,
1883,
1884,
1884,
1885,
1886,
1887,
1888,
1889,
1890,
1891,
1892,
1893,
1894,
1895,
1896,
1897,
1898,
1899,
1900,
1901,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 384,
"tbk": 3,
"tl": 1904177,
"mb": 384,
"mbk": 3,
"gb": 384,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
1902,
1903,
1904,
1905,
1906,
1907,
1908,
1909,
1910,
1911,
1912,
256
]
},
{
"tb": 582720,
"tbk": 24,
"tl": 359136,
"mb": 291840,
"mbk": 3,
"gb": 291840,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
1913,
1914,
1915,
1916,
1917,
1918,
1919,
1920,
1921,
1922,
1923,
1924,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 640,
"tbk": 8,
"tl": 375,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
126,
127,
967,
385,
113,
114
]
},
{
"tb": 160,
"tbk": 4,
"tl": 63781,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
158,
159,
160,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
170,
171,
172,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
1239,
1240,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
1551,
1552,
1553,
1554,
1555,
1556,
1557,
1558,
1559,
1560,
290,
291,
292,
293,
294,
295,
296,
297,
298,
299,
300
]
},
{
"tb": 800,
"tbk": 4,
"tl": 13270,
"mb": 400,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1925,
1926,
1927,
1928,
1929,
1243,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 80,
"tbk": 2,
"tl": 653,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
158,
159,
160,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
170,
171,
172,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
1239,
1240,
181,
182,
183,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183
]
},
{
"tb": 1104,
"tbk": 3,
"tl": 101827,
"mb": 736,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1047,
1048,
1049,
1050,
1051,
1052,
723,
724,
725,
726,
727,
728,
729,
730,
731,
732,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 192,
"tbk": 2,
"tl": 208418,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1210,
1211,
1930,
1931,
1932,
1933,
1934,
1935,
1936,
1937,
1938,
1939,
1940,
1941,
1942,
1943,
1944,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847
]
},
{
"tb": 1104,
"tbk": 3,
"tl": 265879,
"mb": 1104,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1047,
1048,
1049,
1050,
1051,
1052,
75,
76,
77,
78,
79,
80,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 1543824,
"tbk": 123,
"tl": 357091,
"mb": 294912,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
1945,
1946,
1947,
1948,
1949,
1950,
1951,
1952,
1953,
1954,
1955,
1956,
1957,
1958,
1959,
1960,
1961,
1962,
1963,
1964,
1965,
1966,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207
]
},
{
"tb": 2016,
"tbk": 18,
"tl": 1195,
"mb": 384,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
313,
312,
312,
313,
313,
314,
315,
316
]
},
{
"tb": 864,
"tbk": 3,
"tl": 14056,
"mb": 864,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1967,
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1980,
1981,
1981,
1982,
1886,
1887,
1888,
1889,
1890,
1891,
1892,
1893,
1894,
1895,
1896,
1897,
1898,
1899,
1900,
1901,
782,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 288,
"tbk": 6,
"tl": 4,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
313,
312,
313,
312,
312,
312
]
},
{
"tb": 96,
"tbk": 6,
"tl": 294,
"mb": 32,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
407,
407,
408,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 320,
"tbk": 8,
"tl": 434756,
"mb": 120,
"mbk": 3,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
158,
159,
160,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
170,
171,
172,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
1239,
1240,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
1551,
1552,
1553,
1554,
1555,
1556,
1557,
1558,
1559,
1560
]
},
{
"tb": 576,
"tbk": 2,
"tl": 6120,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1138,
1139,
1140,
1141,
1142,
1143,
1144,
1145,
1146,
1147,
1148,
1149,
268,
269,
270,
271,
272,
273,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
113,
114
]
},
{
"tb": 824,
"tbk": 2,
"tl": 47,
"mb": 824,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
1983,
1984,
1985,
1986,
1987,
1988,
1989,
1990,
1990,
1991,
1992,
1993,
1994,
1995,
1996,
1997,
1998,
1992,
1993,
1999,
2000,
2001,
1995,
1996,
1997,
2002,
2003,
2004,
2005,
1655,
1656,
1657,
99
]
},
{
"tb": 288,
"tbk": 9,
"tl": 78460,
"mb": 288,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2006,
2007,
2008,
2009,
2010,
2011,
2012,
2008,
2009,
2010,
2013,
283,
61,
62
]
},
{
"tb": 1152,
"tbk": 6,
"tl": 13539,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2014,
2015,
2016,
2017,
2018,
2019,
2020,
2021,
2022,
2023,
2024,
2025,
2026,
2027,
2025,
2028,
2029,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 960,
"tbk": 30,
"tl": 3786,
"mb": 960,
"mbk": 30,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
2030,
2031,
2032,
2033,
2034,
2035,
2036,
2037,
2034,
2038,
2039,
2040,
2041,
2042,
2043,
2044,
2045,
2046,
2047,
155
]
},
{
"tb": 840,
"tbk": 3,
"tl": 101539,
"mb": 552,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1138,
1139,
1140,
1141,
1142,
1143,
1144,
1145,
1146,
1147,
1148,
1149,
723,
724,
725,
726,
727,
728,
729,
730,
731,
732,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 5992,
"tbk": 10,
"tl": 134,
"mb": 1312,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2048,
2049,
2050,
2051,
2052,
2053,
2054,
2055,
2056,
2057,
2058,
2059,
2060,
2061,
2062,
2063,
2064,
2065,
2066,
2067,
2068,
2069,
2070,
2071,
2072,
2073,
2074,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 192,
"tbk": 2,
"tl": 187,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
865,
866,
125,
113,
114
]
},
{
"tb": 288,
"tbk": 12,
"tl": 137,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
408,
407,
407,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 1536,
"tbk": 4,
"tl": 509351,
"mb": 1536,
"mbk": 4,
"gb": 768,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
2075,
2076,
2077,
2078,
2079,
2080,
2081,
2082,
2083,
2084,
2085,
2086,
2087,
2088,
2089,
2090,
2091,
2092,
2093,
2094,
2095,
2096,
322,
113,
114
]
},
{
"tb": 1440,
"tbk": 24,
"tl": 17,
"mb": 224,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
407,
407,
408,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 144,
"tbk": 1,
"tl": 19129,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2097,
2098,
2099,
2100,
2101,
2102,
2103,
2104,
2105,
2106,
2107,
2108,
2109,
61,
99
]
},
{
"tb": 384,
"tbk": 2,
"tl": 45744,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
2110,
2111,
2112,
2113,
2114,
2115,
2116,
2117,
2118,
2119,
2120,
2121,
2119,
2122,
2123,
1243,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 3456,
"tbk": 9,
"tl": 1275613,
"mb": 3456,
"mbk": 9,
"gb": 2304,
"gbk": 6,
"eb": 0,
"ebk": 0,
"fs": [
2075,
2076,
2077,
2078,
2079,
2080,
2081,
2082,
2083,
2084,
2085,
2086,
2087,
2088,
2089,
2090,
2091,
2092,
2093,
2094,
2095,
2096,
283,
113,
114
]
},
{
"tb": 352,
"tbk": 11,
"tl": 350,
"mb": 352,
"mbk": 11,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
2124,
2125,
2126,
2127,
2127,
2128,
2129,
2130,
2131,
2132,
2133,
2134,
2135,
2129,
2130,
2136,
2137,
2138,
2132,
2133,
2134,
2139,
2140,
2141,
2142,
1655,
1656,
1657,
99
]
},
{
"tb": 576,
"tbk": 6,
"tl": 12887,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
2143,
2144,
2145,
2146,
2147,
2148,
2149,
2150,
2151,
2152,
2153,
2154,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 344,
"tbk": 1,
"tl": 10,
"mb": 344,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
2155,
2156,
2157,
2158,
2159,
2160,
2161,
2162,
2163,
2164,
2165,
2166,
2167,
2168,
1272
]
},
{
"tb": 512,
"tbk": 32,
"tl": 20428374,
"mb": 512,
"mbk": 32,
"gb": 512,
"gbk": 32,
"eb": 512,
"ebk": 32,
"fs": [
2169,
2170,
2171,
2172,
2173,
2174,
2175,
2176,
529,
530,
531,
532,
533,
534,
535,
536,
537,
538,
539,
540,
541,
542,
543,
544,
545,
546,
547,
548,
548,
549,
550,
551,
552,
553,
554,
555,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
556
]
},
{
"tb": 856,
"tbk": 4,
"tl": 18586,
"mb": 428,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
503,
504,
505,
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
517,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
113,
114
]
},
{
"tb": 336,
"tbk": 7,
"tl": 5,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
312,
313,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 1120,
"tbk": 3,
"tl": 35,
"mb": 640,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
557,
558,
1872,
1873,
125,
61,
62
]
},
{
"tb": 4176,
"tbk": 24,
"tl": 35924,
"mb": 1152,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2177,
2178,
2179,
2180,
2181,
2182,
2183,
2184,
2185,
2186,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 368,
"tbk": 1,
"tl": 242258,
"mb": 368,
"mbk": 1,
"gb": 368,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1047,
1048,
1049,
1050,
1051,
1052,
16,
17,
18,
19,
20,
21,
21,
22,
1150,
1151,
1152,
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1164,
1165,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 64,
"tbk": 2,
"tl": 611,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
865,
866,
1017,
129,
61,
62
]
},
{
"tb": 8064,
"tbk": 18,
"tl": 13253,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2187,
2188,
2189,
2190,
2191,
2192,
2193,
2194,
2195,
2196,
2197,
2198,
2199,
2200,
2201,
2202,
2203,
2204,
2205,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 120,
"tbk": 3,
"tl": 5,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
678,
679,
680,
681,
682,
683,
684,
685,
686,
687,
688,
689,
690,
691,
692,
693,
694,
695,
696,
697,
698,
699,
700,
701,
686,
702,
1250,
385,
113,
114
]
},
{
"tb": 2560,
"tbk": 122,
"tl": 5270,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
2206,
2207,
2208,
2209,
2210,
2211,
1452,
1453,
1454,
1455,
1456,
1457,
1453,
1458,
1459,
1460,
1461,
1462,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207
]
},
{
"tb": 240,
"tbk": 12,
"tl": 2,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2212,
2213,
2214,
2215,
2216,
2217,
2218,
2219,
2220,
2221,
2222,
2223,
2224,
2225,
2226,
2227,
2228,
2229,
2230,
1410
]
},
{
"tb": 144,
"tbk": 4,
"tl": 2,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
312,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 40,
"tbk": 2,
"tl": 0,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
380,
381,
382,
383,
384,
129,
113,
114
]
},
{
"tb": 40,
"tbk": 1,
"tl": 10972,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1874,
1875,
1876,
1877,
1878,
1879,
1880,
1881,
1882,
1883,
1884,
1884,
1885,
1886,
1887,
1888,
1889,
1890,
1891,
1892,
1893,
1894,
1895,
1896,
1897,
1898,
1899,
1900,
1901,
929,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 64,
"tbk": 4,
"tl": 25,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2231,
2232,
2233,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 800,
"tbk": 23,
"tl": 10983,
"mb": 224,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
284,
285,
286,
287,
288,
289,
1061,
1062,
1063,
1064,
1065,
1066,
1067,
1068,
1069,
1070,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 48,
"tbk": 1,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
408,
409,
410,
411,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
283,
113,
114
]
},
{
"tb": 640,
"tbk": 8,
"tl": 417,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
126,
127,
967,
385,
61,
62
]
},
{
"tb": 428,
"tbk": 2,
"tl": 22,
"mb": 428,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
2234,
2235,
2236,
2237,
2238,
2239,
2240,
2241,
2241,
2242,
1222,
1223,
1224,
1225,
1226,
1227,
1228,
1229,
1230,
1231,
1232,
1233,
1234,
384,
385,
61,
62
]
},
{
"tb": 4172,
"tbk": 5,
"tl": 180,
"mb": 3200,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
2234,
2235,
2236,
2237,
2238,
2239,
2240,
2241,
2241,
2242,
1222,
1223,
1224,
1225,
1226,
1227,
1228,
1229,
1230,
1231,
1232,
1233,
1234,
1004,
1005
]
},
{
"tb": 448,
"tbk": 12,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61,
62
]
},
{
"tb": 360,
"tbk": 1,
"tl": 388,
"mb": 360,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1746,
1747,
1748,
1749,
1750,
1751,
1752,
1753,
1754,
1755,
1756,
605,
61,
62
]
},
{
"tb": 96,
"tbk": 6,
"tl": 35,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
408,
408,
408,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 1968,
"tbk": 41,
"tl": 2816798,
"mb": 384,
"mbk": 8,
"gb": 144,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
1397,
1398,
1399,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 240,
"tbk": 15,
"tl": 52,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
312,
313,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 144,
"tbk": 3,
"tl": 2,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
313,
313,
312,
312,
313,
312
]
},
{
"tb": 240,
"tbk": 6,
"tl": 39,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
151,
152,
153,
154,
556
]
},
{
"tb": 200,
"tbk": 5,
"tl": 1530,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
757,
758,
759,
760,
761,
762,
763,
764,
765,
646,
647,
648,
649,
650,
651,
652,
653,
654,
655,
656,
703,
704,
705,
706,
707,
708,
709,
710,
711,
712,
205,
206,
207,
713,
714,
654,
655,
656,
703,
704,
705,
706,
707,
708,
709,
710,
711,
712
]
},
{
"tb": 3360,
"tbk": 21,
"tl": 10,
"mb": 600,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
312,
313,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 64,
"tbk": 2,
"tl": 27,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
2243,
2244,
2245,
2246,
384,
385,
61,
62
]
},
{
"tb": 1328,
"tbk": 1,
"tl": 18,
"mb": 1328,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
596,
597,
598,
599,
600,
601,
602,
603,
604,
789,
113,
114
]
},
{
"tb": 96,
"tbk": 6,
"tl": 19,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61
]
},
{
"tb": 192,
"tbk": 4,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
113,
114
]
},
{
"tb": 96,
"tbk": 3,
"tl": 680,
"mb": 96,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
865,
866,
1017,
385,
113,
114
]
},
{
"tb": 560,
"tbk": 1,
"tl": 201659,
"mb": 560,
"mbk": 1,
"gb": 560,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
571,
572,
573,
574,
575,
576,
577,
578,
579,
580,
581,
582,
583,
584,
585,
586,
577,
578,
580,
587,
1004,
1005
]
},
{
"tb": 360,
"tbk": 1,
"tl": 419,
"mb": 360,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
354,
355,
1006,
1007,
1008,
1009,
1010,
1011,
1012,
1013,
1014,
1015,
1016,
605,
61,
99
]
},
{
"tb": 40,
"tbk": 1,
"tl": 639685,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2247,
2248,
2249,
2250,
2251,
2252,
2253,
2254,
2255
]
},
{
"tb": 400,
"tbk": 2,
"tl": 46223,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1384,
1385,
1386,
1387,
1388,
1389,
1390,
1391,
1392,
1393,
1394,
1394,
1395,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
1243,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 240,
"tbk": 6,
"tl": 9,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
678,
679,
680,
681,
682,
683,
684,
685,
686,
687,
688,
689,
690,
691,
692,
693,
694,
695,
696,
697,
698,
699,
700,
701,
686,
702,
967,
385,
61,
99
]
},
{
"tb": 432,
"tbk": 6,
"tl": 3,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
312,
313,
312,
313,
313,
313
]
},
{
"tb": 432,
"tbk": 3,
"tl": 207,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2256,
2257,
2258,
2259,
2260,
2261,
2262,
2263,
2264,
2265,
2266,
2267,
2268,
2269,
2270,
283,
61,
62
]
},
{
"tb": 192,
"tbk": 12,
"tl": 38,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
313,
312,
313,
312,
312,
314,
315,
316
]
},
{
"tb": 200,
"tbk": 1,
"tl": 634756,
"mb": 200,
"mbk": 1,
"gb": 200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2271,
2272,
2273,
2274,
2275,
2276,
2277,
2278,
2279,
2280,
2281,
2282,
2283,
2284,
2285,
2286,
2287,
2288,
256
]
},
{
"tb": 1220,
"tbk": 2,
"tl": 34,
"mb": 1072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
1632,
1633,
1634,
1635,
1636,
1637,
1638,
1639,
1639,
1640,
1641,
1642,
1643,
1644,
1645,
1646,
1647,
1641,
1642,
1648,
1649,
1650,
1644,
1645,
1646,
1651,
1652,
1653,
1654,
1332,
1333,
1334,
1335
]
},
{
"tb": 256,
"tbk": 2,
"tl": 0,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
990,
991,
1744,
1745,
128,
385,
113,
114
]
},
{
"tb": 528,
"tbk": 22,
"tl": 12,
"mb": 80,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
313,
313,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 240,
"tbk": 15,
"tl": 51,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
312,
312,
312,
313,
312,
313
]
},
{
"tb": 360,
"tbk": 1,
"tl": 334,
"mb": 360,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1746,
1747,
1748,
1749,
1750,
1751,
1752,
1753,
1754,
1755,
1756,
605,
113,
114
]
},
{
"tb": 96,
"tbk": 6,
"tl": 25,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
408,
407,
407,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 288,
"tbk": 18,
"tl": 61,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
313,
313,
313,
312,
313,
312
]
},
{
"tb": 2208,
"tbk": 6,
"tl": 18494,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1244,
1245,
1246,
1247,
1248,
1249,
268,
269,
270,
271,
272,
273,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
113,
114
]
},
{
"tb": 37632,
"tbk": 588,
"tl": 69,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2289,
2290,
2291,
2292,
2293,
2294,
2295,
2296,
2297,
2298,
2299,
2300,
2301,
2302,
2303,
2304,
2305,
2306,
2307,
2308,
2309,
2310,
2311,
2312,
2313,
2314,
2315,
2316,
2317,
2318,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 200,
"tbk": 1,
"tl": 634840,
"mb": 200,
"mbk": 1,
"gb": 200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2319,
2320,
2321,
2322,
2323,
2324,
2325,
2326,
2327,
2328,
2329,
2330,
2331,
2332,
2333,
2334,
2335,
2336,
2337,
2338,
2339,
2340,
2341,
2342
]
},
{
"tb": 96,
"tbk": 6,
"tl": 76,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
408,
408,
407,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 960,
"tbk": 30,
"tl": 3303,
"mb": 960,
"mbk": 30,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
2343,
2344,
2345,
2346,
2347,
2348,
2349,
2350,
2347,
2351,
2352,
2353,
2354,
2355,
2356,
2357,
1544,
1545,
1546,
1547
]
},
{
"tb": 6048,
"tbk": 36,
"tl": 31,
"mb": 1152,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
407,
407,
407,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 144,
"tbk": 1,
"tl": 137511,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
75,
76,
77,
78,
79,
80,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 576,
"tbk": 12,
"tl": 9,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
312,
312,
313,
312,
313,
313
]
},
{
"tb": 94464,
"tbk": 138,
"tl": 1311,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2358,
2359,
2360,
2361,
2362,
2363,
2364,
2365,
2366,
2367,
2368,
2369,
2370,
2371,
2372,
2373,
2374,
2375,
2376,
2377,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 480,
"tbk": 2,
"tl": 31167,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
557,
558,
2378,
2379,
1171,
1172,
1173,
1174,
1175,
1176,
1177,
1178,
1179,
322,
113,
114
]
},
{
"tb": 160,
"tbk": 4,
"tl": 2155,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2380,
2381,
2382,
2383,
2384,
2385,
2386,
2387,
2387,
2388,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
2389,
2390,
2391,
2392,
2393,
2394,
2395,
2396,
2397,
2398,
2399
]
},
{
"tb": 2688,
"tbk": 42,
"tl": 1398779,
"mb": 1536,
"mbk": 24,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
12,
13,
14,
15,
723,
724,
725,
726,
727,
728,
729,
730,
731,
732,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 256,
"tbk": 4,
"tl": 48,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2400,
2401,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 640,
"tbk": 14,
"tl": 22,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
868,
869,
870,
871,
872,
873,
874,
875,
876,
877,
878,
879,
880,
881,
882,
883,
884,
885,
886,
887,
888,
889,
890,
2402,
2403,
2404,
2405
]
},
{
"tb": 372,
"tbk": 2,
"tl": 21611,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
1166,
1167,
1168,
1169,
1170,
1171,
1172,
1173,
1174,
1175,
1176,
1177,
1178,
1179,
322,
113,
114
]
},
{
"tb": 96,
"tbk": 1,
"tl": 634793,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2406,
2407,
2408,
2409,
2410,
2411,
2412,
2413,
2414,
2415,
2416,
2417,
2418,
2419,
2420,
2421,
2422,
2423,
2424,
2425,
2426,
2427,
2412,
2413,
2417,
2428,
2429,
2430,
256
]
},
{
"tb": 336,
"tbk": 3,
"tl": 3996,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
407,
409,
410,
411,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
283,
61,
99
]
},
{
"tb": 824,
"tbk": 2,
"tl": 39,
"mb": 824,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
1983,
1984,
1985,
1986,
1987,
1988,
1989,
1990,
1990,
1991,
1992,
1993,
1994,
1995,
1996,
1997,
1998,
1992,
1993,
1999,
2000,
2001,
1995,
1996,
1997,
2002,
2003,
2004,
2005,
1332,
1333,
1334,
1335
]
},
{
"tb": 2592,
"tbk": 36,
"tl": 29,
"mb": 144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
312,
312,
312,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2231,
2232,
2233,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
283,
113,
114
]
},
{
"tb": 576,
"tbk": 5,
"tl": 424474,
"mb": 576,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
2431,
2432,
2433,
2434,
2435,
2436,
2437,
2438,
2439,
2440,
2441,
2442,
2443,
2444,
2445,
2446,
2447,
2448,
2449,
2450,
2451,
2452,
2453,
2454,
2455,
2446,
2447,
2449,
2456,
1235,
62
]
},
{
"tb": 299904,
"tbk": 4686,
"tl": 10741,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2457,
2458,
2459,
2460,
2461,
2462,
2463,
2464,
1452,
1453,
1454,
1455,
1456,
1457,
1453,
1458,
1459,
1460,
1461,
1462,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 80,
"tbk": 2,
"tl": 1269557,
"mb": 80,
"mbk": 2,
"gb": 80,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
2465,
2466,
2467,
2468,
2469,
2470,
2471,
2472,
2473,
2474,
2475,
2476,
2477,
2478,
2479,
2480,
2481,
236,
237,
238,
239,
240,
241,
242,
243,
244,
245,
246,
247,
248,
249,
250,
251,
252,
237,
238,
239,
240,
241,
242,
243,
247,
253,
254,
255,
256
]
},
{
"tb": 864,
"tbk": 18,
"tl": 22,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
312,
313,
312,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 1216,
"tbk": 14,
"tl": 1,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1195,
1196,
1197,
1198,
1199,
1200,
1201,
1202,
1203,
1204,
1205,
1206,
1203,
1207,
1208,
1209,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
113,
114
]
},
{
"tb": 2864,
"tbk": 26,
"tl": 37540,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2482,
2483,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207
]
},
{
"tb": 48,
"tbk": 2,
"tl": 25,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2484,
2485,
2486,
2487,
2488,
2489,
2490,
2491,
2492,
2493,
2494,
2495,
2496,
2497,
2498,
2499,
2500,
2501,
2502,
2503,
2504,
2501,
2505,
2506,
2507,
2508,
2509,
2510,
2511,
2512,
823,
824,
825,
826,
827,
828,
829,
826,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859
]
},
{
"tb": 2016,
"tbk": 18,
"tl": 48,
"mb": 384,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
407,
408,
408,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 160,
"tbk": 1,
"tl": 253,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
557,
558,
2513,
2514,
1017,
385,
113,
114
]
},
{
"tb": 384,
"tbk": 12,
"tl": 554,
"mb": 384,
"mbk": 12,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
2515,
2516,
2517,
2518,
2519,
2520,
2521,
2522,
2519,
2523,
2524,
2525,
2526,
2527,
2528,
2529,
2530,
2531,
2532,
556
]
},
{
"tb": 524,
"tbk": 3,
"tl": 25,
"mb": 440,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
944,
945,
945,
946,
947,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
888,
889,
890,
891,
892,
893,
99
]
},
{
"tb": 937920,
"tbk": 5,
"tl": 155,
"mb": 580080,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
2533,
2534,
2535,
2536,
2537,
2538,
2539,
2540,
2541,
2542,
2543,
2544,
2545,
2546,
2547,
2548
]
},
{
"tb": 32,
"tbk": 2,
"tl": 6,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
314,
315,
316,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
61,
62
]
},
{
"tb": 160,
"tbk": 4,
"tl": 9,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
678,
679,
680,
681,
682,
683,
684,
685,
686,
687,
688,
689,
690,
691,
692,
693,
694,
695,
696,
697,
698,
699,
700,
701,
686,
702,
128,
129,
61,
62
]
},
{
"tb": 128,
"tbk": 4,
"tl": 126761,
"mb": 128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
1053,
1054,
1055,
1056,
1057,
1058,
322,
61,
99
]
},
{
"tb": 576,
"tbk": 5,
"tl": 696918,
"mb": 448,
"mbk": 4,
"gb": 448,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
2549,
2550,
2551,
2552,
2553,
2554,
2555,
2556,
2557,
2558,
2559,
2560,
2561,
2562,
2563,
2564,
2565,
2566,
2567,
2568,
2555,
2556,
2560,
2569,
2570,
2571,
2572,
2573,
2574,
2575,
2576,
2577,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 384,
"tbk": 3,
"tl": 673,
"mb": 384,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
865,
866,
1017,
385,
113,
114
]
},
{
"tb": 480,
"tbk": 20,
"tl": 5,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61
]
},
{
"tb": 336,
"tbk": 7,
"tl": 4,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
312,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 480,
"tbk": 6,
"tl": 5,
"mb": 160,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2578,
2579,
2580,
2581,
2582,
2583,
2584,
2585,
2586,
2587,
2588,
2589,
2590,
2591,
2592,
2593,
2594,
2595,
2596,
2597,
2598,
2599,
2600,
967,
129,
113,
114
]
},
{
"tb": 59520,
"tbk": 930,
"tl": 1985,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2457,
2458,
2459,
2460,
2461,
2462,
2463,
2464,
2601,
2602,
2603,
2604,
2605,
2606,
2602,
2607,
2608,
2609,
2610,
2611,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207
]
},
{
"tb": 128,
"tbk": 1,
"tl": 112,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
990,
991,
1744,
1745,
967,
385,
61,
62
]
},
{
"tb": 180,
"tbk": 1,
"tl": 151,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
766,
767,
768,
769,
770,
771,
772,
773,
774,
775,
776,
777,
778,
779,
780,
780,
781,
618,
619,
620,
621,
622,
623,
624,
625,
626,
627,
628,
629,
630,
631,
632,
633,
782,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 8112,
"tbk": 36,
"tl": 2448,
"mb": 1584,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2612,
2613,
2614,
2615,
2616,
2617,
2618,
2619,
2620,
2621,
2622,
2623,
2624,
2625,
2626,
2627,
2628,
2629,
2630,
1483,
1484,
1485,
1486,
1487,
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
823,
824,
825,
826,
827,
828,
829,
826,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 600,
"tbk": 3,
"tl": 1918827,
"mb": 600,
"mbk": 3,
"gb": 600,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
2631,
2632,
2633,
2634,
2635,
2636,
2637,
2638,
2639,
2640,
2641,
2642,
2643,
2644,
2645,
2646,
2647,
2648,
1272
]
},
{
"tb": 440,
"tbk": 2,
"tl": 14590,
"mb": 440,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
1166,
1167,
1168,
1169,
1170,
1171,
1172,
1173,
1174,
1175,
1176,
1177,
1178,
1179,
283,
61,
62
]
},
{
"tb": 192,
"tbk": 2,
"tl": 33,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2256,
2257,
2258,
2259,
2260,
2261,
2262,
2263,
2264,
2265,
2266,
2267,
2268,
2269,
2270,
322,
61,
62
]
},
{
"tb": 192,
"tbk": 2,
"tl": 605,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
865,
866,
1017,
129,
61,
62
]
},
{
"tb": 18312,
"tbk": 23,
"tl": 2047,
"mb": 5616,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2649,
2650,
2651,
2652,
2653,
2654,
2655,
2656,
2657,
2658,
2659,
2660,
2661,
2662,
2663,
2664,
2665,
823,
824,
825,
826,
827,
828,
829,
826,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 120,
"tbk": 3,
"tl": 14098,
"mb": 120,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1874,
1875,
1876,
1877,
1878,
1879,
1880,
1881,
1882,
1883,
1884,
1884,
1885,
1886,
1887,
1888,
1889,
1890,
1891,
1892,
1893,
1894,
1895,
1896,
1897,
1898,
1899,
1900,
1901,
782,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 384,
"tbk": 8,
"tl": 64,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 160,
"tbk": 2,
"tl": 9,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
678,
679,
680,
681,
682,
683,
684,
685,
686,
687,
688,
689,
690,
691,
692,
693,
694,
695,
696,
697,
698,
699,
700,
701,
686,
702,
967,
129,
113,
114
]
},
{
"tb": 288,
"tbk": 18,
"tl": 63,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
313,
313,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 1536,
"tbk": 1,
"tl": 639045,
"mb": 1536,
"mbk": 1,
"gb": 1536,
"gbk": 1,
"eb": 1536,
"ebk": 1,
"fs": [
2666,
2667,
2668,
2669,
2670,
2671,
2672,
2673,
2674,
2675,
529,
530,
531,
532,
533,
534,
535,
536,
537,
538,
539,
540,
541,
542,
543,
544,
545,
546,
547,
548,
548,
549,
550,
551,
552,
553,
554,
555,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
556
]
},
{
"tb": 3712,
"tbk": 31,
"tl": 2392243,
"mb": 832,
"mbk": 7,
"gb": 832,
"gbk": 7,
"eb": 0,
"ebk": 0,
"fs": [
2549,
2550,
2551,
2552,
2553,
2554,
2555,
2556,
2557,
2558,
2559,
2560,
2561,
2562,
2563,
2564,
2565,
2566,
2567,
2568,
2555,
2556,
2560,
2569,
2570,
2571,
2572,
2573,
2574,
2575,
2576,
2577,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 60720,
"tbk": 4,
"tl": 235,
"mb": 26064,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2676,
2677,
2678,
2679,
2680,
2681,
2682,
2683,
2684,
2685,
2686,
2687,
2688,
2689,
2690,
909,
910,
911,
912
]
},
{
"tb": 192,
"tbk": 2,
"tl": 21648,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
1053,
1054,
1055,
1056,
1057,
1058,
283,
113,
114
]
},
{
"tb": 192,
"tbk": 12,
"tl": 39,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
313,
312,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 2592,
"tbk": 36,
"tl": 16,
"mb": 144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
313,
313,
313,
312,
313,
312
]
},
{
"tb": 960,
"tbk": 30,
"tl": 3955,
"mb": 960,
"mbk": 30,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
2515,
2516,
2517,
2518,
2519,
2520,
2521,
2522,
2519,
2523,
2524,
2525,
2526,
2527,
2528,
2529,
2530,
2531,
2532,
155
]
},
{
"tb": 2304,
"tbk": 36,
"tl": 111464,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
12,
13,
14,
15,
268,
269,
270,
271,
272,
273,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
62
]
},
{
"tb": 524,
"tbk": 3,
"tl": 73,
"mb": 440,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
944,
945,
945,
946,
947,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
967,
385,
61,
62
]
},
{
"tb": 1196,
"tbk": 3,
"tl": 193,
"mb": 1016,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2691,
2692,
2693,
2694,
2695,
2696,
2697,
2698,
2699,
2700,
2701,
2702,
2703,
2704,
2705,
2706,
2707,
2708,
2709,
2710,
2707,
2711,
2712,
2713,
2714,
2715,
2716,
2717,
2718,
2719,
2720,
379
]
},
{
"tb": 1920,
"tbk": 30,
"tl": 58,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2721,
2722,
2723,
2724,
2725,
2726,
2727,
2728,
2729,
2730,
2731,
2732,
2733,
2734,
2735,
2736,
2737,
2738,
2739,
2740,
2741,
2742,
2743,
2744,
2745,
2746,
2747,
2748,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 192,
"tbk": 4,
"tl": 18727,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2749,
2750,
2751,
2752,
2753,
2754,
2755,
2756,
2757,
2758,
2759,
2760,
2761,
2762,
2763,
2763,
2764,
618,
619,
620,
621,
622,
623,
624,
625,
626,
627,
628,
629,
630,
631,
632,
633,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 96,
"tbk": 6,
"tl": 39,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
408,
408,
408,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
990,
991,
1744,
1745,
128,
129,
113,
114
]
},
{
"tb": 48,
"tbk": 1,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
99
]
},
{
"tb": 96,
"tbk": 6,
"tl": 45,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
407,
407,
408,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 96,
"tbk": 6,
"tl": 33,
"mb": 32,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
407,
408,
408,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 160,
"tbk": 2,
"tl": 10,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
678,
679,
680,
681,
682,
683,
684,
685,
686,
687,
688,
689,
690,
691,
692,
693,
694,
695,
696,
697,
698,
699,
700,
701,
686,
702,
967,
129,
61,
62
]
},
{
"tb": 4560,
"tbk": 114,
"tl": 26565,
"mb": 680,
"mbk": 17,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
757,
758,
759,
760,
761,
762,
763,
764,
765,
703,
704,
705,
706,
707,
708,
709,
710,
711,
712,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 864,
"tbk": 12,
"tl": 21,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
408,
407,
408,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 672,
"tbk": 6,
"tl": 3509,
"mb": 384,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
314,
315,
316,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
61,
62
]
},
{
"tb": 80,
"tbk": 5,
"tl": 16,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
312,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 240,
"tbk": 6,
"tl": 278682,
"mb": 120,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2765,
2766,
2767,
2768,
2769,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 576,
"tbk": 4,
"tl": 12268,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
268,
269,
270,
271,
272,
273,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
113,
114
]
},
{
"tb": 288,
"tbk": 12,
"tl": 421,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
408,
407,
408,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 336,
"tbk": 3,
"tl": 3942,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
407,
409,
410,
411,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
283,
113,
114
]
},
{
"tb": 160,
"tbk": 10,
"tl": 316,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2770,
2771,
2772,
2773,
2774,
2775,
2776,
2777,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550
]
},
{
"tb": 512,
"tbk": 32,
"tl": 20461237,
"mb": 512,
"mbk": 32,
"gb": 512,
"gbk": 32,
"eb": 512,
"ebk": 32,
"fs": [
2778,
2779,
2780,
2781,
2782,
2783,
2784,
2785,
2786,
2787,
2788,
2789,
2790,
2791,
529,
530,
531,
532,
533,
534,
535,
536,
537,
538,
539,
540,
541,
542,
543,
544,
545,
546,
547,
548,
548,
549,
550,
551,
552,
553,
554,
555,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
556
]
},
{
"tb": 524,
"tbk": 2,
"tl": 18,
"mb": 524,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
1658,
1659,
1660,
1661,
1662,
1663,
1664,
1664,
1665,
1666,
1667,
1668,
1669,
1670,
1671,
1672,
1673,
1667,
1674,
1675,
1676,
1669,
1670,
1671,
1677,
1678,
1679,
1680,
1681,
1682,
1683,
1684,
1250,
385,
113,
114
]
},
{
"tb": 288,
"tbk": 1,
"tl": 4,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
2792,
2793,
2794,
2795,
2796,
2797,
2798,
2799,
2799,
2800,
2801,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
888,
889,
890,
891,
892,
893,
62
]
},
{
"tb": 432,
"tbk": 6,
"tl": 3,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
313,
312,
312,
312,
313,
314,
315,
316
]
},
{
"tb": 368,
"tbk": 1,
"tl": 2728,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1244,
1245,
1246,
1247,
1248,
1249,
16,
17,
18,
19,
20,
21,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 384,
"tbk": 16,
"tl": 1527,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61
]
},
{
"tb": 80,
"tbk": 2,
"tl": 1279281,
"mb": 80,
"mbk": 2,
"gb": 80,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
2465,
2466,
2467,
2468,
2469,
2470,
2471,
2472,
2473,
1264,
1265,
1266,
1267,
1268,
1269,
1270,
1271,
236,
237,
238,
239,
240,
241,
242,
243,
244,
245,
246,
247,
248,
249,
250,
251,
252,
237,
238,
239,
240,
241,
242,
243,
247,
253,
254,
255,
1272
]
},
{
"tb": 192,
"tbk": 4,
"tl": 15,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1463,
1464,
1465,
1466,
1467,
1468,
1469,
1470,
1471,
1472,
1473,
1474,
1475,
1476,
1477,
1478,
1479,
1480,
1481,
1482,
1483,
1484,
1485,
1486,
1487,
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
823,
824,
825,
826,
827,
828,
829,
826,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859
]
},
{
"tb": 120,
"tbk": 3,
"tl": 6,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
678,
679,
680,
681,
682,
683,
684,
685,
686,
687,
688,
689,
690,
691,
692,
693,
694,
695,
696,
697,
698,
699,
700,
701,
686,
702,
1250,
385,
61,
99
]
},
{
"tb": 768,
"tbk": 6,
"tl": 41544,
"mb": 640,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2802,
2803,
2804,
2805,
2806,
2807,
2808,
2809,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 824,
"tbk": 2,
"tl": 61,
"mb": 824,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
2810,
2811,
2812,
2813,
2814,
2815,
2816,
2817,
2817,
2818,
2819,
2820,
2821,
2822,
2823,
2824,
2825,
2819,
2820,
2826,
2827,
2828,
2822,
2823,
2824,
2829,
2830,
2831,
2832,
2833,
2834,
2835,
379
]
},
{
"tb": 96,
"tbk": 1,
"tl": 72,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1210,
1211,
1212,
1213,
1214,
384,
129,
113,
114
]
},
{
"tb": 288,
"tbk": 1,
"tl": 0,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1106,
1107,
1108,
1109,
1110,
1111,
1112,
1113,
1114,
1115,
1116,
1117,
1118,
1119,
1120,
1118,
1121,
1357,
1358,
1359,
1360,
1361,
1362,
1363,
1364,
1358,
1359,
1365,
1366,
1367,
1368,
1369,
1370,
1371,
1372,
929,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 10240,
"tbk": 64,
"tl": 17116,
"mb": 1920,
"mbk": 12,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
354,
355,
637,
638,
639,
640,
641,
642,
643,
644,
645,
646,
647,
648,
649,
650,
651,
652,
653,
654,
655,
656,
703,
704,
705,
706,
707,
708,
709,
710,
711,
712,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 5952,
"tbk": 60,
"tl": 21,
"mb": 640,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
313,
313,
312,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 384,
"tbk": 1,
"tl": 634766,
"mb": 384,
"mbk": 1,
"gb": 384,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2836,
2837,
2838,
2839,
2840,
2841,
2842,
2843,
256
]
},
{
"tb": 7200,
"tbk": 30,
"tl": 18549,
"mb": 240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1338,
1339,
1340,
1341,
1342,
1343,
1344,
1345,
1346,
1347,
1348,
1349,
1350,
1351,
1352,
1353,
1354,
1355,
1356,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 1752,
"tbk": 16,
"tl": 1,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1106,
1107,
1108,
1109,
1110,
1111,
1112,
1113,
1114,
1115,
1116,
1117,
1118,
1119,
1120,
1118,
1121,
1122,
1123,
1124,
1125,
1126,
1127,
1128,
1129,
1123,
1124,
1130,
1131,
1132,
1133,
1134,
1135,
1136,
1137,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 144,
"tbk": 2,
"tl": 0,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
408,
409,
410,
411,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
283,
61,
99
]
},
{
"tb": 1152,
"tbk": 18,
"tl": 1604425,
"mb": 1152,
"mbk": 18,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
12,
13,
14,
15,
75,
76,
77,
78,
79,
80,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 4320,
"tbk": 24,
"tl": 20,
"mb": 672,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
407,
407,
408,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 6912,
"tbk": 108,
"tl": 90170,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
2844,
2845,
2846,
2847,
2848,
2849,
2850,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 240,
"tbk": 5,
"tl": 1,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
312,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 2496,
"tbk": 12,
"tl": 5,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207
]
},
{
"tb": 864,
"tbk": 9,
"tl": 14064,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1210,
1211,
1835,
1836,
1837,
1838,
1839,
1840,
1841,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859,
205,
206,
207
]
},
{
"tb": 40,
"tbk": 1,
"tl": 2732,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
606,
607,
608,
609,
610,
611,
612,
613,
614,
615,
616,
616,
617,
618,
619,
620,
621,
622,
623,
624,
625,
626,
627,
628,
629,
630,
631,
632,
633,
782,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 96,
"tbk": 1,
"tl": 83,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1210,
1211,
1212,
1213,
1214,
384,
129,
61,
62
]
},
{
"tb": 40,
"tbk": 1,
"tl": 2675,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
606,
607,
608,
609,
610,
611,
612,
613,
614,
615,
616,
616,
617,
618,
619,
620,
621,
622,
623,
624,
625,
626,
627,
628,
629,
630,
631,
632,
633,
782,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 48,
"tbk": 1,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
407,
409,
410,
411,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
283,
61,
62
]
},
{
"tb": 512,
"tbk": 4,
"tl": 1064,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
2851,
2852,
1017,
129,
113,
114
]
},
{
"tb": 604,
"tbk": 4,
"tl": 70,
"mb": 464,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1273,
1274,
1275,
1276,
1277,
1278,
1279,
1280,
1433,
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
1441,
1442,
1443,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
967,
385,
113,
114
]
},
{
"tb": 192,
"tbk": 4,
"tl": 677504,
"mb": 144,
"mbk": 3,
"gb": 144,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
1397,
1398,
1399,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 64,
"tbk": 8,
"tl": 153,
"mb": 64,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1780,
1781,
1782,
1783,
1782,
1784,
1785,
1786,
1787,
1788,
1789,
1790,
1791,
384,
129,
61,
62
]
},
{
"tb": 96,
"tbk": 6,
"tl": 26,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
407,
407,
407,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 84,
"tbk": 1,
"tl": 6,
"mb": 84,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
1808,
1809,
1810,
1811,
1812,
1813,
1814,
1815,
1815,
1816,
1817,
1818,
1819,
1820,
1821,
1822,
1823,
1817,
1818,
1824,
1825,
1826,
1820,
1821,
1822,
1827,
1828,
1829,
1830,
1831,
1832,
1833,
1834,
447
]
},
{
"tb": 144,
"tbk": 3,
"tl": 13304,
"mb": 144,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1967,
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1980,
1981,
1981,
1982,
618,
619,
620,
621,
622,
623,
624,
625,
626,
627,
628,
629,
630,
631,
632,
633,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 540,
"tbk": 3,
"tl": 479,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
766,
767,
768,
769,
770,
771,
772,
773,
2853,
2854,
2855,
2856,
2857,
2858,
2859,
2859,
2860,
1886,
1887,
1888,
1889,
1890,
1891,
1892,
1893,
1894,
1895,
1896,
1897,
1898,
1899,
1900,
1901,
782,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 768,
"tbk": 6,
"tl": 1383,
"mb": 768,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
123,
124,
1017,
385,
113,
114
]
},
{
"tb": 72,
"tbk": 3,
"tl": 11,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2484,
2485,
2486,
2487,
2488,
2489,
2490,
2491,
2492,
2493,
2494,
2495,
2496,
2497,
2498,
2499,
2500,
2501,
2502,
2503,
2504,
2501,
2505,
2506,
2507,
2508,
2509,
2510,
2511,
2512,
1497,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1502,
1506,
1507,
1508,
1509,
1510,
1511,
1512,
1513,
1514,
1515,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 16,
"tbk": 1,
"tl": 25,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2770,
2771,
2772,
2773,
2774,
2775,
2776,
2777,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 864,
"tbk": 12,
"tl": 35,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
408,
408,
408,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 6912,
"tbk": 108,
"tl": 109288,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
1373,
1374,
1375,
1376,
1377,
1378,
1379,
1380,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 1976,
"tbk": 118,
"tl": 180,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1071,
1072,
1073,
1074,
1075,
1076,
1077,
1078,
1079,
1080,
1081,
1082,
1083,
1084,
1085,
1086,
1087,
1088,
1089,
1090,
1091,
1092,
1093,
1094,
1095,
1096,
1097,
1098,
1099,
1100,
1101,
1102,
1103,
1104,
1105,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 288,
"tbk": 12,
"tl": 3,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61
]
},
{
"tb": 2304,
"tbk": 28,
"tl": 3,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1106,
1107,
1108,
1109,
1110,
1111,
1112,
1113,
1114,
1115,
1116,
1117,
1118,
1119,
1120,
1118,
1121,
1122,
1123,
1124,
1125,
1126,
1127,
1128,
1129,
1123,
1124,
1130,
1131,
1132,
1133,
1134,
1135,
1136,
1137,
782,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 16,
"tbk": 1,
"tl": 22,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2861,
2862,
2863,
2864,
2865,
2866,
2867,
2868,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 87,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
468,
469,
470,
471,
472,
473,
474,
475,
476,
477,
478,
479,
480,
481,
482,
483,
484,
485,
486,
487,
488,
489,
490,
490,
491,
492,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
1239,
1240
]
},
{
"tb": 1280,
"tbk": 8,
"tl": 1689,
"mb": 800,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
354,
355,
637,
638,
639,
640,
641,
642,
643,
644,
645,
703,
704,
705,
706,
707,
708,
709,
710,
711,
712,
205,
206,
207,
713,
714,
654,
655,
656,
657,
658,
659,
660,
661,
662,
663,
664,
665,
666,
667,
1569,
1570,
1571,
1572,
1573,
1574,
1575,
1576,
1577,
1578
]
},
{
"tb": 200,
"tbk": 1,
"tl": 639687,
"mb": 200,
"mbk": 1,
"gb": 200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2869,
2870,
2871,
2872,
2873,
2874,
2875,
2876,
2877
]
},
{
"tb": 152,
"tbk": 1,
"tl": 7,
"mb": 152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
2878,
2879,
2880,
2881,
2882,
2883,
2884,
2885,
2885,
2886,
2887,
2888,
2889,
2890,
2891,
2892,
2893,
2887,
2888,
2894,
2895,
2896,
2890,
2891,
2892,
2897,
2898,
2899,
2900,
2901,
2902,
2903,
2904,
447
]
},
{
"tb": 288,
"tbk": 1,
"tl": 4,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
2878,
2879,
2880,
2881,
2882,
2883,
2884,
2885,
2885,
2886,
2887,
2888,
2889,
2890,
2891,
2892,
2893,
2887,
2888,
2894,
2895,
2896,
2890,
2891,
2892,
2897,
2898,
2899,
2900,
2901,
2902,
2903,
2904,
556
]
},
{
"tb": 192,
"tbk": 2,
"tl": 90822,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2905,
2906,
2907,
2908,
2909,
2910,
2911,
563,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 1296,
"tbk": 55,
"tl": 271,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
2206,
2207,
2912,
2913,
2914,
2915,
2916,
2917,
1452,
1453,
1454,
1455,
1456,
1457,
1453,
1458,
1459,
1460,
1461,
1462,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207
]
},
{
"tb": 288,
"tbk": 2,
"tl": 634846,
"mb": 192,
"mbk": 1,
"gb": 192,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2918,
2919,
2920,
2921,
2922,
2923,
2924,
2925,
2926,
2927,
2928,
2929,
2930,
2931,
2932,
2933,
2934,
2935,
2936,
2937,
2938,
2939,
2940,
2941
]
},
{
"tb": 24384,
"tbk": 21,
"tl": 22814,
"mb": 8192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
803,
804,
805,
806,
807,
808,
809,
810,
811,
812,
813,
814,
811,
815,
816,
817,
818,
819,
820,
821,
822,
1497,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1502,
1506,
1507,
1508,
1509,
1510,
1511,
1512,
1513,
1514,
1515,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 800,
"tbk": 20,
"tl": 965222,
"mb": 160,
"mbk": 4,
"gb": 80,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
158,
159,
160,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
170,
171,
172,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
1551,
1552,
1553,
1554,
1555,
1556,
1557,
1558,
1559,
1560,
1061,
1062,
1063,
1064,
1065,
1066,
1067,
1068,
1069,
1070,
205,
206,
207
]
},
{
"tb": 144,
"tbk": 2,
"tl": 0,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
113,
114
]
},
{
"tb": 1680,
"tbk": 6,
"tl": 18528,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1138,
1139,
1140,
1141,
1142,
1143,
1144,
1145,
1146,
1147,
1148,
1149,
268,
269,
270,
271,
272,
273,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
62
]
},
{
"tb": 524,
"tbk": 2,
"tl": 19,
"mb": 524,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
1658,
1659,
1660,
1661,
1662,
1663,
1664,
1664,
1665,
1666,
1667,
1668,
1669,
1670,
1671,
1672,
1673,
1667,
1674,
1675,
1676,
1669,
1670,
1671,
1677,
1678,
1679,
1680,
1681,
1682,
1683,
1684,
1250,
385,
61,
62
]
},
{
"tb": 168,
"tbk": 2,
"tl": 0,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1106,
1107,
1108,
1109,
1110,
1111,
1112,
1113,
1114,
1115,
1116,
1117,
1118,
1119,
1120,
1118,
1121,
1357,
1358,
1359,
1360,
1361,
1362,
1363,
1364,
1358,
1359,
1365,
1366,
1367,
1368,
1369,
1370,
1371,
1372,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 288,
"tbk": 12,
"tl": 32,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
408,
408,
408,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 1196,
"tbk": 3,
"tl": 36,
"mb": 1016,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
1658,
1659,
1660,
1661,
1662,
1663,
1664,
1664,
1665,
1666,
1667,
1668,
1669,
1670,
1671,
1672,
1673,
1667,
1674,
1675,
1676,
1669,
1670,
1671,
1677,
1678,
1679,
1680,
1681,
1682,
1683,
1684,
967,
129,
61,
62
]
},
{
"tb": 2688,
"tbk": 24,
"tl": 494665,
"mb": 768,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 1728,
"tbk": 24,
"tl": 12,
"mb": 192,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
313,
313,
313,
312,
313,
314,
315,
316
]
},
{
"tb": 656,
"tbk": 41,
"tl": 442,
"mb": 32,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2231,
2232,
2233,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 688,
"tbk": 11,
"tl": 1883,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
313,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 6784,
"tbk": 106,
"tl": 32834,
"mb": 1024,
"mbk": 16,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
2942,
2943,
2944,
2945,
2946,
2947,
2948,
2949,
2950,
2950,
2951,
2952,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 8960,
"tbk": 56,
"tl": 19602,
"mb": 1600,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
354,
355,
637,
638,
639,
640,
641,
642,
643,
644,
645,
646,
647,
648,
649,
650,
651,
652,
653,
654,
655,
656,
646,
647,
648,
649,
650,
651,
652,
653,
654,
655,
656,
657,
658,
659,
660,
661,
662,
663,
664,
665,
666,
667,
1569,
1570,
1571,
1572,
1573,
1574,
1575,
1576,
1577,
1578
]
},
{
"tb": 64,
"tbk": 4,
"tl": 199,
"mb": 32,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2953,
2954,
2955,
2956,
2957,
2958,
2959,
2960,
2961,
2962,
2963,
2964,
2965,
2966,
2967,
2968,
2969,
2970,
2960,
2961,
2971,
2972,
2973,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859,
205,
206,
207
]
},
{
"tb": 896,
"tbk": 6,
"tl": 10964,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2974,
2975,
2976,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 1536,
"tbk": 4,
"tl": 279109,
"mb": 1536,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2075,
2076,
2077,
2078,
2079,
2080,
2081,
2082,
2083,
2084,
2085,
2086,
2087,
2088,
2089,
2090,
2091,
2092,
2093,
2094,
2095,
2096,
322,
61,
99
]
},
{
"tb": 256,
"tbk": 4,
"tl": 12,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
2977,
2978,
2979,
2980,
2981,
2979,
2982,
2983,
1243,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 144,
"tbk": 18,
"tl": 339,
"mb": 144,
"mbk": 18,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1780,
1781,
1782,
1783,
1782,
1784,
1785,
1786,
1787,
1788,
1789,
1790,
1791,
1235,
62
]
},
{
"tb": 80,
"tbk": 2,
"tl": 1279284,
"mb": 80,
"mbk": 2,
"gb": 80,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
2465,
2466,
2467,
2468,
2469,
2470,
2471,
2472,
2473,
2474,
2475,
2476,
2477,
2478,
2479,
2480,
2481,
236,
237,
238,
239,
240,
241,
242,
243,
244,
245,
246,
247,
248,
249,
250,
251,
252,
237,
238,
239,
240,
241,
242,
243,
247,
253,
254,
255,
1272
]
},
{
"tb": 78552,
"tbk": 5,
"tl": 221,
"mb": 24648,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2676,
2677,
2678,
2679,
2680,
2681,
2682,
2683,
2684,
2685,
2686,
2687,
2688,
2689,
2690,
2984,
2985,
2986,
2987
]
},
{
"tb": 2304,
"tbk": 28,
"tl": 3,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1106,
1107,
1108,
1109,
1110,
1111,
1112,
1113,
1114,
1115,
1116,
1117,
1118,
1119,
1120,
1118,
1121,
1122,
1123,
1124,
1125,
1126,
1127,
1128,
1129,
1123,
1124,
1130,
1131,
1132,
1133,
1134,
1135,
1136,
1137,
782,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 1920,
"tbk": 24,
"tl": 29,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
733,
734,
735,
736,
737,
738,
739,
740,
741,
742,
743,
744,
741,
745,
746,
747,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
99
]
},
{
"tb": 192,
"tbk": 4,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61,
99
]
},
{
"tb": 736,
"tbk": 2,
"tl": 6159,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1047,
1048,
1049,
1050,
1051,
1052,
268,
269,
270,
271,
272,
273,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
113,
114
]
},
{
"tb": 720,
"tbk": 30,
"tl": 2888,
"mb": 80,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
312,
312,
312,
313,
312,
313
]
},
{
"tb": 160,
"tbk": 1,
"tl": 237,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
557,
558,
559,
560,
1017,
385,
113,
114
]
},
{
"tb": 224,
"tbk": 7,
"tl": 1922,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2988,
2989,
2990,
2991,
2992,
2993,
2994,
2995,
2996,
2997,
2998,
2999,
3000,
3001,
3002,
1579,
1580,
1581,
1582,
1583,
1584,
1585,
1586,
1763,
1764,
1765,
1579,
1580,
1581,
1582,
1583,
1584,
1585,
1586,
3003,
3004,
3005,
3006,
3007,
3008,
3009,
3010,
3011,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 1216,
"tbk": 14,
"tl": 2,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1195,
1196,
1197,
1198,
1199,
1200,
1201,
1202,
1203,
1204,
1205,
1206,
1203,
1207,
1208,
1209,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61,
62
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61,
62
]
},
{
"tb": 180,
"tbk": 1,
"tl": 129,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
3012,
3013,
3014,
3015,
3016,
3017,
3018,
3018,
3019,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 40,
"tbk": 1,
"tl": 29,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3020,
3021,
3022,
3023,
3024,
3025,
3026,
3027,
3028,
3029,
3030,
3031,
1272
]
},
{
"tb": 40,
"tbk": 1,
"tl": 634852,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3032,
3033,
3034,
3035,
3036,
3037,
3038,
3039,
3040,
3041,
3042,
3043,
3044,
3045,
3046,
3047,
3048,
3049,
3050,
3051,
3052,
3053,
3054
]
},
{
"tb": 120,
"tbk": 1,
"tl": 60213,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
100,
101,
102,
103,
104,
105,
106,
107,
108,
109,
110,
111,
112,
61,
62
]
},
{
"tb": 384,
"tbk": 8,
"tl": 75103,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1397,
1398,
1399,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61,
62
]
},
{
"tb": 120,
"tbk": 3,
"tl": 2,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2578,
2579,
2580,
2581,
2582,
2583,
2584,
2585,
2586,
2587,
2588,
2589,
2590,
2591,
2592,
2593,
2594,
2595,
2596,
2597,
2598,
2599,
2600,
1250,
129,
113,
114
]
},
{
"tb": 63,
"tbk": 6,
"tl": 841,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3055,
3056,
3057,
3058,
3059,
3060,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207
]
},
{
"tb": 160,
"tbk": 5,
"tl": 756052,
"mb": 160,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3061,
3062,
3063,
3064,
3065,
3066,
3067,
3068,
3069,
3070,
3066,
3067,
3068,
3071,
3070,
3066,
3067,
3068,
3072,
3073
]
},
{
"tb": 160,
"tbk": 1,
"tl": 322,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
557,
558,
559,
560,
1017,
129,
61,
99
]
},
{
"tb": 64,
"tbk": 2,
"tl": 598,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
123,
124,
1017,
129,
61,
99
]
},
{
"tb": 336000,
"tbk": 375,
"tl": 18411,
"mb": 2688,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3074,
3075,
3076,
3077,
3078,
3079,
3080,
3081,
3082,
3083,
3084,
3085,
3086,
3087,
3088,
3088,
3089,
3090,
3090,
3091,
3092,
3093,
3094,
3095,
3096,
3097,
3098,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207
]
},
{
"tb": 512,
"tbk": 1,
"tl": 488,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
3099,
3100,
3101,
3102,
3103,
3104,
3105,
3106,
529,
530,
531,
532,
533,
534,
535,
536,
537,
538,
539,
540,
541,
542,
543,
544,
545,
546,
547,
548,
548,
549,
550,
551,
552,
553,
554,
555,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
556
]
},
{
"tb": 59520,
"tbk": 930,
"tl": 13704,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3107,
3108,
3109,
3110,
3111,
3112,
3113,
3114,
2601,
2602,
2603,
2604,
2605,
2606,
2602,
2607,
2608,
2609,
2610,
2611,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207
]
},
{
"tb": 165648,
"tbk": 14,
"tl": 343,
"mb": 25392,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2676,
2677,
2678,
2679,
2680,
2681,
2682,
2683,
2684,
2685,
2686,
2687,
2688,
2689,
2690,
3115,
3116,
3117,
3118
]
},
{
"tb": 432,
"tbk": 6,
"tl": 583,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
312,
312,
313,
313,
312,
313
]
},
{
"tb": 1800,
"tbk": 24,
"tl": 11,
"mb": 240,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
312,
313,
312,
313,
313,
314,
315,
316
]
},
{
"tb": 2208,
"tbk": 6,
"tl": 277163,
"mb": 1104,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3119,
3120,
3121,
3122,
3123,
3124,
3125,
3126,
3127,
3128,
3129,
3130,
3131,
3132,
3133,
3134,
3135,
3136,
3137,
3138,
3139,
3140,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 1152,
"tbk": 16,
"tl": 41,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 428,
"tbk": 2,
"tl": 64,
"mb": 428,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1609,
1610,
1611,
1612,
1613,
1614,
1615,
1616,
1617,
1618,
1619,
1620,
1621,
1622,
1623,
1624,
1625,
1626,
1627,
1628,
1629,
1630,
1631,
1235,
62
]
},
{
"tb": 120,
"tbk": 3,
"tl": 14,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
868,
869,
870,
871,
872,
873,
874,
875,
876,
877,
878,
879,
880,
881,
882,
883,
884,
885,
886,
887,
964,
965,
966,
1250,
385,
113,
114
]
},
{
"tb": 432,
"tbk": 18,
"tl": 8,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
312,
313,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 80,
"tbk": 2,
"tl": 8297,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3141,
3142,
3143,
3144,
3145,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 6480,
"tbk": 54,
"tl": 34,
"mb": 528,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
312,
312,
312,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 144,
"tbk": 3,
"tl": 2,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
313,
312,
313,
313,
313,
312
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1766,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
3146,
3147,
3148,
3149,
3150,
3151,
3152,
3153,
529,
530,
531,
532,
533,
534,
535,
536,
537,
538,
539,
540,
541,
542,
543,
544,
545,
546,
547,
548,
548,
549,
550,
551,
552,
553,
554,
555,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
556
]
},
{
"tb": 368,
"tbk": 1,
"tl": 136858,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1244,
1245,
1246,
1247,
1248,
1249,
75,
76,
77,
78,
79,
80,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 448,
"tbk": 4,
"tl": 2644,
"mb": 320,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3154,
3155,
3156,
3157,
3158,
3159,
3160,
3161,
3162,
3163,
3164,
3165,
3166,
3167,
3168,
3169,
3170,
3171,
3172,
3173,
3174,
2995,
2996,
2997,
2998,
2999,
3000,
3001,
3002,
1579,
1580,
1581,
1582,
1583,
1584,
1585,
1586,
1763,
1764,
1765,
1579,
1580,
1581,
1582,
1583,
1584,
1585,
1586,
1763,
1764,
1765,
1766,
1767,
1768,
1769,
1770,
1771,
1772,
1773,
1774,
1775,
205,
206,
207
]
},
{
"tb": 31392,
"tbk": 93,
"tl": 89422,
"mb": 4608,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
313,
313,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 96,
"tbk": 6,
"tl": 21,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
312,
312,
312,
313,
312,
314,
315,
316
]
},
{
"tb": 240,
"tbk": 6,
"tl": 35084,
"mb": 200,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3175,
3176,
3177,
3178,
3179,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 24,
"tbk": 1,
"tl": 634684,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3180,
3181,
3182,
256
]
},
{
"tb": 96,
"tbk": 6,
"tl": 18,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
62
]
},
{
"tb": 40480,
"tbk": 1,
"tl": 417169,
"mb": 40480,
"mbk": 1,
"gb": 40480,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
3099,
3100,
3183,
3184,
3185,
3186,
3187,
3188,
1776,
1777,
1778,
1779
]
},
{
"tb": 524,
"tbk": 3,
"tl": 56,
"mb": 440,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
944,
945,
945,
946,
947,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
1250,
129,
61,
99
]
},
{
"tb": 176,
"tbk": 11,
"tl": 51,
"mb": 32,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
313,
313,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 144,
"tbk": 3,
"tl": 2,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
312,
313,
313,
313,
312,
314,
315,
316
]
},
{
"tb": 24,
"tbk": 1,
"tl": 201233,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1400,
1401,
1402,
1403,
1404,
1405,
1406,
1407,
1408,
1409,
155
]
},
{
"tb": 456928,
"tbk": 171,
"tl": 453719,
"mb": 98304,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3189,
3190,
3191,
3192,
3193,
3194,
3195,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 288,
"tbk": 4,
"tl": 0,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
99
]
},
{
"tb": 960,
"tbk": 8,
"tl": 450,
"mb": 960,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
123,
124,
867,
61,
99
]
},
{
"tb": 560,
"tbk": 28,
"tl": 3,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2212,
2213,
2214,
2215,
2216,
2217,
2218,
2219,
2220,
2221,
2222,
3196,
3197,
3198,
3199,
3200,
3201,
3202,
3203,
99
]
},
{
"tb": 32,
"tbk": 1,
"tl": 634555,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 32,
"ebk": 1,
"fs": [
1236,
1237,
1238,
3204,
3205,
467,
468,
469,
470,
471,
472,
473,
474,
475,
476,
477,
478,
479,
480,
481,
482,
483,
484,
485,
486,
487,
488,
489,
490,
490,
491,
492,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 384,
"tbk": 8,
"tl": 19,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 428,
"tbk": 2,
"tl": 62,
"mb": 428,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1609,
1610,
1611,
1612,
1613,
1614,
1615,
1616,
1617,
1618,
1619,
1620,
1621,
1622,
1623,
1624,
1625,
1626,
1627,
1628,
1629,
1630,
1631,
384,
129,
61,
62
]
},
{
"tb": 160,
"tbk": 5,
"tl": 86,
"mb": 160,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
2124,
2125,
2126,
2127,
2127,
2128,
2129,
2130,
2131,
2132,
2133,
2134,
2135,
2129,
2130,
2136,
2137,
2138,
2132,
2133,
2134,
2139,
2140,
2141,
2142,
1655,
1656,
1657,
62
]
},
{
"tb": 576,
"tbk": 6,
"tl": 12803,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
2143,
2144,
2145,
2146,
2147,
2148,
2149,
2150,
2151,
2152,
2153,
2154,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 2352,
"tbk": 21,
"tl": 5,
"mb": 288,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
312,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 200,
"tbk": 5,
"tl": 13,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
422,
423,
424,
425,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
437,
438,
439,
440,
441,
442,
430,
443,
444,
445,
446,
1410
]
},
{
"tb": 576,
"tbk": 1,
"tl": 634874,
"mb": 576,
"mbk": 1,
"gb": 576,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
791,
792,
3206,
3207,
3208,
3209,
3210,
3211,
3212,
3213,
3214,
3215
]
},
{
"tb": 1584,
"tbk": 22,
"tl": 12,
"mb": 240,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
313,
313,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 2088,
"tbk": 24,
"tl": 10,
"mb": 264,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
313,
312,
313,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 1008,
"tbk": 63,
"tl": 2036,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
2206,
2207,
3216,
3217,
3218,
3219,
3220,
3221,
1452,
1453,
1454,
1455,
1456,
1457,
1453,
1458,
1459,
1460,
1461,
1462,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207
]
},
{
"tb": 4480,
"tbk": 28,
"tl": 1422710,
"mb": 960,
"mbk": 6,
"gb": 960,
"gbk": 6,
"eb": 0,
"ebk": 0,
"fs": [
3222,
3223,
3224,
3225,
3226,
3227,
3228,
3229,
3230,
3231,
3232,
3233,
3234,
3235,
3236,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 672,
"tbk": 18,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
99
]
},
{
"tb": 1760,
"tbk": 14,
"tl": 4182,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3154,
3155,
3156,
3157,
3158,
3159,
3160,
3161,
3162,
3163,
3164,
3165,
3166,
3167,
3168,
3169,
3170,
3171,
3172,
3173,
3174,
2995,
2996,
2997,
2998,
2999,
3000,
3001,
3002,
1579,
1580,
1581,
1582,
1583,
1584,
1585,
1586,
1763,
1764,
1765,
1766,
1767,
1768,
1769,
1770,
1771,
1772,
1773,
1774,
1775,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 960,
"tbk": 36,
"tl": 20,
"mb": 88,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
312,
313,
312,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 240,
"tbk": 6,
"tl": 90,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
868,
869,
870,
871,
872,
873,
874,
875,
876,
877,
878,
879,
880,
881,
882,
883,
884,
885,
886,
887,
964,
965,
966,
967,
385,
61,
62
]
},
{
"tb": 288,
"tbk": 6,
"tl": 26,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
408,
407,
408,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 560,
"tbk": 1,
"tl": 771,
"mb": 560,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1251,
1252,
1253,
1254,
1255,
1256,
1257,
1258,
3237,
3238,
3239,
3240,
3241,
3242,
3243,
3244,
3245,
605,
61,
99
]
},
{
"tb": 110432,
"tbk": 14,
"tl": 333,
"mb": 16928,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3246,
3247,
3248,
3249,
3250,
3251,
3252,
3253,
3254,
3255,
3256,
3257,
3258,
3259,
3260,
3115,
3116,
3117,
3118
]
},
{
"tb": 368,
"tbk": 1,
"tl": 126872,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1047,
1048,
1049,
1050,
1051,
1052,
16,
17,
18,
19,
20,
21,
21,
22,
1150,
1151,
1152,
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1164,
1165,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 416,
"tbk": 6,
"tl": 1,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550
]
},
{
"tb": 532800,
"tbk": 1,
"tl": 417158,
"mb": 532800,
"mbk": 1,
"gb": 532800,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
2533,
2534,
2535,
2536,
2537,
2538,
2539,
2540,
2541,
1776,
1777,
1778,
1779
]
},
{
"tb": 128,
"tbk": 2,
"tl": 617,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
865,
866,
1017,
129,
61,
99
]
},
{
"tb": 64,
"tbk": 2,
"tl": 693,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3261,
3262,
3263,
3264,
3265,
3266,
3267,
3268,
3269,
3270,
3271,
3272,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859,
205,
206,
207
]
},
{
"tb": 1196,
"tbk": 5,
"tl": 99,
"mb": 896,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1273,
1274,
1275,
1276,
1277,
1278,
1279,
1280,
3273,
3274,
3275,
3276,
3277,
3278,
3279,
3280,
3280,
3281,
3282,
3283,
3284,
3285,
3286,
3287,
3288,
3282,
3283,
3289,
3290,
3291,
3285,
3286,
3287,
3292,
3293,
3294,
3295,
3296,
3297,
3298,
155
]
},
{
"tb": 3456,
"tbk": 54,
"tl": 125431,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
981,
982,
983,
984,
985,
986,
987,
988,
984,
985,
986,
989,
283,
61,
99
]
},
{
"tb": 5040,
"tbk": 45,
"tl": 16,
"mb": 432,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
312,
313,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 512,
"tbk": 4,
"tl": 124679,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
1053,
1054,
1055,
1056,
1057,
1058,
322,
113,
114
]
},
{
"tb": 160,
"tbk": 4,
"tl": 20,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
868,
869,
870,
871,
872,
873,
874,
875,
876,
877,
878,
879,
880,
881,
882,
883,
884,
885,
886,
887,
964,
965,
966,
128,
129,
61,
62
]
},
{
"tb": 32,
"tbk": 2,
"tl": 7,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207
]
},
{
"tb": 40,
"tbk": 1,
"tl": 10831,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1874,
1875,
1876,
1877,
1878,
1879,
1880,
1881,
1882,
1883,
1884,
1884,
1885,
1886,
1887,
1888,
1889,
1890,
1891,
1892,
1893,
1894,
1895,
1896,
1897,
1898,
1899,
1900,
1901,
929,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 40,
"tbk": 1,
"tl": 83164,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3299,
3300,
3301,
3302,
3303,
3304,
3305,
3306,
3307,
3308,
3309,
3310,
3311,
3312,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
3313,
3314,
1548,
1549,
1550,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 2160,
"tbk": 30,
"tl": 2888,
"mb": 240,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
312,
312,
312,
313,
312,
313
]
},
{
"tb": 428,
"tbk": 2,
"tl": 22,
"mb": 428,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
2234,
2235,
2236,
2237,
2238,
2239,
2240,
2241,
2241,
2242,
1222,
1223,
1224,
1225,
1226,
1227,
1228,
1229,
1230,
1231,
1232,
1233,
1234,
384,
385,
61,
99
]
},
{
"tb": 336,
"tbk": 14,
"tl": 5,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
312,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 48,
"tbk": 3,
"tl": 10,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
313,
313,
312,
313,
312,
314,
315,
316
]
},
{
"tb": 833280,
"tbk": 930,
"tl": 18351,
"mb": 896,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1444,
1445,
1446,
1447,
1448,
1449,
1450,
1451,
2601,
2602,
2603,
2604,
2605,
2606,
2602,
2607,
2608,
2609,
2610,
2611,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207
]
},
{
"tb": 80,
"tbk": 2,
"tl": 0,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2578,
2579,
2580,
2581,
2582,
2583,
2584,
2585,
2586,
2587,
2588,
2589,
2590,
2591,
2592,
2593,
2594,
2595,
2596,
2597,
2598,
2599,
2600,
128,
385,
113,
114
]
},
{
"tb": 160,
"tbk": 4,
"tl": 13622,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3141,
3142,
3143,
3144,
3145,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 176,
"tbk": 11,
"tl": 342,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2861,
2862,
2863,
2864,
2865,
2866,
2867,
2868,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 864,
"tbk": 6,
"tl": 18654,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
268,
269,
270,
271,
272,
273,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
99
]
},
{
"tb": 288,
"tbk": 12,
"tl": 6,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
313,
312,
313,
313,
313,
312
]
},
{
"tb": 288,
"tbk": 12,
"tl": 1139,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61
]
},
{
"tb": 240,
"tbk": 6,
"tl": 9,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
678,
679,
680,
681,
682,
683,
684,
685,
686,
687,
688,
689,
690,
691,
692,
693,
694,
695,
696,
697,
698,
699,
700,
701,
686,
702,
967,
385,
61,
62
]
},
{
"tb": 360,
"tbk": 1,
"tl": 393,
"mb": 360,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
354,
355,
1006,
1007,
1008,
1009,
1010,
1011,
1012,
1013,
1014,
1015,
1016,
605,
61,
62
]
},
{
"tb": 120,
"tbk": 3,
"tl": 13836,
"mb": 120,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1874,
1875,
1876,
1877,
1878,
1879,
1880,
1881,
1882,
1883,
1884,
1884,
1885,
618,
619,
620,
621,
622,
623,
624,
625,
626,
627,
628,
629,
630,
631,
632,
633,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 672,
"tbk": 18,
"tl": 32,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
407,
408,
408,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 128,
"tbk": 8,
"tl": 36,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 1440,
"tbk": 24,
"tl": 50,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
407,
407,
408,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 192,
"tbk": 2,
"tl": 27,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2256,
2257,
2258,
2259,
2260,
2261,
2262,
2263,
2264,
2265,
2266,
2267,
2268,
2269,
2270,
322,
113,
114
]
},
{
"tb": 269624,
"tbk": 126,
"tl": 338231,
"mb": 65536,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3189,
3190,
3191,
3192,
3193,
3194,
3195,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 192,
"tbk": 1,
"tl": 32,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
257,
258,
259,
260,
261,
262,
263,
264,
265,
266,
267,
268,
269,
270,
271,
272,
273,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
283,
113,
114
]
},
{
"tb": 2016,
"tbk": 18,
"tl": 17,
"mb": 240,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
407,
408,
407,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 1120,
"tbk": 3,
"tl": 401,
"mb": 640,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
557,
558,
2378,
2379,
3315,
3316,
3317,
3318,
3319,
283,
61,
99
]
},
{
"tb": 992,
"tbk": 9,
"tl": 489381,
"mb": 224,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2549,
2550,
2551,
2552,
2553,
2554,
2555,
2556,
2557,
2558,
2559,
2560,
2561,
2562,
2563,
2564,
2565,
2566,
2567,
2568,
2555,
2556,
2560,
2569,
2570,
2571,
2572,
2573,
2574,
2575,
2576,
2577,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 200,
"tbk": 1,
"tl": 639618,
"mb": 200,
"mbk": 1,
"gb": 200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2271,
2272,
2273,
2274,
2275,
2276,
2277,
2278,
2279,
2280,
2281,
2282,
2283,
2284,
2285,
2286,
2287,
2288,
1272
]
},
{
"tb": 288,
"tbk": 6,
"tl": 4,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
312,
312,
312,
313,
312,
314,
315,
316
]
},
{
"tb": 4208,
"tbk": 258,
"tl": 550,
"mb": 176,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1071,
1072,
1073,
1074,
1075,
1076,
1077,
1078,
1079,
1080,
1081,
1082,
1083,
1084,
1085,
1086,
1087,
1088,
1089,
3320,
3321,
3322,
3323,
3324,
3325,
3326,
3327,
3328,
3329,
3330,
3331,
3332,
3333,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 524,
"tbk": 2,
"tl": 73,
"mb": 524,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2691,
2692,
2693,
2694,
2695,
2696,
2697,
2698,
3334,
3335,
3336,
3337,
3338,
3339,
3340,
3341,
3342,
3343,
3344,
3345,
3342,
3346,
3347,
3348,
3349,
3350,
3351,
3352,
3201,
3202,
3203,
62
]
},
{
"tb": 368,
"tbk": 1,
"tl": 252458,
"mb": 368,
"mbk": 1,
"gb": 368,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1047,
1048,
1049,
1050,
1051,
1052,
75,
76,
77,
78,
79,
80,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 1760,
"tbk": 14,
"tl": 6240,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3154,
3155,
3156,
3157,
3158,
3159,
3160,
3161,
3162,
3163,
3164,
3165,
3166,
3167,
3168,
3169,
3170,
3171,
3172,
3173,
3174,
3353,
3354,
3355,
3356,
3357,
3358,
3359,
3360,
290,
291,
292,
293,
294,
295,
296,
297,
298,
299,
300,
1061,
1062,
1063,
1064,
1065,
1066,
1067,
1068,
1069,
1070,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 64,
"tbk": 2,
"tl": 465,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
2851,
2852,
1017,
385,
113,
114
]
},
{
"tb": 368,
"tbk": 1,
"tl": 252456,
"mb": 368,
"mbk": 1,
"gb": 368,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1244,
1245,
1246,
1247,
1248,
1249,
75,
76,
77,
78,
79,
80,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 480,
"tbk": 2,
"tl": 31684,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
557,
558,
2378,
2379,
1171,
1172,
1173,
1174,
1175,
1176,
1177,
1178,
1179,
322,
61,
99
]
},
{
"tb": 37632,
"tbk": 588,
"tl": 76,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2289,
2290,
2291,
2292,
2293,
2294,
2295,
2296,
2297,
2298,
2299,
2300,
2301,
2302,
2303,
2304,
2305,
2306,
2307,
2308,
2309,
2310,
2311,
2312,
2313,
2314,
2315,
2316,
2317,
2318,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 48,
"tbk": 2,
"tl": 186,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
113,
114
]
},
{
"tb": 864,
"tbk": 12,
"tl": 21,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
408,
407,
407,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 600,
"tbk": 24,
"tl": 12,
"mb": 80,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
312,
313,
312,
313,
313,
314,
315,
316
]
},
{
"tb": 368,
"tbk": 1,
"tl": 2725,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1047,
1048,
1049,
1050,
1051,
1052,
16,
17,
18,
19,
20,
21,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 120,
"tbk": 1,
"tl": 18448,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2097,
2098,
2099,
2100,
2101,
2102,
2103,
2104,
2105,
2106,
3361,
3362,
3363,
113,
114
]
},
{
"tb": 2160,
"tbk": 54,
"tl": 4651006,
"mb": 440,
"mbk": 11,
"gb": 440,
"gbk": 11,
"eb": 0,
"ebk": 0,
"fs": [
3299,
3300,
3301,
3302,
3303,
3304,
3305,
3306,
3307,
3308,
3309,
3310,
3311,
3312,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 144,
"tbk": 9,
"tl": 28,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
312,
313,
312,
312,
312,
313
]
},
{
"tb": 768,
"tbk": 6,
"tl": 359848,
"mb": 768,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
3364,
3365,
3366,
3367,
3368,
3369,
3370,
3371,
3372,
3373,
3374,
3375,
3376,
3377,
3378,
3366,
3367,
3368,
3369,
3370,
3371,
3372,
3373,
3374,
3376,
3379,
3380,
3381,
3382,
61,
99
]
},
{
"tb": 480,
"tbk": 2,
"tl": 23,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
557,
558,
1872,
1873,
867,
61,
99
]
},
{
"tb": 288,
"tbk": 1,
"tl": 252434,
"mb": 288,
"mbk": 1,
"gb": 288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1138,
1139,
1140,
1141,
1142,
1143,
1144,
1145,
1146,
1147,
1148,
1149,
75,
76,
77,
78,
79,
80,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 232,
"tbk": 4,
"tl": 0,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
564,
565,
566,
567,
568,
569,
570,
1410
]
},
{
"tb": 96,
"tbk": 6,
"tl": 81,
"mb": 32,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
407,
407,
407,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 144,
"tbk": 3,
"tl": 3,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
312,
313,
312,
313,
313,
313
]
},
{
"tb": 1196,
"tbk": 3,
"tl": 35,
"mb": 1016,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
1658,
1659,
1660,
1661,
1662,
1663,
1664,
1664,
1665,
1666,
1667,
1668,
1669,
1670,
1671,
1672,
1673,
1667,
1674,
1675,
1676,
1669,
1670,
1671,
1677,
1678,
1679,
1680,
1681,
1682,
1683,
1684,
1250,
129,
61,
99
]
},
{
"tb": 24000,
"tbk": 375,
"tl": 462,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3383,
3384,
3385,
3386,
3387,
3388,
3389,
3390,
3082,
3083,
3084,
3085,
3086,
3087,
3088,
3088,
3089,
3090,
3090,
3091,
3092,
3093,
3094,
3095,
3096,
3097,
3098,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207
]
},
{
"tb": 160,
"tbk": 4,
"tl": 1385,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2988,
2989,
2990,
2991,
2992,
2993,
2994,
2995,
2996,
2997,
2998,
2999,
3000,
3001,
3002,
1766,
1767,
1768,
1769,
1770,
1771,
1772,
1773,
1774,
1775,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 960,
"tbk": 8,
"tl": 5084,
"mb": 960,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
123,
124,
867,
113,
114
]
},
{
"tb": 800,
"tbk": 4,
"tl": 13581,
"mb": 400,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3391,
3392,
3393,
3394,
3395,
1243,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 160,
"tbk": 5,
"tl": 115,
"mb": 160,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
3396,
3397,
3398,
3399,
3399,
3400,
3401,
3402,
3403,
3404,
3405,
3406,
3407,
3401,
3402,
3408,
3409,
3410,
3404,
3405,
3406,
3411,
3412,
3413,
3414,
3415,
3416,
3417,
1410
]
},
{
"tb": 1344,
"tbk": 12,
"tl": 16585,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61,
99
]
},
{
"tb": 672,
"tbk": 1,
"tl": 975,
"mb": 672,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
748,
749,
750,
751,
752,
753,
754,
755,
756,
789,
61,
99
]
},
{
"tb": 160,
"tbk": 1,
"tl": 266,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
557,
558,
559,
560,
1017,
385,
61,
99
]
},
{
"tb": 1728,
"tbk": 24,
"tl": 7,
"mb": 144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
313,
312,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 2208,
"tbk": 6,
"tl": 18504,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1047,
1048,
1049,
1050,
1051,
1052,
268,
269,
270,
271,
272,
273,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
113,
114
]
},
{
"tb": 96,
"tbk": 2,
"tl": 11,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2612,
2613,
2614,
2615,
2616,
2617,
2618,
2619,
2620,
2621,
2622,
2623,
2624,
2625,
2626,
2627,
2628,
2629,
2630,
3418,
3419,
3420,
3421,
3422,
3423,
3424,
3425,
3426,
3427,
3428,
3429,
823,
824,
825,
826,
827,
828,
829,
826,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859
]
},
{
"tb": 120,
"tbk": 1,
"tl": 19304,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2097,
2098,
2099,
2100,
2101,
2102,
2103,
2104,
2105,
2106,
3361,
3362,
3363,
61,
62
]
},
{
"tb": 192,
"tbk": 12,
"tl": 40,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
312,
312,
313,
312,
313,
313
]
},
{
"tb": 864,
"tbk": 12,
"tl": 63,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
408,
408,
408,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 240,
"tbk": 6,
"tl": 21,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
868,
869,
870,
871,
872,
873,
874,
875,
876,
877,
878,
879,
880,
881,
882,
883,
884,
885,
886,
887,
964,
965,
966,
967,
385,
113,
114
]
},
{
"tb": 960,
"tbk": 4,
"tl": 11,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
3099,
3100,
3183,
3184,
3185,
3186,
3187,
3188,
2542,
2543,
2544,
3430,
3431,
3432,
3433
]
},
{
"tb": 3632,
"tbk": 32,
"tl": 12464,
"mb": 736,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3434,
3435,
3436,
3437,
3438,
3439,
3440,
3441,
3437,
3438,
3439,
3442,
283,
61,
62
]
},
{
"tb": 96,
"tbk": 6,
"tl": 301,
"mb": 32,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
408,
407,
407,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 128,
"tbk": 4,
"tl": 126822,
"mb": 128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
1053,
1054,
1055,
1056,
1057,
1058,
322,
61,
62
]
},
{
"tb": 80,
"tbk": 5,
"tl": 15,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
407,
409,
410,
411,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
62
]
},
{
"tb": 600,
"tbk": 3,
"tl": 308084,
"mb": 600,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3443,
3444,
3445,
3446,
3447,
3448,
3449,
3450,
3451,
3452,
3453,
3453,
3454,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
1396,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 720,
"tbk": 10,
"tl": 2,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
408,
409,
410,
411,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
113,
114
]
},
{
"tb": 200,
"tbk": 1,
"tl": 2692,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1384,
1385,
1386,
1387,
1388,
1389,
1390,
1391,
1392,
1393,
1394,
1394,
1395,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 300,
"tbk": 3,
"tl": 54,
"mb": 248,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1273,
1274,
1275,
1276,
1277,
1278,
1279,
1280,
1433,
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
1441,
1442,
1443,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
128,
129,
61,
62
]
},
{
"tb": 432,
"tbk": 9,
"tl": 5,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
312,
313,
312,
312,
312,
313
]
},
{
"tb": 1328,
"tbk": 1,
"tl": 19,
"mb": 1328,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
596,
597,
598,
599,
600,
601,
602,
603,
604,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
556
]
},
{
"tb": 524,
"tbk": 3,
"tl": 57,
"mb": 440,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
944,
945,
945,
946,
947,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
967,
129,
61,
62
]
},
{
"tb": 7904,
"tbk": 8,
"tl": 114,
"mb": 1976,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2048,
2049,
2050,
2051,
2052,
2053,
2054,
2055,
2056,
2057,
2058,
2059,
2060,
3455,
3456,
3457,
3458,
3459,
3460,
3461,
3462,
3463,
3464,
3465,
3466,
3467,
3468,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 192,
"tbk": 4,
"tl": 1,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
113,
114
]
},
{
"tb": 320,
"tbk": 4,
"tl": 482,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
126,
127,
1250,
129,
61,
62
]
},
{
"tb": 192,
"tbk": 4,
"tl": 13653,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3469,
3470,
3471,
3472,
3473,
3474,
3475,
3476,
3477,
3478,
3479,
3480,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 128,
"tbk": 1,
"tl": 111,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
990,
991,
1744,
1745,
967,
385,
61,
99
]
},
{
"tb": 288,
"tbk": 1,
"tl": 137489,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1138,
1139,
1140,
1141,
1142,
1143,
1144,
1145,
1146,
1147,
1148,
1149,
75,
76,
77,
78,
79,
80,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 288,
"tbk": 6,
"tl": 305,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
407,
407,
408,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 288,
"tbk": 6,
"tl": 1,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
99
]
},
{
"tb": 304560,
"tbk": 8,
"tl": 350,
"mb": 160512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
3099,
3100,
3183,
3184,
3185,
3186,
3187,
3188,
2542,
2543,
2544,
3115,
3116,
3117,
3118
]
},
{
"tb": 768,
"tbk": 12,
"tl": 36807,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
12,
13,
14,
15,
268,
269,
270,
271,
272,
273,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
113,
114
]
},
{
"tb": 224,
"tbk": 7,
"tl": 2720,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2988,
2989,
2990,
2991,
2992,
2993,
2994,
3353,
3354,
3355,
3356,
3357,
3358,
3359,
3360,
290,
291,
292,
293,
294,
295,
296,
297,
298,
299,
300,
290,
291,
292,
293,
294,
295,
296,
297,
301,
302,
303,
304,
305,
306,
307,
308,
309,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 120,
"tbk": 3,
"tl": 14049,
"mb": 120,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1874,
1875,
1876,
1877,
1878,
1879,
1880,
1881,
1882,
1883,
1884,
1884,
1885,
1886,
1887,
1888,
1889,
1890,
1891,
1892,
1893,
1894,
1895,
1896,
1897,
1898,
1899,
1900,
1901,
782,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 2976,
"tbk": 30,
"tl": 33,
"mb": 576,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
407,
407,
407,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 80,
"tbk": 2,
"tl": 5,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
678,
679,
680,
681,
682,
683,
684,
685,
686,
687,
688,
689,
690,
691,
692,
693,
694,
695,
696,
697,
698,
699,
700,
701,
686,
702,
128,
385,
61,
62
]
},
{
"tb": 48,
"tbk": 3,
"tl": 12,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
312,
312,
313,
313,
312,
313
]
},
{
"tb": 4060,
"tbk": 35,
"tl": 709,
"mb": 696,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3481,
3482,
3483,
3484,
3485,
3486,
3487,
3488,
3489,
3490,
3491,
3492,
3493,
3494,
2061,
2062,
2063,
2064,
2065,
2066,
2067,
2068,
2069,
2070,
2071,
2072,
2073,
2074,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 7944,
"tbk": 33,
"tl": 352,
"mb": 1536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2612,
2613,
2614,
2615,
2616,
2617,
2618,
2619,
2620,
2621,
2622,
2623,
2624,
2625,
2626,
2627,
2628,
2629,
2630,
1483,
1484,
1485,
1486,
1487,
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
823,
824,
825,
826,
827,
828,
829,
826,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 448,
"tbk": 7,
"tl": 2968,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
2942,
2943,
2944,
2945,
2946,
2947,
2948,
2949,
2950,
2950,
2951,
2952,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
1551,
1552,
1553,
1554,
1555,
1556,
1557,
1558,
1559,
1560,
290,
291,
292,
293,
294,
295,
296,
297,
298,
299,
300
]
},
{
"tb": 70560,
"tbk": 30,
"tl": 17748,
"mb": 3120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1338,
1339,
1340,
1341,
1342,
1343,
1344,
1345,
1346,
1347,
1348,
1696,
1697,
1698,
1699,
1700,
1701,
1702,
1703,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 4640,
"tbk": 29,
"tl": 1490029,
"mb": 800,
"mbk": 5,
"gb": 640,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
3222,
3223,
3224,
3225,
3226,
3227,
3228,
3229,
3230,
3231,
3232,
3233,
3234,
3235,
3236,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 480,
"tbk": 15,
"tl": 7419,
"mb": 96,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
284,
285,
286,
287,
288,
289,
290,
291,
292,
293,
294,
295,
296,
297,
298,
299,
300,
1061,
1062,
1063,
1064,
1065,
1066,
1067,
1068,
1069,
1070,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 5849088,
"tbk": 6528,
"tl": 89109,
"mb": 2688,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1444,
1445,
1446,
1447,
1448,
1449,
1450,
1451,
2601,
2602,
2603,
2604,
2605,
2606,
2602,
2607,
2608,
2609,
2610,
2611,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 256,
"tbk": 4,
"tl": 12,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3154,
3155,
3156,
3157,
3158,
3159,
3160,
3161,
3162,
3495,
3496,
3497,
3498,
3499,
3500,
3501,
3499,
3502,
3503,
1243,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 192,
"tbk": 4,
"tl": 353,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1463,
1464,
1465,
1466,
1467,
1468,
1469,
1470,
1471,
1472,
1473,
1474,
1475,
1476,
1477,
1478,
1479,
1480,
1481,
1482,
3418,
3419,
3420,
3421,
3422,
3423,
3424,
3425,
3426,
3427,
3428,
3429,
823,
824,
825,
826,
827,
828,
829,
826,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 216432,
"tbk": 4,
"tl": 200,
"mb": 121248,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
791,
792,
3206,
3207,
3208,
3209,
3210,
3211,
3504,
3505,
3506,
909,
910,
911,
912
]
},
{
"tb": 192,
"tbk": 2,
"tl": 18766,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1210,
1211,
1561,
1562,
1563,
1564,
1565,
1566,
1567,
1563,
1564,
1565,
1568,
322,
61,
99
]
},
{
"tb": 96,
"tbk": 6,
"tl": 27,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
407,
407,
408,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 560,
"tbk": 15,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
407,
409,
410,
411,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
99
]
},
{
"tb": 1200,
"tbk": 6,
"tl": 273447,
"mb": 400,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3507,
3508,
3509,
3510,
3511,
3512,
3513,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 180,
"tbk": 1,
"tl": 109,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
3514,
3515,
3516,
3517,
3518,
3519,
3520,
3520,
3521,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 96,
"tbk": 3,
"tl": 762,
"mb": 96,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
865,
866,
1017,
385,
61,
99
]
},
{
"tb": 180,
"tbk": 1,
"tl": 142,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
3012,
3013,
3014,
3015,
3016,
3017,
3018,
3018,
3019,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 48,
"tbk": 1,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
62
]
},
{
"tb": 64,
"tbk": 2,
"tl": 22010,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
1053,
1054,
1055,
1056,
1057,
1058,
283,
61,
99
]
},
{
"tb": 96,
"tbk": 2,
"tl": 20,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
2243,
2244,
2245,
2246,
1235,
62
]
},
{
"tb": 288,
"tbk": 6,
"tl": 126,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
407,
408,
407,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 512,
"tbk": 4,
"tl": 85,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
990,
991,
992,
993,
994,
995,
994,
996,
997,
998,
999,
1000,
1001,
1002,
1003,
384,
129,
113,
114
]
},
{
"tb": 2304,
"tbk": 36,
"tl": 110582,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
12,
13,
14,
15,
268,
269,
270,
271,
272,
273,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
113,
114
]
},
{
"tb": 112,
"tbk": 7,
"tl": 22,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
313,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 2592,
"tbk": 18,
"tl": 17677,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
1373,
1374,
1375,
1376,
1377,
1378,
1379,
1380,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 400,
"tbk": 2,
"tl": 1269481,
"mb": 400,
"mbk": 2,
"gb": 400,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
2631,
2632,
2633,
2634,
2635,
2636,
2637,
2638,
2639,
2640,
2641,
2642,
2643,
2644,
2645,
2646,
2647,
2648,
256
]
},
{
"tb": 672,
"tbk": 6,
"tl": 3458,
"mb": 384,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
314,
315,
316,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
61,
99
]
},
{
"tb": 64,
"tbk": 2,
"tl": 649,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
2851,
2852,
1017,
385,
61,
62
]
},
{
"tb": 70560,
"tbk": 30,
"tl": 18460,
"mb": 3120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1338,
1339,
1340,
1341,
1342,
1343,
1344,
1345,
1346,
1347,
1348,
1696,
1697,
1698,
1699,
1700,
1701,
1702,
1703,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 40,
"tbk": 1,
"tl": 639688,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3522,
3523,
3524,
3525,
3526,
3527,
3528,
3529
]
},
{
"tb": 232,
"tbk": 4,
"tl": 1,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
380,
381,
382,
383,
1235,
62
]
},
{
"tb": 300,
"tbk": 3,
"tl": 21,
"mb": 248,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1273,
1274,
1275,
1276,
1277,
1278,
1279,
1280,
1433,
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
1441,
1442,
1443,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
888,
889,
890,
891,
892,
893,
62
]
},
{
"tb": 80,
"tbk": 5,
"tl": 22,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207
]
},
{
"tb": 357,
"tbk": 48,
"tl": 4818,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3055,
3056,
3057,
3058,
3059,
3060,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 384,
"tbk": 16,
"tl": 31,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 256,
"tbk": 16,
"tl": 545,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3530,
3531,
3532,
3533,
3534,
3535,
3536,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 84,
"tbk": 1,
"tl": 19,
"mb": 84,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1251,
1252,
1253,
1254,
1255,
1256,
1257,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
1265,
1266,
1267,
1268,
1269,
1270,
1271,
236,
237,
238,
239,
240,
241,
242,
243,
244,
245,
246,
247,
248,
249,
250,
251,
252,
237,
238,
239,
240,
241,
242,
243,
247,
253,
254,
255,
256
]
},
{
"tb": 24,
"tbk": 1,
"tl": 4728,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1400,
1401,
1402,
1403,
1404,
1405,
1406,
1407,
1408,
1409,
556
]
},
{
"tb": 200,
"tbk": 1,
"tl": 242232,
"mb": 200,
"mbk": 1,
"gb": 200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1384,
1385,
1386,
1387,
1388,
1389,
1390,
1391,
1392,
1393,
1394,
1394,
1395,
1150,
1151,
1152,
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1164,
1165,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 192,
"tbk": 2,
"tl": 64,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
2431,
2432,
2433,
2434,
2435,
2436,
2437,
2438,
2439,
2440,
2441,
2442,
2443,
2444,
2445,
2446,
2447,
2448,
2449,
2450,
2451,
2452,
2453,
2454,
2455,
2446,
2447,
2449,
2456,
384,
385,
113,
114
]
},
{
"tb": 672,
"tbk": 1,
"tl": 1968,
"mb": 672,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
748,
749,
750,
751,
752,
753,
754,
755,
756,
605,
61,
99
]
},
{
"tb": 560,
"tbk": 1,
"tl": 8,
"mb": 560,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
2792,
2793,
2794,
2795,
2796,
2797,
2798,
2799,
2799,
2800,
2801,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
888,
889,
890,
891,
892,
893,
99
]
},
{
"tb": 528,
"tbk": 11,
"tl": 23,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
312,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 2344896,
"tbk": 165,
"tl": 519431,
"mb": 442368,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
1945,
1946,
1947,
1948,
1949,
1950,
1951,
1952,
1953,
1954,
1955,
1956,
1957,
1958,
1959,
1960,
1961,
1962,
1963,
1964,
1965,
1966,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 84,
"tbk": 1,
"tl": 7090,
"mb": 84,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
1166,
1167,
1168,
1169,
1170,
3315,
3316,
3317,
3318,
3319,
283,
61,
62
]
},
{
"tb": 216,
"tbk": 9,
"tl": 82,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2484,
2485,
2486,
2487,
2488,
2489,
2490,
2491,
2492,
2493,
2494,
2495,
2496,
2497,
2498,
2499,
2500,
2501,
2502,
2503,
2504,
2501,
2505,
2506,
2507,
2508,
2509,
2510,
2511,
2512,
823,
824,
825,
826,
827,
828,
829,
826,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 513312,
"tbk": 96,
"tl": 335679,
"mb": 98304,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
1945,
3537,
3538,
3539,
3540,
3541,
3542,
3543,
3544,
3545,
3546,
3547,
3548,
3549,
3550,
3551,
3552,
3553,
3554,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207
]
},
{
"tb": 1752,
"tbk": 16,
"tl": 2,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1106,
1107,
1108,
1109,
1110,
1111,
1112,
1113,
1114,
1115,
1116,
1117,
1118,
1119,
1120,
1118,
1121,
1122,
1123,
1124,
1125,
1126,
1127,
1128,
1129,
1123,
1124,
1130,
1131,
1132,
1133,
1134,
1135,
1136,
1137,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 48,
"tbk": 3,
"tl": 10,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
313,
312,
313,
313,
313,
312
]
},
{
"tb": 4208,
"tbk": 258,
"tl": 447,
"mb": 176,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1071,
1072,
1073,
1074,
1075,
1076,
1077,
1078,
1079,
1080,
1081,
1082,
1083,
1084,
1085,
1086,
1087,
1088,
1089,
3320,
3321,
3322,
3323,
3324,
3325,
3326,
3327,
3328,
3329,
3330,
3331,
3332,
3333,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 864,
"tbk": 12,
"tl": 28,
"mb": 144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
408,
407,
407,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 10584,
"tbk": 3,
"tl": 5269,
"mb": 6048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2649,
2650,
2651,
2652,
2653,
2654,
2655,
2656,
2657,
2658,
2659,
2660,
2661,
2662,
2663,
2664,
2665,
1497,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1502,
1506,
1507,
1508,
1509,
1510,
1511,
1512,
1513,
1514,
1515,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 236,
"tbk": 2,
"tl": 38,
"mb": 236,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
944,
945,
945,
946,
947,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
1250,
385,
61,
62
]
},
{
"tb": 160,
"tbk": 4,
"tl": 8,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
678,
679,
680,
681,
682,
683,
684,
685,
686,
687,
688,
689,
690,
691,
692,
693,
694,
695,
696,
697,
698,
699,
700,
701,
686,
702,
128,
129,
113,
114
]
},
{
"tb": 180,
"tbk": 1,
"tl": 144,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
766,
767,
768,
769,
770,
771,
772,
773,
2853,
2854,
2855,
2856,
2857,
2858,
2859,
2859,
2860,
1886,
1887,
1888,
1889,
1890,
1891,
1892,
1893,
1894,
1895,
1896,
1897,
1898,
1899,
1900,
1901,
929,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 400,
"tbk": 2,
"tl": 177784,
"mb": 400,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3443,
3444,
3445,
3446,
3447,
3448,
3449,
3450,
3451,
3452,
3453,
3453,
3454,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
1243,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 40,
"tbk": 1,
"tl": 201094,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
158,
159,
160,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
170,
171,
172,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
1551,
1552,
1553,
1554,
1555,
1556,
1557,
1558,
1559,
1560,
290,
291,
292,
293,
294,
295,
296,
297,
298,
299,
300,
290,
291,
292,
293,
294,
295,
296,
297,
298,
299,
300
]
},
{
"tb": 576,
"tbk": 4,
"tl": 168,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2649,
2650,
2651,
2652,
2653,
2654,
2655,
2656,
2657,
2658,
2659,
2660,
2661,
2662,
2663,
2664,
2665,
823,
824,
825,
826,
827,
828,
829,
826,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859,
205,
206,
207
]
},
{
"tb": 168,
"tbk": 2,
"tl": 0,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1106,
1107,
1108,
1109,
1110,
1111,
1112,
1113,
1114,
1115,
1116,
1117,
1118,
1119,
1120,
1118,
1121,
1357,
1358,
1359,
1360,
1361,
1362,
1363,
1364,
1358,
1359,
1365,
1366,
1367,
1368,
1369,
1370,
1371,
1372,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 864,
"tbk": 12,
"tl": 1149,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
312,
312,
313,
313,
312,
314,
315,
316
]
},
{
"tb": 96,
"tbk": 1,
"tl": 81,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1210,
1211,
1212,
1213,
1214,
384,
129,
61,
99
]
},
{
"tb": 24,
"tbk": 1,
"tl": 14,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3555,
3556,
3557,
3558,
3559,
3560,
3561,
3562,
3563,
3564,
3565
]
},
{
"tb": 2480,
"tbk": 62,
"tl": 1397841,
"mb": 440,
"mbk": 11,
"gb": 160,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
158,
159,
160,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
170,
171,
172,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 6912,
"tbk": 108,
"tl": 91743,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
2844,
2845,
2846,
2847,
2848,
2849,
2850,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 96,
"tbk": 6,
"tl": 46,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
407,
408,
408,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 78552,
"tbk": 5,
"tl": 239,
"mb": 24648,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3566,
3567,
3568,
3569,
3570,
3571,
3572,
3573,
3574,
3575,
3576,
3577,
3578,
3579,
3580,
2984,
2985,
2986,
2987
]
},
{
"tb": 1152,
"tbk": 6,
"tl": 54269,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3581,
3582,
3583,
3584,
3585,
3586,
3587,
3588,
3589,
3590,
2118,
2119,
2120,
2121,
2119,
2122,
2123,
1243,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 1216,
"tbk": 14,
"tl": 1,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
733,
734,
735,
736,
737,
738,
739,
740,
741,
742,
743,
744,
741,
745,
746,
747,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61,
99
]
},
{
"tb": 96,
"tbk": 2,
"tl": 1,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
61
]
},
{
"tb": 80,
"tbk": 2,
"tl": 282036,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3299,
3300,
3301,
3302,
3303,
3304,
3305,
3306,
3307,
3308,
3309,
3310,
3311,
3312,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
3591,
3592,
3593,
3594,
3595,
3596,
3597,
3598,
3599
]
},
{
"tb": 4060,
"tbk": 35,
"tl": 604,
"mb": 696,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3481,
3482,
3483,
3484,
3485,
3486,
3487,
3488,
3489,
3490,
3491,
3492,
3493,
3494,
3455,
3456,
3457,
3458,
3459,
3460,
3461,
3462,
3463,
3464,
3465,
3466,
3467,
3468,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 96,
"tbk": 2,
"tl": 4833,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2749,
2750,
2751,
2752,
2753,
2754,
2755,
2756,
2757,
2758,
2759,
2760,
2761,
2762,
2763,
2763,
2764,
1886,
1887,
1888,
1889,
1890,
1891,
1892,
1893,
1894,
1895,
1896,
1897,
1898,
1899,
1900,
1901,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 768,
"tbk": 6,
"tl": 1553,
"mb": 768,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
123,
124,
1017,
385,
61,
99
]
},
{
"tb": 40,
"tbk": 1,
"tl": 1355,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
158,
159,
160,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
170,
171,
172,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
197,
198,
199,
200,
201,
202,
203,
204,
205,
206,
207,
1239,
1240,
181,
182,
183,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502
]
},
{
"tb": 513312,
"tbk": 96,
"tl": 1406906,
"mb": 98496,
"mbk": 4,
"gb": 98496,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1210,
1211,
3600,
3601,
3602,
3603,
3604,
3605,
3606,
3607,
3608,
3609,
3610,
3611,
3612,
3613,
3614,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 720,
"tbk": 15,
"tl": 10,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
313,
312,
312,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 768,
"tbk": 6,
"tl": 43110,
"mb": 640,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2802,
2803,
2804,
2805,
2806,
2807,
2808,
2809,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 80,
"tbk": 2,
"tl": 6,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
678,
679,
680,
681,
682,
683,
684,
685,
686,
687,
688,
689,
690,
691,
692,
693,
694,
695,
696,
697,
698,
699,
700,
701,
686,
702,
1250,
129,
61,
62
]
},
{
"tb": 4992,
"tbk": 78,
"tl": 2674144,
"mb": 768,
"mbk": 12,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
3615,
3616,
3617,
3618,
3619,
3620,
3621,
3622,
3623,
3624,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 64,
"tbk": 2,
"tl": 21654,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
1053,
1054,
1055,
1056,
1057,
1058,
283,
113,
114
]
},
{
"tb": 288,
"tbk": 3,
"tl": 11337,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1210,
1211,
1561,
1562,
1563,
1564,
1565,
1566,
1567,
1563,
1564,
1565,
1568,
283,
61,
62
]
},
{
"tb": 576,
"tbk": 3,
"tl": 55,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
257,
258,
259,
260,
261,
262,
263,
264,
265,
266,
267,
3625,
3626,
3627,
3628,
3629,
3630,
3631,
3632,
3633,
3634,
3635,
3636,
256
]
},
{
"tb": 144,
"tbk": 2,
"tl": 0,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
61,
99
]
},
{
"tb": 384,
"tbk": 2,
"tl": 5637,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
2110,
2111,
3637,
3638,
3639,
3640,
3641,
3642,
2024,
2025,
2026,
2027,
2025,
2028,
2029,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 80,
"tbk": 2,
"tl": 200217,
"mb": 80,
"mbk": 2,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
158,
159,
160,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
170,
171,
172,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
1239,
1240,
181,
182,
183,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
1239,
1240,
181,
182,
183
]
},
{
"tb": 384,
"tbk": 4,
"tl": 1095,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
803,
804,
805,
806,
807,
808,
809,
810,
811,
812,
813,
814,
811,
815,
816,
817,
818,
819,
820,
821,
822,
823,
824,
825,
826,
827,
828,
829,
826,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859,
205,
206,
207
]
},
{
"tb": 6952,
"tbk": 35,
"tl": 11304,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3189,
3190,
3191,
3192,
3193,
3194,
3195,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 2600,
"tbk": 9,
"tl": 11283,
"mb": 1416,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3261,
3262,
3263,
3264,
3265,
3266,
3267,
3268,
3269,
3270,
3271,
3272,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 3456,
"tbk": 54,
"tl": 1941103,
"mb": 3456,
"mbk": 54,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
1726,
1727,
1728,
1729,
1730,
1731,
1732,
1733,
1734,
1735,
1736,
1737,
1738,
1739,
1740,
1741,
1742,
1743,
283,
61,
99
]
},
{
"tb": 800,
"tbk": 5,
"tl": 1388,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
354,
355,
637,
638,
639,
640,
641,
642,
643,
644,
645,
646,
647,
648,
649,
650,
651,
652,
653,
654,
655,
656,
657,
658,
659,
660,
661,
662,
663,
664,
665,
666,
667,
1569,
1570,
1571,
1572,
1573,
1574,
1575,
1576,
1577,
1578,
1766,
1767,
1768,
1769,
1770,
1771,
1772,
1773,
1774,
1775,
205,
206,
207
]
},
{
"tb": 896,
"tbk": 6,
"tl": 10814,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2974,
2975,
2976,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 1536,
"tbk": 4,
"tl": 277595,
"mb": 1536,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2075,
2076,
2077,
2078,
2079,
2080,
2081,
2082,
2083,
2084,
2085,
2086,
2087,
2088,
2089,
2090,
2091,
2092,
2093,
2094,
2095,
2096,
322,
61,
62
]
},
{
"tb": 236,
"tbk": 2,
"tl": 35,
"mb": 236,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
944,
945,
945,
946,
947,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
1250,
385,
113,
114
]
},
{
"tb": 128,
"tbk": 2,
"tl": 5,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
2977,
2978,
2979,
2980,
2981,
2979,
2982,
2983,
1396,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 2880,
"tbk": 36,
"tl": 18,
"mb": 264,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
312,
313,
312,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 1632,
"tbk": 34,
"tl": 2837745,
"mb": 288,
"mbk": 6,
"gb": 288,
"gbk": 6,
"eb": 0,
"ebk": 0,
"fs": [
1397,
1398,
1399,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 671104,
"tbk": 749,
"tl": 10548,
"mb": 1792,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3074,
3075,
3076,
3077,
3078,
3079,
3080,
3081,
3082,
3083,
3084,
3085,
3086,
3087,
3088,
3088,
3089,
3090,
3090,
3091,
3092,
3093,
3094,
3095,
3096,
3097,
3098,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 80,
"tbk": 5,
"tl": 15,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
408,
409,
410,
411,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
62
]
},
{
"tb": 816,
"tbk": 24,
"tl": 613,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
312,
312,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 560,
"tbk": 1,
"tl": 727,
"mb": 560,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1251,
1252,
1253,
1254,
1255,
1256,
1257,
1258,
3237,
3238,
3239,
3240,
3241,
3242,
3243,
3244,
3245,
789,
61,
99
]
},
{
"tb": 300,
"tbk": 3,
"tl": 41,
"mb": 248,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1273,
1274,
1275,
1276,
1277,
1278,
1279,
1280,
1433,
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
1441,
1442,
1443,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
1250,
385,
61,
62
]
},
{
"tb": 1680,
"tbk": 45,
"tl": 18,
"mb": 144,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
312,
313,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 288,
"tbk": 12,
"tl": 37,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
408,
408,
408,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 535680,
"tbk": 8,
"tl": 302,
"mb": 245400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
894,
895,
896,
897,
898,
899,
900,
901,
902,
903,
904,
905,
906,
907,
908,
2545,
2546,
2547,
2548
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61,
99
]
},
{
"tb": 160,
"tbk": 1,
"tl": 319,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
557,
558,
559,
560,
1017,
129,
61,
62
]
},
{
"tb": 144,
"tbk": 1,
"tl": 59992,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
100,
101,
102,
103,
104,
105,
106,
107,
108,
109,
3380,
3381,
3382,
61,
99
]
},
{
"tb": 1296,
"tbk": 9,
"tl": 20971,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
981,
982,
983,
984,
985,
986,
987,
988,
984,
985,
986,
989,
283,
61,
99
]
},
{
"tb": 240,
"tbk": 15,
"tl": 49,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
313,
312,
312,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 32,
"tbk": 2,
"tl": 78,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2231,
2232,
2233,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 864,
"tbk": 12,
"tl": 5,
"mb": 144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
312,
313,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 256,
"tbk": 4,
"tl": 13,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3154,
3155,
3156,
3157,
3158,
3159,
3160,
3161,
3162,
3495,
3496,
3497,
3498,
3499,
3500,
3501,
3499,
3502,
3503,
1243,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 3717120,
"tbk": 134,
"tl": 1428113,
"mb": 783840,
"mbk": 6,
"gb": 783840,
"gbk": 6,
"eb": 0,
"ebk": 0,
"fs": [
1913,
1914,
1915,
1916,
1917,
1918,
1919,
1920,
1921,
1922,
1923,
1924,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 1680,
"tbk": 15,
"tl": 308550,
"mb": 384,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550
]
},
{
"tb": 1220,
"tbk": 2,
"tl": 49,
"mb": 1072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
3643,
3644,
3645,
3646,
3647,
3648,
3649,
3650,
3650,
3651,
3652,
3653,
3654,
3655,
3656,
3657,
3658,
3652,
3653,
3659,
3660,
3661,
3655,
3656,
3657,
3662,
3663,
3664,
3665,
3666,
3667,
3668,
155
]
},
{
"tb": 480,
"tbk": 15,
"tl": 802,
"mb": 480,
"mbk": 15,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
3396,
3397,
3398,
3399,
3399,
3400,
3401,
3402,
3403,
3404,
3405,
3406,
3407,
3401,
3402,
3408,
3409,
3410,
3404,
3405,
3406,
3411,
3412,
3413,
3414,
3415,
3416,
3417,
155
]
},
{
"tb": 672,
"tbk": 1,
"tl": 1024,
"mb": 672,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
748,
749,
750,
751,
752,
753,
754,
755,
756,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
556
]
},
{
"tb": 256,
"tbk": 8,
"tl": 5101,
"mb": 256,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
123,
124,
867,
113,
114
]
},
{
"tb": 288,
"tbk": 12,
"tl": 60,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
408,
407,
408,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 864,
"tbk": 12,
"tl": 6,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
313,
313,
312,
312,
313,
314,
315,
316
]
},
{
"tb": 300,
"tbk": 3,
"tl": 61,
"mb": 248,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1273,
1274,
1275,
1276,
1277,
1278,
1279,
1280,
1433,
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
1441,
1442,
1443,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
967,
129,
61,
62
]
},
{
"tb": 640,
"tbk": 8,
"tl": 627,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
126,
127,
967,
129,
113,
114
]
},
{
"tb": 288,
"tbk": 6,
"tl": 18,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
407,
408,
407,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 128,
"tbk": 1,
"tl": 171,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
990,
991,
1744,
1745,
967,
129,
61,
99
]
},
{
"tb": 972,
"tbk": 3,
"tl": 129,
"mb": 824,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1609,
1610,
1611,
1612,
1613,
1614,
1615,
1616,
1617,
1618,
1619,
1620,
1621,
1622,
1623,
1624,
1625,
1626,
1627,
1628,
1629,
1630,
1631,
1235,
99
]
},
{
"tb": 2016,
"tbk": 18,
"tl": 16,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
407,
408,
407,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 240,
"tbk": 12,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2212,
2213,
2214,
2215,
2216,
2217,
2218,
2219,
2220,
2221,
2222,
3196,
3197,
3198,
3199,
3200,
3201,
3202,
3203,
62
]
},
{
"tb": 824,
"tbk": 2,
"tl": 34,
"mb": 824,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
2810,
2811,
2812,
2813,
2814,
2815,
2816,
2817,
2817,
2818,
2819,
2820,
2821,
2822,
2823,
2824,
2825,
2819,
2820,
2826,
2827,
2828,
2822,
2823,
2824,
2829,
2830,
2831,
2832,
2833,
2834,
2835,
556
]
},
{
"tb": 336,
"tbk": 12,
"tl": 8,
"mb": 56,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
313,
313,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 2880,
"tbk": 48,
"tl": 13,
"mb": 320,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
313,
313,
312,
313,
312,
314,
315,
316
]
},
{
"tb": 540,
"tbk": 3,
"tl": 456,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
3514,
3515,
3516,
3517,
3518,
3519,
3520,
3520,
3521,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 720,
"tbk": 6,
"tl": 15123,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3669,
3670,
3671,
3672,
3673,
3674,
3675,
3676,
3677,
3678,
3679,
3680,
3681,
3682,
3683,
3684,
3685,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 1196,
"tbk": 3,
"tl": 33,
"mb": 1016,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
1658,
1659,
1660,
1661,
1662,
1663,
1664,
1664,
1665,
1666,
1667,
1668,
1669,
1670,
1671,
1672,
1673,
1667,
1674,
1675,
1676,
1669,
1670,
1671,
1677,
1678,
1679,
1680,
1681,
1682,
1683,
1684,
967,
129,
113,
114
]
},
{
"tb": 192,
"tbk": 2,
"tl": 460,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
2851,
2852,
1017,
385,
113,
114
]
},
{
"tb": 190968,
"tbk": 4,
"tl": 121,
"mb": 107808,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
791,
792,
3206,
3207,
3208,
3209,
3210,
3211,
2542,
2543,
2544,
2984,
2985,
2986,
2987
]
},
{
"tb": 192,
"tbk": 2,
"tl": 208403,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1210,
1211,
3600,
3601,
3602,
3603,
3604,
3605,
3606,
3607,
3608,
3609,
3610,
3611,
3612,
3613,
3614,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847
]
},
{
"tb": 160,
"tbk": 10,
"tl": 283,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2861,
2862,
2863,
2864,
2865,
2866,
2867,
2868,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 960,
"tbk": 8,
"tl": 468,
"mb": 960,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
123,
124,
867,
61,
62
]
},
{
"tb": 48,
"tbk": 3,
"tl": 10,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
312,
313,
312,
313,
313,
313
]
},
{
"tb": 128,
"tbk": 2,
"tl": 5,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3154,
3155,
3156,
3157,
3158,
3159,
3160,
3161,
3162,
3495,
3496,
3497,
3498,
3499,
3500,
3501,
3499,
3502,
3503,
1396,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 24,
"tbk": 1,
"tl": 4,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2484,
2485,
2486,
2487,
2488,
2489,
2490,
2491,
2492,
2493,
2494,
2495,
2496,
2497,
2498,
2499,
2500,
2501,
2502,
2503,
2504,
2501,
2505,
2506,
2507,
2508,
2509,
2510,
2511,
2512,
1497,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1502,
1506,
1507,
1508,
1509,
1510,
1511,
1512,
1513,
1514,
1515,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207
]
},
{
"tb": 560,
"tbk": 8,
"tl": 343381,
"mb": 480,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3686,
3687,
3688,
3689,
3690,
3691,
3692,
3693,
3694,
3695,
3696,
3697,
3698,
3699,
3700,
3701,
3702,
3703,
3704,
3692,
3693,
3695,
3705,
3380,
3381,
3382,
61,
99
]
},
{
"tb": 192,
"tbk": 2,
"tl": 73,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
2431,
2432,
2433,
2434,
2435,
2436,
2437,
2438,
2439,
2440,
2441,
2442,
2443,
2444,
2445,
2446,
2447,
2448,
2449,
2450,
2451,
2452,
2453,
2454,
2455,
2446,
2447,
2449,
2456,
384,
385,
61,
62
]
},
{
"tb": 128,
"tbk": 2,
"tl": 6,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3154,
3155,
3156,
3157,
3158,
3159,
3160,
3161,
3162,
3495,
3496,
3497,
3498,
3499,
3500,
3501,
3499,
3502,
3503,
1396,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 64,
"tbk": 2,
"tl": 671,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
865,
866,
125,
61,
62
]
},
{
"tb": 10800,
"tbk": 60,
"tl": 32,
"mb": 1152,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
313,
312,
312,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 384,
"tbk": 6,
"tl": 2197,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
2942,
2943,
2944,
2945,
2946,
2947,
2948,
2949,
2950,
2950,
2951,
2952,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
1239,
1240,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
1551,
1552,
1553,
1554,
1555,
1556,
1557,
1558,
1559,
1560
]
},
{
"tb": 2208,
"tbk": 6,
"tl": 18682,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1047,
1048,
1049,
1050,
1051,
1052,
268,
269,
270,
271,
272,
273,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
99
]
},
{
"tb": 96,
"tbk": 3,
"tl": 637584,
"mb": 64,
"mbk": 2,
"gb": 32,
"gbk": 1,
"eb": 32,
"ebk": 1,
"fs": [
1236,
1237,
1238,
463,
464,
465,
466,
467,
468,
469,
470,
471,
472,
473,
474,
475,
476,
477,
478,
479,
480,
481,
482,
483,
484,
485,
486,
487,
488,
489,
490,
490,
491,
492,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502
]
},
{
"tb": 96,
"tbk": 6,
"tl": 18,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
99
]
},
{
"tb": 240,
"tbk": 5,
"tl": 2,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
408,
409,
410,
411,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
62
]
},
{
"tb": 480,
"tbk": 1,
"tl": 213,
"mb": 480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
354,
355,
1006,
1007,
1008,
1009,
1010,
1011,
1012,
1013,
1014,
1015,
1016,
789,
113,
114
]
},
{
"tb": 288,
"tbk": 6,
"tl": 656,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
408,
408,
407,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 960,
"tbk": 2,
"tl": 208353,
"mb": 480,
"mbk": 1,
"gb": 480,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1913,
1914,
1915,
1916,
1917,
1918,
1919,
1920,
1921,
1922,
1923,
1924,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859,
205,
206,
207
]
},
{
"tb": 856,
"tbk": 4,
"tl": 18834,
"mb": 428,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
503,
504,
505,
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
517,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61,
99
]
},
{
"tb": 12288,
"tbk": 32,
"tl": 20461156,
"mb": 12288,
"mbk": 32,
"gb": 12288,
"gbk": 32,
"eb": 12288,
"ebk": 32,
"fs": [
3706,
3707,
3708,
3709,
3710,
3711,
3712,
3713,
3714,
3715,
3716,
529,
530,
531,
532,
533,
534,
535,
536,
537,
538,
539,
540,
541,
542,
543,
544,
545,
546,
547,
548,
548,
549,
550,
551,
552,
553,
554,
555,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
556
]
},
{
"tb": 288,
"tbk": 6,
"tl": 422,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
408,
407,
408,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 384,
"tbk": 4,
"tl": 5410,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1587,
1588,
1589,
1590,
1591,
1592,
1593,
1594,
1595,
1596,
1597,
1598,
1595,
1599,
1600,
1601,
1602,
1603,
1604,
1605,
1606,
1607,
1608,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 864,
"tbk": 12,
"tl": 56,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
408,
408,
407,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 1344,
"tbk": 36,
"tl": 4057,
"mb": 144,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
313,
313,
312,
313,
312,
312
]
},
{
"tb": 288,
"tbk": 12,
"tl": 656,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
408,
408,
407,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 560,
"tbk": 1,
"tl": 740,
"mb": 560,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1251,
1252,
1253,
1254,
1255,
1256,
1257,
1258,
3237,
3238,
3239,
3240,
3241,
3242,
3243,
3244,
3245,
605,
61,
62
]
},
{
"tb": 256,
"tbk": 6,
"tl": 641,
"mb": 256,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
123,
124,
125,
61,
62
]
},
{
"tb": 720,
"tbk": 10,
"tl": 2,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
408,
409,
410,
411,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
62
]
},
{
"tb": 448,
"tbk": 4,
"tl": 3165,
"mb": 320,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3154,
3155,
3156,
3157,
3158,
3159,
3160,
3161,
3162,
3163,
3164,
3165,
3166,
3167,
3168,
3169,
3170,
3171,
3172,
3173,
3174,
3353,
3354,
3355,
3356,
3357,
3358,
3359,
3360,
290,
291,
292,
293,
294,
295,
296,
297,
298,
299,
300,
290,
291,
292,
293,
294,
295,
296,
297,
298,
299,
300,
1061,
1062,
1063,
1064,
1065,
1066,
1067,
1068,
1069,
1070,
205,
206,
207
]
},
{
"tb": 20032,
"tbk": 201,
"tl": 1628,
"mb": 384,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3717,
3718,
3719,
3720,
3721,
3722,
3723,
3724,
1953,
1954,
1955,
1956,
1957,
1958,
1959,
1960,
1961,
1962,
1963,
1964,
1965,
1966,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847
]
},
{
"tb": 672,
"tbk": 18,
"tl": 1193,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
313,
312,
312,
313,
313,
314,
315,
316
]
},
{
"tb": 288,
"tbk": 4,
"tl": 0,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
113,
114
]
},
{
"tb": 94464,
"tbk": 138,
"tl": 1538,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2358,
2359,
2360,
2361,
2362,
2363,
2364,
2365,
2366,
2367,
2368,
2369,
2370,
2371,
2372,
2373,
2374,
2375,
2376,
2377,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 4240,
"tbk": 106,
"tl": 29659,
"mb": 640,
"mbk": 16,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2380,
2381,
2382,
2383,
2384,
2385,
2386,
2387,
2387,
2388,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 288,
"tbk": 9,
"tl": 320,
"mb": 288,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
3725,
3726,
3727,
3728,
3729,
3730,
3731,
3732,
3729,
3733,
3734,
3735,
3736,
3737,
3738,
3739,
3201,
3202,
3203,
62
]
},
{
"tb": 1328,
"tbk": 1,
"tl": 21,
"mb": 1328,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
596,
597,
598,
599,
600,
601,
602,
603,
604,
789,
61,
62
]
},
{
"tb": 768,
"tbk": 4,
"tl": 2845,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3581,
3582,
3583,
3584,
3585,
3586,
3587,
3588,
3589,
3590,
2118,
2119,
2120,
2121,
2119,
2122,
2123,
1396,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 1472,
"tbk": 4,
"tl": 12468,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1047,
1048,
1049,
1050,
1051,
1052,
268,
269,
270,
271,
272,
273,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61,
99
]
},
{
"tb": 40,
"tbk": 2,
"tl": 0,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
380,
381,
382,
383,
384,
129,
61,
99
]
},
{
"tb": 180,
"tbk": 1,
"tl": 104,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
766,
767,
768,
769,
770,
771,
772,
773,
2853,
2854,
2855,
2856,
2857,
2858,
2859,
2859,
2860,
1886,
1887,
1888,
1889,
1890,
1891,
1892,
1893,
1894,
1895,
1896,
1897,
1898,
1899,
1900,
1901,
929,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 128,
"tbk": 2,
"tl": 24,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2400,
2401,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 192,
"tbk": 2,
"tl": 437,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
284,
285,
286,
287,
288,
289,
290,
291,
292,
293,
294,
295,
296,
297,
298,
299,
300,
290,
291,
292,
293,
294,
295,
296,
297,
301,
302,
303,
304,
305,
306,
307,
308,
309,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 180,
"tbk": 1,
"tl": 102,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
3012,
3013,
3014,
3015,
3016,
3017,
3018,
3018,
3019,
1150,
1151,
1152,
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1164,
1165,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 1728,
"tbk": 5,
"tl": 310,
"mb": 792,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2612,
2613,
2614,
2615,
2616,
2617,
2618,
2619,
2620,
2621,
2622,
2623,
2624,
2625,
2626,
2627,
2628,
2629,
2630,
1483,
1484,
1485,
1486,
1487,
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
823,
824,
825,
826,
827,
828,
829,
826,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207
]
},
{
"tb": 64,
"tbk": 2,
"tl": 1153,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2988,
2989,
2990,
2991,
2992,
2993,
2994,
2995,
2996,
2997,
2998,
2999,
3000,
3001,
3002,
1579,
1580,
1581,
1582,
1583,
1584,
1585,
1586,
1763,
1764,
1765,
1579,
1580,
1581,
1582,
1583,
1584,
1585,
1586,
1763,
1764,
1765,
1579,
1580,
1581,
1582,
1583,
1584,
1585,
1586,
3003,
3004,
3005,
3006,
3007,
3008,
3009,
3010,
3011,
205,
206,
207
]
},
{
"tb": 8192,
"tbk": 1,
"tl": 634564,
"mb": 8192,
"mbk": 1,
"gb": 8192,
"gbk": 1,
"eb": 8192,
"ebk": 1,
"fs": [
457,
458,
459,
460,
461,
462,
3204,
3205,
467,
468,
469,
470,
471,
472,
473,
474,
475,
476,
477,
478,
479,
480,
481,
482,
483,
484,
485,
486,
487,
488,
489,
490,
490,
491,
492,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 96,
"tbk": 6,
"tl": 26,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
408,
408,
407,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 640,
"tbk": 4,
"tl": 1466,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
354,
355,
637,
638,
639,
640,
641,
642,
643,
644,
645,
646,
647,
648,
649,
650,
651,
652,
653,
654,
655,
656,
646,
647,
648,
649,
650,
651,
652,
653,
654,
655,
656,
657,
658,
659,
660,
661,
662,
663,
664,
665,
666,
667,
715,
716,
717,
718,
719,
720,
721,
722
]
},
{
"tb": 240,
"tbk": 10,
"tl": 2,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
408,
409,
410,
411,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
113,
114
]
},
{
"tb": 1328,
"tbk": 1,
"tl": 46791,
"mb": 1328,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
748,
749,
750,
751,
752,
753,
754,
755,
756,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
379
]
},
{
"tb": 972,
"tbk": 3,
"tl": 74,
"mb": 824,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
2234,
2235,
2236,
2237,
2238,
2239,
2240,
2241,
2241,
2242,
1222,
1223,
1224,
1225,
1226,
1227,
1228,
1229,
1230,
1231,
1232,
1233,
1234,
384,
129,
61,
62
]
},
{
"tb": 96,
"tbk": 6,
"tl": 101,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
408,
407,
407,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 1104,
"tbk": 3,
"tl": 265872,
"mb": 1104,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1244,
1245,
1246,
1247,
1248,
1249,
75,
76,
77,
78,
79,
80,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 3360,
"tbk": 3,
"tl": 15,
"mb": 1920,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
2533,
2534,
2535,
2536,
2537,
2538,
2539,
2540,
2541,
2542,
2543,
2544,
3430,
3431,
3432,
3433
]
},
{
"tb": 1120,
"tbk": 3,
"tl": 464,
"mb": 640,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
557,
558,
2378,
2379,
3315,
3316,
3317,
3318,
3319,
283,
61,
62
]
},
{
"tb": 96,
"tbk": 6,
"tl": 20,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
312,
312,
313,
313,
312,
314,
315,
316
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3979,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1397,
1398,
1399,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
283,
61,
62
]
},
{
"tb": 864,
"tbk": 6,
"tl": 290023,
"mb": 432,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
3740,
3741,
3742,
3743,
3744,
3745,
3746,
3747,
3748,
3749,
3750,
3751,
3752,
3753,
3754,
3755,
3756,
3757,
3758,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 200,
"tbk": 1,
"tl": 639677,
"mb": 200,
"mbk": 1,
"gb": 200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3759,
3760,
3761,
3762,
3763,
3764,
3765,
3766,
3767,
3768
]
},
{
"tb": 96,
"tbk": 6,
"tl": 139,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
407,
408,
407,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 936,
"tbk": 8,
"tl": 3,
"mb": 216,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
312,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 384,
"tbk": 2,
"tl": 5539,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
2110,
2111,
3637,
3638,
3639,
3640,
3641,
3642,
2024,
2025,
2026,
2027,
2025,
2028,
2029,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 1196,
"tbk": 3,
"tl": 175,
"mb": 1016,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2691,
2692,
2693,
2694,
2695,
2696,
2697,
2698,
3334,
3335,
3336,
3337,
3338,
3339,
3340,
3341,
3342,
3343,
3344,
3345,
3342,
3346,
3347,
3348,
3349,
3350,
3351,
3352,
3201,
3202,
3203,
99
]
},
{
"tb": 384,
"tbk": 1,
"tl": 634872,
"mb": 384,
"mbk": 1,
"gb": 384,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
3099,
3100,
3183,
3184,
3185,
3186,
3187,
3188,
3212,
3213,
3214,
3215
]
},
{
"tb": 144,
"tbk": 3,
"tl": 1,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
312,
313,
313,
312,
313,
314,
315,
316
]
},
{
"tb": 1536,
"tbk": 8,
"tl": 6685,
"mb": 384,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
257,
258,
259,
260,
261,
262,
263,
264,
265,
266,
267,
723,
724,
725,
726,
727,
728,
729,
730,
731,
732,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 288,
"tbk": 12,
"tl": 1151,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
312,
312,
313,
313,
312,
312
]
},
{
"tb": 743424,
"tbk": 134,
"tl": 1435395,
"mb": 156768,
"mbk": 6,
"gb": 156768,
"gbk": 6,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1210,
1211,
1930,
1931,
1932,
1933,
1934,
1935,
1936,
1937,
1938,
1939,
1940,
1941,
1942,
1943,
1944,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 144,
"tbk": 2,
"tl": 0,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
408,
409,
410,
411,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
283,
113,
114
]
},
{
"tb": 128,
"tbk": 1,
"tl": 405,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
1757,
1758,
1759,
1760,
1761,
1762,
1579,
1580,
1581,
1582,
1583,
1584,
1585,
1586,
1763,
1764,
1765,
1579,
1580,
1581,
1582,
1583,
1584,
1585,
1586,
1763,
1764,
1765,
1766,
1767,
1768,
1769,
1770,
1771,
1772,
1773,
1774,
1775,
205,
206,
207
]
},
{
"tb": 3996960,
"tbk": 7,
"tl": 535,
"mb": 2118720,
"mbk": 1,
"gb": 2118720,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
2533,
2534,
2535,
2536,
2537,
2538,
2539,
2540,
2541,
2542,
2543,
2544,
3115,
3116,
3117,
3118
]
},
{
"tb": 320,
"tbk": 4,
"tl": 5,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
126,
127,
128,
385,
61,
99
]
},
{
"tb": 480,
"tbk": 2,
"tl": 22,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
557,
558,
1872,
1873,
867,
61,
62
]
},
{
"tb": 1196,
"tbk": 3,
"tl": 21,
"mb": 1016,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
1658,
1659,
1660,
1661,
1662,
1663,
1664,
1664,
1665,
1666,
1667,
1668,
1669,
1670,
1671,
1672,
1673,
1667,
1674,
1675,
1676,
1669,
1670,
1671,
1677,
1678,
1679,
1680,
1681,
1682,
1683,
1684,
128,
129,
113,
114
]
},
{
"tb": 3600,
"tbk": 60,
"tl": 23,
"mb": 384,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
313,
312,
312,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 96,
"tbk": 2,
"tl": 1,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207
]
},
{
"tb": 148,
"tbk": 1,
"tl": 12,
"mb": 148,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
3643,
3644,
3645,
3646,
3647,
3648,
3649,
3650,
3650,
3651,
3652,
3653,
3654,
3655,
3656,
3657,
3658,
3652,
3653,
3659,
3660,
3661,
3655,
3656,
3657,
3662,
3663,
3664,
3665,
3666,
3667,
3668,
556
]
},
{
"tb": 61296,
"tbk": 1,
"tl": 137,
"mb": 61296,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
791,
792,
3206,
3207,
3208,
3209,
3210,
3211,
3769,
3770,
3771,
3772
]
},
{
"tb": 32,
"tbk": 1,
"tl": 639657,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3773,
3774,
3775,
3776,
3777,
3778,
3779,
3780,
3781,
3782,
3783,
3784,
1272
]
},
{
"tb": 524,
"tbk": 2,
"tl": 20,
"mb": 524,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
1658,
1659,
1660,
1661,
1662,
1663,
1664,
1664,
1665,
1666,
1667,
1668,
1669,
1670,
1671,
1672,
1673,
1667,
1674,
1675,
1676,
1669,
1670,
1671,
1677,
1678,
1679,
1680,
1681,
1682,
1683,
1684,
1250,
129,
61,
62
]
},
{
"tb": 40,
"tbk": 1,
"tl": 79,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3785,
3786,
3787,
3788,
3789,
3790,
3791,
3792,
3793,
3794,
3795,
3796,
256
]
},
{
"tb": 288,
"tbk": 1,
"tl": 4,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
2878,
2879,
2880,
2881,
2882,
2883,
2884,
2885,
2885,
2886,
2887,
2888,
2889,
2890,
2891,
2892,
2893,
2887,
2888,
2894,
2895,
2896,
2890,
2891,
2892,
2897,
2898,
2899,
2900,
2901,
2902,
2903,
2904,
1410
]
},
{
"tb": 352,
"tbk": 11,
"tl": 449,
"mb": 352,
"mbk": 11,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
3396,
3397,
3398,
3399,
3399,
3400,
3401,
3402,
3403,
3404,
3405,
3406,
3407,
3401,
3402,
3408,
3409,
3410,
3404,
3405,
3406,
3411,
3412,
3413,
3414,
3415,
3416,
3417,
379
]
},
{
"tb": 480,
"tbk": 6,
"tl": 5,
"mb": 160,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2578,
2579,
2580,
2581,
2582,
2583,
2584,
2585,
2586,
2587,
2588,
2589,
2590,
2591,
2592,
2593,
2594,
2595,
2596,
2597,
2598,
2599,
2600,
967,
129,
61,
62
]
},
{
"tb": 672,
"tbk": 1,
"tl": 1004,
"mb": 672,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
748,
749,
750,
751,
752,
753,
754,
755,
756,
789,
61,
62
]
},
{
"tb": 288,
"tbk": 1,
"tl": 33,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
2792,
2793,
2794,
2795,
2796,
2797,
2798,
2799,
2799,
2800,
2801,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
128,
129,
61,
62
]
},
{
"tb": 1152,
"tbk": 16,
"tl": 1527,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61
]
},
{
"tb": 48,
"tbk": 1,
"tl": 13539,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1967,
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1980,
1981,
1981,
1982,
913,
914,
915,
916,
917,
918,
919,
920,
921,
922,
923,
924,
925,
926,
927,
928,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 14400,
"tbk": 30,
"tl": 2186,
"mb": 480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3797,
3798,
3799,
3800,
3801,
3802,
3803,
3804,
3805,
3806,
3807,
3808,
3809,
3810,
3811,
3812,
3813,
3814,
3815,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 48,
"tbk": 1,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
408,
409,
410,
411,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
283,
61,
62
]
},
{
"tb": 560,
"tbk": 1,
"tl": 624,
"mb": 560,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1251,
1252,
1253,
1254,
1255,
1256,
1257,
1258,
3237,
3238,
3239,
3240,
3241,
3242,
3243,
3244,
3245,
605,
113,
114
]
},
{
"tb": 2016,
"tbk": 18,
"tl": 12331,
"mb": 384,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
113,
114
]
},
{
"tb": 1758480,
"tbk": 4,
"tl": 292,
"mb": 998400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
2533,
2534,
2535,
2536,
2537,
2538,
2539,
2540,
2541,
2542,
2543,
2544,
2984,
2985,
2986,
2987
]
},
{
"tb": 288,
"tbk": 6,
"tl": 18,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
408,
408,
408,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 80,
"tbk": 2,
"tl": 80,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
571,
572,
573,
574,
575,
576,
577,
578,
579,
580,
581,
582,
583,
584,
585,
586,
577,
578,
580,
587,
384,
385,
61,
99
]
},
{
"tb": 80,
"tbk": 2,
"tl": 12,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
868,
869,
870,
871,
872,
873,
874,
875,
876,
877,
878,
879,
880,
881,
882,
883,
884,
885,
886,
887,
964,
965,
966,
1250,
129,
113,
114
]
},
{
"tb": 1344,
"tbk": 12,
"tl": 16349,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
113,
114
]
},
{
"tb": 672,
"tbk": 18,
"tl": 15,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
407,
408,
407,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 236,
"tbk": 2,
"tl": 16,
"mb": 236,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
944,
945,
945,
946,
947,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
128,
129,
113,
114
]
},
{
"tb": 200,
"tbk": 1,
"tl": 2701,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1384,
1385,
1386,
1387,
1388,
1389,
1390,
1391,
1392,
1393,
1394,
1394,
1395,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 236,
"tbk": 2,
"tl": 13,
"mb": 236,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
944,
945,
945,
946,
947,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
888,
889,
890,
2402,
2403,
2404,
2405
]
},
{
"tb": 148,
"tbk": 1,
"tl": 14,
"mb": 148,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
3643,
3644,
3645,
3646,
3647,
3648,
3649,
3650,
3650,
3651,
3652,
3653,
3654,
3655,
3656,
3657,
3658,
3652,
3653,
3659,
3660,
3661,
3655,
3656,
3657,
3662,
3663,
3664,
3665,
3666,
3667,
3668,
447
]
},
{
"tb": 236,
"tbk": 2,
"tl": 33,
"mb": 236,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
944,
945,
945,
946,
947,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
967,
129,
61,
99
]
},
{
"tb": 128,
"tbk": 1,
"tl": 100,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
990,
991,
1744,
1745,
967,
385,
113,
114
]
},
{
"tb": 192,
"tbk": 4,
"tl": 13502,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3469,
3470,
3471,
3472,
3473,
3474,
3475,
3476,
3477,
3478,
3479,
3480,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 640,
"tbk": 4,
"tl": 358176,
"mb": 480,
"mbk": 3,
"gb": 480,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
3222,
3223,
3224,
3225,
3226,
3227,
3228,
3229,
3230,
3231,
3232,
3233,
3234,
3235,
3236,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 80,
"tbk": 5,
"tl": 31,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550
]
},
{
"tb": 192,
"tbk": 2,
"tl": 643,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
2851,
2852,
1017,
385,
61,
62
]
},
{
"tb": 64,
"tbk": 2,
"tl": 209979,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3816,
3817,
3818,
3819,
3820,
3821,
3822,
3823,
3824,
3825,
3826,
3827,
3828,
3829,
3830,
3831,
3832,
3833,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 576,
"tbk": 12,
"tl": 3,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
312,
313,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 288,
"tbk": 6,
"tl": 1,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
62
]
},
{
"tb": 1440,
"tbk": 24,
"tl": 11,
"mb": 256,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
407,
407,
408,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 128,
"tbk": 2,
"tl": 5,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3834,
3835,
3836,
3837,
3838,
3839,
3840,
3841,
3842,
3843,
3844,
3845,
3846,
3847,
3848,
3849,
3847,
3850,
3851,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 320,
"tbk": 4,
"tl": 359,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
126,
127,
1250,
385,
61,
99
]
},
{
"tb": 288,
"tbk": 18,
"tl": 69,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
312,
313,
312,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 80,
"tbk": 2,
"tl": 5,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
678,
679,
680,
681,
682,
683,
684,
685,
686,
687,
688,
689,
690,
691,
692,
693,
694,
695,
696,
697,
698,
699,
700,
701,
686,
702,
128,
385,
61,
99
]
},
{
"tb": 240,
"tbk": 5,
"tl": 2,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
407,
409,
410,
411,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
62
]
},
{
"tb": 560,
"tbk": 15,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
407,
409,
410,
411,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
62
]
},
{
"tb": 240,
"tbk": 6,
"tl": 36371,
"mb": 200,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3175,
3176,
3177,
3178,
3179,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 896,
"tbk": 6,
"tl": 92730,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
561,
562,
563,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 64,
"tbk": 2,
"tl": 22146,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
1053,
1054,
1055,
1056,
1057,
1058,
283,
61,
62
]
},
{
"tb": 488,
"tbk": 5,
"tl": 3,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
380,
381,
382,
383,
1004,
1005
]
},
{
"tb": 224,
"tbk": 3,
"tl": 37,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
2243,
2244,
2245,
2246,
1235,
99
]
},
{
"tb": 288,
"tbk": 1,
"tl": 194,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2749,
2750,
2751,
2752,
2753,
2754,
2755,
2756,
2757,
2758,
2759,
2760,
2761,
2762,
2763,
2763,
2764,
913,
914,
915,
916,
917,
918,
919,
920,
921,
922,
923,
924,
925,
926,
927,
928,
929,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 432,
"tbk": 6,
"tl": 555,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
113,
114
]
},
{
"tb": 64,
"tbk": 2,
"tl": 520,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
2851,
2852,
1017,
385,
61,
99
]
},
{
"tb": 96,
"tbk": 1,
"tl": 84918,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1210,
1211,
1212,
1213,
1214,
1235,
62
]
},
{
"tb": 2016,
"tbk": 18,
"tl": 95,
"mb": 432,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
407,
408,
408,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 1328,
"tbk": 1,
"tl": 16,
"mb": 1328,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
596,
597,
598,
599,
600,
601,
602,
603,
604,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
1410
]
},
{
"tb": 144,
"tbk": 1,
"tl": 126867,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
16,
17,
18,
19,
20,
21,
21,
22,
1150,
1151,
1152,
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1164,
1165,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 604,
"tbk": 4,
"tl": 35,
"mb": 464,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1273,
1274,
1275,
1276,
1277,
1278,
1279,
1280,
1433,
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
1441,
1442,
1443,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
888,
889,
890,
891,
892,
893,
99
]
},
{
"tb": 576,
"tbk": 5,
"tl": 1820,
"mb": 352,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3154,
3155,
3156,
3157,
3158,
3159,
3160,
3161,
3162,
3163,
3164,
3165,
3166,
3167,
3168,
3169,
3170,
3171,
3172,
3173,
3174,
2995,
2996,
2997,
2998,
2999,
3000,
3001,
3002,
1766,
1767,
1768,
1769,
1770,
1771,
1772,
1773,
1774,
1775,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 144,
"tbk": 1,
"tl": 35750,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
723,
724,
725,
726,
727,
728,
729,
730,
731,
732,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
3313,
3314,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550
]
},
{
"tb": 576,
"tbk": 2,
"tl": 6163,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1138,
1139,
1140,
1141,
1142,
1143,
1144,
1145,
1146,
1147,
1148,
1149,
268,
269,
270,
271,
272,
273,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
61,
99
]
},
{
"tb": 2016,
"tbk": 18,
"tl": 62,
"mb": 288,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
407,
408,
407,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 80,
"tbk": 2,
"tl": 13,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
868,
869,
870,
871,
872,
873,
874,
875,
876,
877,
878,
879,
880,
881,
882,
883,
884,
885,
886,
887,
964,
965,
966,
967,
129,
61,
99
]
},
{
"tb": 4096,
"tbk": 32,
"tl": 20428456,
"mb": 4096,
"mbk": 32,
"gb": 4096,
"gbk": 32,
"eb": 4096,
"ebk": 32,
"fs": [
3852,
3853,
3854,
3855,
3856,
3857,
3858,
529,
530,
531,
532,
533,
534,
535,
536,
537,
538,
539,
540,
541,
542,
543,
544,
545,
546,
547,
548,
548,
549,
550,
551,
552,
553,
554,
555,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
556
]
},
{
"tb": 672,
"tbk": 1,
"tl": 1949,
"mb": 672,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
748,
749,
750,
751,
752,
753,
754,
755,
756,
605,
61,
62
]
},
{
"tb": 384,
"tbk": 12,
"tl": 554,
"mb": 384,
"mbk": 12,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
2030,
2031,
2032,
2033,
2034,
2035,
2036,
2037,
2034,
2038,
2039,
2040,
2041,
2042,
2043,
2044,
2045,
2046,
2047,
556
]
},
{
"tb": 288,
"tbk": 6,
"tl": 18,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
408,
407,
407,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 240,
"tbk": 6,
"tl": 12,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
422,
423,
424,
425,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
437,
438,
439,
440,
441,
442,
430,
443,
444,
445,
446,
556
]
},
{
"tb": 672,
"tbk": 18,
"tl": 51,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
407,
408,
408,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 320,
"tbk": 2,
"tl": 208296,
"mb": 160,
"mbk": 1,
"gb": 160,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3222,
3223,
3224,
3225,
3226,
3227,
3228,
3229,
3230,
3231,
3232,
3233,
3234,
3235,
3236,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 37632,
"tbk": 588,
"tl": 59,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2289,
2290,
2291,
2292,
2293,
2294,
2295,
2296,
2297,
2298,
2299,
2300,
2301,
2302,
2303,
2304,
2305,
2306,
2307,
2308,
2309,
2310,
2311,
2312,
2313,
2314,
2315,
2316,
2317,
2318,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 96,
"tbk": 3,
"tl": 1904114,
"mb": 96,
"mbk": 3,
"gb": 96,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
3859,
3860,
3861,
3862,
3863,
3864,
3865,
3866,
3867,
3868,
3869,
256
]
},
{
"tb": 84,
"tbk": 1,
"tl": 7081,
"mb": 84,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
1166,
1167,
1168,
1169,
1170,
3315,
3316,
3317,
3318,
3319,
283,
61,
99
]
},
{
"tb": 96,
"tbk": 2,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
1381,
1382,
1383,
567,
568,
569,
570,
556
]
},
{
"tb": 32,
"tbk": 1,
"tl": 27,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
3870,
3871,
3872,
3873,
3873,
3874,
3875,
3876,
3877,
3878,
3879,
3880,
3881,
3875,
3876,
3882,
3883,
3884,
3878,
3879,
3880,
3885,
3886,
3887,
3888,
1655,
1656,
1657,
62
]
},
{
"tb": 236,
"tbk": 2,
"tl": 15,
"mb": 236,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
944,
945,
945,
946,
947,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
1250,
385,
61,
99
]
},
{
"tb": 3008,
"tbk": 25,
"tl": 12553,
"mb": 832,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
284,
285,
286,
287,
288,
289,
1061,
1062,
1063,
1064,
1065,
1066,
1067,
1068,
1069,
1070,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 288,
"tbk": 6,
"tl": 19,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
408,
408,
408,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 3168,
"tbk": 31,
"tl": 3,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1106,
1107,
1108,
1109,
1110,
1111,
1112,
1113,
1114,
1115,
1116,
1117,
1118,
1119,
1120,
1118,
1121,
1122,
1123,
1124,
1125,
1126,
1127,
1128,
1129,
1123,
1124,
1130,
1131,
1132,
1133,
1134,
1135,
1136,
1137,
929,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 480,
"tbk": 2,
"tl": 246,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
557,
558,
1872,
1873,
1017,
385,
61,
99
]
},
{
"tb": 352,
"tbk": 9,
"tl": 771035,
"mb": 352,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3889,
3890,
3891,
3892,
3893,
3894,
3895,
3896,
3897,
3898,
3899,
3900,
3901,
3902,
3903,
3904,
3905,
3906,
3907,
3908,
3909,
3910,
3911,
3912,
3913,
3914,
3915,
3916,
3907,
3908,
3910,
3917,
1235,
99
]
},
{
"tb": 240,
"tbk": 1,
"tl": 1280,
"mb": 240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
354,
355,
356,
357,
358,
359,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
556
]
},
{
"tb": 128,
"tbk": 4,
"tl": 251,
"mb": 128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3889,
3890,
3891,
3892,
3893,
3894,
3895,
3896,
3897,
3898,
3899,
3900,
3901,
3902,
3903,
3904,
3905,
3906,
3907,
3908,
3909,
3910,
3911,
3912,
3913,
3914,
3915,
3916,
3907,
3908,
3910,
3917,
384,
129,
113,
114
]
},
{
"tb": 40,
"tbk": 1,
"tl": 639682,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3918,
3919,
3920,
3921,
3922,
3923,
3924,
3925,
3926
]
},
{
"tb": 720,
"tbk": 10,
"tl": 2,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
113,
114
]
},
{
"tb": 1920,
"tbk": 12,
"tl": 3222,
"mb": 640,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
354,
355,
637,
638,
639,
640,
641,
642,
643,
644,
645,
646,
647,
648,
649,
650,
651,
652,
653,
654,
655,
656,
703,
704,
705,
706,
707,
708,
709,
710,
711,
712,
205,
206,
207,
713,
714,
654,
655,
656
]
},
{
"tb": 291200,
"tbk": 325,
"tl": 4597,
"mb": 896,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3074,
3075,
3076,
3077,
3078,
3079,
3080,
3081,
3082,
3083,
3084,
3085,
3086,
3087,
3088,
3088,
3089,
3090,
3090,
3091,
3092,
3093,
3094,
3095,
3096,
3097,
3098,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 200,
"tbk": 5,
"tl": 1345,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
757,
758,
759,
760,
761,
762,
763,
764,
765,
646,
647,
648,
649,
650,
651,
652,
653,
654,
655,
656,
657,
658,
659,
660,
661,
662,
663,
664,
665,
666,
667,
1569,
1570,
1571,
1572,
1573,
1574,
1575,
1576,
1577,
1578,
1766,
1767,
1768,
1769,
1770,
1771,
1772,
1773,
1774,
1775,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 144,
"tbk": 2,
"tl": 0,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61,
62
]
},
{
"tb": 800,
"tbk": 4,
"tl": 2558543,
"mb": 800,
"mbk": 4,
"gb": 800,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
223,
224,
225,
226,
227,
228,
229,
230,
231,
232,
233,
234,
235,
236,
237,
238,
239,
240,
241,
242,
243,
244,
245,
246,
247,
248,
249,
250,
251,
252,
237,
238,
239,
240,
241,
242,
243,
247,
253,
254,
255,
1272
]
},
{
"tb": 176,
"tbk": 11,
"tl": 37,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
312,
313,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 1196,
"tbk": 3,
"tl": 96,
"mb": 1016,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2691,
2692,
2693,
2694,
2695,
2696,
2697,
2698,
2699,
2700,
2701,
2702,
2703,
2704,
2705,
2706,
2707,
2708,
2709,
2710,
2707,
2711,
2712,
2713,
2714,
2715,
2716,
2717,
2718,
2719,
2720,
556
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1525,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
3099,
3100,
3927,
3928,
3929,
3930,
3931,
3932,
529,
530,
531,
532,
533,
534,
535,
536,
537,
538,
539,
540,
541,
542,
543,
544,
545,
546,
547,
548,
548,
549,
550,
551,
552,
553,
554,
555,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
556
]
},
{
"tb": 528,
"tbk": 11,
"tl": 21,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
313,
313,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 864,
"tbk": 12,
"tl": 6,
"mb": 144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
313,
313,
312,
312,
313,
313
]
},
{
"tb": 112,
"tbk": 7,
"tl": 24,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
312,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 680,
"tbk": 8,
"tl": 283582,
"mb": 560,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3686,
3687,
3688,
3689,
3690,
3691,
3692,
3693,
3694,
3695,
3696,
3697,
3698,
3699,
3700,
3701,
3702,
3703,
3704,
3692,
3693,
3695,
3705,
110,
111,
112,
61,
62
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 3225841,
"mb": 1920,
"mbk": 16,
"gb": 1920,
"gbk": 16,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
2431,
2432,
2433,
2434,
2435,
2436,
2437,
2438,
2439,
2440,
2441,
2442,
2443,
2444,
2445,
2446,
2447,
2448,
2449,
2450,
2451,
2452,
2453,
2454,
2455,
2446,
2447,
2449,
2456,
1004,
1005
]
},
{
"tb": 96,
"tbk": 2,
"tl": 1,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2612,
2613,
2614,
2615,
2616,
2617,
2618,
2619,
2620,
2621,
2622,
2623,
2624,
2625,
2626,
2627,
2628,
2629,
2630,
1483,
1484,
1485,
1486,
1487,
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
823,
824,
825,
826,
827,
828,
829,
826,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859
]
},
{
"tb": 9984,
"tbk": 9,
"tl": 8329,
"mb": 5760,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2649,
2650,
2651,
2652,
2653,
2654,
2655,
2656,
2657,
2658,
2659,
2660,
2661,
2662,
2663,
2664,
2665,
823,
824,
825,
826,
827,
828,
829,
826,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 14,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
791,
792,
793,
794,
795,
796,
797,
798,
2542,
2543,
2544,
3430,
3431,
3432,
3433
]
},
{
"tb": 165648,
"tbk": 1,
"tl": 151729,
"mb": 165648,
"mbk": 1,
"gb": 165648,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
791,
792,
793,
794,
795,
796,
797,
798,
3933,
3934,
3935,
3936
]
},
{
"tb": 400,
"tbk": 2,
"tl": 178390,
"mb": 400,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3443,
3444,
3445,
3446,
3447,
3448,
3449,
3450,
3451,
3452,
3453,
3453,
3454,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
1243,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 2864,
"tbk": 26,
"tl": 120597,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1018,
1019,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207
]
},
{
"tb": 200,
"tbk": 1,
"tl": 126843,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1384,
1385,
1386,
1387,
1388,
1389,
1390,
1391,
1392,
1393,
1394,
1394,
1395,
1150,
1151,
1152,
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1164,
1165,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 288,
"tbk": 2,
"tl": 634839,
"mb": 192,
"mbk": 1,
"gb": 192,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2918,
2919,
2920,
2921,
2922,
3937,
3938,
3939,
3940,
3941
]
},
{
"tb": 448,
"tbk": 4,
"tl": 1240,
"mb": 448,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
123,
124,
1017,
129,
61,
62
]
},
{
"tb": 800,
"tbk": 7,
"tl": 1789,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3154,
3155,
3156,
3157,
3158,
3159,
3160,
3161,
3162,
3163,
3164,
3165,
3166,
3167,
3168,
3169,
3170,
3171,
3172,
3173,
3174,
2995,
2996,
2997,
2998,
2999,
3000,
3001,
3002,
1579,
1580,
1581,
1582,
1583,
1584,
1585,
1586,
1763,
1764,
1765,
1579,
1580,
1581,
1582,
1583,
1584,
1585,
1586,
3003,
3004,
3005,
3006,
3007,
3008,
3009,
3010,
3011,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 7056,
"tbk": 42,
"tl": 9,
"mb": 1024,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
313,
313,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 320,
"tbk": 4,
"tl": 339,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
126,
127,
967,
129,
61,
99
]
},
{
"tb": 576,
"tbk": 6,
"tl": 12974,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
2143,
2144,
2145,
2146,
2147,
2148,
2149,
2150,
2151,
2152,
2153,
2154,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 288,
"tbk": 12,
"tl": 5,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
312,
313,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 216432,
"tbk": 4,
"tl": 180,
"mb": 121248,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
791,
792,
793,
794,
795,
796,
797,
798,
3504,
3505,
3506,
909,
910,
911,
912
]
},
{
"tb": 768,
"tbk": 4,
"tl": 2973,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3581,
3582,
3583,
3584,
3585,
3586,
3587,
3588,
3589,
3590,
2118,
2119,
2120,
2121,
2119,
2122,
2123,
1396,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 160,
"tbk": 2,
"tl": 9,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
678,
679,
680,
681,
682,
683,
684,
685,
686,
687,
688,
689,
690,
691,
692,
693,
694,
695,
696,
697,
698,
699,
700,
701,
686,
702,
1250,
129,
61,
99
]
},
{
"tb": 512,
"tbk": 4,
"tl": 242,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
2431,
2432,
2433,
2434,
2435,
2436,
2437,
2438,
2439,
2440,
2441,
2442,
2443,
2444,
2445,
2446,
2447,
2448,
2449,
2450,
2451,
2452,
2453,
2454,
2455,
2446,
2447,
2449,
2456,
384,
129,
113,
114
]
},
{
"tb": 2688,
"tbk": 18,
"tl": 2930,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
3942,
3943,
3944,
3945,
3946,
3947,
3948,
3949,
3950,
3951,
3952,
3953,
3954,
3955,
3956,
3957,
3958,
3959,
3960,
3961,
3962,
3963,
3964,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 144,
"tbk": 2,
"tl": 0,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
61,
62
]
},
{
"tb": 288,
"tbk": 6,
"tl": 2,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61
]
},
{
"tb": 144,
"tbk": 1,
"tl": 31726,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
723,
724,
725,
726,
727,
728,
729,
730,
731,
732,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
3591,
3592,
3593,
3594,
3595,
3596,
3597,
3598,
3599
]
},
{
"tb": 576,
"tbk": 5,
"tl": 125714,
"mb": 576,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
3364,
3365,
3366,
3367,
3368,
3369,
3370,
3371,
3372,
3373,
3374,
3375,
3376,
3377,
3378,
3366,
3367,
3368,
3369,
3370,
3371,
3372,
3373,
3374,
3376,
3379,
110,
111,
112,
113,
114
]
},
{
"tb": 192,
"tbk": 6,
"tl": 3,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
3965,
3966,
3967,
3968,
3969,
3970,
3971,
3972,
3973,
3974,
3975,
2223,
2224,
2225,
2226,
2227,
2228,
2229,
2230,
1410
]
},
{
"tb": 128,
"tbk": 2,
"tl": 6,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1195,
1196,
1197,
1198,
1199,
1200,
1201,
1202,
1203,
1204,
1205,
1206,
1203,
1207,
1208,
1209,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
283,
113,
114
]
},
{
"tb": 288,
"tbk": 9,
"tl": 382,
"mb": 288,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
2515,
2516,
2517,
2518,
2519,
2520,
2521,
2522,
2519,
2523,
2524,
2525,
2526,
2527,
2528,
2529,
2530,
2531,
2532,
1410
]
},
{
"tb": 512,
"tbk": 8,
"tl": 11,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3383,
3384,
3385,
3386,
3387,
3388,
3389,
3390,
3082,
3083,
3084,
3085,
3086,
3087,
3088,
3088,
3089,
3090,
3090,
3091,
3092,
3093,
3094,
3095,
3096,
3097,
3098,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859
]
},
{
"tb": 1440,
"tbk": 1,
"tl": 634868,
"mb": 1440,
"mbk": 1,
"gb": 1440,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
2533,
2534,
2535,
2536,
2537,
2538,
2539,
2540,
2541,
3212,
3213,
3214,
3215
]
},
{
"tb": 864,
"tbk": 18,
"tl": 13,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
313,
312,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 456840,
"tbk": 8,
"tl": 327,
"mb": 240768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
791,
792,
793,
794,
795,
796,
797,
798,
2542,
2543,
2544,
3115,
3116,
3117,
3118
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
99
]
},
{
"tb": 7776,
"tbk": 30,
"tl": 17856,
"mb": 304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3976,
3977,
3978,
3979,
3980,
3981,
3982,
3983,
3984,
3985,
3986,
1696,
1697,
1698,
1699,
1700,
1701,
1702,
1703,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 288,
"tbk": 1,
"tl": 28,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
2792,
2793,
2794,
2795,
2796,
2797,
2798,
2799,
2799,
2800,
2801,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
128,
129,
113,
114
]
},
{
"tb": 2304,
"tbk": 36,
"tl": 1730599,
"mb": 1152,
"mbk": 18,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
3740,
3741,
3742,
3743,
3744,
3745,
3746,
3747,
3748,
3749,
3750,
3751,
3752,
3753,
3754,
3755,
3756,
3757,
3758,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 576,
"tbk": 8,
"tl": 741,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
113,
114
]
},
{
"tb": 256,
"tbk": 2,
"tl": 2186,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3154,
3155,
3156,
3157,
3158,
3159,
3160,
3161,
3162,
3163,
3164,
3165,
3166,
3167,
3168,
3169,
3170,
3171,
3172,
3173,
3174,
3353,
3354,
3355,
3356,
3357,
3358,
3359,
3360,
290,
291,
292,
293,
294,
295,
296,
297,
298,
299,
300,
290,
291,
292,
293,
294,
295,
296,
297,
298,
299,
300,
290,
291,
292,
293,
294,
295,
296,
297,
301,
302,
303,
304,
305,
306,
307,
308,
309
]
},
{
"tb": 152,
"tbk": 1,
"tl": 9739,
"mb": 152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
1166,
1167,
1168,
1169,
1170,
3315,
3316,
3317,
3318,
3319,
322,
61,
99
]
},
{
"tb": 96,
"tbk": 1,
"tl": 61,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1210,
1211,
1212,
1213,
1214,
384,
385,
61,
62
]
},
{
"tb": 384,
"tbk": 6,
"tl": 213924,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
12,
13,
14,
15,
723,
724,
725,
726,
727,
728,
729,
730,
731,
732,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
3313,
3314,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550
]
},
{
"tb": 528,
"tbk": 11,
"tl": 10,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
312,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 2304,
"tbk": 36,
"tl": 3120238,
"mb": 1152,
"mbk": 18,
"gb": 768,
"gbk": 12,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
3740,
3741,
3742,
3743,
3744,
3745,
3746,
3747,
3748,
3749,
3750,
3751,
3752,
3753,
3754,
3755,
3756,
3757,
3758,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 120,
"tbk": 3,
"tl": 558252,
"mb": 120,
"mbk": 3,
"gb": 120,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
3299,
3300,
3301,
3302,
3303,
3304,
3305,
3306,
3307,
3308,
3309,
3310,
3311,
3312,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
3313,
3314,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550
]
},
{
"tb": 560,
"tbk": 1,
"tl": 708,
"mb": 560,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1251,
1252,
1253,
1254,
1255,
1256,
1257,
1258,
3237,
3238,
3239,
3240,
3241,
3242,
3243,
3244,
3245,
789,
61,
62
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2231,
2232,
2233,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
283,
61,
99
]
},
{
"tb": 190968,
"tbk": 4,
"tl": 109,
"mb": 107808,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
791,
792,
793,
794,
795,
796,
797,
798,
2542,
2543,
2544,
2984,
2985,
2986,
2987
]
},
{
"tb": 672,
"tbk": 21,
"tl": 2066,
"mb": 672,
"mbk": 21,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
2030,
2031,
2032,
2033,
2034,
2035,
2036,
2037,
2034,
2038,
2039,
2040,
2041,
2042,
2043,
2044,
2045,
2046,
2047,
379
]
},
{
"tb": 240,
"tbk": 5,
"tl": 7,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207
]
},
{
"tb": 240,
"tbk": 4,
"tl": 8407,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3987,
3988,
3989,
3990,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 32,
"tbk": 2,
"tl": 6,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
113,
114
]
},
{
"tb": 61296,
"tbk": 8,
"tl": 231,
"mb": 26064,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2676,
2677,
2678,
2679,
2680,
2681,
2682,
2683,
2684,
2685,
2686,
2687,
2688,
2689,
2690,
2545,
2546,
2547,
2548
]
},
{
"tb": 768,
"tbk": 12,
"tl": 37286,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
12,
13,
14,
15,
268,
269,
270,
271,
272,
273,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
61,
62
]
},
{
"tb": 192,
"tbk": 2,
"tl": 10784,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2802,
2803,
2804,
2805,
2806,
2807,
2808,
2976,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 672,
"tbk": 18,
"tl": 47,
"mb": 112,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
407,
408,
408,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 80,
"tbk": 2,
"tl": 0,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2578,
2579,
2580,
2581,
2582,
2583,
2584,
2585,
2586,
2587,
2588,
2589,
2590,
2591,
2592,
2593,
2594,
2595,
2596,
2597,
2598,
2599,
2600,
1250,
385,
61,
99
]
},
{
"tb": 192,
"tbk": 2,
"tl": 0,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1195,
1196,
1197,
1198,
1199,
1200,
1201,
1202,
1203,
1204,
1205,
1206,
1203,
1207,
1208,
1209,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
61,
99
]
},
{
"tb": 288,
"tbk": 9,
"tl": 355,
"mb": 288,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
2030,
2031,
2032,
2033,
2034,
2035,
2036,
2037,
2034,
2038,
2039,
2040,
2041,
2042,
2043,
2044,
2045,
2046,
2047,
447
]
},
{
"tb": 512,
"tbk": 4,
"tl": 93,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
990,
991,
992,
993,
994,
995,
994,
996,
997,
998,
999,
1000,
1001,
1002,
1003,
384,
129,
61,
62
]
},
{
"tb": 1680,
"tbk": 6,
"tl": 12682,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3991,
3992,
3993,
3994,
3995,
3996,
3997,
3998,
3999,
4000,
4001,
4002,
4003,
4004,
4005,
4006,
4007,
4008,
4009,
4010,
4011,
4012,
4013,
4014,
4015,
4016,
4017,
4018,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 1120,
"tbk": 21,
"tl": 9,
"mb": 200,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
312,
313,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 128,
"tbk": 2,
"tl": 6,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
968,
969,
970,
971,
972,
973,
974,
975,
976,
977,
975,
978,
979,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 80,
"tbk": 2,
"tl": 0,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2578,
2579,
2580,
2581,
2582,
2583,
2584,
2585,
2586,
2587,
2588,
2589,
2590,
2591,
2592,
2593,
2594,
2595,
2596,
2597,
2598,
2599,
2600,
128,
385,
61,
62
]
},
{
"tb": 144,
"tbk": 6,
"tl": 3,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
313,
312,
312,
312,
313,
314,
315,
316
]
},
{
"tb": 256,
"tbk": 2,
"tl": 209965,
"mb": 128,
"mbk": 1,
"gb": 128,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2549,
2550,
2551,
2552,
2553,
2554,
2555,
2556,
2557,
2558,
2559,
2560,
2561,
2562,
2563,
2564,
2565,
2566,
2567,
2568,
2555,
2556,
2560,
2569,
2570,
2571,
2572,
2573,
2574,
2575,
2576,
2577,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 288,
"tbk": 1,
"tl": 2651,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1138,
1139,
1140,
1141,
1142,
1143,
1144,
1145,
1146,
1147,
1148,
1149,
16,
17,
18,
19,
20,
21,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 59520,
"tbk": 930,
"tl": 14637,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3107,
3108,
3109,
3110,
3111,
3112,
3113,
3114,
1452,
1453,
1454,
1455,
1456,
1457,
1453,
1458,
1459,
1460,
1461,
1462,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207
]
},
{
"tb": 288,
"tbk": 6,
"tl": 20,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
408,
408,
408,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 7424,
"tbk": 118,
"tl": 1469,
"mb": 160,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
1945,
4019,
4020,
4021,
4022,
4023,
4024,
4025,
4026,
4027,
4028,
4029,
4030,
4031,
4032,
3320,
3321,
3322,
3323,
3324,
3325,
3326,
3327,
3328,
3329,
3330,
3331,
3332,
3333,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 96,
"tbk": 6,
"tl": 29,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
407,
407,
408,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 288,
"tbk": 12,
"tl": 1148,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
312,
312,
313,
313,
312,
314,
315,
316
]
},
{
"tb": 64,
"tbk": 4,
"tl": 12,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
312,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 128,
"tbk": 1,
"tl": 188,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
990,
991,
1744,
1745,
967,
129,
61,
62
]
},
{
"tb": 168,
"tbk": 2,
"tl": 0,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1106,
1107,
1108,
1109,
1110,
1111,
1112,
1113,
1114,
1115,
1116,
1117,
1118,
1119,
1120,
1118,
1121,
1357,
1358,
1359,
1360,
1361,
1362,
1363,
1364,
1358,
1359,
1365,
1366,
1367,
1368,
1369,
1370,
1371,
1372,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 288,
"tbk": 4,
"tl": 0,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
113,
114
]
},
{
"tb": 192,
"tbk": 12,
"tl": 42,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
313,
313,
313,
312,
313,
314,
315,
316
]
},
{
"tb": 2592,
"tbk": 18,
"tl": 15142,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
2844,
2845,
2846,
2847,
2848,
2849,
2850,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 52368,
"tbk": 70,
"tl": 66762,
"mb": 12144,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2649,
2650,
2651,
2652,
2653,
2654,
2655,
2656,
2657,
2658,
2659,
2660,
2661,
2662,
2663,
2664,
2665,
823,
824,
825,
826,
827,
828,
829,
826,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 40,
"tbk": 1,
"tl": 499,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
158,
159,
160,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
170,
171,
172,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
1239,
1240,
181,
182,
183,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
2389,
2390,
2391,
2392,
2393,
2394,
2395,
2396
]
},
{
"tb": 62160,
"tbk": 282,
"tl": 15628628,
"mb": 26136,
"mbk": 99,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2953,
2954,
2955,
2956,
2957,
2958,
2959,
2960,
2961,
2962,
2963,
2964,
2965,
2966,
2967,
2968,
2969,
2970,
2960,
2961,
2971,
2972,
2973,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 480,
"tbk": 2,
"tl": 218,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
557,
558,
1872,
1873,
1017,
385,
113,
114
]
},
{
"tb": 64,
"tbk": 2,
"tl": 2214,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2988,
2989,
2990,
2991,
2992,
2993,
2994,
3353,
3354,
3355,
3356,
3357,
3358,
3359,
3360,
290,
291,
292,
293,
294,
295,
296,
297,
298,
299,
300,
290,
291,
292,
293,
294,
295,
296,
297,
298,
299,
300,
290,
291,
292,
293,
294,
295,
296,
297,
301,
302,
303,
304,
305,
306,
307,
308,
309,
205,
206,
207
]
},
{
"tb": 240,
"tbk": 6,
"tl": 25282,
"mb": 120,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4033,
4034,
4035,
4036,
4037,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 864,
"tbk": 12,
"tl": 6,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
313,
312,
313,
313,
313,
312
]
},
{
"tb": 80,
"tbk": 2,
"tl": 498,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
757,
758,
759,
760,
761,
762,
763,
764,
765,
646,
647,
648,
649,
650,
651,
652,
653,
654,
655,
656,
657,
658,
659,
660,
661,
662,
663,
664,
665,
666,
667,
668,
669,
670,
671,
672,
673,
674,
675,
676,
677,
205,
206,
207,
713,
714,
654,
655,
656
]
},
{
"tb": 384,
"tbk": 6,
"tl": 15963,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
12,
13,
14,
15,
16,
17,
18,
19,
20,
21,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 384,
"tbk": 6,
"tl": 821055,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
12,
13,
14,
15,
75,
76,
77,
78,
79,
80,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 96,
"tbk": 2,
"tl": 1,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
313,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 80,
"tbk": 5,
"tl": 14,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
408,
409,
410,
411,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
113,
114
]
},
{
"tb": 192,
"tbk": 2,
"tl": 196,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
123,
124,
125,
61,
99
]
},
{
"tb": 180,
"tbk": 1,
"tl": 99,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
766,
767,
768,
769,
770,
771,
772,
773,
774,
775,
776,
777,
778,
779,
780,
780,
781,
913,
914,
915,
916,
917,
918,
919,
920,
921,
922,
923,
924,
925,
926,
927,
928,
929,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 200,
"tbk": 1,
"tl": 254995,
"mb": 200,
"mbk": 1,
"gb": 200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3443,
3444,
3445,
3446,
3447,
3448,
3449,
3450,
3451,
3452,
3453,
3453,
3454,
1150,
1151,
1152,
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1164,
1165,
1396,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 96,
"tbk": 3,
"tl": 151,
"mb": 96,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
865,
866,
867,
113,
114
]
},
{
"tb": 2192,
"tbk": 1,
"tl": 37266,
"mb": 2192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1251,
1252,
1253,
1254,
1255,
1256,
1257,
1258,
3237,
3238,
3239,
3240,
3241,
3242,
3243,
3244,
3245,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
155
]
},
{
"tb": 448,
"tbk": 14,
"tl": 6,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
3965,
3966,
3967,
3968,
3969,
3970,
3971,
3972,
3973,
3974,
3975,
3196,
3197,
3198,
3199,
3200,
3201,
3202,
3203,
99
]
},
{
"tb": 432,
"tbk": 4,
"tl": 1,
"mb": 168,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
312,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 64,
"tbk": 2,
"tl": 201,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
123,
124,
125,
61,
99
]
},
{
"tb": 96,
"tbk": 6,
"tl": 33,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
408,
408,
408,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 94464,
"tbk": 138,
"tl": 1594,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2358,
2359,
2360,
2361,
2362,
2363,
2364,
2365,
2366,
2367,
2368,
2369,
2370,
2371,
2372,
2373,
2374,
2375,
2376,
2377,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 160,
"tbk": 4,
"tl": 13316,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3141,
3142,
3143,
3144,
3145,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 144,
"tbk": 1,
"tl": 58740,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
100,
101,
102,
103,
104,
105,
106,
107,
108,
109,
3380,
3381,
3382,
113,
114
]
},
{
"tb": 560,
"tbk": 8,
"tl": 95039,
"mb": 480,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4038,
4039,
4040,
4041,
4042,
4043,
4044,
4045,
4046,
4047,
4048,
4049,
4050,
4051,
4052,
4053,
4054,
4055,
4056,
4044,
4045,
4047,
4057,
2107,
2108,
2109,
113,
114
]
},
{
"tb": 300,
"tbk": 3,
"tl": 16,
"mb": 248,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1273,
1274,
1275,
1276,
1277,
1278,
1279,
1280,
1281,
1282,
1283,
1284,
1285,
1286,
1287,
1288,
1289,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1291,
1292,
1298,
1299,
1300,
1294,
1295,
1296,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
1308,
556
]
},
{
"tb": 576,
"tbk": 5,
"tl": 756044,
"mb": 576,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
4058,
4059,
4060,
4061,
4062,
4063,
4059,
4060,
4061,
4062,
4064,
4059,
4060,
4061,
4062,
4065,
4066
]
},
{
"tb": 160,
"tbk": 1,
"tl": 280,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
557,
558,
559,
560,
1017,
129,
113,
114
]
},
{
"tb": 48,
"tbk": 3,
"tl": 425,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4067,
4068,
4069,
4070,
4071,
4072,
4073,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 288,
"tbk": 1,
"tl": 242234,
"mb": 288,
"mbk": 1,
"gb": 288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1138,
1139,
1140,
1141,
1142,
1143,
1144,
1145,
1146,
1147,
1148,
1149,
16,
17,
18,
19,
20,
21,
21,
22,
1150,
1151,
1152,
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1164,
1165,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 160,
"tbk": 1,
"tl": 284,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
557,
558,
2513,
2514,
1017,
385,
61,
99
]
},
{
"tb": 560,
"tbk": 8,
"tl": 336488,
"mb": 480,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3686,
3687,
3688,
3689,
3690,
3691,
3692,
3693,
3694,
3695,
3696,
3697,
3698,
3699,
3700,
3701,
3702,
3703,
3704,
3692,
3693,
3695,
3705,
3380,
3381,
3382,
113,
114
]
},
{
"tb": 73728,
"tbk": 32,
"tl": 20425335,
"mb": 73728,
"mbk": 32,
"gb": 73728,
"gbk": 32,
"eb": 73728,
"ebk": 32,
"fs": [
4074,
4075,
4076,
4077,
4078,
4079,
4080,
4081,
4082,
4083,
4084,
1863,
1864,
1865,
1866,
1867,
1868,
1869,
1870,
1871,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 192,
"tbk": 2,
"tl": 402,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
1757,
1758,
1759,
1760,
1761,
1762,
1579,
1580,
1581,
1582,
1583,
1584,
1585,
1586,
1763,
1764,
1765,
1579,
1580,
1581,
1582,
1583,
1584,
1585,
1586,
3003,
3004,
3005,
3006,
3007,
3008,
3009,
3010,
3011,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 8808,
"tbk": 39,
"tl": 3524716,
"mb": 8712,
"mbk": 33,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2953,
2954,
2955,
2956,
2957,
2958,
2959,
2960,
2961,
2962,
2963,
2964,
2965,
2966,
2967,
2968,
2969,
2970,
2960,
2961,
2971,
2972,
2973,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 1328,
"tbk": 1,
"tl": 21,
"mb": 1328,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
596,
597,
598,
599,
600,
601,
602,
603,
604,
789,
61,
99
]
},
{
"tb": 1120,
"tbk": 3,
"tl": 499,
"mb": 640,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
557,
558,
559,
560,
125,
61,
99
]
},
{
"tb": 256,
"tbk": 4,
"tl": 44,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2400,
2401,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 8448,
"tbk": 16,
"tl": 168370,
"mb": 4224,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
803,
804,
805,
806,
807,
808,
809,
810,
811,
812,
813,
814,
811,
815,
816,
817,
818,
819,
820,
821,
822,
823,
824,
825,
826,
827,
828,
829,
826,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 1440,
"tbk": 6,
"tl": 18,
"mb": 240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
894,
895,
896,
897,
898,
899,
900,
901,
902,
903,
904,
905,
906,
907,
908,
3430,
3431,
3432,
3433
]
},
{
"tb": 1440,
"tbk": 20,
"tl": 4,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61
]
},
{
"tb": 384,
"tbk": 2,
"tl": 46500,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
2110,
2111,
2112,
2113,
2114,
2115,
2116,
2117,
2118,
2119,
2120,
2121,
2119,
2122,
2123,
1243,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 320,
"tbk": 4,
"tl": 329,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
126,
127,
1250,
385,
113,
114
]
},
{
"tb": 32,
"tbk": 2,
"tl": 7,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
312,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 40,
"tbk": 1,
"tl": 13403,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1874,
1875,
1876,
1877,
1878,
1879,
1880,
1881,
1882,
1883,
1884,
1884,
1885,
913,
914,
915,
916,
917,
918,
919,
920,
921,
922,
923,
924,
925,
926,
927,
928,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 128,
"tbk": 8,
"tl": 46,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 3168,
"tbk": 31,
"tl": 3,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1106,
1107,
1108,
1109,
1110,
1111,
1112,
1113,
1114,
1115,
1116,
1117,
1118,
1119,
1120,
1118,
1121,
1122,
1123,
1124,
1125,
1126,
1127,
1128,
1129,
1123,
1124,
1130,
1131,
1132,
1133,
1134,
1135,
1136,
1137,
929,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 360,
"tbk": 9,
"tl": 495296,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3299,
3300,
3301,
3302,
3303,
3304,
3305,
3306,
3307,
3308,
3309,
3310,
3311,
3312,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
3591,
3592,
3593,
3594,
3595,
3596,
3597,
3598,
3599,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 432,
"tbk": 3,
"tl": 265862,
"mb": 432,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
75,
76,
77,
78,
79,
80,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 80,
"tbk": 5,
"tl": 54,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550
]
},
{
"tb": 960,
"tbk": 5,
"tl": 136,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
257,
258,
259,
260,
261,
262,
263,
264,
265,
266,
267,
268,
269,
270,
271,
272,
273,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
62
]
},
{
"tb": 384,
"tbk": 6,
"tl": 190209,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
12,
13,
14,
15,
723,
724,
725,
726,
727,
728,
729,
730,
731,
732,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
3591,
3592,
3593,
3594,
3595,
3596,
3597,
3598,
3599
]
},
{
"tb": 1200,
"tbk": 1,
"tl": 36081,
"mb": 1200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
354,
355,
1006,
1007,
1008,
1009,
1010,
1011,
1012,
1013,
1014,
1015,
1016,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
155
]
},
{
"tb": 672,
"tbk": 1,
"tl": 47406,
"mb": 672,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
748,
749,
750,
751,
752,
753,
754,
755,
756,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
1410
]
},
{
"tb": 288,
"tbk": 1,
"tl": 2734,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2749,
2750,
2751,
2752,
2753,
2754,
2755,
2756,
2757,
2758,
2759,
2760,
2761,
2762,
2763,
2763,
2764,
618,
619,
620,
621,
622,
623,
624,
625,
626,
627,
628,
629,
630,
631,
632,
633,
782,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 1104,
"tbk": 3,
"tl": 267446,
"mb": 1104,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1244,
1245,
1246,
1247,
1248,
1249,
75,
76,
77,
78,
79,
80,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 1008,
"tbk": 7,
"tl": 233266,
"mb": 576,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
723,
724,
725,
726,
727,
728,
729,
730,
731,
732,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 512,
"tbk": 4,
"tl": 1186,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
2851,
2852,
1017,
129,
61,
99
]
},
{
"tb": 96,
"tbk": 6,
"tl": 21,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
312,
312,
313,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 144,
"tbk": 9,
"tl": 33,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
313,
312,
312,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 864,
"tbk": 18,
"tl": 11,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
313,
313,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 232,
"tbk": 4,
"tl": 1,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
564,
565,
566,
567,
568,
569,
570,
556
]
},
{
"tb": 720,
"tbk": 30,
"tl": 13,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
313,
312,
312,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3977,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1397,
1398,
1399,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
283,
61,
99
]
},
{
"tb": 128,
"tbk": 2,
"tl": 5,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3834,
3835,
3836,
3837,
3838,
3839,
3840,
3841,
3842,
3843,
3844,
3845,
3846,
3847,
3848,
3849,
3847,
3850,
3851,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 288,
"tbk": 2,
"tl": 6150,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
268,
269,
270,
271,
272,
273,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
113,
114
]
},
{
"tb": 432,
"tbk": 6,
"tl": 1,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
113,
114
]
},
{
"tb": 524,
"tbk": 2,
"tl": 19,
"mb": 524,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
1658,
1659,
1660,
1661,
1662,
1663,
1664,
1664,
1665,
1666,
1667,
1668,
1669,
1670,
1671,
1672,
1673,
1667,
1674,
1675,
1676,
1669,
1670,
1671,
1677,
1678,
1679,
1680,
1681,
1682,
1683,
1684,
1250,
129,
113,
114
]
},
{
"tb": 200,
"tbk": 1,
"tl": 64256,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
354,
355,
356,
357,
358,
359,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
447
]
},
{
"tb": 768,
"tbk": 6,
"tl": 242650,
"mb": 640,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2905,
2906,
2907,
2908,
2909,
2910,
2911,
4085,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 96,
"tbk": 3,
"tl": 1563,
"mb": 96,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
865,
866,
867,
61,
99
]
},
{
"tb": 80,
"tbk": 5,
"tl": 15,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
113,
114
]
},
{
"tb": 440,
"tbk": 9,
"tl": 23,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
868,
869,
870,
871,
872,
873,
874,
875,
876,
877,
878,
879,
880,
881,
882,
883,
884,
885,
886,
887,
888,
889,
890,
891,
892,
893,
99
]
},
{
"tb": 128,
"tbk": 1,
"tl": 537,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
284,
285,
286,
287,
288,
289,
290,
291,
292,
293,
294,
295,
296,
297,
298,
299,
300,
290,
291,
292,
293,
294,
295,
296,
297,
298,
299,
300,
1061,
1062,
1063,
1064,
1065,
1066,
1067,
1068,
1069,
1070,
205,
206,
207
]
},
{
"tb": 128,
"tbk": 1,
"tl": 243,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
990,
991,
1744,
1745,
1250,
129,
61,
62
]
},
{
"tb": 2524,
"tbk": 4,
"tl": 273,
"mb": 2000,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2691,
2692,
2693,
2694,
2695,
2696,
2697,
2698,
2699,
2700,
2701,
2702,
2703,
2704,
2705,
2706,
2707,
2708,
2709,
2710,
2707,
2711,
2712,
2713,
2714,
2715,
2716,
2717,
2718,
2719,
2720,
155
]
},
{
"tb": 200,
"tbk": 5,
"tl": 22,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4086,
4087,
4088,
4089,
4090,
4091,
4092,
4093,
4094,
4095,
4096,
4097,
4098,
4099,
4100,
4101,
4102,
4103,
4104,
4105,
4106,
4107,
1655,
1656,
1657,
62
]
},
{
"tb": 32,
"tbk": 1,
"tl": 639657,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
4108,
4109,
4110,
4111,
1272
]
},
{
"tb": 64,
"tbk": 2,
"tl": 536,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
865,
866,
1017,
129,
113,
114
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
312,
313,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 600,
"tbk": 3,
"tl": 267368,
"mb": 600,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3443,
3444,
3445,
3446,
3447,
3448,
3449,
3450,
3451,
3452,
3453,
3453,
3454,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 400,
"tbk": 2,
"tl": 8367,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1925,
1926,
1927,
1928,
1929,
1396,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 792,
"tbk": 6,
"tl": 2,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
312,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550
]
},
{
"tb": 768,
"tbk": 4,
"tl": 2838,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2014,
2015,
2016,
2017,
2018,
2019,
2020,
2021,
2022,
2023,
2024,
2025,
2026,
2027,
2025,
2028,
2029,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 148,
"tbk": 1,
"tl": 26,
"mb": 148,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1609,
1610,
1611,
1612,
1613,
1614,
1615,
1616,
1617,
1618,
1619,
1620,
1621,
1622,
1623,
1624,
1625,
1626,
1627,
1628,
1629,
1630,
1631,
384,
385,
61,
62
]
},
{
"tb": 168,
"tbk": 2,
"tl": 0,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1106,
1107,
1108,
1109,
1110,
1111,
1112,
1113,
1114,
1115,
1116,
1117,
1118,
1119,
1120,
1118,
1121,
1357,
1358,
1359,
1360,
1361,
1362,
1363,
1364,
1358,
1359,
1365,
1366,
1367,
1368,
1369,
1370,
1371,
1372,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 80,
"tbk": 2,
"tl": 866,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
757,
758,
759,
760,
761,
762,
763,
764,
765,
646,
647,
648,
649,
650,
651,
652,
653,
654,
655,
656,
657,
658,
659,
660,
661,
662,
663,
664,
665,
666,
667,
668,
669,
670,
671,
672,
673,
674,
675,
676,
677,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 600,
"tbk": 3,
"tl": 335848,
"mb": 600,
"mbk": 3,
"gb": 200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3443,
3444,
3445,
3446,
3447,
3448,
3449,
3450,
3451,
3452,
3453,
3453,
3454,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
1396,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 342208,
"tbk": 96,
"tl": 1407094,
"mb": 65664,
"mbk": 4,
"gb": 65664,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
3942,
3943,
4112,
4113,
4114,
4115,
4116,
4117,
4118,
4119,
4120,
4121,
4122,
4123,
4124,
4125,
4126,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 192,
"tbk": 4,
"tl": 13345,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3469,
3470,
3471,
3472,
3473,
3474,
3475,
3476,
3477,
3478,
3479,
3480,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 256,
"tbk": 4,
"tl": 49,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1241,
1242,
1243,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 224,
"tbk": 6,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
314,
315,
316,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
61,
62
]
},
{
"tb": 116544,
"tbk": 24,
"tl": 361017,
"mb": 58368,
"mbk": 3,
"gb": 58368,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1210,
1211,
1930,
1931,
1932,
1933,
1934,
1935,
1936,
1937,
1938,
1939,
1940,
1941,
1942,
1943,
1944,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046
]
},
{
"tb": 40864,
"tbk": 1,
"tl": 133,
"mb": 40864,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
3099,
3100,
3183,
3184,
3185,
3186,
3187,
3188,
3769,
3770,
3771,
3772
]
},
{
"tb": 1104,
"tbk": 1,
"tl": 36778,
"mb": 1104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1251,
1252,
1253,
1254,
1255,
1256,
1257,
1258,
3237,
3238,
3239,
3240,
3241,
3242,
3243,
3244,
3245,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
379
]
},
{
"tb": 2208,
"tbk": 6,
"tl": 207545,
"mb": 1104,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1244,
1245,
1246,
1247,
1248,
1249,
723,
724,
725,
726,
727,
728,
729,
730,
731,
732,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 32,
"tbk": 1,
"tl": 42,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
4127,
4128,
4129,
4130,
4130,
4131,
4132,
4133,
4134,
4135,
4136,
4137,
4138,
4132,
4133,
4139,
4140,
4141,
4135,
4136,
4137,
4142,
4143,
4144,
4145,
4146,
4147,
4148,
556
]
},
{
"tb": 7800,
"tbk": 325,
"tl": 149,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2484,
2485,
2486,
2487,
2488,
2489,
2490,
2491,
2492,
2493,
2494,
2495,
2496,
2497,
4149,
4150,
4151,
4152,
4153,
4154,
4155,
4156,
4157,
4154,
4158,
4159,
4160,
4161,
4162,
4163,
4164,
4165,
823,
824,
825,
826,
827,
828,
829,
826,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 96,
"tbk": 4,
"tl": 0,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
99
]
},
{
"tb": 48,
"tbk": 3,
"tl": 11,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
312,
313,
313,
313,
312,
314,
315,
316
]
},
{
"tb": 800,
"tbk": 4,
"tl": 100829,
"mb": 400,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1384,
1385,
1386,
1387,
1388,
1389,
1390,
1391,
1392,
1393,
1394,
1394,
1395,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
1396,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 576,
"tbk": 12,
"tl": 6,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
313,
312,
313,
312,
312,
314,
315,
316
]
},
{
"tb": 18560,
"tbk": 170,
"tl": 4203,
"mb": 384,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3717,
3718,
3719,
3720,
3721,
3722,
3723,
3724,
1953,
1954,
1955,
1956,
1957,
1958,
1959,
1960,
1961,
1962,
1963,
1964,
1965,
1966,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046
]
},
{
"tb": 103200,
"tbk": 26,
"tl": 471956,
"mb": 30720,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1913,
1914,
1915,
1916,
1917,
1918,
1919,
1920,
1921,
1922,
1923,
1924,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 2640,
"tbk": 1,
"tl": 160591,
"mb": 2640,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
748,
749,
750,
751,
752,
753,
754,
755,
756,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
155
]
},
{
"tb": 560,
"tbk": 1,
"tl": 656,
"mb": 560,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1251,
1252,
1253,
1254,
1255,
1256,
1257,
1258,
3237,
3238,
3239,
3240,
3241,
3242,
3243,
3244,
3245,
789,
113,
114
]
},
{
"tb": 1536,
"tbk": 1,
"tl": 26,
"mb": 1536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1463,
1464,
1465,
1466,
1467,
1468,
1469,
1470,
1471,
1472,
1473,
1474,
1475,
1476,
1477,
1478,
1479,
1480,
1481,
1482,
3418,
3419,
3420,
3421,
3422,
3423,
3424,
3425,
3426,
3427,
3428,
3429,
1497,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1502,
1506,
1507,
1508,
1509,
1510,
1511,
1512,
1513,
1514,
1515,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207
]
},
{
"tb": 192,
"tbk": 2,
"tl": 514,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
2851,
2852,
1017,
385,
61,
99
]
},
{
"tb": 160,
"tbk": 4,
"tl": 13325,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4166,
4167,
4168,
4169,
4170,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 2208,
"tbk": 6,
"tl": 275717,
"mb": 1104,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1411,
1412,
1413,
1414,
1415,
1416,
1417,
1418,
1419,
1420,
1421,
1422,
1423,
1424,
1425,
1426,
1427,
1428,
1429,
1430,
1431,
1432,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 864,
"tbk": 36,
"tl": 19,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
312,
312,
312,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 3456,
"tbk": 9,
"tl": 321472,
"mb": 3456,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2075,
2076,
2077,
2078,
2079,
2080,
2081,
2082,
2083,
2084,
2085,
2086,
2087,
2088,
2089,
2090,
2091,
2092,
2093,
2094,
2095,
2096,
283,
61,
62
]
},
{
"tb": 240,
"tbk": 10,
"tl": 2,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
113,
114
]
},
{
"tb": 240,
"tbk": 6,
"tl": 543189,
"mb": 200,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4171,
4172,
4173,
4174,
4175,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 48,
"tbk": 3,
"tl": 421,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3530,
3531,
3532,
3533,
3534,
3535,
3536,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 75744,
"tbk": 30,
"tl": 113590,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3189,
3190,
3191,
3192,
3193,
3194,
3195,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 288,
"tbk": 1,
"tl": 0,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1106,
1107,
1108,
1109,
1110,
1111,
1112,
1113,
1114,
1115,
1116,
1117,
1118,
1119,
1120,
1118,
1121,
1357,
1358,
1359,
1360,
1361,
1362,
1363,
1364,
1358,
1359,
1365,
1366,
1367,
1368,
1369,
1370,
1371,
1372,
929,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 240,
"tbk": 6,
"tl": 36447,
"mb": 200,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3175,
3176,
3177,
3178,
3179,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 864,
"tbk": 12,
"tl": 34,
"mb": 144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
408,
408,
407,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 288,
"tbk": 1,
"tl": 186,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2749,
2750,
2751,
2752,
2753,
2754,
2755,
2756,
2757,
2758,
2759,
2760,
2761,
2762,
2763,
2763,
2764,
913,
914,
915,
916,
917,
918,
919,
920,
921,
922,
923,
924,
925,
926,
927,
928,
929,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 80,
"tbk": 2,
"tl": 1157,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2380,
2381,
2382,
2383,
2384,
2385,
2386,
2387,
2387,
2388,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
1239,
1240,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
1551,
1552,
1553,
1554,
1555,
1556,
1557,
1558,
1559,
1560,
1061,
1062,
1063,
1064,
1065,
1066,
1067,
1068,
1069,
1070
]
},
{
"tb": 48,
"tbk": 2,
"tl": 0,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
408,
409,
410,
411,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
283,
61,
99
]
},
{
"tb": 52,
"tbk": 1,
"tl": 0,
"mb": 52,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4176,
4177,
4178,
4179,
4180,
4181,
4182,
4183,
4184,
4185,
4186,
4187,
4188,
4189,
4190,
4191,
4192,
4193,
4194
]
},
{
"tb": 96,
"tbk": 1,
"tl": 85706,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1210,
1211,
1212,
1213,
1214,
1235,
99
]
},
{
"tb": 3968,
"tbk": 62,
"tl": 22996,
"mb": 704,
"mbk": 11,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
2942,
2943,
2944,
2945,
2946,
2947,
2948,
2949,
2950,
2950,
2951,
2952,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 184168,
"tbk": 27,
"tl": 11754,
"mb": 34832,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4195,
4196,
4197,
4198,
4199,
4200,
4201,
4202,
4203,
4204,
4205,
4206,
4207,
4208,
4209,
4210,
4211,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 160,
"tbk": 2,
"tl": 17,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
868,
869,
870,
871,
872,
873,
874,
875,
876,
877,
878,
879,
880,
881,
882,
883,
884,
885,
886,
887,
964,
965,
966,
967,
129,
113,
114
]
},
{
"tb": 160,
"tbk": 4,
"tl": 19,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
868,
869,
870,
871,
872,
873,
874,
875,
876,
877,
878,
879,
880,
881,
882,
883,
884,
885,
886,
887,
964,
965,
966,
128,
129,
113,
114
]
},
{
"tb": 240,
"tbk": 1,
"tl": 64065,
"mb": 240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
354,
355,
356,
357,
358,
359,
360,
361,
362,
363,
364,
365,
366,
789,
61,
99
]
},
{
"tb": 80,
"tbk": 2,
"tl": 0,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2578,
2579,
2580,
2581,
2582,
2583,
2584,
2585,
2586,
2587,
2588,
2589,
2590,
2591,
2592,
2593,
2594,
2595,
2596,
2597,
2598,
2599,
2600,
128,
129,
113,
114
]
},
{
"tb": 360,
"tbk": 1,
"tl": 85704,
"mb": 360,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
571,
572,
573,
574,
575,
576,
577,
578,
579,
580,
581,
582,
583,
584,
585,
586,
577,
578,
580,
587,
1235,
99
]
},
{
"tb": 148,
"tbk": 1,
"tl": 8,
"mb": 148,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
1632,
1633,
1634,
1635,
1636,
1637,
1638,
1639,
1639,
1640,
1641,
1642,
1643,
1644,
1645,
1646,
1647,
1641,
1642,
1648,
1649,
1650,
1644,
1645,
1646,
1651,
1652,
1653,
1654,
1655,
1656,
1657,
99
]
},
{
"tb": 440,
"tbk": 9,
"tl": 55,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
151,
152,
153,
154,
379
]
},
{
"tb": 2880,
"tbk": 30,
"tl": 18130,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4212,
4213,
4214,
4215,
4216,
4217,
4218,
4219,
4220,
4221,
4222,
1349,
1350,
1351,
1352,
1353,
1354,
1355,
1356,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 11664,
"tbk": 30,
"tl": 18357,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1685,
1686,
1687,
1688,
1689,
1690,
1691,
1692,
1693,
1694,
1695,
1696,
1697,
1698,
1699,
1700,
1701,
1702,
1703,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 112,
"tbk": 3,
"tl": 0,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
407,
409,
410,
411,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
283,
113,
114
]
},
{
"tb": 128,
"tbk": 2,
"tl": 6,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1195,
1196,
1197,
1198,
1199,
1200,
1201,
1202,
1203,
1204,
1205,
1206,
1203,
1207,
1208,
1209,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
283,
61,
99
]
},
{
"tb": 128,
"tbk": 2,
"tl": 523,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
2942,
2943,
2944,
2945,
2946,
2947,
2948,
2949,
2950,
2950,
2951,
2952,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
1239,
1240,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
197,
198,
199,
200,
201,
202,
203,
204
]
},
{
"tb": 5448,
"tbk": 27,
"tl": 365350,
"mb": 1584,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4223,
4224,
4225,
4226,
4227,
4228,
4229,
4230,
4231,
4232,
4233,
4234,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 672,
"tbk": 18,
"tl": 6,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
313,
312,
313,
312,
312,
312
]
},
{
"tb": 357,
"tbk": 48,
"tl": 4615,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4235,
4236,
4237,
4238,
4239,
4240,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 32,
"tbk": 2,
"tl": 130,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3530,
3531,
3532,
3533,
3534,
3535,
3536,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859,
205,
206,
207
]
},
{
"tb": 236,
"tbk": 2,
"tl": 12,
"mb": 236,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
1808,
1809,
1810,
1811,
1812,
1813,
1814,
1815,
1815,
1816,
1817,
1818,
1819,
1820,
1821,
1822,
1823,
1817,
1818,
1824,
1825,
1826,
1820,
1821,
1822,
1827,
1828,
1829,
1830,
1831,
1832,
1833,
1834,
155
]
},
{
"tb": 168,
"tbk": 2,
"tl": 24,
"mb": 84,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
944,
945,
945,
946,
947,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
128,
385,
61,
62
]
},
{
"tb": 40,
"tbk": 1,
"tl": 12929,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1874,
1875,
1876,
1877,
1878,
1879,
1880,
1881,
1882,
1883,
1884,
1884,
1885,
913,
914,
915,
916,
917,
918,
919,
920,
921,
922,
923,
924,
925,
926,
927,
928,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 480,
"tbk": 1,
"tl": 252,
"mb": 480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1746,
1747,
1748,
1749,
1750,
1751,
1752,
1753,
1754,
1755,
1756,
789,
61,
62
]
},
{
"tb": 736,
"tbk": 2,
"tl": 6237,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1244,
1245,
1246,
1247,
1248,
1249,
268,
269,
270,
271,
272,
273,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
61,
62
]
},
{
"tb": 80,
"tbk": 2,
"tl": 5166,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
606,
607,
608,
609,
610,
611,
612,
613,
614,
615,
616,
616,
617,
1886,
1887,
1888,
1889,
1890,
1891,
1892,
1893,
1894,
1895,
1896,
1897,
1898,
1899,
1900,
1901,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 639042,
"mb": 4096,
"mbk": 1,
"gb": 4096,
"gbk": 1,
"eb": 4096,
"ebk": 1,
"fs": [
4241,
4242,
4243,
4244,
4245,
4246,
4247,
4248,
4249,
4250,
4251,
529,
530,
531,
532,
533,
534,
535,
536,
537,
538,
539,
540,
541,
542,
543,
544,
545,
546,
547,
548,
548,
549,
550,
551,
552,
553,
554,
555,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
556
]
},
{
"tb": 80,
"tbk": 2,
"tl": 8302,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4166,
4167,
4168,
4169,
4170,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 576,
"tbk": 12,
"tl": 8,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
313,
312,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 160,
"tbk": 2,
"tl": 21,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
868,
869,
870,
871,
872,
873,
874,
875,
876,
877,
878,
879,
880,
881,
882,
883,
884,
885,
886,
887,
964,
965,
966,
1250,
129,
61,
99
]
},
{
"tb": 540,
"tbk": 3,
"tl": 515,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
766,
767,
768,
769,
770,
771,
772,
773,
2853,
2854,
2855,
2856,
2857,
2858,
2859,
2859,
2860,
1886,
1887,
1888,
1889,
1890,
1891,
1892,
1893,
1894,
1895,
1896,
1897,
1898,
1899,
1900,
1901,
782,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 640,
"tbk": 8,
"tl": 721,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
126,
127,
967,
129,
61,
62
]
},
{
"tb": 528,
"tbk": 11,
"tl": 5,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
313,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 320,
"tbk": 8,
"tl": 3414,
"mb": 120,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2380,
2381,
2382,
2383,
2384,
2385,
2386,
2387,
2387,
2388,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
1239,
1240,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194
]
},
{
"tb": 128,
"tbk": 1,
"tl": 639655,
"mb": 128,
"mbk": 1,
"gb": 128,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
4108,
4109,
4110,
4111,
1272
]
},
{
"tb": 432,
"tbk": 9,
"tl": 359,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4223,
4224,
4225,
4226,
4227,
4228,
4229,
4230,
4231,
4232,
4233,
4234,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 312,
"tbk": 8,
"tl": 3,
"mb": 72,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
312,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 512,
"tbk": 4,
"tl": 2558419,
"mb": 512,
"mbk": 4,
"gb": 512,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
1902,
1903,
1904,
1905,
1906,
1907,
1908,
1909,
1910,
1911,
1912,
1272
]
},
{
"tb": 192,
"tbk": 12,
"tl": 38,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
312,
312,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 80,
"tbk": 2,
"tl": 717,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
158,
159,
160,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
170,
171,
172,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
197,
198,
199,
200,
201,
202,
203,
204,
205,
206,
207,
1239,
1240,
181,
182,
183,
173,
174,
175,
176,
177,
178,
179,
180
]
},
{
"tb": 240,
"tbk": 10,
"tl": 2,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
408,
409,
410,
411,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
99
]
},
{
"tb": 192,
"tbk": 4,
"tl": 1,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
312,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 8928,
"tbk": 30,
"tl": 35,
"mb": 1728,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
407,
407,
407,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 320,
"tbk": 4,
"tl": 423,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
126,
127,
1250,
129,
113,
114
]
},
{
"tb": 272,
"tbk": 17,
"tl": 39,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2231,
2232,
2233,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
99
]
},
{
"tb": 64,
"tbk": 1,
"tl": 741,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
2942,
2943,
2944,
2945,
2946,
2947,
2948,
2949,
2950,
2950,
2951,
2952,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
197,
198,
199,
200,
201,
202,
203,
204,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 1680,
"tbk": 6,
"tl": 18386,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1138,
1139,
1140,
1141,
1142,
1143,
1144,
1145,
1146,
1147,
1148,
1149,
268,
269,
270,
271,
272,
273,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
113,
114
]
},
{
"tb": 80,
"tbk": 4,
"tl": 915,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3189,
3190,
3191,
3192,
3193,
3194,
3195,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859,
205,
206,
207
]
},
{
"tb": 480,
"tbk": 2,
"tl": 21,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
557,
558,
1872,
1873,
867,
113,
114
]
},
{
"tb": 61296,
"tbk": 8,
"tl": 209,
"mb": 26064,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3566,
3567,
3568,
3569,
3570,
3571,
3572,
3573,
3574,
3575,
3576,
3577,
3578,
3579,
3580,
2545,
2546,
2547,
2548
]
},
{
"tb": 15808,
"tbk": 178,
"tl": 55921,
"mb": 1536,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2482,
2483,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 256,
"tbk": 4,
"tl": 12,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3834,
3835,
3836,
3837,
3838,
3839,
3840,
3841,
3842,
3843,
3844,
3845,
3846,
3847,
3848,
3849,
3847,
3850,
3851,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 264,
"tbk": 6,
"tl": 3,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
312,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550
]
},
{
"tb": 192,
"tbk": 12,
"tl": 41,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
312,
312,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 200,
"tbk": 5,
"tl": 28,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
151,
152,
153,
154,
447
]
},
{
"tb": 768,
"tbk": 4,
"tl": 2837,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3581,
3582,
3583,
3584,
3585,
3586,
3587,
3588,
3589,
3590,
2118,
2119,
2120,
2121,
2119,
2122,
2123,
1396,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 288,
"tbk": 6,
"tl": 6,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
312,
313,
312,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 192,
"tbk": 6,
"tl": 56,
"mb": 192,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
1217,
1218,
1219,
1220,
1220,
1221,
1222,
1223,
1224,
1225,
1226,
1227,
1228,
1229,
1230,
1231,
1232,
1233,
1234,
384,
385,
113,
114
]
},
{
"tb": 448,
"tbk": 14,
"tl": 4373,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2988,
2989,
2990,
2991,
2992,
2993,
2994,
2995,
2996,
2997,
2998,
2999,
3000,
3001,
3002,
1579,
1580,
1581,
1582,
1583,
1584,
1585,
1586,
1763,
1764,
1765,
1766,
1767,
1768,
1769,
1770,
1771,
1772,
1773,
1774,
1775,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 604,
"tbk": 4,
"tl": 77,
"mb": 464,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1273,
1274,
1275,
1276,
1277,
1278,
1279,
1280,
1433,
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
1441,
1442,
1443,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
967,
385,
61,
99
]
},
{
"tb": 224,
"tbk": 3,
"tl": 0,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
1381,
1382,
1383,
1516,
1655,
1656,
1657,
99
]
},
{
"tb": 240,
"tbk": 5,
"tl": 2,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
113,
114
]
},
{
"tb": 448,
"tbk": 14,
"tl": 7,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
3965,
3966,
3967,
3968,
3969,
3970,
3971,
3972,
3973,
3974,
3975,
2223,
2224,
2225,
2226,
2227,
2228,
2229,
2230,
379
]
},
{
"tb": 64,
"tbk": 4,
"tl": 12,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
113,
114
]
},
{
"tb": 864,
"tbk": 36,
"tl": 17,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
313,
313,
313,
312,
313,
312
]
},
{
"tb": 65,
"tbk": 1,
"tl": 23,
"mb": 65,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4252,
4253,
4254,
4255,
4256,
4257,
4258,
4259,
4260,
4261,
4262,
4263,
4264,
4265,
526,
527,
528,
529,
530,
531,
532,
533,
534,
535,
536,
537,
538,
539,
540,
541,
542,
543,
544,
545,
546,
547,
548,
548,
549,
550,
551,
552,
553,
554,
555,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
556
]
},
{
"tb": 3984,
"tbk": 203,
"tl": 10222,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
2206,
2207,
2208,
2209,
2210,
2211,
1452,
1453,
1454,
1455,
1456,
1457,
1453,
1458,
1459,
1460,
1461,
1462,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 96,
"tbk": 6,
"tl": 18,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
312,
313,
313,
312,
312,
314,
315,
316
]
},
{
"tb": 64,
"tbk": 8,
"tl": 140,
"mb": 64,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1780,
1781,
1782,
1783,
1782,
1784,
1785,
1786,
1787,
1788,
1789,
1790,
1791,
384,
129,
113,
114
]
},
{
"tb": 768,
"tbk": 6,
"tl": 247249,
"mb": 640,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2905,
2906,
2907,
2908,
2909,
2910,
2911,
4085,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 360,
"tbk": 1,
"tl": 2035,
"mb": 360,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1746,
1747,
1748,
1749,
1750,
1751,
1752,
1753,
1754,
1755,
1756,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
447
]
},
{
"tb": 47936,
"tbk": 749,
"tl": 7789,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4266,
4267,
4268,
4269,
4270,
4271,
4272,
4273,
3082,
3083,
3084,
3085,
3086,
3087,
3088,
3088,
3089,
3090,
3090,
3091,
3092,
3093,
3094,
3095,
3096,
3097,
3098,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 14400,
"tbk": 30,
"tl": 2651,
"mb": 480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3797,
3798,
3799,
3800,
3801,
3802,
3803,
3804,
3805,
3806,
3807,
3808,
3809,
3810,
3811,
3812,
3813,
3814,
3815,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 2304,
"tbk": 36,
"tl": 1240407,
"mb": 1152,
"mbk": 18,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
12,
13,
14,
15,
723,
724,
725,
726,
727,
728,
729,
730,
731,
732,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 48,
"tbk": 1,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
312,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 104,
"tbk": 3,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
564,
565,
566,
567,
568,
569,
570,
447
]
},
{
"tb": 720,
"tbk": 10,
"tl": 85,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550
]
},
{
"tb": 560,
"tbk": 2,
"tl": 32,
"mb": 400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
557,
558,
1872,
1873,
125,
61,
99
]
},
{
"tb": 256,
"tbk": 4,
"tl": 45,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1241,
1242,
1243,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 512,
"tbk": 4,
"tl": 274,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
2431,
2432,
2433,
2434,
2435,
2436,
2437,
2438,
2439,
2440,
2441,
2442,
2443,
2444,
2445,
2446,
2447,
2448,
2449,
2450,
2451,
2452,
2453,
2454,
2455,
2446,
2447,
2449,
2456,
384,
129,
61,
62
]
},
{
"tb": 240,
"tbk": 6,
"tl": 20963,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4274,
4275,
4276,
4277,
4278,
4279,
4280,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 888,
"tbk": 24,
"tl": 600,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
312,
313,
313,
313,
312,
314,
315,
316
]
},
{
"tb": 2576,
"tbk": 7,
"tl": 233592,
"mb": 1472,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1047,
1048,
1049,
1050,
1051,
1052,
723,
724,
725,
726,
727,
728,
729,
730,
731,
732,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
407,
409,
410,
411,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
283,
61,
99
]
},
{
"tb": 488,
"tbk": 5,
"tl": 0,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
564,
565,
566,
1516,
1655,
1656,
1657,
99
]
},
{
"tb": 288,
"tbk": 6,
"tl": 16,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
407,
407,
408,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 288,
"tbk": 12,
"tl": 6,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
313,
313,
312,
312,
313,
313
]
},
{
"tb": 20640,
"tbk": 26,
"tl": 11500,
"mb": 6144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
1945,
3537,
3538,
3539,
3540,
3541,
3542,
3543,
3544,
3545,
3546,
3547,
3548,
3549,
3550,
3551,
3552,
3553,
3554,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859
]
},
{
"tb": 96,
"tbk": 6,
"tl": 96,
"mb": 32,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
407,
408,
407,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 59520,
"tbk": 930,
"tl": 5591,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2457,
2458,
2459,
2460,
2461,
2462,
2463,
2464,
1452,
1453,
1454,
1455,
1456,
1457,
1453,
1458,
1459,
1460,
1461,
1462,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207
]
},
{
"tb": 41472,
"tbk": 98,
"tl": 650124,
"mb": 6144,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
803,
804,
805,
806,
807,
808,
809,
810,
811,
812,
813,
814,
811,
815,
816,
817,
818,
819,
820,
821,
822,
823,
824,
825,
826,
827,
828,
829,
826,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 128,
"tbk": 2,
"tl": 6,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
2977,
2978,
2979,
2980,
2981,
2979,
2982,
2983,
1396,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 400,
"tbk": 2,
"tl": 292726,
"mb": 400,
"mbk": 2,
"gb": 200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3443,
3444,
3445,
3446,
3447,
3448,
3449,
3450,
3451,
3452,
3453,
3453,
3454,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
1243,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 768,
"tbk": 12,
"tl": 37079,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
12,
13,
14,
15,
268,
269,
270,
271,
272,
273,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
61,
99
]
},
{
"tb": 96,
"tbk": 6,
"tl": 51,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
407,
408,
408,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 832,
"tbk": 24,
"tl": 7718,
"mb": 192,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
1757,
1758,
1759,
1760,
1761,
1762,
1766,
1767,
1768,
1769,
1770,
1771,
1772,
1773,
1774,
1775,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 240,
"tbk": 5,
"tl": 51,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550
]
},
{
"tb": 240,
"tbk": 6,
"tl": 5,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2578,
2579,
2580,
2581,
2582,
2583,
2584,
2585,
2586,
2587,
2588,
2589,
2590,
2591,
2592,
2593,
2594,
2595,
2596,
2597,
2598,
2599,
2600,
967,
385,
61,
62
]
},
{
"tb": 160,
"tbk": 1,
"tl": 79,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
571,
572,
573,
574,
575,
576,
577,
578,
579,
580,
581,
582,
583,
584,
585,
586,
577,
578,
580,
587,
384,
129,
61,
99
]
},
{
"tb": 672,
"tbk": 6,
"tl": 3426,
"mb": 384,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
314,
315,
316,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
113,
114
]
},
{
"tb": 1680,
"tbk": 6,
"tl": 12768,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3991,
3992,
3993,
3994,
3995,
3996,
3997,
3998,
3999,
4000,
4001,
4002,
4003,
4004,
4005,
4006,
4007,
4008,
4009,
4010,
4011,
4012,
4013,
4014,
4015,
4016,
4017,
4018,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 448,
"tbk": 12,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61,
99
]
},
{
"tb": 40,
"tbk": 1,
"tl": 634844,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
4281,
4282,
4283,
4284,
4285,
4286,
4287,
4288,
4289,
4290,
4291,
4292,
4293,
4294,
4295,
4296,
4297,
4298,
4299,
4300,
4301,
4302,
4303
]
},
{
"tb": 120,
"tbk": 3,
"tl": 13297,
"mb": 120,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1874,
1875,
1876,
1877,
1878,
1879,
1880,
1881,
1882,
1883,
1884,
1884,
1885,
618,
619,
620,
621,
622,
623,
624,
625,
626,
627,
628,
629,
630,
631,
632,
633,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 576,
"tbk": 12,
"tl": 5,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
312,
312,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 96,
"tbk": 6,
"tl": 37,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
408,
408,
407,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 32,
"tbk": 2,
"tl": 8,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2231,
2232,
2233,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
3313,
3314,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 864,
"tbk": 12,
"tl": 33,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
408,
408,
408,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 7424,
"tbk": 118,
"tl": 1426,
"mb": 160,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
1945,
4019,
4020,
4021,
4022,
4023,
4024,
4025,
4026,
4027,
4028,
4029,
4030,
4031,
4032,
3320,
3321,
3322,
3323,
3324,
3325,
3326,
3327,
3328,
3329,
3330,
3331,
3332,
3333,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 128,
"tbk": 8,
"tl": 18,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2231,
2232,
2233,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61,
62
]
},
{
"tb": 70560,
"tbk": 30,
"tl": 2128,
"mb": 3120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3797,
3798,
3799,
3800,
3801,
3802,
3803,
4304,
4305,
4306,
4307,
4308,
4309,
4310,
4311,
4312,
4313,
4314,
4315,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 21720,
"tbk": 905,
"tl": 3727,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2484,
2485,
2486,
2487,
2488,
2489,
2490,
2491,
2492,
2493,
2494,
2495,
2496,
2497,
4149,
4150,
4151,
4152,
4153,
4154,
4155,
4156,
4157,
4154,
4158,
4159,
4160,
4161,
4162,
4163,
4164,
4165,
823,
824,
825,
826,
827,
828,
829,
826,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 864,
"tbk": 12,
"tl": 249,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
408,
407,
408,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 1152,
"tbk": 18,
"tl": 609574,
"mb": 768,
"mbk": 12,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
12,
13,
14,
15,
723,
724,
725,
726,
727,
728,
729,
730,
731,
732,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207
]
},
{
"tb": 64,
"tbk": 2,
"tl": 28,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
2243,
2244,
2245,
2246,
384,
385,
61,
99
]
},
{
"tb": 800,
"tbk": 40,
"tl": 5,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2212,
2213,
2214,
2215,
2216,
2217,
2218,
2219,
2220,
2221,
2222,
2223,
2224,
2225,
2226,
2227,
2228,
2229,
2230,
155
]
},
{
"tb": 2688,
"tbk": 14,
"tl": 12796,
"mb": 768,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
257,
258,
259,
260,
261,
262,
263,
264,
265,
266,
267,
723,
724,
725,
726,
727,
728,
729,
730,
731,
732,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 864,
"tbk": 18,
"tl": 19,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
312,
312,
312,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 176,
"tbk": 11,
"tl": 43,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
313,
313,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 384,
"tbk": 6,
"tl": 1453458,
"mb": 384,
"mbk": 6,
"gb": 384,
"gbk": 6,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
12,
13,
14,
15,
16,
17,
18,
19,
20,
21,
21,
22,
1150,
1151,
1152,
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1164,
1165,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 240,
"tbk": 6,
"tl": 25322,
"mb": 120,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4033,
4034,
4035,
4036,
4037,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 432,
"tbk": 3,
"tl": 181,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2256,
2257,
2258,
2259,
2260,
2261,
2262,
2263,
2264,
2265,
2266,
2267,
2268,
2269,
2270,
283,
61,
99
]
},
{
"tb": 576,
"tbk": 6,
"tl": 28,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2676,
2677,
2678,
2679,
2680,
2681,
2682,
2683,
2684,
2685,
2686,
2687,
2688,
2689,
2690,
3430,
3431,
3432,
3433
]
},
{
"tb": 300,
"tbk": 3,
"tl": 32,
"mb": 248,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1273,
1274,
1275,
1276,
1277,
1278,
1279,
1280,
3273,
3274,
3275,
3276,
3277,
3278,
3279,
3280,
3280,
3281,
3282,
3283,
3284,
3285,
3286,
3287,
3288,
3282,
3283,
3289,
3290,
3291,
3285,
3286,
3287,
3292,
3293,
3294,
3295,
3296,
3297,
3298,
447
]
},
{
"tb": 5448,
"tbk": 14,
"tl": 270,
"mb": 1488,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2612,
2613,
2614,
2615,
2616,
2617,
2618,
2619,
2620,
2621,
2622,
2623,
2624,
2625,
2626,
2627,
2628,
2629,
2630,
1483,
1484,
1485,
1486,
1487,
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
823,
824,
825,
826,
827,
828,
829,
826,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 576,
"tbk": 3,
"tl": 43,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4316,
4317,
4318,
4319,
4320,
4321,
4322,
4323,
4324,
4325,
4326,
4327,
4328,
4329,
4330,
4331,
4332,
4333,
4334,
4335,
4336,
256
]
},
{
"tb": 2208,
"tbk": 6,
"tl": 507136,
"mb": 1104,
"mbk": 3,
"gb": 736,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
1411,
1412,
1413,
1414,
1415,
1416,
1417,
1418,
1419,
1420,
1421,
1422,
1423,
1424,
1425,
1426,
1427,
1428,
1429,
1430,
1431,
1432,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 192,
"tbk": 1,
"tl": 29,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
257,
258,
259,
260,
261,
262,
263,
264,
265,
266,
267,
268,
269,
270,
271,
272,
273,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
283,
61,
99
]
},
{
"tb": 576,
"tbk": 5,
"tl": 128288,
"mb": 576,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
3364,
3365,
3366,
3367,
3368,
3369,
3370,
3371,
3372,
3373,
3374,
3375,
3376,
3377,
3378,
3366,
3367,
3368,
3369,
3370,
3371,
3372,
3373,
3374,
3376,
3379,
110,
111,
112,
61,
99
]
},
{
"tb": 368,
"tbk": 1,
"tl": 136860,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1047,
1048,
1049,
1050,
1051,
1052,
75,
76,
77,
78,
79,
80,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 4176,
"tbk": 24,
"tl": 36643,
"mb": 1152,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2177,
2178,
2179,
2180,
2181,
2182,
2183,
2184,
2185,
2186,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 96,
"tbk": 6,
"tl": 18,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61
]
},
{
"tb": 960,
"tbk": 8,
"tl": 838,
"mb": 960,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
123,
124,
125,
61,
62
]
},
{
"tb": 1152,
"tbk": 6,
"tl": 12924,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2014,
2015,
2016,
2017,
2018,
2019,
2020,
2021,
2022,
2023,
2024,
2025,
2026,
2027,
2025,
2028,
2029,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 960,
"tbk": 8,
"tl": 4588,
"mb": 960,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
865,
866,
125,
61,
99
]
},
{
"tb": 1536,
"tbk": 4,
"tl": 2558409,
"mb": 1536,
"mbk": 4,
"gb": 1536,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
1180,
1181,
1182,
1183,
1184,
1185,
1186,
1187,
1188,
1189,
1190,
1191,
1192,
1193,
1194,
1272
]
},
{
"tb": 144,
"tbk": 1,
"tl": 136855,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
75,
76,
77,
78,
79,
80,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 40,
"tbk": 1,
"tl": 135,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
757,
758,
759,
760,
761,
762,
763,
764,
765,
646,
647,
648,
649,
650,
651,
652,
653,
654,
655,
656,
657,
658,
659,
660,
661,
662,
663,
664,
665,
666,
667,
1569,
1570,
1571,
1572,
1573,
1574,
1575,
1576,
1577,
1578,
1579,
1580,
1581,
1582,
1583,
1584,
1585,
1586,
1763,
1764,
1765,
1766,
1767,
1768,
1769,
1770,
1771,
1772,
1773,
1774,
1775
]
},
{
"tb": 672,
"tbk": 18,
"tl": 58,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
407,
408,
407,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 495616,
"tbk": 134,
"tl": 1435337,
"mb": 104512,
"mbk": 6,
"gb": 104512,
"gbk": 6,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
3942,
3943,
4112,
4113,
4114,
4115,
4116,
4117,
4118,
4119,
4120,
4121,
4122,
4123,
4124,
4125,
4126,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 1536,
"tbk": 8,
"tl": 111412,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3581,
3582,
3583,
3584,
3585,
3586,
3587,
3588,
3589,
3590,
4337,
4338,
4339,
4340,
4338,
4341,
4342,
1243,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 256,
"tbk": 4,
"tl": 49,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2400,
2401,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 96,
"tbk": 1,
"tl": 634811,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
4343,
4344,
4345,
4346,
4347,
4348,
4349,
4350
]
},
{
"tb": 1328,
"tbk": 1,
"tl": 14,
"mb": 1328,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
596,
597,
598,
599,
600,
601,
602,
603,
604,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
447
]
},
{
"tb": 600,
"tbk": 15,
"tl": 1379319,
"mb": 160,
"mbk": 4,
"gb": 160,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
3299,
3300,
3301,
3302,
3303,
3304,
3305,
3306,
3307,
3308,
3309,
3310,
3311,
3312,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 288,
"tbk": 18,
"tl": 62,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
313,
313,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 80,
"tbk": 2,
"tl": 0,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2578,
2579,
2580,
2581,
2582,
2583,
2584,
2585,
2586,
2587,
2588,
2589,
2590,
2591,
2592,
2593,
2594,
2595,
2596,
2597,
2598,
2599,
2600,
128,
129,
61,
62
]
},
{
"tb": 720,
"tbk": 10,
"tl": 7,
"mb": 144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207
]
},
{
"tb": 144,
"tbk": 1,
"tl": 2670,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
16,
17,
18,
19,
20,
21,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 80,
"tbk": 5,
"tl": 256,
"mb": 32,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207
]
},
{
"tb": 1344,
"tbk": 11,
"tl": 942352,
"mb": 1344,
"mbk": 11,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
2431,
2432,
2433,
2434,
2435,
2436,
2437,
2438,
2439,
2440,
2441,
2442,
2443,
2444,
2445,
2446,
2447,
2448,
2449,
2450,
2451,
2452,
2453,
2454,
2455,
2446,
2447,
2449,
2456,
1235,
99
]
},
{
"tb": 384,
"tbk": 6,
"tl": 24,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3246,
3247,
3248,
3249,
3250,
3251,
3252,
3253,
3254,
3255,
3256,
3257,
3258,
3259,
3260,
3430,
3431,
3432,
3433
]
},
{
"tb": 236,
"tbk": 2,
"tl": 14,
"mb": 236,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
944,
945,
945,
946,
947,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
888,
889,
890,
891,
892,
893,
62
]
},
{
"tb": 1120,
"tbk": 3,
"tl": 360,
"mb": 640,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
557,
558,
2378,
2379,
3315,
3316,
3317,
3318,
3319,
283,
113,
114
]
},
{
"tb": 888,
"tbk": 6,
"tl": 271,
"mb": 888,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
1525,
1526,
1527,
1528,
1529,
1530,
1531,
1532,
1533,
1534,
1535,
1536,
1533,
1537,
1538,
1539,
1540,
1541,
1542,
1543,
3201,
3202,
3203,
62
]
},
{
"tb": 200,
"tbk": 1,
"tl": 137486,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3443,
3444,
3445,
3446,
3447,
3448,
3449,
3450,
3451,
3452,
3453,
3453,
3454,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 384,
"tbk": 12,
"tl": 492,
"mb": 384,
"mbk": 12,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
1217,
1218,
1219,
1220,
1220,
1221,
1222,
1223,
1224,
1225,
1226,
1227,
1228,
1229,
1230,
1231,
1232,
1233,
1234,
384,
129,
61,
62
]
},
{
"tb": 40,
"tbk": 1,
"tl": 13536,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1874,
1875,
1876,
1877,
1878,
1879,
1880,
1881,
1882,
1883,
1884,
1884,
1885,
913,
914,
915,
916,
917,
918,
919,
920,
921,
922,
923,
924,
925,
926,
927,
928,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 288,
"tbk": 12,
"tl": 29,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
408,
407,
408,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 680,
"tbk": 8,
"tl": 75652,
"mb": 560,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4038,
4039,
4040,
4041,
4042,
4043,
4044,
4045,
4046,
4047,
4048,
4049,
4050,
4051,
4052,
4053,
4054,
4055,
4056,
4044,
4045,
4047,
4057,
3361,
3362,
3363,
113,
114
]
},
{
"tb": 112,
"tbk": 3,
"tl": 0,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
407,
409,
410,
411,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
283,
61,
99
]
},
{
"tb": 32,
"tbk": 1,
"tl": 634812,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
4351,
4352,
4353,
4354,
4355,
4356,
4357,
4358,
4359,
4360,
4361
]
},
{
"tb": 3168,
"tbk": 31,
"tl": 3,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1106,
1107,
1108,
1109,
1110,
1111,
1112,
1113,
1114,
1115,
1116,
1117,
1118,
1119,
1120,
1118,
1121,
1122,
1123,
1124,
1125,
1126,
1127,
1128,
1129,
1123,
1124,
1130,
1131,
1132,
1133,
1134,
1135,
1136,
1137,
929,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 288,
"tbk": 1,
"tl": 2730,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2749,
2750,
2751,
2752,
2753,
2754,
2755,
2756,
2757,
2758,
2759,
2760,
2761,
2762,
2763,
2763,
2764,
618,
619,
620,
621,
622,
623,
624,
625,
626,
627,
628,
629,
630,
631,
632,
633,
782,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 48,
"tbk": 2,
"tl": 0,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
61,
99
]
},
{
"tb": 960,
"tbk": 5,
"tl": 131,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
257,
258,
259,
260,
261,
262,
263,
264,
265,
266,
267,
268,
269,
270,
271,
272,
273,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
99
]
},
{
"tb": 2016,
"tbk": 18,
"tl": 12583,
"mb": 384,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
99
]
},
{
"tb": 768,
"tbk": 4,
"tl": 2841,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2014,
2015,
2016,
2017,
2018,
2019,
2020,
2021,
2022,
2023,
2024,
2025,
2026,
2027,
2025,
2028,
2029,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 4032,
"tbk": 18,
"tl": 278687,
"mb": 1152,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1210,
1211,
4362,
4363,
4364,
4365,
4366,
4367,
4368,
4369,
4370,
4371,
4372,
4373,
4374,
4375,
4376,
4377,
4378,
4379,
4380,
4381,
4382,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 1152,
"tbk": 9,
"tl": 64318,
"mb": 1152,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
328,
329,
330,
331,
332,
333,
334,
335,
336,
337,
338,
339,
340,
341,
342,
343,
344,
345,
335,
336,
337,
346,
347,
348,
349,
350,
351,
283,
113,
114
]
},
{
"tb": 512,
"tbk": 4,
"tl": 1214,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
2851,
2852,
1017,
129,
61,
62
]
},
{
"tb": 47936,
"tbk": 749,
"tl": 819,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3383,
3384,
3385,
3386,
3387,
3388,
3389,
3390,
3082,
3083,
3084,
3085,
3086,
3087,
3088,
3088,
3089,
3090,
3090,
3091,
3092,
3093,
3094,
3095,
3096,
3097,
3098,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 1872,
"tbk": 13,
"tl": 446110,
"mb": 288,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
3615,
3616,
3617,
3618,
3619,
3620,
3621,
3622,
3623,
3624,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 96,
"tbk": 6,
"tl": 48,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
408,
408,
407,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 384,
"tbk": 6,
"tl": 761136,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
12,
13,
14,
15,
16,
17,
18,
19,
20,
21,
21,
22,
1150,
1151,
1152,
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1164,
1165,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 128,
"tbk": 2,
"tl": 6,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3834,
3835,
3836,
3837,
3838,
3839,
3840,
3841,
3842,
3843,
3844,
3845,
3846,
3847,
3848,
3849,
3847,
3850,
3851,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 144288,
"tbk": 4,
"tl": 194,
"mb": 80832,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
3099,
3100,
3183,
3184,
3185,
3186,
3187,
3188,
3504,
3505,
3506,
909,
910,
911,
912
]
},
{
"tb": 192,
"tbk": 2,
"tl": 92724,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2905,
2906,
2907,
2908,
2909,
2910,
2911,
563,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 256,
"tbk": 8,
"tl": 486,
"mb": 256,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
123,
124,
867,
61,
62
]
},
{
"tb": 524,
"tbk": 2,
"tl": 85,
"mb": 524,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2691,
2692,
2693,
2694,
2695,
2696,
2697,
2698,
2699,
2700,
2701,
2702,
2703,
2704,
2705,
2706,
2707,
2708,
2709,
2710,
2707,
2711,
2712,
2713,
2714,
2715,
2716,
2717,
2718,
2719,
2720,
1410
]
},
{
"tb": 96,
"tbk": 3,
"tl": 855,
"mb": 96,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
865,
866,
867,
61,
62
]
},
{
"tb": 864,
"tbk": 18,
"tl": 15,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
313,
313,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 1920,
"tbk": 30,
"tl": 18079,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3976,
3977,
3978,
3979,
3980,
3981,
3982,
3983,
3984,
3985,
3986,
1349,
1350,
1351,
1352,
1353,
1354,
1355,
1356,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 1248,
"tbk": 6,
"tl": 0,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550
]
},
{
"tb": 21760,
"tbk": 244,
"tl": 1816,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3717,
3718,
3719,
3720,
3721,
4383,
4384,
4385,
1953,
1954,
1955,
1956,
1957,
1958,
1959,
1960,
1961,
1962,
1963,
1964,
1965,
1966,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 888,
"tbk": 6,
"tl": 295,
"mb": 888,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
1704,
1705,
1706,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1712,
1716,
1717,
1718,
1719,
1720,
1721,
1722,
1723,
1724,
1725,
447
]
},
{
"tb": 52368,
"tbk": 5,
"tl": 217,
"mb": 16432,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3246,
3247,
3248,
3249,
3250,
3251,
3252,
3253,
3254,
3255,
3256,
3257,
3258,
3259,
3260,
2984,
2985,
2986,
2987
]
},
{
"tb": 864,
"tbk": 12,
"tl": 28,
"mb": 144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
408,
407,
407,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 300,
"tbk": 3,
"tl": 43,
"mb": 248,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1273,
1274,
1275,
1276,
1277,
1278,
1279,
1280,
3273,
3274,
3275,
3276,
3277,
3278,
3279,
3280,
3280,
3281,
3282,
3283,
3284,
3285,
3286,
3287,
3288,
3282,
3283,
3289,
3290,
3291,
3285,
3286,
3287,
3292,
3293,
3294,
3295,
3296,
3297,
3298,
556
]
},
{
"tb": 1920,
"tbk": 30,
"tl": 62,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2721,
2722,
2723,
2724,
2725,
2726,
2727,
2728,
2729,
2730,
2731,
2732,
2733,
2734,
2735,
2736,
2737,
2738,
2739,
2740,
2741,
2742,
2743,
2744,
2745,
2746,
2747,
2748,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 192,
"tbk": 4,
"tl": 19014,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2749,
2750,
2751,
2752,
2753,
2754,
2755,
2756,
2757,
2758,
2759,
2760,
2761,
2762,
2763,
2763,
2764,
618,
619,
620,
621,
622,
623,
624,
625,
626,
627,
628,
629,
630,
631,
632,
633,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 5352,
"tbk": 31,
"tl": 9481,
"mb": 672,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
313,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 128,
"tbk": 1,
"tl": 227,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
990,
991,
1744,
1745,
1250,
129,
61,
99
]
},
{
"tb": 440,
"tbk": 9,
"tl": 41,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4086,
4087,
4088,
4089,
4090,
4091,
4092,
4093,
4094,
4095,
4096,
4097,
4098,
4099,
4100,
4101,
4102,
4103,
4104,
4105,
4106,
4107,
1655,
1656,
1657,
99
]
},
{
"tb": 64,
"tbk": 1,
"tl": 10,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3717,
3718,
3719,
3720,
3721,
4386,
3723,
3724,
1953,
1954,
1955,
1956,
1957,
1958,
1959,
1960,
1961,
1962,
1963,
1964,
1965,
1966,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 64,
"tbk": 2,
"tl": 69,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3889,
3890,
3891,
3892,
3893,
3894,
3895,
3896,
3897,
3898,
3899,
3900,
3901,
3902,
3903,
3904,
3905,
3906,
3907,
3908,
3909,
3910,
3911,
3912,
3913,
3914,
3915,
3916,
3907,
3908,
3910,
3917,
384,
385,
113,
114
]
},
{
"tb": 32,
"tbk": 1,
"tl": 634789,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
4108,
4109,
4110,
4111,
256
]
},
{
"tb": 288,
"tbk": 6,
"tl": 46,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
407,
408,
408,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 576,
"tbk": 12,
"tl": 2,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
312,
312,
313,
312,
313,
314,
315,
316
]
},
{
"tb": 720,
"tbk": 15,
"tl": 11,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
313,
313,
312,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 7424,
"tbk": 118,
"tl": 1209,
"mb": 160,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
1945,
4019,
4020,
4021,
4022,
4023,
4024,
4025,
4026,
4027,
4028,
4029,
4030,
4031,
4032,
3320,
3321,
3322,
3323,
3324,
3325,
3326,
3327,
3328,
3329,
3330,
3331,
3332,
3333,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 400,
"tbk": 2,
"tl": 8499,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1925,
1926,
1927,
1928,
1929,
1396,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 256,
"tbk": 2,
"tl": 1,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
990,
991,
4387,
4388,
4389,
4390,
4391,
4392,
4393,
4389,
4390,
4391,
4394,
322,
61,
62
]
},
{
"tb": 680,
"tbk": 8,
"tl": 79127,
"mb": 560,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4038,
4039,
4040,
4041,
4042,
4043,
4044,
4045,
4046,
4047,
4048,
4049,
4050,
4051,
4052,
4053,
4054,
4055,
4056,
4044,
4045,
4047,
4057,
3361,
3362,
3363,
61,
62
]
},
{
"tb": 80,
"tbk": 2,
"tl": 8532,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4166,
4167,
4168,
4169,
4170,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 148,
"tbk": 1,
"tl": 26,
"mb": 148,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1609,
1610,
1611,
1612,
1613,
1614,
1615,
1616,
1617,
1618,
1619,
1620,
1621,
1622,
1623,
1624,
1625,
1626,
1627,
1628,
1629,
1630,
1631,
384,
385,
61,
99
]
},
{
"tb": 560,
"tbk": 1,
"tl": 162474,
"mb": 560,
"mbk": 1,
"gb": 560,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
354,
355,
356,
357,
358,
359,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
155
]
},
{
"tb": 152,
"tbk": 1,
"tl": 9573,
"mb": 152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
1166,
1167,
1168,
1169,
1170,
3315,
3316,
3317,
3318,
3319,
322,
113,
114
]
},
{
"tb": 192,
"tbk": 6,
"tl": 1948,
"mb": 192,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
123,
124,
1017,
385,
61,
62
]
},
{
"tb": 3392,
"tbk": 22,
"tl": 18578,
"mb": 960,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3434,
3435,
3436,
3437,
3438,
3439,
3440,
3441,
3437,
3438,
3439,
3442,
322,
113,
114
]
},
{
"tb": 128,
"tbk": 4,
"tl": 1197,
"mb": 128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
2851,
2852,
1017,
129,
61,
99
]
},
{
"tb": 13760,
"tbk": 26,
"tl": 472909,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
3942,
3943,
4112,
4113,
4114,
4115,
4116,
4117,
4118,
4119,
4120,
4121,
4122,
4123,
4124,
4125,
4126,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859,
205,
206,
207
]
},
{
"tb": 32,
"tbk": 2,
"tl": 6,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
61
]
},
{
"tb": 2880,
"tbk": 30,
"tl": 18024,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1685,
1686,
1687,
1688,
1689,
1690,
1691,
1692,
1693,
1694,
1695,
1349,
1350,
1351,
1352,
1353,
1354,
1355,
1356,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 256,
"tbk": 4,
"tl": 10,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3834,
3835,
3836,
3837,
3838,
3839,
3840,
3841,
3842,
3843,
3844,
3845,
3846,
3847,
3848,
3849,
3847,
3850,
3851,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 160,
"tbk": 4,
"tl": 534622,
"mb": 128,
"mbk": 3,
"gb": 128,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
3816,
3817,
3818,
3819,
3820,
3821,
3822,
3823,
3824,
3825,
3826,
3827,
3828,
3829,
3830,
3831,
3832,
3833,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 96,
"tbk": 6,
"tl": 32,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
407,
408,
407,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 288,
"tbk": 18,
"tl": 66,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
312,
312,
312,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 1512,
"tbk": 1,
"tl": 99,
"mb": 1512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2612,
2613,
2614,
2615,
2616,
2617,
2618,
2619,
2620,
2621,
2622,
2623,
2624,
2625,
2626,
2627,
2628,
2629,
2630,
1483,
1484,
1485,
1486,
1487,
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
1497,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1502,
1506,
1507,
1508,
1509,
1510,
1511,
1512,
1513,
1514,
1515,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 400,
"tbk": 2,
"tl": 8372,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3391,
3392,
3393,
3394,
3395,
1396,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 640,
"tbk": 14,
"tl": 20,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
422,
423,
424,
425,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
437,
438,
439,
440,
441,
442,
430,
443,
444,
445,
446,
155
]
},
{
"tb": 96,
"tbk": 4,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
62
]
},
{
"tb": 144,
"tbk": 9,
"tl": 392,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3530,
3531,
3532,
3533,
3534,
3535,
3536,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 180,
"tbk": 1,
"tl": 111,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
766,
767,
768,
769,
770,
771,
772,
773,
774,
775,
776,
777,
778,
779,
780,
780,
781,
913,
914,
915,
916,
917,
918,
919,
920,
921,
922,
923,
924,
925,
926,
927,
928,
929,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 1680,
"tbk": 15,
"tl": 308098,
"mb": 384,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207
]
},
{
"tb": 1152,
"tbk": 18,
"tl": 1594961,
"mb": 1152,
"mbk": 18,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
12,
13,
14,
15,
75,
76,
77,
78,
79,
80,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 48,
"tbk": 2,
"tl": 0,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
408,
409,
410,
411,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
283,
113,
114
]
},
{
"tb": 40,
"tbk": 1,
"tl": 304,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
158,
159,
160,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
170,
171,
172,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
1239,
1240,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
197,
198,
199,
200,
201,
202,
203,
204,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 64,
"tbk": 2,
"tl": 78,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3889,
3890,
3891,
3892,
3893,
3894,
3895,
3896,
3897,
3898,
3899,
3900,
3901,
3902,
3903,
3904,
3905,
3906,
3907,
3908,
3909,
3910,
3911,
3912,
3913,
3914,
3915,
3916,
3907,
3908,
3910,
3917,
384,
385,
61,
62
]
},
{
"tb": 512,
"tbk": 4,
"tl": 126751,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
1053,
1054,
1055,
1056,
1057,
1058,
322,
61,
99
]
},
{
"tb": 236,
"tbk": 2,
"tl": 17,
"mb": 236,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
944,
945,
945,
946,
947,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
128,
129,
61,
99
]
},
{
"tb": 40,
"tbk": 1,
"tl": 2727,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
606,
607,
608,
609,
610,
611,
612,
613,
614,
615,
616,
616,
617,
618,
619,
620,
621,
622,
623,
624,
625,
626,
627,
628,
629,
630,
631,
632,
633,
782,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 3680,
"tbk": 29,
"tl": 1956877,
"mb": 640,
"mbk": 5,
"gb": 512,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
2549,
2550,
2551,
2552,
2553,
2554,
2555,
2556,
2557,
2558,
2559,
2560,
2561,
2562,
2563,
2564,
2565,
2566,
2567,
2568,
2555,
2556,
2560,
2569,
2570,
2571,
2572,
2573,
2574,
2575,
2576,
2577,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 5992,
"tbk": 10,
"tl": 110,
"mb": 1312,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2048,
2049,
2050,
2051,
2052,
2053,
2054,
2055,
2056,
2057,
2058,
2059,
2060,
2061,
2062,
2063,
2064,
2065,
2066,
2067,
2068,
2069,
2070,
2071,
2072,
2073,
2074,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 3136,
"tbk": 26,
"tl": 8071,
"mb": 704,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
1757,
1758,
1759,
1760,
1761,
1762,
1766,
1767,
1768,
1769,
1770,
1771,
1772,
1773,
1774,
1775,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 4240,
"tbk": 106,
"tl": 2723612,
"mb": 640,
"mbk": 16,
"gb": 240,
"gbk": 6,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
158,
159,
160,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
170,
171,
172,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 48,
"tbk": 2,
"tl": 0,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
313,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 160,
"tbk": 4,
"tl": 677468,
"mb": 120,
"mbk": 3,
"gb": 120,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
3299,
3300,
3301,
3302,
3303,
3304,
3305,
3306,
3307,
3308,
3309,
3310,
3311,
3312,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207
]
},
{
"tb": 288,
"tbk": 6,
"tl": 20,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
407,
408,
408,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 192,
"tbk": 6,
"tl": 63,
"mb": 192,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
1217,
1218,
1219,
1220,
1220,
1221,
1222,
1223,
1224,
1225,
1226,
1227,
1228,
1229,
1230,
1231,
1232,
1233,
1234,
384,
385,
61,
62
]
},
{
"tb": 240,
"tbk": 6,
"tl": 2722,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2380,
2381,
2382,
2383,
2384,
2385,
2386,
2387,
2387,
2388,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
1551,
1552,
1553,
1554,
1555,
1556,
1557,
1558,
1559,
1560,
290,
291,
292,
293,
294,
295,
296,
297,
298,
299,
300,
290,
291,
292,
293,
294,
295,
296,
297
]
},
{
"tb": 18144,
"tbk": 36,
"tl": 912126,
"mb": 6144,
"mbk": 4,
"gb": 6144,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
407,
407,
407,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 576,
"tbk": 5,
"tl": 45114,
"mb": 576,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
968,
969,
970,
971,
972,
4395,
4396,
4397,
4398,
4399,
4400,
4401,
4402,
4403,
4404,
4405,
4406,
4407,
4408,
4409,
4397,
4398,
4399,
4400,
4401,
4402,
4403,
4404,
4405,
4407,
4410,
3361,
3362,
3363,
113,
114
]
},
{
"tb": 288,
"tbk": 12,
"tl": 36,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
408,
408,
407,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 192,
"tbk": 1,
"tl": 1,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
257,
258,
259,
260,
261,
262,
263,
264,
265,
266,
267,
4411,
4412,
4413,
4414,
4415,
4416,
4417,
4418,
4419,
4420,
4421,
4422,
4423,
4424,
4425,
4426,
4427,
4428,
4429,
4430,
4431,
4421,
4422,
4423,
4432,
4433
]
},
{
"tb": 576,
"tbk": 6,
"tl": 20,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3566,
3567,
3568,
3569,
3570,
3571,
3572,
3573,
3574,
3575,
3576,
3577,
3578,
3579,
3580,
3430,
3431,
3432,
3433
]
},
{
"tb": 2448,
"tbk": 24,
"tl": 612,
"mb": 288,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
312,
312,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 64,
"tbk": 2,
"tl": 466,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
1757,
1758,
1759,
1760,
1761,
1762,
1579,
1580,
1581,
1582,
1583,
1584,
1585,
1586,
1763,
1764,
1765,
1579,
1580,
1581,
1582,
1583,
1584,
1585,
1586,
3003,
3004,
3005,
3006,
3007,
3008,
3009,
3010,
3011,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 432,
"tbk": 18,
"tl": 9,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
313,
313,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 128,
"tbk": 4,
"tl": 277,
"mb": 128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3889,
3890,
3891,
3892,
3893,
3894,
3895,
3896,
3897,
3898,
3899,
3900,
3901,
3902,
3903,
3904,
3905,
3906,
3907,
3908,
3909,
3910,
3911,
3912,
3913,
3914,
3915,
3916,
3907,
3908,
3910,
3917,
384,
129,
61,
99
]
},
{
"tb": 604,
"tbk": 4,
"tl": 66,
"mb": 464,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1273,
1274,
1275,
1276,
1277,
1278,
1279,
1280,
3273,
3274,
3275,
3276,
3277,
3278,
3279,
3280,
3280,
3281,
3282,
3283,
3284,
3285,
3286,
3287,
3288,
3282,
3283,
3289,
3290,
3291,
3285,
3286,
3287,
3292,
3293,
3294,
3295,
3296,
3297,
3298,
379
]
},
{
"tb": 864,
"tbk": 6,
"tl": 18479,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
268,
269,
270,
271,
272,
273,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
113,
114
]
},
{
"tb": 192,
"tbk": 8,
"tl": 741,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
113,
114
]
},
{
"tb": 1680,
"tbk": 6,
"tl": 18551,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1138,
1139,
1140,
1141,
1142,
1143,
1144,
1145,
1146,
1147,
1148,
1149,
268,
269,
270,
271,
272,
273,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
99
]
},
{
"tb": 200,
"tbk": 1,
"tl": 84916,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
571,
572,
573,
574,
575,
576,
577,
578,
579,
580,
581,
582,
583,
584,
585,
586,
577,
578,
580,
587,
1235,
62
]
},
{
"tb": 1440,
"tbk": 10,
"tl": 636363,
"mb": 432,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
3615,
3616,
3617,
3618,
3619,
3620,
3621,
3622,
3623,
3624,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 80,
"tbk": 2,
"tl": 0,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2578,
2579,
2580,
2581,
2582,
2583,
2584,
2585,
2586,
2587,
2588,
2589,
2590,
2591,
2592,
2593,
2594,
2595,
2596,
2597,
2598,
2599,
2600,
1250,
385,
113,
114
]
},
{
"tb": 320,
"tbk": 2,
"tl": 513,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
354,
355,
637,
638,
639,
640,
641,
642,
643,
644,
645,
646,
647,
648,
649,
650,
651,
652,
653,
654,
655,
656,
657,
658,
659,
660,
661,
662,
663,
664,
665,
666,
667,
668,
669,
670,
671,
672,
673,
674,
675,
676,
677,
205,
206,
207,
713,
714
]
},
{
"tb": 288,
"tbk": 1,
"tl": 23,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
2792,
2793,
2794,
2795,
2796,
2797,
2798,
2799,
2799,
2800,
2801,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
888,
889,
890,
2402,
2403,
2404,
2405
]
},
{
"tb": 5264,
"tbk": 1,
"tl": 39,
"mb": 5264,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
596,
597,
598,
599,
600,
601,
602,
603,
604,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
155
]
},
{
"tb": 524,
"tbk": 2,
"tl": 19,
"mb": 524,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
1658,
1659,
1660,
1661,
1662,
1663,
1664,
1664,
1665,
1666,
1667,
1668,
1669,
1670,
1671,
1672,
1673,
1667,
1674,
1675,
1676,
1669,
1670,
1671,
1677,
1678,
1679,
1680,
1681,
1682,
1683,
1684,
1250,
385,
61,
99
]
},
{
"tb": 768,
"tbk": 4,
"tl": 2867,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3581,
3582,
3583,
3584,
3585,
3586,
3587,
3588,
3589,
3590,
4337,
4338,
4339,
4340,
4338,
4341,
4342,
1396,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 1536,
"tbk": 8,
"tl": 29689,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2014,
2015,
2016,
2017,
2018,
2019,
2020,
2021,
2022,
2023,
4434,
4435,
4436,
4437,
4435,
4438,
4439,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 972,
"tbk": 3,
"tl": 165,
"mb": 824,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1609,
1610,
1611,
1612,
1613,
1614,
1615,
1616,
1617,
1618,
1619,
1620,
1621,
1622,
1623,
1624,
1625,
1626,
1627,
1628,
1629,
1630,
1631,
1004,
1005
]
},
{
"tb": 96,
"tbk": 2,
"tl": 8543,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3469,
3470,
3471,
3472,
3473,
3474,
3475,
3476,
3477,
3478,
3479,
3480,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 800,
"tbk": 4,
"tl": 13571,
"mb": 400,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1925,
1926,
1927,
1928,
1929,
1243,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 265376,
"tbk": 28,
"tl": 17854,
"mb": 69664,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4195,
4196,
4197,
4198,
4199,
4200,
4201,
4202,
4203,
4204,
4205,
4206,
4207,
4208,
4209,
4210,
4211,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 7200,
"tbk": 30,
"tl": 17973,
"mb": 240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1338,
1339,
1340,
1341,
1342,
1343,
1344,
1345,
1346,
1347,
1348,
1349,
1350,
1351,
1352,
1353,
1354,
1355,
1356,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 256,
"tbk": 4,
"tl": 12,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
2977,
2978,
2979,
2980,
2981,
2979,
2982,
2983,
1243,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 63,
"tbk": 6,
"tl": 803,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4235,
4236,
4237,
4238,
4239,
4240,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207
]
},
{
"tb": 7904,
"tbk": 8,
"tl": 136,
"mb": 1976,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2048,
2049,
2050,
2051,
2052,
2053,
2054,
2055,
2056,
2057,
2058,
2059,
2060,
3455,
3456,
3457,
3458,
3459,
3460,
3461,
3462,
3463,
3464,
3465,
3466,
3467,
3468,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 48,
"tbk": 1,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
407,
409,
410,
411,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
283,
113,
114
]
},
{
"tb": 192,
"tbk": 4,
"tl": 1,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61,
62
]
},
{
"tb": 736,
"tbk": 2,
"tl": 6156,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1244,
1245,
1246,
1247,
1248,
1249,
268,
269,
270,
271,
272,
273,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
113,
114
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3923,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1397,
1398,
1399,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
283,
113,
114
]
},
{
"tb": 480,
"tbk": 8,
"tl": 13334,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3987,
3988,
3989,
3990,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
113,
114
]
},
{
"tb": 128,
"tbk": 2,
"tl": 628,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
123,
124,
1017,
129,
61,
62
]
},
{
"tb": 192,
"tbk": 1,
"tl": 1,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4440,
4441,
4442,
4443,
4444,
4445,
4446,
4447,
4448,
4449,
4450,
4451,
4452,
4453,
4454,
4455,
4420,
4421,
4422,
4423,
4424,
4425,
4426,
4427,
4428,
4429,
4430,
4431,
4421,
4422,
4423,
4432,
4433
]
},
{
"tb": 540,
"tbk": 3,
"tl": 531,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
766,
767,
768,
769,
770,
771,
772,
773,
2853,
2854,
2855,
2856,
2857,
2858,
2859,
2859,
2860,
1886,
1887,
1888,
1889,
1890,
1891,
1892,
1893,
1894,
1895,
1896,
1897,
1898,
1899,
1900,
1901,
782,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 1216,
"tbk": 14,
"tl": 1,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1195,
1196,
1197,
1198,
1199,
1200,
1201,
1202,
1203,
1204,
1205,
1206,
1203,
1207,
1208,
1209,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61,
99
]
},
{
"tb": 288,
"tbk": 12,
"tl": 53,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
408,
408,
407,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 8064,
"tbk": 18,
"tl": 13136,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2187,
2188,
2189,
2190,
2191,
2192,
2193,
2194,
2195,
2196,
2197,
2198,
2199,
2200,
2201,
2202,
2203,
2204,
2205,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 96,
"tbk": 2,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
314,
315,
316,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
61,
62
]
},
{
"tb": 70560,
"tbk": 30,
"tl": 2579,
"mb": 3120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3797,
3798,
3799,
3800,
3801,
3802,
3803,
4304,
4305,
4306,
4307,
4308,
4309,
4310,
4311,
4312,
4313,
4314,
4315,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 40,
"tbk": 1,
"tl": 30,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3785,
3786,
3787,
3788,
3789,
3790,
3791,
3792,
3793,
3794,
3795,
3796,
1272
]
},
{
"tb": 48,
"tbk": 1,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
312,
313,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 60720,
"tbk": 1,
"tl": 417173,
"mb": 60720,
"mbk": 1,
"gb": 60720,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
791,
792,
3206,
3207,
3208,
3209,
3210,
3211,
1776,
1777,
1778,
1779
]
},
{
"tb": 832,
"tbk": 13,
"tl": 5388,
"mb": 320,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
2942,
2943,
2944,
2945,
2946,
2947,
2948,
2949,
2950,
2950,
2951,
2952,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
1239,
1240,
181,
182,
183
]
},
{
"tb": 272,
"tbk": 17,
"tl": 36,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2231,
2232,
2233,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
113,
114
]
},
{
"tb": 96,
"tbk": 6,
"tl": 23,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
313,
313,
312,
312,
313,
313
]
},
{
"tb": 80,
"tbk": 2,
"tl": 12,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
868,
869,
870,
871,
872,
873,
874,
875,
876,
877,
878,
879,
880,
881,
882,
883,
884,
885,
886,
887,
964,
965,
966,
128,
385,
61,
99
]
},
{
"tb": 240,
"tbk": 10,
"tl": 2,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
408,
409,
410,
411,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
62
]
},
{
"tb": 128,
"tbk": 4,
"tl": 124688,
"mb": 128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
1053,
1054,
1055,
1056,
1057,
1058,
322,
113,
114
]
},
{
"tb": 272,
"tbk": 17,
"tl": 40,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2231,
2232,
2233,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
62
]
},
{
"tb": 116736,
"tbk": 26,
"tl": 116666,
"mb": 49152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
1945,
3537,
3538,
3539,
3540,
3541,
3542,
3543,
3544,
3545,
3546,
3547,
3548,
3549,
3550,
3551,
3552,
3553,
3554,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850
]
},
{
"tb": 200,
"tbk": 1,
"tl": 62250,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
354,
355,
356,
357,
358,
359,
360,
361,
362,
363,
364,
365,
366,
605,
61,
62
]
},
{
"tb": 288,
"tbk": 6,
"tl": 21,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
407,
407,
407,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 144,
"tbk": 3,
"tl": 13880,
"mb": 144,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1967,
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1980,
1981,
1981,
1982,
618,
619,
620,
621,
622,
623,
624,
625,
626,
627,
628,
629,
630,
631,
632,
633,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 300,
"tbk": 3,
"tl": 54,
"mb": 248,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1273,
1274,
1275,
1276,
1277,
1278,
1279,
1280,
1433,
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
1441,
1442,
1443,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
967,
129,
113,
114
]
},
{
"tb": 480,
"tbk": 4,
"tl": 1,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
1381,
1382,
1383,
567,
568,
569,
570,
155
]
},
{
"tb": 288,
"tbk": 12,
"tl": 33,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
408,
407,
407,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 4198656,
"tbk": 4686,
"tl": 83053,
"mb": 1792,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1444,
1445,
1446,
1447,
1448,
1449,
1450,
1451,
1452,
1453,
1454,
1455,
1456,
1457,
1453,
1458,
1459,
1460,
1461,
1462,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 288,
"tbk": 4,
"tl": 1,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
62
]
},
{
"tb": 288,
"tbk": 6,
"tl": 90,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
407,
407,
407,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 1440,
"tbk": 36,
"tl": 12266,
"mb": 240,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2380,
2381,
2382,
2383,
2384,
2385,
2386,
2387,
2387,
2388,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
1551,
1552,
1553,
1554,
1555,
1556,
1557,
1558,
1559,
1560,
290,
291,
292,
293,
294,
295,
296,
297
]
},
{
"tb": 256,
"tbk": 4,
"tl": 12,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3834,
3835,
3836,
3837,
3838,
3839,
3840,
3841,
3842,
3843,
3844,
3845,
3846,
3847,
3848,
3849,
3847,
3850,
3851,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 144,
"tbk": 3,
"tl": 2,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
313,
313,
312,
313,
312,
312
]
},
{
"tb": 7776,
"tbk": 30,
"tl": 18414,
"mb": 304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3976,
3977,
3978,
3979,
3980,
3981,
3982,
3983,
3984,
3985,
3986,
1696,
1697,
1698,
1699,
1700,
1701,
1702,
1703,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 639299,
"mb": 1024,
"mbk": 1,
"gb": 1024,
"gbk": 1,
"eb": 1024,
"ebk": 1,
"fs": [
352,
790,
3146,
3147,
4456,
4457,
4458,
4459,
4460,
4461,
529,
530,
531,
532,
533,
534,
535,
536,
537,
538,
539,
540,
541,
542,
543,
544,
545,
546,
547,
548,
548,
549,
550,
551,
552,
553,
554,
555,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
556
]
},
{
"tb": 384,
"tbk": 6,
"tl": 1514657,
"mb": 384,
"mbk": 6,
"gb": 384,
"gbk": 6,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
12,
13,
14,
15,
75,
76,
77,
78,
79,
80,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 2472,
"tbk": 25,
"tl": 3,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1106,
1107,
1108,
1109,
1110,
1111,
1112,
1113,
1114,
1115,
1116,
1117,
1118,
1119,
1120,
1118,
1121,
1122,
1123,
1124,
1125,
1126,
1127,
1128,
1129,
1123,
1124,
1130,
1131,
1132,
1133,
1134,
1135,
1136,
1137,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 288,
"tbk": 1,
"tl": 2704,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1138,
1139,
1140,
1141,
1142,
1143,
1144,
1145,
1146,
1147,
1148,
1149,
16,
17,
18,
19,
20,
21,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 236,
"tbk": 2,
"tl": 35,
"mb": 236,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
944,
945,
945,
946,
947,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
1250,
129,
61,
62
]
},
{
"tb": 604,
"tbk": 4,
"tl": 77,
"mb": 464,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1273,
1274,
1275,
1276,
1277,
1278,
1279,
1280,
1433,
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
1441,
1442,
1443,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
967,
385,
61,
62
]
},
{
"tb": 160,
"tbk": 1,
"tl": 32,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
557,
558,
559,
560,
867,
61,
99
]
},
{
"tb": 800,
"tbk": 20,
"tl": 5686,
"mb": 160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2380,
2381,
2382,
2383,
2384,
2385,
2386,
2387,
2387,
2388,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
1551,
1552,
1553,
1554,
1555,
1556,
1557,
1558,
1559,
1560,
1061,
1062,
1063,
1064,
1065,
1066,
1067,
1068,
1069,
1070
]
},
{
"tb": 140,
"tbk": 2,
"tl": 38,
"mb": 140,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1273,
1274,
1275,
1276,
1277,
1278,
1279,
1280,
1433,
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
1441,
1442,
1443,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
1250,
129,
61,
62
]
},
{
"tb": 432,
"tbk": 3,
"tl": 101659,
"mb": 288,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
723,
724,
725,
726,
727,
728,
729,
730,
731,
732,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207
]
},
{
"tb": 1008,
"tbk": 3,
"tl": 2,
"mb": 576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4462,
4463,
4464,
4465,
4466,
4467,
4468,
4469,
4470,
4471,
4472,
4473,
4474,
4475,
4476,
4477,
4478,
4468,
4469,
4470,
4479,
4480
]
},
{
"tb": 440,
"tbk": 9,
"tl": 19,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
422,
423,
424,
425,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
437,
438,
439,
440,
441,
442,
430,
443,
444,
445,
446,
379
]
},
{
"tb": 240,
"tbk": 5,
"tl": 248,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207
]
},
{
"tb": 14400,
"tbk": 30,
"tl": 2552,
"mb": 480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3797,
3798,
3799,
3800,
3801,
3802,
3803,
3804,
3805,
3806,
3807,
3808,
3809,
3810,
3811,
3812,
3813,
3814,
3815,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 864,
"tbk": 6,
"tl": 1904134,
"mb": 576,
"mbk": 3,
"gb": 576,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1210,
1211,
4481,
4482,
4483,
4484,
4485,
4486,
4487,
4488,
4489,
4490,
4491,
4492,
4493,
4494,
256
]
},
{
"tb": 144,
"tbk": 1,
"tl": 252453,
"mb": 144,
"mbk": 1,
"gb": 144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
75,
76,
77,
78,
79,
80,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 32,
"tbk": 2,
"tl": 5,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
314,
315,
316,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
113,
114
]
},
{
"tb": 96,
"tbk": 3,
"tl": 129,
"mb": 96,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
4127,
4128,
4129,
4130,
4130,
4131,
4132,
4133,
4134,
4135,
4136,
4137,
4138,
4132,
4133,
4139,
4140,
4141,
4135,
4136,
4137,
4142,
4143,
4144,
4145,
4146,
4147,
4148,
379
]
},
{
"tb": 240,
"tbk": 6,
"tl": 22,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
868,
869,
870,
871,
872,
873,
874,
875,
876,
877,
878,
879,
880,
881,
882,
883,
884,
885,
886,
887,
964,
965,
966,
967,
385,
61,
99
]
},
{
"tb": 368,
"tbk": 1,
"tl": 126070,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1047,
1048,
1049,
1050,
1051,
1052,
16,
17,
18,
19,
20,
21,
21,
22,
1150,
1151,
1152,
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1164,
1165,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
407,
409,
410,
411,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
283,
61,
62
]
},
{
"tb": 104,
"tbk": 3,
"tl": 0,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
564,
565,
566,
1516,
1655,
1656,
1657,
62
]
},
{
"tb": 2712,
"tbk": 9,
"tl": 286,
"mb": 1368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2612,
2613,
2614,
2615,
2616,
2617,
2618,
2619,
2620,
2621,
2622,
2623,
2624,
2625,
2626,
2627,
2628,
2629,
2630,
3418,
3419,
3420,
3421,
3422,
3423,
3424,
3425,
3426,
3427,
3428,
3429,
823,
824,
825,
826,
827,
828,
829,
826,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 560,
"tbk": 8,
"tl": 99211,
"mb": 480,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4038,
4039,
4040,
4041,
4042,
4043,
4044,
4045,
4046,
4047,
4048,
4049,
4050,
4051,
4052,
4053,
4054,
4055,
4056,
4044,
4045,
4047,
4057,
2107,
2108,
2109,
61,
62
]
},
{
"tb": 604,
"tbk": 4,
"tl": 51,
"mb": 464,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1273,
1274,
1275,
1276,
1277,
1278,
1279,
1280,
1309,
1310,
1311,
1312,
1313,
1314,
1315,
1316,
1316,
1317,
1318,
1319,
1320,
1321,
1322,
1323,
1324,
1318,
1319,
1325,
1326,
1327,
1321,
1322,
1323,
1328,
1329,
1330,
1331,
1655,
1656,
1657,
99
]
},
{
"tb": 7168,
"tbk": 8,
"tl": 187,
"mb": 896,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3074,
3075,
3076,
3077,
3078,
3079,
3080,
3081,
3082,
3083,
3084,
3085,
3086,
3087,
3088,
3088,
3089,
3090,
3090,
3091,
3092,
3093,
3094,
3095,
3096,
3097,
3098,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859
]
},
{
"tb": 256,
"tbk": 16,
"tl": 540,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4067,
4068,
4069,
4070,
4071,
4072,
4073,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 10464,
"tbk": 93,
"tl": 89422,
"mb": 1536,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
313,
313,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 384,
"tbk": 6,
"tl": 839046,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
3615,
3616,
3617,
3618,
3619,
3620,
3621,
3622,
3623,
3624,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 128,
"tbk": 2,
"tl": 6,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
2977,
2978,
2979,
2980,
2981,
2979,
2982,
2983,
1396,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 299968,
"tbk": 4687,
"tl": 5652,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2457,
2458,
2459,
2460,
2461,
2462,
2463,
2464,
2601,
2602,
2603,
2604,
2605,
2606,
2602,
2607,
2608,
2609,
2610,
2611,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 288,
"tbk": 6,
"tl": 12,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
407,
408,
408,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 360,
"tbk": 2,
"tl": 12,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
1658,
1659,
1660,
1661,
1662,
1663,
1664,
1664,
1665,
1666,
1667,
1668,
1669,
1670,
1671,
1672,
1673,
1667,
1674,
1675,
1676,
1669,
1670,
1671,
1677,
1678,
1679,
1680,
1681,
1682,
1683,
1684,
128,
385,
113,
114
]
},
{
"tb": 160,
"tbk": 1,
"tl": 81,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
571,
572,
573,
574,
575,
576,
577,
578,
579,
580,
581,
582,
583,
584,
585,
586,
577,
578,
580,
587,
384,
129,
61,
62
]
},
{
"tb": 288,
"tbk": 1,
"tl": 10395,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1967,
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1980,
1981,
1981,
1982,
1886,
1887,
1888,
1889,
1890,
1891,
1892,
1893,
1894,
1895,
1896,
1897,
1898,
1899,
1900,
1901,
929,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 24,
"tbk": 1,
"tl": 151221,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4495,
4496,
4497,
4498,
4499,
4500,
4501,
4502,
4503,
4504
]
},
{
"tb": 120,
"tbk": 3,
"tl": 1930,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2380,
2381,
2382,
2383,
2384,
2385,
2386,
2387,
2387,
2388,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
197,
198,
199,
200,
201,
202,
203,
204,
205,
206,
207,
1239,
1240,
181,
182,
183
]
},
{
"tb": 160,
"tbk": 4,
"tl": 13469,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3141,
3142,
3143,
3144,
3145,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 40,
"tbk": 1,
"tl": 132,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2380,
2381,
2382,
2383,
2384,
2385,
2386,
2387,
2387,
2388,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
1551,
1552,
1553,
1554,
1555,
1556,
1557,
1558,
1559,
1560,
290,
291,
292,
293,
294,
295,
296,
297,
298,
299,
300,
1061,
1062,
1063,
1064,
1065,
1066,
1067,
1068,
1069,
1070
]
},
{
"tb": 240,
"tbk": 6,
"tl": 1735,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
757,
758,
759,
760,
761,
762,
763,
764,
765,
646,
647,
648,
649,
650,
651,
652,
653,
654,
655,
656,
657,
658,
659,
660,
661,
662,
663,
664,
665,
666,
667,
1569,
1570,
1571,
1572,
1573,
1574,
1575,
1576,
1577,
1578,
1579,
1580,
1581,
1582,
1583,
1584,
1585,
1586,
1763,
1764,
1765,
1579,
1580,
1581,
1582,
1583,
1584,
1585,
1586
]
},
{
"tb": 120,
"tbk": 3,
"tl": 66230,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
158,
159,
160,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
170,
171,
172,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
1239,
1240,
181,
182,
183,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207
]
},
{
"tb": 1472,
"tbk": 4,
"tl": 12394,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1244,
1245,
1246,
1247,
1248,
1249,
268,
269,
270,
271,
272,
273,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61,
62
]
},
{
"tb": 128,
"tbk": 8,
"tl": 18,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2231,
2232,
2233,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61,
99
]
},
{
"tb": 1884840,
"tbk": 4,
"tl": 84,
"mb": 1065120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
2533,
2534,
2535,
2536,
2537,
2538,
2539,
2540,
2541,
3504,
3505,
3506,
909,
910,
911,
912
]
},
{
"tb": 61440,
"tbk": 960,
"tl": 15747,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4505,
4506,
4507,
4508,
4509,
4510,
4511,
4512,
4513,
4514,
4515,
4516,
4517,
4518,
4519,
4520,
4521,
4522,
4523,
4524,
4525,
4526,
4516,
4527,
4518,
4519,
4520,
4521,
4522,
4528,
4524,
4525,
4529,
4530,
4531,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207
]
},
{
"tb": 768,
"tbk": 4,
"tl": 2861,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3581,
3582,
3583,
3584,
3585,
3586,
3587,
3588,
3589,
3590,
4337,
4338,
4339,
4340,
4338,
4341,
4342,
1396,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 240,
"tbk": 6,
"tl": 8,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
678,
679,
680,
681,
682,
683,
684,
685,
686,
687,
688,
689,
690,
691,
692,
693,
694,
695,
696,
697,
698,
699,
700,
701,
686,
702,
967,
385,
113,
114
]
},
{
"tb": 928,
"tbk": 29,
"tl": 1957002,
"mb": 160,
"mbk": 5,
"gb": 128,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
3816,
3817,
3818,
3819,
3820,
3821,
3822,
3823,
3824,
3825,
3826,
3827,
3828,
3829,
3830,
3831,
3832,
3833,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 200,
"tbk": 1,
"tl": 252432,
"mb": 200,
"mbk": 1,
"gb": 200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3443,
3444,
3445,
3446,
3447,
3448,
3449,
3450,
3451,
3452,
3453,
3453,
3454,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 24,
"tbk": 1,
"tl": 639595,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3180,
3181,
3182,
1272
]
},
{
"tb": 40,
"tbk": 1,
"tl": 84,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2380,
2381,
2382,
2383,
2384,
2385,
2386,
2387,
2387,
2388,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
1059,
1060,
298,
299,
300,
1061,
1062,
1063,
1064,
1065,
1066,
1067,
1068,
1069,
1070
]
},
{
"tb": 2880,
"tbk": 30,
"tl": 18797,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1685,
1686,
1687,
1688,
1689,
1690,
1691,
1692,
1693,
1694,
1695,
1349,
1350,
1351,
1352,
1353,
1354,
1355,
1356,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 288,
"tbk": 6,
"tl": 2,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
113,
114
]
},
{
"tb": 384,
"tbk": 8,
"tl": 74229,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1397,
1398,
1399,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
113,
114
]
},
{
"tb": 6048,
"tbk": 36,
"tl": 17,
"mb": 1280,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
407,
407,
407,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 1196,
"tbk": 5,
"tl": 39,
"mb": 896,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1273,
1274,
1275,
1276,
1277,
1278,
1279,
1280,
1433,
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
1441,
1442,
1443,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
888,
889,
890,
2402,
2403,
2404,
2405
]
},
{
"tb": 368,
"tbk": 1,
"tl": 137517,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1047,
1048,
1049,
1050,
1051,
1052,
75,
76,
77,
78,
79,
80,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 32,
"tbk": 1,
"tl": 24,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
2243,
2244,
2245,
2246,
384,
129,
61,
99
]
},
{
"tb": 1280,
"tbk": 8,
"tl": 3199,
"mb": 480,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
354,
355,
637,
638,
639,
640,
641,
642,
643,
644,
645,
703,
704,
705,
706,
707,
708,
709,
710,
711,
712,
205,
206,
207,
713,
714,
654,
655,
656,
646,
647,
648,
649,
650,
651,
652,
653,
654,
655,
656
]
},
{
"tb": 824,
"tbk": 2,
"tl": 58,
"mb": 824,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
2810,
2811,
2812,
2813,
2814,
2815,
2816,
2817,
2817,
2818,
2819,
2820,
2821,
2822,
2823,
2824,
2825,
2819,
2820,
2826,
2827,
2828,
2822,
2823,
2824,
2829,
2830,
2831,
2832,
2833,
2834,
2835,
155
]
},
{
"tb": 280,
"tbk": 1,
"tl": 3636,
"mb": 280,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
503,
504,
505,
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
517,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
283,
113,
114
]
},
{
"tb": 240,
"tbk": 12,
"tl": 2,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2212,
2213,
2214,
2215,
2216,
2217,
2218,
2219,
2220,
2221,
2222,
2223,
2224,
2225,
2226,
2227,
2228,
2229,
2230,
447
]
},
{
"tb": 448,
"tbk": 4,
"tl": 1089,
"mb": 448,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
123,
124,
1017,
129,
113,
114
]
},
{
"tb": 768,
"tbk": 4,
"tl": 4630,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
257,
258,
259,
260,
261,
262,
263,
264,
265,
266,
267,
723,
724,
725,
726,
727,
728,
729,
730,
731,
732,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 96,
"tbk": 6,
"tl": 139,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
408,
407,
407,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 768,
"tbk": 6,
"tl": 361596,
"mb": 768,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
3364,
3365,
3366,
3367,
3368,
3369,
3370,
3371,
3372,
3373,
3374,
3375,
3376,
3377,
3378,
3366,
3367,
3368,
3369,
3370,
3371,
3372,
3373,
3374,
3376,
3379,
3380,
3381,
3382,
61,
62
]
},
{
"tb": 368,
"tbk": 1,
"tl": 242257,
"mb": 368,
"mbk": 1,
"gb": 368,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1244,
1245,
1246,
1247,
1248,
1249,
16,
17,
18,
19,
20,
21,
21,
22,
1150,
1151,
1152,
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1164,
1165,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 96,
"tbk": 6,
"tl": 25,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
408,
407,
408,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 200,
"tbk": 1,
"tl": 48176,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
354,
355,
356,
357,
358,
359,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
1410
]
},
{
"tb": 480,
"tbk": 60,
"tl": 3261,
"mb": 480,
"mbk": 60,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1780,
1781,
1782,
1783,
1782,
1784,
1785,
1786,
1787,
1788,
1789,
1790,
1791,
1004,
1005
]
},
{
"tb": 80,
"tbk": 2,
"tl": 0,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2578,
2579,
2580,
2581,
2582,
2583,
2584,
2585,
2586,
2587,
2588,
2589,
2590,
2591,
2592,
2593,
2594,
2595,
2596,
2597,
2598,
2599,
2600,
128,
129,
61,
99
]
},
{
"tb": 672,
"tbk": 28,
"tl": 596,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2484,
2485,
2486,
2487,
2488,
2489,
2490,
2491,
2492,
2493,
2494,
2495,
2496,
2497,
2498,
2499,
2500,
2501,
2502,
2503,
2504,
2501,
2505,
2506,
2507,
2508,
2509,
2510,
2511,
2512,
823,
824,
825,
826,
827,
828,
829,
826,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 864,
"tbk": 12,
"tl": 171,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
408,
407,
407,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 2636,
"tbk": 8,
"tl": 16956,
"mb": 824,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
503,
504,
505,
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
517,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
62
]
},
{
"tb": 2064,
"tbk": 11,
"tl": 1882,
"mb": 432,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
313,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 24768,
"tbk": 1032,
"tl": 2844,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2484,
2485,
2486,
2487,
2488,
2489,
2490,
2491,
2492,
2493,
2494,
2495,
2496,
2497,
4149,
4150,
4151,
4152,
4153,
4154,
4155,
4156,
4157,
4154,
4158,
4159,
4160,
4161,
4162,
4163,
4164,
4165,
823,
824,
825,
826,
827,
828,
829,
826,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 600,
"tbk": 3,
"tl": 497574,
"mb": 600,
"mbk": 3,
"gb": 400,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
3443,
3444,
3445,
3446,
3447,
3448,
3449,
3450,
3451,
3452,
3453,
3453,
3454,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 128,
"tbk": 2,
"tl": 25,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1241,
1242,
1396,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 360,
"tbk": 1,
"tl": 335,
"mb": 360,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
354,
355,
1006,
1007,
1008,
1009,
1010,
1011,
1012,
1013,
1014,
1015,
1016,
605,
113,
114
]
},
{
"tb": 80,
"tbk": 2,
"tl": 8397,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3141,
3142,
3143,
3144,
3145,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 3528,
"tbk": 30,
"tl": 1160,
"mb": 384,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
312,
312,
312,
313,
312,
314,
315,
316
]
},
{
"tb": 200,
"tbk": 1,
"tl": 136829,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3443,
3444,
3445,
3446,
3447,
3448,
3449,
3450,
3451,
3452,
3453,
3453,
3454,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 864,
"tbk": 3,
"tl": 13516,
"mb": 864,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1967,
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1980,
1981,
1981,
1982,
1886,
1887,
1888,
1889,
1890,
1891,
1892,
1893,
1894,
1895,
1896,
1897,
1898,
1899,
1900,
1901,
782,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 384,
"tbk": 12,
"tl": 474,
"mb": 384,
"mbk": 12,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
1217,
1218,
1219,
1220,
1220,
1221,
1222,
1223,
1224,
1225,
1226,
1227,
1228,
1229,
1230,
1231,
1232,
1233,
1234,
384,
129,
61,
99
]
},
{
"tb": 2072,
"tbk": 14,
"tl": 1390,
"mb": 2072,
"mbk": 14,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
1525,
1526,
1527,
1528,
1529,
1530,
1531,
1532,
1533,
1534,
1535,
1536,
1533,
1537,
1538,
1539,
1540,
1541,
1542,
1543,
3201,
3202,
3203,
99
]
},
{
"tb": 368,
"tbk": 1,
"tl": 2673,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1244,
1245,
1246,
1247,
1248,
1249,
16,
17,
18,
19,
20,
21,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 336,
"tbk": 7,
"tl": 9,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
313,
313,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 387936,
"tbk": 33,
"tl": 134544,
"mb": 147456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
1945,
1946,
1947,
1948,
1949,
1950,
1951,
1952,
1953,
1954,
1955,
1956,
1957,
1958,
1959,
1960,
1961,
1962,
1963,
1964,
1965,
1966,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850
]
},
{
"tb": 2880,
"tbk": 30,
"tl": 18727,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4212,
4213,
4214,
4215,
4216,
4217,
4218,
4219,
4220,
4221,
4222,
1349,
1350,
1351,
1352,
1353,
1354,
1355,
1356,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 2688,
"tbk": 18,
"tl": 2884,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
3942,
3943,
4532,
4533,
4534,
4535,
4536,
4537,
4538,
4539,
4540,
4541,
4542,
4543,
4544,
4545,
4546,
4547,
4548,
4549,
4550,
4551,
4552,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 144,
"tbk": 9,
"tl": 369,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4067,
4068,
4069,
4070,
4071,
4072,
4073,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 2160,
"tbk": 135,
"tl": 5053,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
2206,
2207,
3216,
3217,
3218,
3219,
3220,
3221,
1452,
1453,
1454,
1455,
1456,
1457,
1453,
1458,
1459,
1460,
1461,
1462,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 512,
"tbk": 32,
"tl": 20453512,
"mb": 512,
"mbk": 32,
"gb": 512,
"gbk": 32,
"eb": 512,
"ebk": 32,
"fs": [
4553,
4554,
4555,
4556,
4557,
4558,
4559,
4560,
4561,
4562,
4563,
4564,
4565,
4566,
529,
530,
531,
532,
533,
534,
535,
536,
537,
538,
539,
540,
541,
542,
543,
544,
545,
546,
547,
548,
548,
549,
550,
551,
552,
553,
554,
555,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
556
]
},
{
"tb": 48,
"tbk": 2,
"tl": 0,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
61,
62
]
},
{
"tb": 300,
"tbk": 3,
"tl": 54,
"mb": 248,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1273,
1274,
1275,
1276,
1277,
1278,
1279,
1280,
1433,
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
1441,
1442,
1443,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
128,
129,
61,
99
]
},
{
"tb": 192,
"tbk": 2,
"tl": 0,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
733,
734,
735,
736,
737,
738,
739,
740,
741,
742,
743,
744,
741,
745,
746,
747,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
61,
99
]
},
{
"tb": 1296,
"tbk": 18,
"tl": 9,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
313,
313,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 288,
"tbk": 6,
"tl": 77,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
408,
408,
407,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 768,
"tbk": 4,
"tl": 2972,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2014,
2015,
2016,
2017,
2018,
2019,
2020,
2021,
2022,
2023,
2024,
2025,
2026,
2027,
2025,
2028,
2029,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 640,
"tbk": 8,
"tl": 876,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
126,
127,
1250,
129,
61,
99
]
},
{
"tb": 128,
"tbk": 1,
"tl": 20,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4567,
4568,
4569,
4570,
4571,
4572,
4573,
4574,
4575,
4576,
4577,
4578,
526,
527,
528,
529,
530,
531,
532,
533,
534,
535,
536,
537,
538,
539,
540,
541,
542,
543,
544,
545,
546,
547,
548,
548,
549,
550,
551,
552,
553,
554,
555,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
556
]
},
{
"tb": 144,
"tbk": 1,
"tl": 139876,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
3615,
3616,
3617,
3618,
3619,
3620,
3621,
3622,
3623,
3624,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 288,
"tbk": 1,
"tl": 136832,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1138,
1139,
1140,
1141,
1142,
1143,
1144,
1145,
1146,
1147,
1148,
1149,
75,
76,
77,
78,
79,
80,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 1440,
"tbk": 24,
"tl": 95,
"mb": 320,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
407,
407,
408,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 384,
"tbk": 6,
"tl": 756322,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
12,
13,
14,
15,
16,
17,
18,
19,
20,
21,
21,
22,
1150,
1151,
1152,
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1164,
1165,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 288,
"tbk": 1,
"tl": 23,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
2878,
2879,
2880,
2881,
2882,
2883,
2884,
2885,
2885,
2886,
2887,
2888,
2889,
2890,
2891,
2892,
2893,
2887,
2888,
2894,
2895,
2896,
2890,
2891,
2892,
2897,
2898,
2899,
2900,
2901,
2902,
2903,
2904,
155
]
},
{
"tb": 1104,
"tbk": 3,
"tl": 497662,
"mb": 1104,
"mbk": 3,
"gb": 736,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
1244,
1245,
1246,
1247,
1248,
1249,
75,
76,
77,
78,
79,
80,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 480,
"tbk": 1,
"tl": 212,
"mb": 480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1746,
1747,
1748,
1749,
1750,
1751,
1752,
1753,
1754,
1755,
1756,
789,
113,
114
]
},
{
"tb": 192,
"tbk": 2,
"tl": 18738,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1210,
1211,
1561,
1562,
1563,
1564,
1565,
1566,
1567,
1563,
1564,
1565,
1568,
322,
61,
62
]
},
{
"tb": 192,
"tbk": 2,
"tl": 92443,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2905,
2906,
2907,
2908,
2909,
2910,
2911,
563,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 256,
"tbk": 8,
"tl": 468,
"mb": 256,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
123,
124,
867,
61,
99
]
},
{
"tb": 368,
"tbk": 1,
"tl": 31796,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1244,
1245,
1246,
1247,
1248,
1249,
723,
724,
725,
726,
727,
728,
729,
730,
731,
732,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
3591,
3592,
3593,
3594,
3595,
3596,
3597,
3598,
3599,
205,
206,
207
]
},
{
"tb": 96,
"tbk": 6,
"tl": 20,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
312,
312,
313,
313,
312,
312
]
},
{
"tb": 480,
"tbk": 1,
"tl": 254,
"mb": 480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
354,
355,
1006,
1007,
1008,
1009,
1010,
1011,
1012,
1013,
1014,
1015,
1016,
789,
61,
62
]
},
{
"tb": 256,
"tbk": 4,
"tl": 12,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
968,
969,
970,
971,
972,
973,
974,
975,
976,
977,
975,
978,
979,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 1792,
"tbk": 22,
"tl": 24,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1195,
1196,
1197,
1198,
1199,
1200,
1201,
1202,
1203,
1204,
1205,
1206,
1203,
1207,
1208,
1209,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
62
]
},
{
"tb": 160,
"tbk": 4,
"tl": 202082,
"mb": 80,
"mbk": 2,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
158,
159,
160,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
170,
171,
172,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
2389,
2390,
2391,
2392,
2393,
2394,
2395,
2396,
2397,
2398,
2399,
1551,
1552,
1553,
1554,
1555,
1556,
1557,
1558,
1559,
1560
]
},
{
"tb": 432,
"tbk": 9,
"tl": 8,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
313,
312,
312,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 96,
"tbk": 2,
"tl": 5172,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2749,
2750,
2751,
2752,
2753,
2754,
2755,
2756,
2757,
2758,
2759,
2760,
2761,
2762,
2763,
2763,
2764,
1886,
1887,
1888,
1889,
1890,
1891,
1892,
1893,
1894,
1895,
1896,
1897,
1898,
1899,
1900,
1901,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 20800,
"tbk": 325,
"tl": 532,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3383,
3384,
3385,
3386,
3387,
3388,
3389,
3390,
3082,
3083,
3084,
3085,
3086,
3087,
3088,
3088,
3089,
3090,
3090,
3091,
3092,
3093,
3094,
3095,
3096,
3097,
3098,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 40,
"tbk": 1,
"tl": 639690,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
4579,
4580,
4581,
4582,
4583,
4584
]
},
{
"tb": 192,
"tbk": 2,
"tl": 22005,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
1053,
1054,
1055,
1056,
1057,
1058,
283,
61,
99
]
},
{
"tb": 372,
"tbk": 2,
"tl": 22045,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
1166,
1167,
1168,
1169,
1170,
1171,
1172,
1173,
1174,
1175,
1176,
1177,
1178,
1179,
322,
61,
62
]
},
{
"tb": 288,
"tbk": 6,
"tl": 74,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
407,
407,
407,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 180,
"tbk": 1,
"tl": 91,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
3012,
3013,
3014,
3015,
3016,
3017,
3018,
3018,
3019,
1150,
1151,
1152,
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1164,
1165,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 110432,
"tbk": 1,
"tl": 151734,
"mb": 110432,
"mbk": 1,
"gb": 110432,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
3099,
3100,
3183,
3184,
3185,
3186,
3187,
3188,
3933,
3934,
3935,
3936
]
},
{
"tb": 256,
"tbk": 2,
"tl": 1,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
990,
991,
4387,
4388,
4389,
4390,
4391,
4392,
4393,
4389,
4390,
4391,
4394,
322,
61,
99
]
},
{
"tb": 70560,
"tbk": 30,
"tl": 18281,
"mb": 3120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1338,
1339,
1340,
1341,
1342,
1343,
1344,
1345,
1346,
1347,
1348,
1696,
1697,
1698,
1699,
1700,
1701,
1702,
1703,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 288,
"tbk": 1,
"tl": 126846,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1138,
1139,
1140,
1141,
1142,
1143,
1144,
1145,
1146,
1147,
1148,
1149,
16,
17,
18,
19,
20,
21,
21,
22,
1150,
1151,
1152,
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1164,
1165,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 104,
"tbk": 2,
"tl": 31,
"mb": 52,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1273,
1274,
1275,
1276,
1277,
1278,
1279,
1280,
1433,
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
1441,
1442,
1443,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
128,
385,
61,
62
]
},
{
"tb": 360,
"tbk": 1,
"tl": 35721,
"mb": 360,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
354,
355,
1006,
1007,
1008,
1009,
1010,
1011,
1012,
1013,
1014,
1015,
1016,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
1410
]
},
{
"tb": 288,
"tbk": 6,
"tl": 4,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
312,
312,
313,
313,
312,
314,
315,
316
]
},
{
"tb": 176,
"tbk": 11,
"tl": 37,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
313,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 400,
"tbk": 2,
"tl": 246930,
"mb": 200,
"mbk": 1,
"gb": 200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1384,
1385,
1386,
1387,
1388,
1389,
1390,
1391,
1392,
1393,
1394,
1394,
1395,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
1243,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 320,
"tbk": 4,
"tl": 7,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
126,
127,
128,
129,
113,
114
]
},
{
"tb": 600,
"tbk": 5,
"tl": 1,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
380,
381,
382,
383,
1235,
99
]
},
{
"tb": 672,
"tbk": 21,
"tl": 1632,
"mb": 672,
"mbk": 21,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
1217,
1218,
1219,
1220,
1220,
1221,
1222,
1223,
1224,
1225,
1226,
1227,
1228,
1229,
1230,
1231,
1232,
1233,
1234,
1235,
99
]
},
{
"tb": 200,
"tbk": 5,
"tl": 255102,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
158,
159,
160,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
170,
171,
172,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
1551,
1552,
1553,
1554,
1555,
1556,
1557,
1558,
1559,
1560,
1061,
1062,
1063,
1064,
1065,
1066,
1067,
1068,
1069,
1070,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 384,
"tbk": 1,
"tl": 639671,
"mb": 384,
"mbk": 1,
"gb": 384,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
4585,
4586,
4587,
4588,
4589,
4590,
4591,
4592,
4593
]
},
{
"tb": 128,
"tbk": 4,
"tl": 1224,
"mb": 128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
2851,
2852,
1017,
129,
61,
62
]
},
{
"tb": 192,
"tbk": 2,
"tl": 531,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
865,
866,
1017,
129,
113,
114
]
},
{
"tb": 368,
"tbk": 1,
"tl": 126870,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1244,
1245,
1246,
1247,
1248,
1249,
16,
17,
18,
19,
20,
21,
21,
22,
1150,
1151,
1152,
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1164,
1165,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 48,
"tbk": 1,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61,
62
]
},
{
"tb": 864,
"tbk": 12,
"tl": 1152,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
312,
312,
313,
313,
312,
312
]
},
{
"tb": 448,
"tbk": 14,
"tl": 7427,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2988,
2989,
2990,
2991,
2992,
2993,
2994,
3353,
3354,
3355,
3356,
3357,
3358,
3359,
3360,
290,
291,
292,
293,
294,
295,
296,
297,
298,
299,
300,
1061,
1062,
1063,
1064,
1065,
1066,
1067,
1068,
1069,
1070,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 52368,
"tbk": 1,
"tl": 567894,
"mb": 52368,
"mbk": 1,
"gb": 52368,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
3099,
3100,
3183,
3184,
3185,
3186,
3187,
3188,
799,
800,
801,
802
]
},
{
"tb": 192,
"tbk": 12,
"tl": 36,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
312,
312,
313,
312,
313,
314,
315,
316
]
},
{
"tb": 1196,
"tbk": 3,
"tl": 38,
"mb": 1016,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
1658,
1659,
1660,
1661,
1662,
1663,
1664,
1664,
1665,
1666,
1667,
1668,
1669,
1670,
1671,
1672,
1673,
1667,
1674,
1675,
1676,
1669,
1670,
1671,
1677,
1678,
1679,
1680,
1681,
1682,
1683,
1684,
967,
385,
113,
114
]
},
{
"tb": 48,
"tbk": 1,
"tl": 12931,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1967,
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1980,
1981,
1981,
1982,
913,
914,
915,
916,
917,
918,
919,
920,
921,
922,
923,
924,
925,
926,
927,
928,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 816,
"tbk": 17,
"tl": 33325,
"mb": 288,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1397,
1398,
1399,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
113,
114
]
},
{
"tb": 64,
"tbk": 4,
"tl": 152,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2231,
2232,
2233,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
3591,
3592,
3593,
3594,
3595,
3596,
3597,
3598,
3599,
205,
206,
207
]
},
{
"tb": 288,
"tbk": 6,
"tl": 15,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
312,
312,
313,
313,
312,
312
]
},
{
"tb": 12288,
"tbk": 32,
"tl": 20453435,
"mb": 12288,
"mbk": 32,
"gb": 12288,
"gbk": 32,
"eb": 12288,
"ebk": 32,
"fs": [
4594,
4595,
4596,
4597,
4560,
4561,
4562,
4563,
4564,
4565,
4566,
529,
530,
531,
532,
533,
534,
535,
536,
537,
538,
539,
540,
541,
542,
543,
544,
545,
546,
547,
548,
548,
549,
550,
551,
552,
553,
554,
555,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
556
]
},
{
"tb": 8832,
"tbk": 104,
"tl": 429,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3717,
3718,
3719,
3720,
3721,
4383,
4384,
4385,
1953,
1954,
1955,
1956,
1957,
1958,
1959,
1960,
1961,
1962,
1963,
1964,
1965,
1966,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 10,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
791,
792,
3206,
3207,
3208,
3209,
3210,
3211,
2542,
2543,
2544,
3430,
3431,
3432,
3433
]
},
{
"tb": 288,
"tbk": 6,
"tl": 741,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
408,
407,
407,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 400,
"tbk": 2,
"tl": 8504,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3391,
3392,
3393,
3394,
3395,
1396,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 16,
"tbk": 1,
"tl": 7,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2231,
2232,
2233,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
3313,
3314,
1548,
1549,
1550,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 816,
"tbk": 17,
"tl": 34035,
"mb": 288,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1397,
1398,
1399,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
62
]
},
{
"tb": 320,
"tbk": 5,
"tl": 1444,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
2942,
2943,
2944,
2945,
2946,
2947,
2948,
2949,
2950,
2950,
2951,
2952,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
1551,
1552,
1553,
1554,
1555,
1556,
1557,
1558,
1559,
1560,
1061,
1062,
1063,
1064,
1065,
1066,
1067,
1068,
1069,
1070,
205,
206,
207
]
},
{
"tb": 160,
"tbk": 1,
"tl": 303,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
557,
558,
2513,
2514,
1017,
129,
61,
99
]
},
{
"tb": 24,
"tbk": 1,
"tl": 85363,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1400,
1401,
1402,
1403,
1404,
1405,
1406,
1407,
1408,
1409,
379
]
},
{
"tb": 40,
"tbk": 1,
"tl": 700,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2380,
2381,
2382,
2383,
2384,
2385,
2386,
2387,
2387,
2388,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
197,
198,
199,
200,
201,
202,
203,
204,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 512,
"tbk": 4,
"tl": 126812,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
1053,
1054,
1055,
1056,
1057,
1058,
322,
61,
62
]
},
{
"tb": 96,
"tbk": 6,
"tl": 22,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
313,
313,
312,
312,
313,
314,
315,
316
]
},
{
"tb": 64,
"tbk": 2,
"tl": 75,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3889,
3890,
3891,
3892,
3893,
3894,
3895,
3896,
3897,
3898,
3899,
3900,
3901,
3902,
3903,
3904,
3905,
3906,
3907,
3908,
3909,
3910,
3911,
3912,
3913,
3914,
3915,
3916,
3907,
3908,
3910,
3917,
384,
385,
61,
99
]
},
{
"tb": 80,
"tbk": 2,
"tl": 510,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2380,
2381,
2382,
2383,
2384,
2385,
2386,
2387,
2387,
2388,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
1239,
1240,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
197,
198,
199,
200,
201,
202,
203,
204,
205,
206,
207
]
},
{
"tb": 24,
"tbk": 1,
"tl": 66978,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1400,
1401,
1402,
1403,
1404,
1405,
1406,
1407,
1408,
1409,
447
]
},
{
"tb": 96,
"tbk": 2,
"tl": 1,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
312,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 1704,
"tbk": 6,
"tl": 206375,
"mb": 864,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1138,
1139,
1140,
1141,
1142,
1143,
1144,
1145,
1146,
1147,
1148,
1149,
723,
724,
725,
726,
727,
728,
729,
730,
731,
732,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 1152,
"tbk": 6,
"tl": 54350,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3581,
3582,
3583,
3584,
3585,
3586,
3587,
3588,
3589,
3590,
2118,
2119,
2120,
2121,
2119,
2122,
2123,
1243,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 200,
"tbk": 1,
"tl": 60653,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
354,
355,
356,
357,
358,
359,
360,
361,
362,
363,
364,
365,
366,
605,
113,
114
]
},
{
"tb": 120,
"tbk": 3,
"tl": 2,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2578,
2579,
2580,
2581,
2582,
2583,
2584,
2585,
2586,
2587,
2588,
2589,
2590,
2591,
2592,
2593,
2594,
2595,
2596,
2597,
2598,
2599,
2600,
1250,
129,
61,
62
]
},
{
"tb": 432,
"tbk": 18,
"tl": 9,
"mb": 64,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
312,
312,
313,
312,
313,
313
]
},
{
"tb": 833280,
"tbk": 930,
"tl": 22697,
"mb": 896,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1444,
1445,
1446,
1447,
1448,
1449,
1450,
1451,
1452,
1453,
1454,
1455,
1456,
1457,
1453,
1458,
1459,
1460,
1461,
1462,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207
]
},
{
"tb": 96,
"tbk": 3,
"tl": 23,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1236,
1237,
1238,
463,
464,
465,
466,
467,
468,
469,
470,
471,
472,
473,
474,
475,
476,
477,
478,
479,
480,
481,
482,
483,
484,
485,
486,
487,
488,
489,
490,
490,
491,
492,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
173,
174,
175,
176,
177,
178,
179,
180
]
},
{
"tb": 417792,
"tbk": 6528,
"tl": 16852,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2457,
2458,
2459,
2460,
2461,
2462,
2463,
2464,
1452,
1453,
1454,
1455,
1456,
1457,
1453,
1458,
1459,
1460,
1461,
1462,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 1008,
"tbk": 12,
"tl": 7,
"mb": 168,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
313,
313,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 768,
"tbk": 6,
"tl": 43295,
"mb": 640,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2802,
2803,
2804,
2805,
2806,
2807,
2808,
2809,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 48,
"tbk": 3,
"tl": 10,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
313,
313,
312,
312,
313,
312
]
},
{
"tb": 96,
"tbk": 6,
"tl": 20,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
313,
312,
312,
312,
313,
314,
315,
316
]
},
{
"tb": 3032,
"tbk": 5,
"tl": 34313,
"mb": 2968,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3261,
3262,
3263,
3264,
3265,
3266,
3267,
3268,
3269,
3270,
3271,
3272,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 1152,
"tbk": 9,
"tl": 66247,
"mb": 1152,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
328,
329,
330,
331,
332,
333,
334,
335,
336,
337,
338,
339,
340,
341,
342,
343,
344,
345,
335,
336,
337,
346,
347,
348,
349,
350,
351,
283,
61,
62
]
},
{
"tb": 288,
"tbk": 18,
"tl": 1692,
"mb": 32,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3530,
3531,
3532,
3533,
3534,
3535,
3536,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 1536,
"tbk": 24,
"tl": 74087,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
12,
13,
14,
15,
268,
269,
270,
271,
272,
273,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61,
62
]
},
{
"tb": 576,
"tbk": 12,
"tl": 10,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
312,
312,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 288,
"tbk": 12,
"tl": 21,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
408,
407,
408,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 128,
"tbk": 4,
"tl": 284,
"mb": 128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3889,
3890,
3891,
3892,
3893,
3894,
3895,
3896,
3897,
3898,
3899,
3900,
3901,
3902,
3903,
3904,
3905,
3906,
3907,
3908,
3909,
3910,
3911,
3912,
3913,
3914,
3915,
3916,
3907,
3908,
3910,
3917,
384,
129,
61,
62
]
},
{
"tb": 300,
"tbk": 3,
"tl": 36,
"mb": 248,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1273,
1274,
1275,
1276,
1277,
1278,
1279,
1280,
3273,
3274,
3275,
3276,
3277,
3278,
3279,
3280,
3280,
3281,
3282,
3283,
3284,
3285,
3286,
3287,
3288,
3282,
3283,
3289,
3290,
3291,
3285,
3286,
3287,
3292,
3293,
3294,
3295,
3296,
3297,
3298,
1410
]
},
{
"tb": 800,
"tbk": 4,
"tl": 502094,
"mb": 400,
"mbk": 2,
"gb": 400,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
1384,
1385,
1386,
1387,
1388,
1389,
1390,
1391,
1392,
1393,
1394,
1394,
1395,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
1396,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 1032,
"tbk": 6,
"tl": 84,
"mb": 792,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1463,
1464,
1465,
1466,
1467,
1468,
1469,
1470,
1471,
1472,
1473,
1474,
1475,
1476,
1477,
1478,
1479,
1480,
1481,
1482,
1483,
1484,
1485,
1486,
1487,
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
823,
824,
825,
826,
827,
828,
829,
826,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207
]
},
{
"tb": 384,
"tbk": 2,
"tl": 5632,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
2110,
2111,
3637,
3638,
3639,
3640,
3641,
3642,
2024,
2025,
2026,
2027,
2025,
2028,
2029,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 160,
"tbk": 1,
"tl": 273,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
557,
558,
2513,
2514,
1017,
129,
113,
114
]
},
{
"tb": 1296,
"tbk": 9,
"tl": 321649,
"mb": 1296,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
1726,
1727,
1728,
1729,
1730,
1731,
1732,
1733,
1734,
1735,
1736,
1737,
1738,
1739,
1740,
1741,
1742,
1743,
283,
61,
62
]
},
{
"tb": 5856,
"tbk": 25,
"tl": 321,
"mb": 1464,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2612,
2613,
2614,
2615,
2616,
2617,
2618,
2619,
2620,
2621,
2622,
2623,
2624,
2625,
2626,
2627,
2628,
2629,
2630,
3418,
3419,
3420,
3421,
3422,
3423,
3424,
3425,
3426,
3427,
3428,
3429,
823,
824,
825,
826,
827,
828,
829,
826,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 576,
"tbk": 1,
"tl": 634869,
"mb": 576,
"mbk": 1,
"gb": 576,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
791,
792,
793,
794,
795,
796,
797,
798,
3212,
3213,
3214,
3215
]
},
{
"tb": 384,
"tbk": 1,
"tl": 639628,
"mb": 384,
"mbk": 1,
"gb": 384,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2836,
2837,
2838,
2839,
2840,
2841,
2842,
2843,
1272
]
},
{
"tb": 360,
"tbk": 1,
"tl": 35718,
"mb": 360,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1746,
1747,
1748,
1749,
1750,
1751,
1752,
1753,
1754,
1755,
1756,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
1410
]
},
{
"tb": 576,
"tbk": 3,
"tl": 46,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4598,
4599,
4600,
4601,
4602,
4603,
4604,
4605,
4606,
4607,
4608,
4609,
4610,
4611,
4612,
4613,
4614,
4615,
4616,
4617,
4618,
256
]
},
{
"tb": 96,
"tbk": 2,
"tl": 8414,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3469,
3470,
3471,
3472,
3473,
3474,
3475,
3476,
3477,
3478,
3479,
3480,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 3456,
"tbk": 54,
"tl": 1929491,
"mb": 3456,
"mbk": 54,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
1726,
1727,
1728,
1729,
1730,
1731,
1732,
1733,
1734,
1735,
1736,
1737,
1738,
1739,
1740,
1741,
1742,
1743,
283,
61,
62
]
},
{
"tb": 3392,
"tbk": 22,
"tl": 18804,
"mb": 960,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3434,
3435,
3436,
3437,
3438,
3439,
3440,
3441,
3437,
3438,
3439,
3442,
322,
61,
62
]
},
{
"tb": 462,
"tbk": 51,
"tl": 5614,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3055,
3056,
3057,
3058,
3059,
3060,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 12312,
"tbk": 43,
"tl": 991,
"mb": 1608,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1463,
1464,
1465,
1466,
1467,
1468,
1469,
1470,
1471,
1472,
1473,
1474,
1475,
1476,
1477,
1478,
1479,
1480,
1481,
1482,
1483,
1484,
1485,
1486,
1487,
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
823,
824,
825,
826,
827,
828,
829,
826,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 236,
"tbk": 2,
"tl": 12,
"mb": 236,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
1808,
1809,
1810,
1811,
1812,
1813,
1814,
1815,
1815,
1816,
1817,
1818,
1819,
1820,
1821,
1822,
1823,
1817,
1818,
1824,
1825,
1826,
1820,
1821,
1822,
1827,
1828,
1829,
1830,
1831,
1832,
1833,
1834,
1410
]
},
{
"tb": 1200,
"tbk": 6,
"tl": 505150,
"mb": 400,
"mbk": 2,
"gb": 400,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
3507,
3508,
3509,
3510,
3511,
3512,
3513,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 80,
"tbk": 5,
"tl": 15,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
408,
409,
410,
411,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
99
]
},
{
"tb": 288,
"tbk": 6,
"tl": 12,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
408,
407,
408,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 888,
"tbk": 6,
"tl": 310,
"mb": 888,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
1704,
1705,
1706,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1712,
1716,
1717,
1718,
1719,
1720,
1721,
1722,
1723,
1724,
1725,
1410
]
},
{
"tb": 20,
"tbk": 1,
"tl": 18,
"mb": 20,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4619,
4620,
4621,
4622,
4623,
4624,
4625,
4626,
4627,
4628,
526,
527,
528,
529,
530,
531,
532,
533,
534,
535,
536,
537,
538,
539,
540,
541,
542,
543,
544,
545,
546,
547,
548,
548,
549,
550,
551,
552,
553,
554,
555,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
556
]
},
{
"tb": 384,
"tbk": 6,
"tl": 105641,
"mb": 320,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2006,
2007,
2008,
2009,
2010,
2011,
2012,
2008,
2009,
2010,
2013,
322,
113,
114
]
},
{
"tb": 640,
"tbk": 3,
"tl": 639596,
"mb": 400,
"mbk": 1,
"gb": 400,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
4629,
4630,
4631,
1272
]
},
{
"tb": 1472,
"tbk": 4,
"tl": 12284,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1047,
1048,
1049,
1050,
1051,
1052,
268,
269,
270,
271,
272,
273,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
113,
114
]
},
{
"tb": 32,
"tbk": 2,
"tl": 134,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4067,
4068,
4069,
4070,
4071,
4072,
4073,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859,
205,
206,
207
]
},
{
"tb": 336,
"tbk": 7,
"tl": 4,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
312,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 288,
"tbk": 1,
"tl": 35584,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1138,
1139,
1140,
1141,
1142,
1143,
1144,
1145,
1146,
1147,
1148,
1149,
723,
724,
725,
726,
727,
728,
729,
730,
731,
732,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
3313,
3314,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 480,
"tbk": 8,
"tl": 13642,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3987,
3988,
3989,
3990,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 8928,
"tbk": 30,
"tl": 85,
"mb": 1536,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
407,
407,
407,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 864,
"tbk": 12,
"tl": 26,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
408,
408,
407,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 144,
"tbk": 1,
"tl": 60288,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
100,
101,
102,
103,
104,
105,
106,
107,
108,
109,
3380,
3381,
3382,
61,
62
]
},
{
"tb": 1296,
"tbk": 9,
"tl": 20956,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
981,
982,
983,
984,
985,
986,
987,
988,
984,
985,
986,
989,
283,
61,
62
]
},
{
"tb": 744,
"tbk": 4,
"tl": 1,
"mb": 408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
313,
312,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 768,
"tbk": 6,
"tl": 352356,
"mb": 768,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
3364,
3365,
3366,
3367,
3368,
3369,
3370,
3371,
3372,
3373,
3374,
3375,
3376,
3377,
3378,
3366,
3367,
3368,
3369,
3370,
3371,
3372,
3373,
3374,
3376,
3379,
3380,
3381,
3382,
113,
114
]
},
{
"tb": 200,
"tbk": 1,
"tl": 151219,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4632,
4633,
4634,
4635,
4636,
4637,
4638,
4639,
4640,
4641,
4637,
4638,
4639,
4642,
4643
]
},
{
"tb": 224,
"tbk": 7,
"tl": 168,
"mb": 224,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
3396,
3397,
3398,
3399,
3399,
3400,
3401,
3402,
3403,
3404,
3405,
3406,
3407,
3401,
3402,
3408,
3409,
3410,
3404,
3405,
3406,
3411,
3412,
3413,
3414,
3415,
3416,
3417,
556
]
},
{
"tb": 96,
"tbk": 2,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
314,
315,
316,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
61,
99
]
},
{
"tb": 48,
"tbk": 1,
"tl": 83379,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1397,
1398,
1399,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
3313,
3314,
1548,
1549,
1550,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 2256,
"tbk": 4,
"tl": 215,
"mb": 1368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2612,
2613,
2614,
2615,
2616,
2617,
2618,
2619,
2620,
2621,
2622,
2623,
2624,
2625,
2626,
2627,
2628,
2629,
2630,
3418,
3419,
3420,
3421,
3422,
3423,
3424,
3425,
3426,
3427,
3428,
3429,
823,
824,
825,
826,
827,
828,
829,
826,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207
]
},
{
"tb": 896,
"tbk": 6,
"tl": 10380,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2974,
2975,
2976,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 32,
"tbk": 2,
"tl": 6,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
313,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 300,
"tbk": 3,
"tl": 49,
"mb": 248,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1273,
1274,
1275,
1276,
1277,
1278,
1279,
1280,
1433,
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
1441,
1442,
1443,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
128,
129,
113,
114
]
},
{
"tb": 768,
"tbk": 6,
"tl": 110852,
"mb": 768,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
968,
969,
970,
971,
972,
4395,
4396,
4397,
4398,
4399,
4400,
4401,
4402,
4403,
4404,
4405,
4406,
4407,
4408,
4409,
4397,
4398,
4399,
4400,
4401,
4402,
4403,
4404,
4405,
4407,
4410,
2107,
2108,
2109,
113,
114
]
},
{
"tb": 640,
"tbk": 10,
"tl": 2162,
"mb": 192,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
2942,
2943,
2944,
2945,
2946,
2947,
2948,
2949,
2950,
2950,
2951,
2952,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
1239,
1240,
181,
182,
183,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183
]
},
{
"tb": 140,
"tbk": 2,
"tl": 37,
"mb": 140,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1273,
1274,
1275,
1276,
1277,
1278,
1279,
1280,
1433,
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
1441,
1442,
1443,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
967,
129,
61,
99
]
},
{
"tb": 7776,
"tbk": 30,
"tl": 18594,
"mb": 304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3976,
3977,
3978,
3979,
3980,
3981,
3982,
3983,
3984,
3985,
3986,
1696,
1697,
1698,
1699,
1700,
1701,
1702,
1703,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 288,
"tbk": 1,
"tl": 2695,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1138,
1139,
1140,
1141,
1142,
1143,
1144,
1145,
1146,
1147,
1148,
1149,
16,
17,
18,
19,
20,
21,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 1104,
"tbk": 4,
"tl": 12207,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1138,
1139,
1140,
1141,
1142,
1143,
1144,
1145,
1146,
1147,
1148,
1149,
268,
269,
270,
271,
272,
273,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
113,
114
]
},
{
"tb": 3456,
"tbk": 54,
"tl": 7654091,
"mb": 3456,
"mbk": 54,
"gb": 2304,
"gbk": 36,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
1726,
1727,
1728,
1729,
1730,
1731,
1732,
1733,
1734,
1735,
1736,
1737,
1738,
1739,
1740,
1741,
1742,
1743,
283,
113,
114
]
},
{
"tb": 864,
"tbk": 3,
"tl": 14106,
"mb": 864,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1967,
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1980,
1981,
1981,
1982,
1886,
1887,
1888,
1889,
1890,
1891,
1892,
1893,
1894,
1895,
1896,
1897,
1898,
1899,
1900,
1901,
782,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 280,
"tbk": 1,
"tl": 18,
"mb": 280,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
1983,
1984,
1985,
1986,
1987,
1988,
1989,
1990,
1990,
1991,
1992,
1993,
1994,
1995,
1996,
1997,
1998,
1992,
1993,
1999,
2000,
2001,
1995,
1996,
1997,
2002,
2003,
2004,
2005,
1655,
1656,
1657,
62
]
},
{
"tb": 4060,
"tbk": 35,
"tl": 737,
"mb": 696,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3481,
3482,
3483,
3484,
3485,
3486,
3487,
3488,
3489,
3490,
3491,
3492,
3493,
3494,
3455,
3456,
3457,
3458,
3459,
3460,
3461,
3462,
3463,
3464,
3465,
3466,
3467,
3468,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 128,
"tbk": 2,
"tl": 6,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3154,
3155,
3156,
3157,
3158,
3159,
3160,
3161,
3162,
3495,
3496,
3497,
3498,
3499,
3500,
3501,
3499,
3502,
3503,
1396,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 784,
"tbk": 21,
"tl": 5,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
312,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 720,
"tbk": 6,
"tl": 15066,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3669,
3670,
3671,
3672,
3673,
3674,
3675,
3676,
3677,
3678,
3679,
3680,
3681,
3682,
3683,
3684,
3685,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 288,
"tbk": 6,
"tl": 36,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
408,
408,
407,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 2592,
"tbk": 27,
"tl": 910,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1587,
1588,
1589,
1590,
1591,
1592,
1593,
1594,
1595,
1596,
1597,
1598,
1595,
1599,
1600,
1601,
1602,
1603,
1604,
1605,
1606,
1607,
1608,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 3840,
"tbk": 60,
"tl": 3815754,
"mb": 1152,
"mbk": 18,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
3615,
3616,
3617,
3618,
3619,
3620,
3621,
3622,
3623,
3624,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 560,
"tbk": 8,
"tl": 344666,
"mb": 480,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3686,
3687,
3688,
3689,
3690,
3691,
3692,
3693,
3694,
3695,
3696,
3697,
3698,
3699,
3700,
3701,
3702,
3703,
3704,
3692,
3693,
3695,
3705,
3380,
3381,
3382,
61,
62
]
},
{
"tb": 2208,
"tbk": 6,
"tl": 18658,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1047,
1048,
1049,
1050,
1051,
1052,
268,
269,
270,
271,
272,
273,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
62
]
},
{
"tb": 144,
"tbk": 1,
"tl": 19364,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2097,
2098,
2099,
2100,
2101,
2102,
2103,
2104,
2105,
2106,
2107,
2108,
2109,
61,
62
]
},
{
"tb": 192,
"tbk": 2,
"tl": 70,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
2431,
2432,
2433,
2434,
2435,
2436,
2437,
2438,
2439,
2440,
2441,
2442,
2443,
2444,
2445,
2446,
2447,
2448,
2449,
2450,
2451,
2452,
2453,
2454,
2455,
2446,
2447,
2449,
2456,
384,
385,
61,
99
]
},
{
"tb": 79408,
"tbk": 5,
"tl": 83,
"mb": 46848,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
3099,
3100,
3183,
3184,
3185,
3186,
3187,
3188,
2542,
2543,
2544,
2545,
2546,
2547,
2548
]
},
{
"tb": 64,
"tbk": 1,
"tl": 8,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3717,
3718,
3719,
3720,
3721,
4386,
3723,
3724,
1953,
1954,
1955,
1956,
1957,
1958,
1959,
1960,
1961,
1962,
1963,
1964,
1965,
1966,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046
]
},
{
"tb": 856,
"tbk": 4,
"tl": 18809,
"mb": 428,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
503,
504,
505,
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
517,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61,
62
]
},
{
"tb": 240,
"tbk": 5,
"tl": 1,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
408,
409,
410,
411,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
99
]
},
{
"tb": 384,
"tbk": 8,
"tl": 228,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1463,
1464,
1465,
1466,
1467,
1468,
1469,
1470,
1471,
1472,
1473,
1474,
1475,
1476,
1477,
1478,
1479,
1480,
1481,
1482,
1483,
1484,
1485,
1486,
1487,
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
823,
824,
825,
826,
827,
828,
829,
826,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 32,
"tbk": 1,
"tl": 35,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
4127,
4128,
4129,
4130,
4130,
4131,
4132,
4133,
4134,
4135,
4136,
4137,
4138,
4132,
4133,
4139,
4140,
4141,
4135,
4136,
4137,
4142,
4143,
4144,
4145,
4146,
4147,
4148,
1410
]
},
{
"tb": 440,
"tbk": 2,
"tl": 14279,
"mb": 440,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
1166,
1167,
1168,
1169,
1170,
1171,
1172,
1173,
1174,
1175,
1176,
1177,
1178,
1179,
283,
113,
114
]
},
{
"tb": 3696,
"tbk": 33,
"tl": 13,
"mb": 288,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
312,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 180,
"tbk": 1,
"tl": 16,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
4644,
4645,
4646,
4647,
4648,
4649,
4650,
4651,
4652,
4653,
4654,
4655,
4656,
4657,
1272
]
},
{
"tb": 2688,
"tbk": 18,
"tl": 2983,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
3942,
3943,
3944,
3945,
3946,
3947,
3948,
3949,
3950,
3951,
3952,
3953,
3954,
3955,
3956,
3957,
3958,
3959,
3960,
3961,
3962,
3963,
3964,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 432,
"tbk": 6,
"tl": 593,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
312,
313,
312,
312,
312,
313
]
},
{
"tb": 720,
"tbk": 10,
"tl": 2,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
408,
409,
410,
411,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
99
]
},
{
"tb": 200,
"tbk": 5,
"tl": 1464,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
158,
159,
160,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
170,
171,
172,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
1551,
1552,
1553,
1554,
1555,
1556,
1557,
1558,
1559,
1560,
290,
291,
292,
293,
294,
295,
296,
297,
298,
299,
300,
290,
291,
292,
293,
294,
295,
296,
297,
301,
302,
303,
304,
305,
306,
307,
308,
309
]
},
{
"tb": 864,
"tbk": 12,
"tl": 3,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61
]
},
{
"tb": 40,
"tbk": 1,
"tl": 78,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3020,
3021,
3022,
3023,
3024,
3025,
3026,
3027,
3028,
3029,
3030,
3031,
256
]
},
{
"tb": 1440,
"tbk": 9,
"tl": 471480,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3222,
3223,
3224,
3225,
3226,
3227,
3228,
3229,
3230,
3231,
3232,
3233,
3234,
3235,
3236,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 11664,
"tbk": 30,
"tl": 17805,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1685,
1686,
1687,
1688,
1689,
1690,
1691,
1692,
1693,
1694,
1695,
1696,
1697,
1698,
1699,
1700,
1701,
1702,
1703,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 128,
"tbk": 2,
"tl": 208410,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
3942,
3943,
4112,
4113,
4114,
4115,
4116,
4117,
4118,
4119,
4120,
4121,
4122,
4123,
4124,
4125,
4126,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847
]
},
{
"tb": 560,
"tbk": 28,
"tl": 5,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2212,
2213,
2214,
2215,
2216,
2217,
2218,
2219,
2220,
2221,
2222,
2223,
2224,
2225,
2226,
2227,
2228,
2229,
2230,
379
]
},
{
"tb": 80,
"tbk": 2,
"tl": 10853,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1874,
1875,
1876,
1877,
1878,
1879,
1880,
1881,
1882,
1883,
1884,
1884,
1885,
1886,
1887,
1888,
1889,
1890,
1891,
1892,
1893,
1894,
1895,
1896,
1897,
1898,
1899,
1900,
1901,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 144,
"tbk": 3,
"tl": 1,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
113,
114
]
},
{
"tb": 80,
"tbk": 5,
"tl": 17,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
312,
313,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 20792,
"tbk": 206,
"tl": 131927,
"mb": 2048,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2482,
2483,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 160,
"tbk": 4,
"tl": 983,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2380,
2381,
2382,
2383,
2384,
2385,
2386,
2387,
2387,
2388,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
1239,
1240,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
1551,
1552,
1553,
1554,
1555,
1556,
1557,
1558,
1559,
1560,
290,
291,
292,
293,
294,
295,
296,
297
]
},
{
"tb": 4656,
"tbk": 20,
"tl": 5,
"mb": 696,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
313,
312,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 640,
"tbk": 8,
"tl": 413,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
126,
127,
967,
385,
61,
99
]
},
{
"tb": 1472,
"tbk": 4,
"tl": 12401,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1047,
1048,
1049,
1050,
1051,
1052,
268,
269,
270,
271,
272,
273,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61,
62
]
},
{
"tb": 40,
"tbk": 2,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
380,
381,
382,
383,
384,
129,
61,
62
]
},
{
"tb": 360,
"tbk": 1,
"tl": 463,
"mb": 360,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1746,
1747,
1748,
1749,
1750,
1751,
1752,
1753,
1754,
1755,
1756,
605,
61,
99
]
},
{
"tb": 1056,
"tbk": 21,
"tl": 3984,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
313,
312,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
113,
114
]
},
{
"tb": 1472,
"tbk": 4,
"tl": 12460,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1244,
1245,
1246,
1247,
1248,
1249,
268,
269,
270,
271,
272,
273,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61,
99
]
},
{
"tb": 696,
"tbk": 29,
"tl": 191,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2484,
2485,
2486,
2487,
2488,
2489,
2490,
2491,
2492,
2493,
2494,
2495,
2496,
2497,
2498,
2499,
2500,
2501,
2502,
2503,
2504,
2501,
2505,
2506,
2507,
2508,
2509,
2510,
2511,
2512,
823,
824,
825,
826,
827,
828,
829,
826,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 180,
"tbk": 1,
"tl": 76,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
4644,
4645,
4646,
4647,
4648,
4649,
4650,
4651,
4652,
4653,
4654,
4655,
4656,
4657,
256
]
},
{
"tb": 462,
"tbk": 51,
"tl": 5363,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4235,
4236,
4237,
4238,
4239,
4240,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 80,
"tbk": 2,
"tl": 583,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2380,
2381,
2382,
2383,
2384,
2385,
2386,
2387,
2387,
2388,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
1239,
1240,
181,
182,
183,
173,
174,
175,
176,
177,
178,
179,
180
]
},
{
"tb": 1328,
"tbk": 1,
"tl": 17,
"mb": 1328,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
596,
597,
598,
599,
600,
601,
602,
603,
604,
605,
61,
62
]
},
{
"tb": 40,
"tbk": 1,
"tl": 375,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
158,
159,
160,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
170,
171,
172,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
1551,
1552,
1553,
1554,
1555,
1556,
1557,
1558,
1559,
1560,
290,
291,
292,
293,
294,
295,
296,
297,
298,
299,
300,
1061,
1062,
1063,
1064,
1065,
1066,
1067,
1068,
1069,
1070,
205,
206,
207
]
},
{
"tb": 1680,
"tbk": 6,
"tl": 12873,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3991,
3992,
3993,
3994,
3995,
3996,
3997,
3998,
3999,
4000,
4001,
4002,
4003,
4004,
4005,
4006,
4007,
4008,
4009,
4010,
4011,
4012,
4013,
4014,
4015,
4016,
4017,
4018,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 560,
"tbk": 1,
"tl": 798,
"mb": 560,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1251,
1252,
1253,
1254,
1255,
1256,
1257,
1258,
3237,
3238,
3239,
3240,
3241,
3242,
3243,
3244,
3245,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
556
]
},
{
"tb": 560,
"tbk": 1,
"tl": 2346,
"mb": 560,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1251,
1252,
1253,
1254,
1255,
1256,
1257,
1258,
3237,
3238,
3239,
3240,
3241,
3242,
3243,
3244,
3245,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
447
]
},
{
"tb": 672,
"tbk": 18,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
113,
114
]
},
{
"tb": 240,
"tbk": 5,
"tl": 1,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
407,
409,
410,
411,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
113,
114
]
},
{
"tb": 384,
"tbk": 6,
"tl": 107590,
"mb": 320,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2006,
2007,
2008,
2009,
2010,
2011,
2012,
2008,
2009,
2010,
2013,
322,
61,
62
]
},
{
"tb": 524,
"tbk": 3,
"tl": 67,
"mb": 440,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
944,
945,
945,
946,
947,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
967,
385,
113,
114
]
},
{
"tb": 2592,
"tbk": 18,
"tl": 15424,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
2844,
2845,
2846,
2847,
2848,
2849,
2850,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 384,
"tbk": 6,
"tl": 16285,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
12,
13,
14,
15,
16,
17,
18,
19,
20,
21,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 288,
"tbk": 3,
"tl": 11153,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1210,
1211,
1561,
1562,
1563,
1564,
1565,
1566,
1567,
1563,
1564,
1565,
1568,
283,
113,
114
]
},
{
"tb": 972,
"tbk": 3,
"tl": 72,
"mb": 824,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
2234,
2235,
2236,
2237,
2238,
2239,
2240,
2241,
2241,
2242,
1222,
1223,
1224,
1225,
1226,
1227,
1228,
1229,
1230,
1231,
1232,
1233,
1234,
384,
129,
61,
99
]
},
{
"tb": 12632,
"tbk": 31,
"tl": 70488,
"mb": 2984,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3261,
3262,
3263,
3264,
3265,
3266,
3267,
3268,
3269,
3270,
3271,
3272,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 32,
"tbk": 1,
"tl": 637340,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 32,
"ebk": 1,
"fs": [
1236,
1237,
1238,
3204,
3205,
467,
468,
469,
470,
471,
472,
473,
474,
475,
476,
477,
478,
479,
480,
481,
482,
483,
484,
485,
486,
487,
488,
489,
490,
490,
491,
492,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207
]
},
{
"tb": 2016,
"tbk": 18,
"tl": 31,
"mb": 288,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
407,
408,
408,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 128,
"tbk": 1,
"tl": 5,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
990,
991,
1744,
1745,
128,
129,
61,
99
]
},
{
"tb": 128,
"tbk": 1,
"tl": 164,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
990,
991,
1744,
1745,
1250,
385,
113,
114
]
},
{
"tb": 2880,
"tbk": 30,
"tl": 18606,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1685,
1686,
1687,
1688,
1689,
1690,
1691,
1692,
1693,
1694,
1695,
1349,
1350,
1351,
1352,
1353,
1354,
1355,
1356,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 864,
"tbk": 6,
"tl": 288482,
"mb": 432,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
3740,
3741,
3742,
3743,
3744,
3745,
3746,
3747,
3748,
3749,
3750,
3751,
3752,
3753,
3754,
3755,
3756,
3757,
3758,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 544,
"tbk": 34,
"tl": 713,
"mb": 32,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2231,
2232,
2233,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 368,
"tbk": 1,
"tl": 31800,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1047,
1048,
1049,
1050,
1051,
1052,
723,
724,
725,
726,
727,
728,
729,
730,
731,
732,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
3591,
3592,
3593,
3594,
3595,
3596,
3597,
3598,
3599,
205,
206,
207
]
},
{
"tb": 4320,
"tbk": 24,
"tl": 38,
"mb": 768,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
407,
407,
408,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 240,
"tbk": 6,
"tl": 1003421,
"mb": 200,
"mbk": 5,
"gb": 160,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
4171,
4172,
4173,
4174,
4175,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 180,
"tbk": 1,
"tl": 97,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
3514,
3515,
3516,
3517,
3518,
3519,
3520,
3520,
3521,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 417792,
"tbk": 6528,
"tl": 65231,
"mb": 192,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3107,
3108,
3109,
3110,
3111,
3112,
3113,
3114,
2601,
2602,
2603,
2604,
2605,
2606,
2602,
2607,
2608,
2609,
2610,
2611,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 637344,
"mb": 4096,
"mbk": 1,
"gb": 4096,
"gbk": 1,
"eb": 4096,
"ebk": 1,
"fs": [
457,
458,
459,
460,
461,
462,
3204,
3205,
467,
468,
469,
470,
471,
472,
473,
474,
475,
476,
477,
478,
479,
480,
481,
482,
483,
484,
485,
486,
487,
488,
489,
490,
490,
491,
492,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207
]
},
{
"tb": 256,
"tbk": 2,
"tl": 0,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
990,
991,
4387,
4388,
4389,
4390,
4391,
4392,
4393,
4389,
4390,
4391,
4394,
322,
113,
114
]
},
{
"tb": 32,
"tbk": 1,
"tl": 25,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
2243,
2244,
2245,
2246,
384,
129,
61,
62
]
},
{
"tb": 40,
"tbk": 1,
"tl": 183,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
606,
607,
608,
609,
610,
611,
612,
613,
614,
615,
616,
616,
617,
913,
914,
915,
916,
917,
918,
919,
920,
921,
922,
923,
924,
925,
926,
927,
928,
929,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 2472,
"tbk": 25,
"tl": 3,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1106,
1107,
1108,
1109,
1110,
1111,
1112,
1113,
1114,
1115,
1116,
1117,
1118,
1119,
1120,
1118,
1121,
1122,
1123,
1124,
1125,
1126,
1127,
1128,
1129,
1123,
1124,
1130,
1131,
1132,
1133,
1134,
1135,
1136,
1137,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 528,
"tbk": 11,
"tl": 16,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
312,
313,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
408,
409,
410,
411,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
283,
113,
114
]
},
{
"tb": 768,
"tbk": 12,
"tl": 5748,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
2942,
2943,
2944,
2945,
2946,
2947,
2948,
2949,
2950,
2950,
2951,
2952,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
1239,
1240,
181,
182,
183,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207
]
},
{
"tb": 320,
"tbk": 4,
"tl": 6,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
126,
127,
128,
385,
61,
62
]
},
{
"tb": 336,
"tbk": 9,
"tl": 595,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
313,
312,
312,
313,
312,
314,
315,
316
]
},
{
"tb": 3632,
"tbk": 32,
"tl": 12220,
"mb": 736,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3434,
3435,
3436,
3437,
3438,
3439,
3440,
3441,
3437,
3438,
3439,
3442,
283,
113,
114
]
},
{
"tb": 1104,
"tbk": 3,
"tl": 497665,
"mb": 1104,
"mbk": 3,
"gb": 736,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
1047,
1048,
1049,
1050,
1051,
1052,
75,
76,
77,
78,
79,
80,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 336,
"tbk": 3,
"tl": 3998,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
407,
409,
410,
411,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
283,
61,
62
]
},
{
"tb": 8128,
"tbk": 7,
"tl": 14433,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
803,
804,
805,
806,
807,
808,
809,
810,
811,
812,
813,
814,
811,
815,
816,
817,
818,
819,
820,
821,
822,
1497,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1502,
1506,
1507,
1508,
1509,
1510,
1511,
1512,
1513,
1514,
1515,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 60720,
"tbk": 4,
"tl": 248,
"mb": 26064,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3566,
3567,
3568,
3569,
3570,
3571,
3572,
3573,
3574,
3575,
3576,
3577,
3578,
3579,
3580,
909,
910,
911,
912
]
},
{
"tb": 1920,
"tbk": 15,
"tl": 4317,
"mb": 384,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
1757,
1758,
1759,
1760,
1761,
1762,
1579,
1580,
1581,
1582,
1583,
1584,
1585,
1586,
1763,
1764,
1765,
1766,
1767,
1768,
1769,
1770,
1771,
1772,
1773,
1774,
1775,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 864,
"tbk": 12,
"tl": 1139,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61
]
},
{
"tb": 24000,
"tbk": 375,
"tl": 17001,
"mb": 192,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4266,
4267,
4268,
4269,
4270,
4271,
4272,
4273,
3082,
3083,
3084,
3085,
3086,
3087,
3088,
3088,
3089,
3090,
3090,
3091,
3092,
3093,
3094,
3095,
3096,
3097,
3098,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207
]
},
{
"tb": 52,
"tbk": 1,
"tl": 0,
"mb": 52,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4176,
4177,
4178,
4179,
4180,
4181,
4182,
4183,
4658,
4659,
4660,
4661,
4662,
4663,
4664,
4665,
4666,
4667,
4668,
4669,
4670
]
},
{
"tb": 48,
"tbk": 1,
"tl": 13406,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1967,
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1980,
1981,
1981,
1982,
913,
914,
915,
916,
917,
918,
919,
920,
921,
922,
923,
924,
925,
926,
927,
928,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 128,
"tbk": 2,
"tl": 25,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1241,
1242,
1396,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 48,
"tbk": 1,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
408,
409,
410,
411,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
283,
61,
99
]
},
{
"tb": 96,
"tbk": 2,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
314,
315,
316,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
113,
114
]
},
{
"tb": 80,
"tbk": 2,
"tl": 8527,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3141,
3142,
3143,
3144,
3145,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 3168,
"tbk": 21,
"tl": 3988,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
313,
312,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 288,
"tbk": 18,
"tl": 507,
"mb": 32,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2953,
2954,
2955,
2956,
2957,
2958,
2959,
2960,
2961,
2962,
2963,
2964,
2965,
2966,
2967,
2968,
2969,
2970,
2960,
2961,
2971,
2972,
2973,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 288,
"tbk": 6,
"tl": 58,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
407,
408,
407,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 1120,
"tbk": 3,
"tl": 612,
"mb": 640,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
557,
558,
1872,
1873,
125,
113,
114
]
},
{
"tb": 160,
"tbk": 4,
"tl": 1795,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2988,
2989,
2990,
2991,
2992,
2993,
2994,
3353,
3354,
3355,
3356,
3357,
3358,
3359,
3360,
1061,
1062,
1063,
1064,
1065,
1066,
1067,
1068,
1069,
1070,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 40,
"tbk": 1,
"tl": 634786,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2465,
2466,
2467,
2468,
2469,
2470,
2471,
2472,
2473,
1264,
1265,
1266,
1267,
1268,
1269,
1270,
1271,
236,
237,
238,
239,
240,
241,
242,
243,
244,
245,
246,
247,
248,
249,
250,
251,
252,
237,
238,
239,
240,
241,
242,
243,
247,
253,
254,
255,
256
]
},
{
"tb": 2880,
"tbk": 30,
"tl": 18921,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4212,
4213,
4214,
4215,
4216,
4217,
4218,
4219,
4220,
4221,
4222,
1349,
1350,
1351,
1352,
1353,
1354,
1355,
1356,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 1520,
"tbk": 1,
"tl": 639039,
"mb": 1520,
"mbk": 1,
"gb": 1520,
"gbk": 1,
"eb": 1520,
"ebk": 1,
"fs": [
4671,
4672,
4673,
4674,
4675,
529,
530,
531,
532,
533,
534,
535,
536,
537,
538,
539,
540,
541,
542,
543,
544,
545,
546,
547,
548,
548,
549,
550,
551,
552,
553,
554,
555,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
556
]
},
{
"tb": 2688,
"tbk": 18,
"tl": 2984,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
3942,
3943,
4532,
4533,
4534,
4535,
4536,
4537,
4538,
4539,
4540,
4541,
4542,
4543,
4544,
4545,
4546,
4547,
4548,
4549,
4550,
4551,
4552,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 2688,
"tbk": 28,
"tl": 621066,
"mb": 288,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1210,
1211,
1835,
1836,
1837,
1838,
1839,
1840,
1841,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 640,
"tbk": 6,
"tl": 161300,
"mb": 640,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
328,
329,
330,
331,
332,
333,
334,
335,
336,
337,
338,
339,
340,
341,
342,
343,
344,
345,
335,
336,
337,
346,
347,
348,
349,
350,
351,
322,
61,
62
]
},
{
"tb": 192,
"tbk": 4,
"tl": 2,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
313,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 112,
"tbk": 7,
"tl": 24,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
312,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 96,
"tbk": 4,
"tl": 0,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
113,
114
]
},
{
"tb": 40,
"tbk": 1,
"tl": 242,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
158,
159,
160,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
170,
171,
172,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
1239,
1240,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
197,
198,
199,
200,
201,
202,
203,
204,
205,
206,
207,
1239,
1240
]
},
{
"tb": 576,
"tbk": 3,
"tl": 1904320,
"mb": 576,
"mbk": 3,
"gb": 576,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
4676,
4677,
4678,
4679,
4680,
4681,
4682,
4683,
4684,
4685,
4686,
4687,
4688,
4689,
4690,
4691,
4692,
4693,
4694,
4695,
4696,
4690,
4697,
236,
237,
238,
239,
240,
241,
242,
243,
244,
245,
246,
247,
248,
249,
250,
251,
252,
237,
238,
239,
240,
241,
242,
243,
247,
253,
254,
255,
256
]
},
{
"tb": 240,
"tbk": 15,
"tl": 57,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
313,
313,
312,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 96,
"tbk": 4,
"tl": 22,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2484,
2485,
2486,
2487,
2488,
2489,
2490,
2491,
2492,
2493,
2494,
2495,
2496,
2497,
2498,
2499,
2500,
2501,
2502,
2503,
2504,
2501,
2505,
2506,
2507,
2508,
2509,
2510,
2511,
2512,
823,
824,
825,
826,
827,
828,
829,
826,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207
]
},
{
"tb": 2976,
"tbk": 30,
"tl": 72,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
407,
407,
407,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 1517280,
"tbk": 14,
"tl": 813,
"mb": 242040,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
894,
895,
896,
897,
898,
899,
900,
901,
902,
903,
904,
905,
906,
907,
908,
3115,
3116,
3117,
3118
]
},
{
"tb": 440,
"tbk": 2,
"tl": 14527,
"mb": 440,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
1166,
1167,
1168,
1169,
1170,
1171,
1172,
1173,
1174,
1175,
1176,
1177,
1178,
1179,
283,
61,
99
]
},
{
"tb": 737520,
"tbk": 1,
"tl": 567924,
"mb": 737520,
"mbk": 1,
"gb": 737520,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
2533,
2534,
2535,
2536,
2537,
2538,
2539,
2540,
2541,
799,
800,
801,
802
]
},
{
"tb": 240,
"tbk": 4,
"tl": 8306,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3987,
3988,
3989,
3990,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 192,
"tbk": 2,
"tl": 30,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2256,
2257,
2258,
2259,
2260,
2261,
2262,
2263,
2264,
2265,
2266,
2267,
2268,
2269,
2270,
322,
61,
99
]
},
{
"tb": 448,
"tbk": 4,
"tl": 1219,
"mb": 448,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
865,
866,
1017,
129,
61,
99
]
},
{
"tb": 96,
"tbk": 2,
"tl": 8311,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3469,
3470,
3471,
3472,
3473,
3474,
3475,
3476,
3477,
3478,
3479,
3480,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 64,
"tbk": 4,
"tl": 12,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
61
]
},
{
"tb": 80,
"tbk": 2,
"tl": 72,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
571,
572,
573,
574,
575,
576,
577,
578,
579,
580,
581,
582,
583,
584,
585,
586,
577,
578,
580,
587,
384,
385,
113,
114
]
},
{
"tb": 2304,
"tbk": 36,
"tl": 111601,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
12,
13,
14,
15,
268,
269,
270,
271,
272,
273,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
99
]
},
{
"tb": 400,
"tbk": 10,
"tl": 2045,
"mb": 120,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2380,
2381,
2382,
2383,
2384,
2385,
2386,
2387,
2387,
2388,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
1239,
1240,
181,
182,
183,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194
]
},
{
"tb": 192,
"tbk": 4,
"tl": 193369,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1397,
1398,
1399,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
3591,
3592,
3593,
3594,
3595,
3596,
3597,
3598,
3599,
205,
206,
207
]
},
{
"tb": 560,
"tbk": 15,
"tl": 7,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207
]
},
{
"tb": 160,
"tbk": 10,
"tl": 32,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61
]
},
{
"tb": 256,
"tbk": 4,
"tl": 11,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
968,
969,
970,
971,
972,
973,
974,
975,
976,
977,
975,
978,
979,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 192,
"tbk": 6,
"tl": 1397,
"mb": 192,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
123,
124,
1017,
385,
113,
114
]
},
{
"tb": 737520,
"tbk": 5,
"tl": 420,
"mb": 238320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
894,
895,
896,
897,
898,
899,
900,
901,
902,
903,
904,
905,
906,
907,
908,
2984,
2985,
2986,
2987
]
},
{
"tb": 96,
"tbk": 2,
"tl": 5314,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2749,
2750,
2751,
2752,
2753,
2754,
2755,
2756,
2757,
2758,
2759,
2760,
2761,
2762,
2763,
2763,
2764,
1886,
1887,
1888,
1889,
1890,
1891,
1892,
1893,
1894,
1895,
1896,
1897,
1898,
1899,
1900,
1901,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 1792,
"tbk": 22,
"tl": 22,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1195,
1196,
1197,
1198,
1199,
1200,
1201,
1202,
1203,
1204,
1205,
1206,
1203,
1207,
1208,
1209,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
99
]
},
{
"tb": 40864,
"tbk": 8,
"tl": 219,
"mb": 17376,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3246,
3247,
3248,
3249,
3250,
3251,
3252,
3253,
3254,
3255,
3256,
3257,
3258,
3259,
3260,
2545,
2546,
2547,
2548
]
},
{
"tb": 1517280,
"tbk": 1,
"tl": 151812,
"mb": 1517280,
"mbk": 1,
"gb": 1517280,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
2533,
2534,
2535,
2536,
2537,
2538,
2539,
2540,
2541,
3933,
3934,
3935,
3936
]
},
{
"tb": 888,
"tbk": 36,
"tl": 17,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
313,
313,
312,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 192,
"tbk": 2,
"tl": 0,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1195,
1196,
1197,
1198,
1199,
1200,
1201,
1202,
1203,
1204,
1205,
1206,
1203,
1207,
1208,
1209,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
113,
114
]
},
{
"tb": 512,
"tbk": 14,
"tl": 2822639,
"mb": 512,
"mbk": 14,
"gb": 512,
"gbk": 14,
"eb": 0,
"ebk": 0,
"fs": [
3889,
3890,
3891,
3892,
3893,
3894,
3895,
3896,
3897,
3898,
3899,
3900,
3901,
3902,
3903,
3904,
3905,
3906,
3907,
3908,
3909,
3910,
3911,
3912,
3913,
3914,
3915,
3916,
3907,
3908,
3910,
3917,
1004,
1005
]
},
{
"tb": 1196,
"tbk": 3,
"tl": 25,
"mb": 1016,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
1658,
1659,
1660,
1661,
1662,
1663,
1664,
1664,
1665,
1666,
1667,
1668,
1669,
1670,
1671,
1672,
1673,
1667,
1674,
1675,
1676,
1669,
1670,
1671,
1677,
1678,
1679,
1680,
1681,
1682,
1683,
1684,
128,
129,
61,
62
]
},
{
"tb": 240,
"tbk": 6,
"tl": 277104,
"mb": 120,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2765,
2766,
2767,
2768,
2769,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 256,
"tbk": 4,
"tl": 2235,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
2942,
2943,
2944,
2945,
2946,
2947,
2948,
2949,
2950,
2950,
2951,
2952,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
2389,
2390,
2391,
2392,
2393,
2394,
2395,
2396
]
},
{
"tb": 7080,
"tbk": 5,
"tl": 646,
"mb": 2856,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1463,
1464,
1465,
1466,
1467,
1468,
1469,
1470,
1471,
1472,
1473,
1474,
1475,
1476,
1477,
1478,
1479,
1480,
1481,
1482,
1483,
1484,
1485,
1486,
1487,
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
1497,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1502,
1506,
1507,
1508,
1509,
1510,
1511,
1512,
1513,
1514,
1515,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 104,
"tbk": 2,
"tl": 30,
"mb": 52,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1273,
1274,
1275,
1276,
1277,
1278,
1279,
1280,
1433,
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
1441,
1442,
1443,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
128,
385,
61,
99
]
},
{
"tb": 192,
"tbk": 2,
"tl": 18,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1587,
1588,
1589,
1590,
1591,
1592,
1593,
1594,
1595,
1596,
1597,
1598,
1595,
1599,
1600,
1601,
1602,
1603,
1604,
1605,
1606,
1607,
1608,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 576,
"tbk": 2,
"tl": 6198,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1138,
1139,
1140,
1141,
1142,
1143,
1144,
1145,
1146,
1147,
1148,
1149,
268,
269,
270,
271,
272,
273,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
61,
62
]
},
{
"tb": 96,
"tbk": 6,
"tl": 86,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
407,
408,
407,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 160,
"tbk": 2,
"tl": 20,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
868,
869,
870,
871,
872,
873,
874,
875,
876,
877,
878,
879,
880,
881,
882,
883,
884,
885,
886,
887,
964,
965,
966,
967,
129,
61,
62
]
},
{
"tb": 640,
"tbk": 1,
"tl": 639037,
"mb": 640,
"mbk": 1,
"gb": 640,
"gbk": 1,
"eb": 640,
"ebk": 1,
"fs": [
4698,
4699,
4700,
4701,
529,
530,
531,
532,
533,
534,
535,
536,
537,
538,
539,
540,
541,
542,
543,
544,
545,
546,
547,
548,
548,
549,
550,
551,
552,
553,
554,
555,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
556
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
408,
409,
410,
411,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
283,
61,
62
]
},
{
"tb": 280,
"tbk": 1,
"tl": 24,
"mb": 280,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
2810,
2811,
2812,
2813,
2814,
2815,
2816,
2817,
2817,
2818,
2819,
2820,
2821,
2822,
2823,
2824,
2825,
2819,
2820,
2826,
2827,
2828,
2822,
2823,
2824,
2829,
2830,
2831,
2832,
2833,
2834,
2835,
1410
]
},
{
"tb": 80,
"tbk": 2,
"tl": 4,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
678,
679,
680,
681,
682,
683,
684,
685,
686,
687,
688,
689,
690,
691,
692,
693,
694,
695,
696,
697,
698,
699,
700,
701,
686,
702,
128,
385,
113,
114
]
},
{
"tb": 264,
"tbk": 1,
"tl": 31678,
"mb": 264,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1138,
1139,
1140,
1141,
1142,
1143,
1144,
1145,
1146,
1147,
1148,
1149,
723,
724,
725,
726,
727,
728,
729,
730,
731,
732,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
3591,
3592,
3593,
3594,
3595,
3596,
3597,
3598,
3599,
205,
206,
207
]
},
{
"tb": 48,
"tbk": 1,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61,
99
]
},
{
"tb": 80,
"tbk": 2,
"tl": 1250,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
158,
159,
160,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
170,
171,
172,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
1239,
1240,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
1551,
1552,
1553,
1554,
1555,
1556,
1557,
1558,
1559,
1560,
1061,
1062,
1063,
1064,
1065,
1066,
1067,
1068,
1069,
1070,
205,
206,
207
]
},
{
"tb": 96,
"tbk": 2,
"tl": 395611,
"mb": 96,
"mbk": 2,
"gb": 96,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
1397,
1398,
1399,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
3313,
3314,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 119112,
"tbk": 5,
"tl": 82,
"mb": 70272,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
791,
792,
3206,
3207,
3208,
3209,
3210,
3211,
2542,
2543,
2544,
2545,
2546,
2547,
2548
]
},
{
"tb": 1176,
"tbk": 30,
"tl": 1159,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
312,
312,
312,
313,
312,
314,
315,
316
]
},
{
"tb": 63216,
"tbk": 35,
"tl": 11276,
"mb": 18432,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
1945,
1946,
1947,
1948,
1949,
1950,
1951,
1952,
1953,
1954,
1955,
1956,
1957,
1958,
1959,
1960,
1961,
1962,
1963,
1964,
1965,
1966,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859
]
},
{
"tb": 768,
"tbk": 4,
"tl": 2075,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
257,
258,
259,
260,
261,
262,
263,
264,
265,
266,
267,
723,
724,
725,
726,
727,
728,
729,
730,
731,
732,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
3591,
3592,
3593,
3594,
3595,
3596,
3597,
3598,
3599,
205,
206,
207
]
},
{
"tb": 160,
"tbk": 5,
"tl": 424484,
"mb": 160,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3889,
3890,
3891,
3892,
3893,
3894,
3895,
3896,
3897,
3898,
3899,
3900,
3901,
3902,
3903,
3904,
3905,
3906,
3907,
3908,
3909,
3910,
3911,
3912,
3913,
3914,
3915,
3916,
3907,
3908,
3910,
3917,
1235,
62
]
},
{
"tb": 160,
"tbk": 1,
"tl": 310,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
557,
558,
2513,
2514,
1017,
129,
61,
62
]
},
{
"tb": 38528,
"tbk": 364,
"tl": 6929,
"mb": 384,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3717,
3718,
3719,
3720,
3721,
3722,
3723,
3724,
1953,
1954,
1955,
1956,
1957,
1958,
1959,
1960,
1961,
1962,
1963,
1964,
1965,
1966,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 200,
"tbk": 1,
"tl": 634844,
"mb": 200,
"mbk": 1,
"gb": 200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
4702,
4703,
4704,
4705,
4706,
4707,
4708,
4709,
4710,
4711,
4712,
4713,
4714,
4715,
4716,
4717,
4718,
4719,
4720,
4721,
4722,
4723,
4724,
4725
]
},
{
"tb": 417792,
"tbk": 6528,
"tl": 7442,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2457,
2458,
2459,
2460,
2461,
2462,
2463,
2464,
2601,
2602,
2603,
2604,
2605,
2606,
2602,
2607,
2608,
2609,
2610,
2611,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 4060,
"tbk": 35,
"tl": 855,
"mb": 696,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3481,
3482,
3483,
3484,
3485,
3486,
3487,
3488,
3489,
3490,
3491,
3492,
3493,
3494,
2061,
2062,
2063,
2064,
2065,
2066,
2067,
2068,
2069,
2070,
2071,
2072,
2073,
2074,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 864,
"tbk": 12,
"tl": 33,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
408,
408,
407,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 64,
"tbk": 2,
"tl": 192,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
865,
866,
125,
113,
114
]
},
{
"tb": 18144,
"tbk": 36,
"tl": 649579,
"mb": 6144,
"mbk": 4,
"gb": 3072,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
407,
407,
407,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 864,
"tbk": 3,
"tl": 497581,
"mb": 864,
"mbk": 3,
"gb": 576,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
1138,
1139,
1140,
1141,
1142,
1143,
1144,
1145,
1146,
1147,
1148,
1149,
75,
76,
77,
78,
79,
80,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 144,
"tbk": 2,
"tl": 0,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61,
99
]
},
{
"tb": 360,
"tbk": 2,
"tl": 14,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
1658,
1659,
1660,
1661,
1662,
1663,
1664,
1664,
1665,
1666,
1667,
1668,
1669,
1670,
1671,
1672,
1673,
1667,
1674,
1675,
1676,
1669,
1670,
1671,
1677,
1678,
1679,
1680,
1681,
1682,
1683,
1684,
128,
385,
61,
99
]
},
{
"tb": 64,
"tbk": 8,
"tl": 149,
"mb": 64,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1780,
1781,
1782,
1783,
1782,
1784,
1785,
1786,
1787,
1788,
1789,
1790,
1791,
384,
129,
61,
99
]
},
{
"tb": 680,
"tbk": 8,
"tl": 282555,
"mb": 560,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3686,
3687,
3688,
3689,
3690,
3691,
3692,
3693,
3694,
3695,
3696,
3697,
3698,
3699,
3700,
3701,
3702,
3703,
3704,
3692,
3693,
3695,
3705,
110,
111,
112,
61,
99
]
},
{
"tb": 240,
"tbk": 10,
"tl": 5,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
313,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 192,
"tbk": 4,
"tl": 20,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1463,
1464,
1465,
1466,
1467,
1468,
1469,
1470,
1471,
1472,
1473,
1474,
1475,
1476,
1477,
1478,
1479,
1480,
1481,
1482,
3418,
3419,
3420,
3421,
3422,
3423,
3424,
3425,
3426,
3427,
3428,
3429,
823,
824,
825,
826,
827,
828,
829,
826,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 936,
"tbk": 4,
"tl": 120129,
"mb": 840,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4223,
4224,
4225,
4226,
4227,
4228,
4229,
4230,
4231,
4232,
4233,
4234,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 480,
"tbk": 6,
"tl": 5,
"mb": 160,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2578,
2579,
2580,
2581,
2582,
2583,
2584,
2585,
2586,
2587,
2588,
2589,
2590,
2591,
2592,
2593,
2594,
2595,
2596,
2597,
2598,
2599,
2600,
1250,
129,
61,
99
]
},
{
"tb": 336,
"tbk": 7,
"tl": 6,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
313,
313,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 384,
"tbk": 4,
"tl": 161007,
"mb": 288,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1210,
1211,
1835,
1836,
1837,
1838,
1839,
1840,
1841,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046
]
},
{
"tb": 1976,
"tbk": 118,
"tl": 182,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1071,
1072,
1073,
1074,
1075,
1076,
1077,
1078,
1079,
1080,
1081,
1082,
1083,
1084,
1085,
1086,
1087,
1088,
1089,
1090,
1091,
1092,
1093,
1094,
1095,
1096,
1097,
1098,
1099,
1100,
1101,
1102,
1103,
1104,
1105,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 480,
"tbk": 15,
"tl": 570,
"mb": 480,
"mbk": 15,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
2124,
2125,
2126,
2127,
2127,
2128,
2129,
2130,
2131,
2132,
2133,
2134,
2135,
2129,
2130,
2136,
2137,
2138,
2132,
2133,
2134,
2139,
2140,
2141,
2142,
1332,
1333,
1334,
1335
]
},
{
"tb": 288,
"tbk": 9,
"tl": 76301,
"mb": 288,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2006,
2007,
2008,
2009,
2010,
2011,
2012,
2008,
2009,
2010,
2013,
283,
113,
114
]
},
{
"tb": 743424,
"tbk": 134,
"tl": 455720,
"mb": 147456,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
1945,
3537,
3538,
3539,
3540,
3541,
3542,
3543,
3544,
3545,
3546,
3547,
3548,
3549,
3550,
3551,
3552,
3553,
3554,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 1152,
"tbk": 9,
"tl": 65634,
"mb": 1152,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
328,
329,
330,
331,
332,
333,
334,
335,
336,
337,
338,
339,
340,
341,
342,
343,
344,
345,
335,
336,
337,
346,
347,
348,
349,
350,
351,
283,
61,
99
]
},
{
"tb": 768,
"tbk": 4,
"tl": 2862,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2014,
2015,
2016,
2017,
2018,
2019,
2020,
2021,
2022,
2023,
4434,
4435,
4436,
4437,
4435,
4438,
4439,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 768,
"tbk": 6,
"tl": 116063,
"mb": 768,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
968,
969,
970,
971,
972,
4395,
4396,
4397,
4398,
4399,
4400,
4401,
4402,
4403,
4404,
4405,
4406,
4407,
4408,
4409,
4397,
4398,
4399,
4400,
4401,
4402,
4403,
4404,
4405,
4407,
4410,
2107,
2108,
2109,
61,
62
]
},
{
"tb": 248,
"tbk": 4,
"tl": 1,
"mb": 136,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
313,
312,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 1008,
"tbk": 9,
"tl": 595,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
313,
312,
312,
313,
312,
314,
315,
316
]
},
{
"tb": 84,
"tbk": 1,
"tl": 7013,
"mb": 84,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
1166,
1167,
1168,
1169,
1170,
3315,
3316,
3317,
3318,
3319,
283,
113,
114
]
},
{
"tb": 672,
"tbk": 21,
"tl": 1876,
"mb": 672,
"mbk": 21,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
2515,
2516,
2517,
2518,
2519,
2520,
2521,
2522,
2519,
2523,
2524,
2525,
2526,
2527,
2528,
2529,
2530,
2531,
2532,
379
]
},
{
"tb": 168,
"tbk": 2,
"tl": 0,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1106,
1107,
1108,
1109,
1110,
1111,
1112,
1113,
1114,
1115,
1116,
1117,
1118,
1119,
1120,
1118,
1121,
1357,
1358,
1359,
1360,
1361,
1362,
1363,
1364,
1358,
1359,
1365,
1366,
1367,
1368,
1369,
1370,
1371,
1372,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 384,
"tbk": 8,
"tl": 847647,
"mb": 144,
"mbk": 3,
"gb": 144,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
1397,
1398,
1399,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 96,
"tbk": 2,
"tl": 120,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4223,
4224,
4225,
4226,
4227,
4228,
4229,
4230,
4231,
4232,
4233,
4234,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859,
205,
206,
207
]
},
{
"tb": 64,
"tbk": 1,
"tl": 89,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
2942,
2943,
2944,
2945,
2946,
2947,
2948,
2949,
2950,
2950,
2951,
2952,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
1059,
1060,
298,
299,
300
]
},
{
"tb": 672,
"tbk": 1,
"tl": 1110,
"mb": 672,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
748,
749,
750,
751,
752,
753,
754,
755,
756,
789,
113,
114
]
},
{
"tb": 32,
"tbk": 1,
"tl": 411,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
1757,
1758,
1759,
1760,
1761,
1762,
1579,
1580,
1581,
1582,
1583,
1584,
1585,
1586,
1763,
1764,
1765,
1579,
1580,
1581,
1582,
1583,
1584,
1585,
1586,
1763,
1764,
1765,
1766,
1767,
1768,
1769,
1770,
1771,
1772,
1773,
1774,
1775,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 1296,
"tbk": 9,
"tl": 1275743,
"mb": 1296,
"mbk": 9,
"gb": 864,
"gbk": 6,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
1726,
1727,
1728,
1729,
1730,
1731,
1732,
1733,
1734,
1735,
1736,
1737,
1738,
1739,
1740,
1741,
1742,
1743,
283,
113,
114
]
},
{
"tb": 512,
"tbk": 8,
"tl": 149,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4266,
4267,
4268,
4269,
4270,
4271,
4272,
4273,
3082,
3083,
3084,
3085,
3086,
3087,
3088,
3088,
3089,
3090,
3090,
3091,
3092,
3093,
3094,
3095,
3096,
3097,
3098,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859
]
},
{
"tb": 288,
"tbk": 18,
"tl": 60,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
313,
312,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 576,
"tbk": 5,
"tl": 2257,
"mb": 352,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3154,
3155,
3156,
3157,
3158,
3159,
3160,
3161,
3162,
3163,
3164,
3165,
3166,
3167,
3168,
3169,
3170,
3171,
3172,
3173,
3174,
3353,
3354,
3355,
3356,
3357,
3358,
3359,
3360,
1061,
1062,
1063,
1064,
1065,
1066,
1067,
1068,
1069,
1070,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 288,
"tbk": 6,
"tl": 39,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
408,
407,
408,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 192,
"tbk": 8,
"tl": 17,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2484,
2485,
2486,
2487,
2488,
2489,
2490,
2491,
2492,
2493,
2494,
2495,
2496,
2497,
4149,
4150,
4151,
4152,
4153,
4154,
4155,
4156,
4157,
4154,
4158,
4159,
4160,
4161,
4162,
4163,
4164,
4165,
823,
824,
825,
826,
827,
828,
829,
826,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859
]
},
{
"tb": 2304,
"tbk": 36,
"tl": 1739844,
"mb": 1152,
"mbk": 18,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
3740,
3741,
3742,
3743,
3744,
3745,
3746,
3747,
3748,
3749,
3750,
3751,
3752,
3753,
3754,
3755,
3756,
3757,
3758,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 200,
"tbk": 1,
"tl": 54247,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3443,
3444,
3445,
3446,
3447,
3448,
3449,
3450,
3451,
3452,
3453,
3453,
3454,
1150,
1151,
1152,
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1164,
1165,
1396,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 3392,
"tbk": 22,
"tl": 18827,
"mb": 960,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3434,
3435,
3436,
3437,
3438,
3439,
3440,
3441,
3437,
3438,
3439,
3442,
322,
61,
99
]
},
{
"tb": 96,
"tbk": 1,
"tl": 60,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1210,
1211,
1212,
1213,
1214,
384,
385,
61,
99
]
},
{
"tb": 1920,
"tbk": 24,
"tl": 31,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
733,
734,
735,
736,
737,
738,
739,
740,
741,
742,
743,
744,
741,
745,
746,
747,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
62
]
},
{
"tb": 1008,
"tbk": 14,
"tl": 7,
"mb": 192,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
313,
313,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 3584,
"tbk": 56,
"tl": 19074,
"mb": 640,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
2942,
2943,
2944,
2945,
2946,
2947,
2948,
2949,
2950,
2950,
2951,
2952,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
1551,
1552,
1553,
1554,
1555,
1556,
1557,
1558,
1559,
1560
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2231,
2232,
2233,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
283,
61,
62
]
},
{
"tb": 336,
"tbk": 14,
"tl": 7,
"mb": 64,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
313,
313,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 288,
"tbk": 9,
"tl": 341,
"mb": 288,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
2030,
2031,
2032,
2033,
2034,
2035,
2036,
2037,
2034,
2038,
2039,
2040,
2041,
2042,
2043,
2044,
2045,
2046,
2047,
1410
]
},
{
"tb": 2072,
"tbk": 14,
"tl": 1538,
"mb": 2072,
"mbk": 14,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
1704,
1705,
1706,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1712,
1716,
1717,
1718,
1719,
1720,
1721,
1722,
1723,
1724,
1725,
379
]
},
{
"tb": 640,
"tbk": 20,
"tl": 8,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
3965,
3966,
3967,
3968,
3969,
3970,
3971,
3972,
3973,
3974,
3975,
2223,
2224,
2225,
2226,
2227,
2228,
2229,
2230,
155
]
},
{
"tb": 640,
"tbk": 5,
"tl": 157,
"mb": 640,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
990,
991,
992,
993,
994,
995,
994,
996,
997,
998,
999,
1000,
1001,
1002,
1003,
1235,
62
]
},
{
"tb": 2688,
"tbk": 28,
"tl": 16888,
"mb": 288,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1587,
1588,
1589,
1590,
1591,
1592,
1593,
1594,
1595,
1596,
1597,
1598,
1595,
1599,
1600,
1601,
1602,
1603,
1604,
1605,
1606,
1607,
1608,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 192,
"tbk": 2,
"tl": 10959,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2802,
2803,
2804,
2805,
2806,
2807,
2808,
2976,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 480,
"tbk": 8,
"tl": 13489,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3987,
3988,
3989,
3990,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 80,
"tbk": 2,
"tl": 0,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2578,
2579,
2580,
2581,
2582,
2583,
2584,
2585,
2586,
2587,
2588,
2589,
2590,
2591,
2592,
2593,
2594,
2595,
2596,
2597,
2598,
2599,
2600,
1250,
385,
61,
62
]
},
{
"tb": 288,
"tbk": 6,
"tl": 6,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
313,
312,
312,
312,
313,
314,
315,
316
]
},
{
"tb": 480,
"tbk": 4,
"tl": 0,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
1381,
1382,
1383,
1516,
1332,
1333,
1334,
1335
]
},
{
"tb": 2208,
"tbk": 6,
"tl": 18671,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1244,
1245,
1246,
1247,
1248,
1249,
268,
269,
270,
271,
272,
273,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
99
]
},
{
"tb": 128,
"tbk": 8,
"tl": 16,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2231,
2232,
2233,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
113,
114
]
},
{
"tb": 96,
"tbk": 2,
"tl": 0,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
1381,
1382,
1383,
567,
568,
569,
570,
1410
]
},
{
"tb": 144,
"tbk": 3,
"tl": 1,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
113,
114
]
},
{
"tb": 512,
"tbk": 4,
"tl": 90,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
990,
991,
992,
993,
994,
995,
994,
996,
997,
998,
999,
1000,
1001,
1002,
1003,
384,
129,
61,
99
]
},
{
"tb": 2576,
"tbk": 7,
"tl": 233411,
"mb": 1472,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1244,
1245,
1246,
1247,
1248,
1249,
723,
724,
725,
726,
727,
728,
729,
730,
731,
732,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 128,
"tbk": 1,
"tl": 639655,
"mb": 128,
"mbk": 1,
"gb": 128,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2406,
2407,
2408,
2409,
2410,
2411,
2412,
2413,
2414,
2415,
2416,
2417,
2418,
2419,
2420,
2421,
2422,
2423,
2424,
2425,
2426,
2427,
2412,
2413,
2417,
2428,
2429,
2430,
1272
]
},
{
"tb": 96,
"tbk": 6,
"tl": 435,
"mb": 32,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
408,
407,
408,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 96,
"tbk": 6,
"tl": 20,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
313,
312,
313,
312,
312,
312
]
},
{
"tb": 128,
"tbk": 2,
"tl": 6,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
968,
969,
970,
971,
972,
973,
974,
975,
976,
977,
975,
978,
979,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 200,
"tbk": 5,
"tl": 762,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
757,
758,
759,
760,
761,
762,
763,
764,
765,
703,
704,
705,
706,
707,
708,
709,
710,
711,
712,
205,
206,
207,
713,
714,
654,
655,
656,
657,
658,
659,
660,
661,
662,
663,
664,
665,
666,
667,
1569,
1570,
1571,
1572,
1573,
1574,
1575,
1576,
1577,
1578,
1579,
1580,
1581,
1582,
1583,
1584,
1585,
1586
]
},
{
"tb": 240,
"tbk": 10,
"tl": 30,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550
]
},
{
"tb": 4632,
"tbk": 33,
"tl": 12,
"mb": 648,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
312,
313,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 448,
"tbk": 12,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
113,
114
]
},
{
"tb": 1944,
"tbk": 7,
"tl": 232884,
"mb": 1104,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1138,
1139,
1140,
1141,
1142,
1143,
1144,
1145,
1146,
1147,
1148,
1149,
723,
724,
725,
726,
727,
728,
729,
730,
731,
732,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 144,
"tbk": 2,
"tl": 186,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
113,
114
]
},
{
"tb": 2208,
"tbk": 6,
"tl": 275708,
"mb": 1104,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3119,
3120,
3121,
3122,
3123,
3124,
3125,
3126,
3127,
3128,
3129,
3130,
3131,
3132,
3133,
3134,
3135,
3136,
3137,
3138,
3139,
3140,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 1200,
"tbk": 1,
"tl": 36079,
"mb": 1200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1746,
1747,
1748,
1749,
1750,
1751,
1752,
1753,
1754,
1755,
1756,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
155
]
},
{
"tb": 1680,
"tbk": 15,
"tl": 14395,
"mb": 384,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
407,
409,
410,
411,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
113,
114
]
},
{
"tb": 96,
"tbk": 6,
"tl": 34,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
408,
408,
408,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 4060,
"tbk": 35,
"tl": 730,
"mb": 696,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3481,
3482,
3483,
3484,
3485,
3486,
3487,
3488,
3489,
3490,
3491,
3492,
3493,
3494,
3455,
3456,
3457,
3458,
3459,
3460,
3461,
3462,
3463,
3464,
3465,
3466,
3467,
3468,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 520,
"tbk": 3,
"tl": 634685,
"mb": 320,
"mbk": 1,
"gb": 320,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
4629,
4630,
4631,
256
]
},
{
"tb": 176,
"tbk": 11,
"tl": 402,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2770,
2771,
2772,
2773,
2774,
2775,
2776,
2777,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 720,
"tbk": 15,
"tl": 13,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
312,
312,
312,
313,
312,
313
]
},
{
"tb": 800,
"tbk": 40,
"tl": 5,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2212,
2213,
2214,
2215,
2216,
2217,
2218,
2219,
2220,
2221,
2222,
3196,
3197,
3198,
3199,
3200,
1544,
1545,
1546,
1547
]
},
{
"tb": 48,
"tbk": 2,
"tl": 1,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4726,
4727,
4728,
4729,
4730,
4731,
4732,
4733,
4734,
4735,
4736,
4737,
4738,
4149,
4150,
4151,
4152,
4153,
4154,
4155,
4156,
4157,
4154,
4158,
4159,
4160,
4161,
4162,
4163,
4164,
4165,
823,
824,
825,
826,
827,
828,
829,
826,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 4344,
"tbk": 181,
"tl": 235,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2484,
2485,
2486,
2487,
2488,
2489,
2490,
2491,
2492,
2493,
2494,
2495,
2496,
2497,
4149,
4150,
4151,
4152,
4153,
4154,
4155,
4156,
4157,
4154,
4158,
4159,
4160,
4161,
4162,
4163,
4164,
4165,
1497,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1502,
1506,
1507,
1508,
1509,
1510,
1511,
1512,
1513,
1514,
1515,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207
]
},
{
"tb": 368,
"tbk": 1,
"tl": 137514,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1244,
1245,
1246,
1247,
1248,
1249,
75,
76,
77,
78,
79,
80,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 384,
"tbk": 3,
"tl": 754,
"mb": 384,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
865,
866,
1017,
385,
61,
99
]
},
{
"tb": 236,
"tbk": 2,
"tl": 10,
"mb": 236,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
1808,
1809,
1810,
1811,
1812,
1813,
1814,
1815,
1815,
1816,
1817,
1818,
1819,
1820,
1821,
1822,
1823,
1817,
1818,
1824,
1825,
1826,
1820,
1821,
1822,
1827,
1828,
1829,
1830,
1831,
1832,
1833,
1834,
556
]
},
{
"tb": 1104,
"tbk": 4,
"tl": 12383,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1138,
1139,
1140,
1141,
1142,
1143,
1144,
1145,
1146,
1147,
1148,
1149,
268,
269,
270,
271,
272,
273,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61,
99
]
},
{
"tb": 428,
"tbk": 2,
"tl": 60,
"mb": 428,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1609,
1610,
1611,
1612,
1613,
1614,
1615,
1616,
1617,
1618,
1619,
1620,
1621,
1622,
1623,
1624,
1625,
1626,
1627,
1628,
1629,
1630,
1631,
384,
129,
61,
99
]
},
{
"tb": 144,
"tbk": 6,
"tl": 3,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
312,
313,
312,
313,
313,
313
]
},
{
"tb": 128,
"tbk": 2,
"tl": 20,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1241,
1242,
1396,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 384,
"tbk": 12,
"tl": 420,
"mb": 384,
"mbk": 12,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
1217,
1218,
1219,
1220,
1220,
1221,
1222,
1223,
1224,
1225,
1226,
1227,
1228,
1229,
1230,
1231,
1232,
1233,
1234,
384,
129,
113,
114
]
},
{
"tb": 480,
"tbk": 1,
"tl": 277,
"mb": 480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1746,
1747,
1748,
1749,
1750,
1751,
1752,
1753,
1754,
1755,
1756,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
556
]
},
{
"tb": 672,
"tbk": 18,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
62
]
},
{
"tb": 256,
"tbk": 4,
"tl": 11,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
2977,
2978,
2979,
2980,
2981,
2979,
2982,
2983,
1243,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 33264,
"tbk": 66,
"tl": 1007450,
"mb": 6144,
"mbk": 4,
"gb": 6144,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
313,
313,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 224,
"tbk": 6,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
314,
315,
316,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
113,
114
]
},
{
"tb": 144,
"tbk": 6,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
113,
114
]
},
{
"tb": 1920,
"tbk": 30,
"tl": 18859,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3976,
3977,
3978,
3979,
3980,
3981,
3982,
3983,
3984,
3985,
3986,
1349,
1350,
1351,
1352,
1353,
1354,
1355,
1356,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 1680,
"tbk": 15,
"tl": 14669,
"mb": 384,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
407,
409,
410,
411,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
99
]
},
{
"tb": 480,
"tbk": 10,
"tl": 5,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61
]
},
{
"tb": 320,
"tbk": 4,
"tl": 5,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
126,
127,
128,
385,
113,
114
]
},
{
"tb": 192,
"tbk": 6,
"tl": 2,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
3965,
3966,
3967,
3968,
3969,
3970,
3971,
3972,
3973,
3974,
3975,
3196,
3197,
3198,
3199,
3200,
3201,
3202,
3203,
62
]
},
{
"tb": 2688,
"tbk": 18,
"tl": 2883,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
3942,
3943,
3944,
3945,
3946,
3947,
3948,
3949,
3950,
3951,
3952,
3953,
3954,
3955,
3956,
3957,
3958,
3959,
3960,
3961,
3962,
3963,
3964,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 3072,
"tbk": 3,
"tl": 637737,
"mb": 3072,
"mbk": 3,
"gb": 1024,
"gbk": 1,
"eb": 1024,
"ebk": 1,
"fs": [
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
468,
469,
470,
471,
472,
473,
474,
475,
476,
477,
478,
479,
480,
481,
482,
483,
484,
485,
486,
487,
488,
489,
490,
490,
491,
492,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502
]
},
{
"tb": 3456,
"tbk": 54,
"tl": 125335,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
981,
982,
983,
984,
985,
986,
987,
988,
984,
985,
986,
989,
283,
61,
62
]
},
{
"tb": 417792,
"tbk": 6528,
"tl": 71504,
"mb": 192,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3107,
3108,
3109,
3110,
3111,
3112,
3113,
3114,
1452,
1453,
1454,
1455,
1456,
1457,
1453,
1458,
1459,
1460,
1461,
1462,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 80,
"tbk": 2,
"tl": 11002,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1874,
1875,
1876,
1877,
1878,
1879,
1880,
1881,
1882,
1883,
1884,
1884,
1885,
1886,
1887,
1888,
1889,
1890,
1891,
1892,
1893,
1894,
1895,
1896,
1897,
1898,
1899,
1900,
1901,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 288,
"tbk": 2,
"tl": 6232,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
268,
269,
270,
271,
272,
273,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
61,
62
]
},
{
"tb": 299904,
"tbk": 4686,
"tl": 61849,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3107,
3108,
3109,
3110,
3111,
3112,
3113,
3114,
1452,
1453,
1454,
1455,
1456,
1457,
1453,
1458,
1459,
1460,
1461,
1462,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 160,
"tbk": 4,
"tl": 20,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
868,
869,
870,
871,
872,
873,
874,
875,
876,
877,
878,
879,
880,
881,
882,
883,
884,
885,
886,
887,
964,
965,
966,
128,
129,
61,
99
]
},
{
"tb": 672,
"tbk": 18,
"tl": 17,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
407,
408,
407,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 160,
"tbk": 1,
"tl": 348,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
557,
558,
2513,
2514,
1017,
385,
61,
62
]
},
{
"tb": 48,
"tbk": 1,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550
]
},
{
"tb": 5992,
"tbk": 27,
"tl": 31452,
"mb": 1448,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3261,
3262,
3263,
3264,
3265,
3266,
3267,
3268,
3269,
3270,
3271,
3272,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 1920,
"tbk": 30,
"tl": 3,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2721,
2722,
2723,
2724,
2725,
2726,
2727,
2728,
2729,
2730,
2731,
2732,
2733,
2302,
2303,
2304,
2305,
2306,
2307,
2308,
2309,
2310,
2311,
2312,
2313,
2314,
2315,
2316,
2317,
2318,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 2560,
"tbk": 64,
"tl": 16024,
"mb": 480,
"mbk": 12,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
757,
758,
759,
760,
761,
762,
763,
764,
765,
646,
647,
648,
649,
650,
651,
652,
653,
654,
655,
656,
703,
704,
705,
706,
707,
708,
709,
710,
711,
712,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 1196,
"tbk": 3,
"tl": 41,
"mb": 1016,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
1658,
1659,
1660,
1661,
1662,
1663,
1664,
1664,
1665,
1666,
1667,
1668,
1669,
1670,
1671,
1672,
1673,
1667,
1674,
1675,
1676,
1669,
1670,
1671,
1677,
1678,
1679,
1680,
1681,
1682,
1683,
1684,
967,
385,
61,
99
]
},
{
"tb": 1152,
"tbk": 6,
"tl": 53122,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3581,
3582,
3583,
3584,
3585,
3586,
3587,
3588,
3589,
3590,
2118,
2119,
2120,
2121,
2119,
2122,
2123,
1243,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 168,
"tbk": 2,
"tl": 21,
"mb": 84,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
944,
945,
945,
946,
947,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
128,
385,
113,
114
]
},
{
"tb": 1440,
"tbk": 60,
"tl": 2736,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
2206,
2207,
2912,
2913,
2914,
2915,
2916,
2917,
1452,
1453,
1454,
1455,
1456,
1457,
1453,
1458,
1459,
1460,
1461,
1462,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850
]
},
{
"tb": 864,
"tbk": 6,
"tl": 18631,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
268,
269,
270,
271,
272,
273,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
62
]
},
{
"tb": 80,
"tbk": 2,
"tl": 12,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
868,
869,
870,
871,
872,
873,
874,
875,
876,
877,
878,
879,
880,
881,
882,
883,
884,
885,
886,
887,
964,
965,
966,
128,
385,
113,
114
]
},
{
"tb": 672,
"tbk": 21,
"tl": 1718,
"mb": 672,
"mbk": 21,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
2343,
2344,
2345,
2346,
2347,
2348,
2349,
2350,
2347,
2351,
2352,
2353,
2354,
2355,
2356,
2357,
3201,
3202,
3203,
99
]
},
{
"tb": 576,
"tbk": 12,
"tl": 10,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
312,
312,
312,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 2480,
"tbk": 62,
"tl": 22233,
"mb": 440,
"mbk": 11,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2380,
2381,
2382,
2383,
2384,
2385,
2386,
2387,
2387,
2388,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 384,
"tbk": 6,
"tl": 16241,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
12,
13,
14,
15,
16,
17,
18,
19,
20,
21,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 1328,
"tbk": 1,
"tl": 19,
"mb": 1328,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
596,
597,
598,
599,
600,
601,
602,
603,
604,
605,
61,
99
]
},
{
"tb": 384,
"tbk": 2,
"tl": 46438,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
2110,
2111,
2112,
2113,
2114,
2115,
2116,
2117,
2118,
2119,
2120,
2121,
2119,
2122,
2123,
1243,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 96128,
"tbk": 1502,
"tl": 47595,
"mb": 192,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4505,
4506,
4507,
4508,
4509,
4510,
4511,
4512,
4513,
4514,
4515,
4516,
4517,
4518,
4519,
4520,
4521,
4522,
4523,
4524,
4525,
4526,
4516,
4527,
4518,
4519,
4520,
4521,
4522,
4528,
4524,
4525,
4529,
4530,
4531,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 128,
"tbk": 2,
"tl": 5,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
968,
969,
970,
971,
972,
973,
974,
975,
976,
977,
975,
978,
979,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 1472,
"tbk": 4,
"tl": 12277,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1244,
1245,
1246,
1247,
1248,
1249,
268,
269,
270,
271,
272,
273,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
113,
114
]
},
{
"tb": 3072,
"tbk": 3,
"tl": 133,
"mb": 2048,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
468,
469,
470,
471,
472,
473,
474,
475,
476,
477,
478,
479,
480,
481,
482,
483,
484,
485,
486,
487,
488,
489,
490,
490,
491,
492,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
173,
174,
175,
176,
177,
178,
179,
180
]
},
{
"tb": 480,
"tbk": 1,
"tl": 281,
"mb": 480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
354,
355,
1006,
1007,
1008,
1009,
1010,
1011,
1012,
1013,
1014,
1015,
1016,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
556
]
},
{
"tb": 120,
"tbk": 3,
"tl": 13872,
"mb": 120,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1874,
1875,
1876,
1877,
1878,
1879,
1880,
1881,
1882,
1883,
1884,
1884,
1885,
618,
619,
620,
621,
622,
623,
624,
625,
626,
627,
628,
629,
630,
631,
632,
633,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 2592,
"tbk": 18,
"tl": 15431,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
2844,
2845,
2846,
2847,
2848,
2849,
2850,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 432,
"tbk": 3,
"tl": 267435,
"mb": 432,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
75,
76,
77,
78,
79,
80,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 384,
"tbk": 6,
"tl": 107396,
"mb": 320,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2006,
2007,
2008,
2009,
2010,
2011,
2012,
2008,
2009,
2010,
2013,
322,
61,
99
]
},
{
"tb": 112,
"tbk": 7,
"tl": 27,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
313,
313,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 200,
"tbk": 5,
"tl": 1366,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2380,
2381,
2382,
2383,
2384,
2385,
2386,
2387,
2387,
2388,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
1551,
1552,
1553,
1554,
1555,
1556,
1557,
1558,
1559,
1560,
1061,
1062,
1063,
1064,
1065,
1066,
1067,
1068,
1069,
1070,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 62952,
"tbk": 74,
"tl": 44584,
"mb": 11136,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2649,
2650,
2651,
2652,
2653,
2654,
2655,
2656,
2657,
2658,
2659,
2660,
2661,
2662,
2663,
2664,
2665,
823,
824,
825,
826,
827,
828,
829,
826,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 128,
"tbk": 1,
"tl": 5,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
990,
991,
1744,
1745,
128,
129,
61,
62
]
},
{
"tb": 2636,
"tbk": 8,
"tl": 16721,
"mb": 824,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
503,
504,
505,
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
517,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
113,
114
]
},
{
"tb": 240,
"tbk": 6,
"tl": 5,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2578,
2579,
2580,
2581,
2582,
2583,
2584,
2585,
2586,
2587,
2588,
2589,
2590,
2591,
2592,
2593,
2594,
2595,
2596,
2597,
2598,
2599,
2600,
967,
385,
113,
114
]
},
{
"tb": 4208,
"tbk": 258,
"tl": 518,
"mb": 176,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1071,
1072,
1073,
1074,
1075,
1076,
1077,
1078,
1079,
1080,
1081,
1082,
1083,
1084,
1085,
1086,
1087,
1088,
1089,
3320,
3321,
3322,
3323,
3324,
3325,
3326,
3327,
3328,
3329,
3330,
3331,
3332,
3333,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 160,
"tbk": 4,
"tl": 13479,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4166,
4167,
4168,
4169,
4170,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 148,
"tbk": 1,
"tl": 17,
"mb": 148,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
3643,
3644,
3645,
3646,
3647,
3648,
3649,
3650,
3650,
3651,
3652,
3653,
3654,
3655,
3656,
3657,
3658,
3652,
3653,
3659,
3660,
3661,
3655,
3656,
3657,
3662,
3663,
3664,
3665,
3666,
3667,
3668,
1410
]
},
{
"tb": 864,
"tbk": 12,
"tl": 62,
"mb": 144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
408,
407,
408,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 61296,
"tbk": 1,
"tl": 132,
"mb": 61296,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
791,
792,
793,
794,
795,
796,
797,
798,
3769,
3770,
3771,
3772
]
},
{
"tb": 864,
"tbk": 12,
"tl": 25,
"mb": 144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
408,
407,
408,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 768,
"tbk": 4,
"tl": 3003,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2014,
2015,
2016,
2017,
2018,
2019,
2020,
2021,
2022,
2023,
4434,
4435,
4436,
4437,
4435,
4438,
4439,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 96,
"tbk": 6,
"tl": 31,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
408,
407,
408,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 480,
"tbk": 2,
"tl": 31699,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
557,
558,
2378,
2379,
1171,
1172,
1173,
1174,
1175,
1176,
1177,
1178,
1179,
322,
61,
62
]
},
{
"tb": 299968,
"tbk": 4687,
"tl": 58793,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3107,
3108,
3109,
3110,
3111,
3112,
3113,
3114,
2601,
2602,
2603,
2604,
2605,
2606,
2602,
2607,
2608,
2609,
2610,
2611,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 40,
"tbk": 1,
"tl": 191,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
606,
607,
608,
609,
610,
611,
612,
613,
614,
615,
616,
616,
617,
913,
914,
915,
916,
917,
918,
919,
920,
921,
922,
923,
924,
925,
926,
927,
928,
929,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 2472,
"tbk": 25,
"tl": 3,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1106,
1107,
1108,
1109,
1110,
1111,
1112,
1113,
1114,
1115,
1116,
1117,
1118,
1119,
1120,
1118,
1121,
1122,
1123,
1124,
1125,
1126,
1127,
1128,
1129,
1123,
1124,
1130,
1131,
1132,
1133,
1134,
1135,
1136,
1137,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 100288,
"tbk": 1567,
"tl": 22227,
"mb": 192,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4266,
4267,
4268,
4269,
4270,
4271,
4272,
4273,
3082,
3083,
3084,
3085,
3086,
3087,
3088,
3088,
3089,
3090,
3090,
3091,
3092,
3093,
3094,
3095,
3096,
3097,
3098,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 288,
"tbk": 6,
"tl": 81,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
408,
407,
407,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 300,
"tbk": 3,
"tl": 38,
"mb": 248,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1273,
1274,
1275,
1276,
1277,
1278,
1279,
1280,
1433,
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
1441,
1442,
1443,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
1250,
385,
113,
114
]
},
{
"tb": 160,
"tbk": 1,
"tl": 29,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
557,
558,
559,
560,
867,
113,
114
]
},
{
"tb": 368,
"tbk": 1,
"tl": 2731,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1047,
1048,
1049,
1050,
1051,
1052,
16,
17,
18,
19,
20,
21,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 96,
"tbk": 1,
"tl": 634787,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
4108,
4109,
4110,
4111,
256
]
},
{
"tb": 1920,
"tbk": 24,
"tl": 30,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
733,
734,
735,
736,
737,
738,
739,
740,
741,
742,
743,
744,
741,
745,
746,
747,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
113,
114
]
},
{
"tb": 336,
"tbk": 7,
"tl": 1,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
313,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 240,
"tbk": 6,
"tl": 21649,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4274,
4275,
4276,
4277,
4278,
4279,
4280,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 488,
"tbk": 5,
"tl": 1,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
564,
565,
566,
567,
568,
569,
570,
379
]
},
{
"tb": 4032,
"tbk": 18,
"tl": 510060,
"mb": 1152,
"mbk": 3,
"gb": 768,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1210,
1211,
4362,
4363,
4364,
4365,
4366,
4367,
4368,
4369,
4370,
4371,
4372,
4373,
4374,
4375,
4376,
4377,
4378,
4379,
4380,
4381,
4382,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 600,
"tbk": 3,
"tl": 265788,
"mb": 600,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3443,
3444,
3445,
3446,
3447,
3448,
3449,
3450,
3451,
3452,
3453,
3453,
3454,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 288,
"tbk": 1,
"tl": 10833,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1967,
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1980,
1981,
1981,
1982,
1886,
1887,
1888,
1889,
1890,
1891,
1892,
1893,
1894,
1895,
1896,
1897,
1898,
1899,
1900,
1901,
929,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 800,
"tbk": 4,
"tl": 13427,
"mb": 400,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3391,
3392,
3393,
3394,
3395,
1243,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 1344,
"tbk": 12,
"tl": 16573,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61,
62
]
},
{
"tb": 160,
"tbk": 1,
"tl": 329,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
557,
558,
559,
560,
1017,
385,
61,
62
]
},
{
"tb": 1920,
"tbk": 30,
"tl": 47,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2721,
2722,
2723,
2724,
2725,
2726,
2727,
2728,
2729,
2730,
2731,
2732,
2733,
2734,
2735,
2736,
2737,
2738,
2739,
2740,
2741,
2742,
2743,
2744,
2745,
2746,
2747,
2748,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 192,
"tbk": 4,
"tl": 17907,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2749,
2750,
2751,
2752,
2753,
2754,
2755,
2756,
2757,
2758,
2759,
2760,
2761,
2762,
2763,
2763,
2764,
618,
619,
620,
621,
622,
623,
624,
625,
626,
627,
628,
629,
630,
631,
632,
633,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 96,
"tbk": 6,
"tl": 20,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
312,
313,
312,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 2524,
"tbk": 4,
"tl": 218,
"mb": 2000,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2691,
2692,
2693,
2694,
2695,
2696,
2697,
2698,
3334,
3335,
3336,
3337,
3338,
3339,
3340,
3341,
3342,
3343,
3344,
3345,
3342,
3346,
3347,
3348,
3349,
3350,
3351,
3352,
1544,
1545,
1546,
1547
]
},
{
"tb": 288,
"tbk": 2,
"tl": 634841,
"mb": 192,
"mbk": 1,
"gb": 192,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2918,
2919,
2920,
2921,
2922,
4739,
4740,
4741,
4742,
4743,
4744,
4745,
4746,
4747,
4748,
4749,
4750,
4751,
4752,
4753,
4754,
4755,
4756,
4757
]
},
{
"tb": 256,
"tbk": 8,
"tl": 3,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
3965,
3966,
3967,
3968,
3969,
3970,
3971,
3972,
3973,
3974,
3975,
2223,
2224,
2225,
2226,
2227,
2228,
2229,
2230,
556
]
},
{
"tb": 288,
"tbk": 9,
"tl": 355,
"mb": 288,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
2515,
2516,
2517,
2518,
2519,
2520,
2521,
2522,
2519,
2523,
2524,
2525,
2526,
2527,
2528,
2529,
2530,
2531,
2532,
447
]
},
{
"tb": 192,
"tbk": 6,
"tl": 3,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
3965,
3966,
3967,
3968,
3969,
3970,
3971,
3972,
3973,
3974,
3975,
2223,
2224,
2225,
2226,
2227,
2228,
2229,
2230,
447
]
},
{
"tb": 128,
"tbk": 1,
"tl": 596,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
284,
285,
286,
287,
288,
289,
1061,
1062,
1063,
1064,
1065,
1066,
1067,
1068,
1069,
1070,
205,
206,
207,
1239,
1240,
181,
182,
183,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
312,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 2208,
"tbk": 6,
"tl": 507132,
"mb": 1104,
"mbk": 3,
"gb": 736,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
3119,
3120,
3121,
3122,
3123,
3124,
3125,
3126,
3127,
3128,
3129,
3130,
3131,
3132,
3133,
3134,
3135,
3136,
3137,
3138,
3139,
3140,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 288,
"tbk": 1,
"tl": 2678,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2749,
2750,
2751,
2752,
2753,
2754,
2755,
2756,
2757,
2758,
2759,
2760,
2761,
2762,
2763,
2763,
2764,
618,
619,
620,
621,
622,
623,
624,
625,
626,
627,
628,
629,
630,
631,
632,
633,
782,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 80,
"tbk": 2,
"tl": 4827,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
606,
607,
608,
609,
610,
611,
612,
613,
614,
615,
616,
616,
617,
1886,
1887,
1888,
1889,
1890,
1891,
1892,
1893,
1894,
1895,
1896,
1897,
1898,
1899,
1900,
1901,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 1536,
"tbk": 24,
"tl": 73416,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
12,
13,
14,
15,
268,
269,
270,
271,
272,
273,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
113,
114
]
},
{
"tb": 120,
"tbk": 1,
"tl": 19079,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2097,
2098,
2099,
2100,
2101,
2102,
2103,
2104,
2105,
2106,
3361,
3362,
3363,
61,
99
]
},
{
"tb": 168,
"tbk": 2,
"tl": 0,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1106,
1107,
1108,
1109,
1110,
1111,
1112,
1113,
1114,
1115,
1116,
1117,
1118,
1119,
1120,
1118,
1121,
1357,
1358,
1359,
1360,
1361,
1362,
1363,
1364,
1358,
1359,
1365,
1366,
1367,
1368,
1369,
1370,
1371,
1372,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 3632,
"tbk": 32,
"tl": 12471,
"mb": 736,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3434,
3435,
3436,
3437,
3438,
3439,
3440,
3441,
3437,
3438,
3439,
3442,
283,
61,
99
]
},
{
"tb": 80,
"tbk": 5,
"tl": 15,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
407,
409,
410,
411,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
99
]
},
{
"tb": 20640,
"tbk": 26,
"tl": 472786,
"mb": 6144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1210,
1211,
3600,
3601,
3602,
3603,
3604,
3605,
3606,
3607,
3608,
3609,
3610,
3611,
3612,
3613,
3614,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859,
205,
206,
207
]
},
{
"tb": 600,
"tbk": 3,
"tl": 306556,
"mb": 600,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3443,
3444,
3445,
3446,
3447,
3448,
3449,
3450,
3451,
3452,
3453,
3453,
3454,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
1396,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 560,
"tbk": 1,
"tl": 36083,
"mb": 560,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1251,
1252,
1253,
1254,
1255,
1256,
1257,
1258,
3237,
3238,
3239,
3240,
3241,
3242,
3243,
3244,
3245,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
1410
]
},
{
"tb": 640,
"tbk": 6,
"tl": 161014,
"mb": 640,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
328,
329,
330,
331,
332,
333,
334,
335,
336,
337,
338,
339,
340,
341,
342,
343,
344,
345,
335,
336,
337,
346,
347,
348,
349,
350,
351,
322,
61,
99
]
},
{
"tb": 236,
"tbk": 2,
"tl": 31,
"mb": 236,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
944,
945,
945,
946,
947,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
1250,
129,
113,
114
]
},
{
"tb": 128,
"tbk": 8,
"tl": 155,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2231,
2232,
2233,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 540,
"tbk": 3,
"tl": 489,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
3514,
3515,
3516,
3517,
3518,
3519,
3520,
3520,
3521,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 1404032,
"tbk": 1567,
"tl": 27771,
"mb": 2688,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3074,
3075,
3076,
3077,
3078,
3079,
3080,
3081,
3082,
3083,
3084,
3085,
3086,
3087,
3088,
3088,
3089,
3090,
3090,
3091,
3092,
3093,
3094,
3095,
3096,
3097,
3098,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 176,
"tbk": 11,
"tl": 54,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
312,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 2304,
"tbk": 18,
"tl": 11424815,
"mb": 2304,
"mbk": 18,
"gb": 2304,
"gbk": 18,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
990,
991,
4758,
4759,
4483,
4484,
4485,
4486,
4487,
4488,
4489,
4490,
4491,
4492,
4493,
4494,
256
]
},
{
"tb": 384,
"tbk": 2,
"tl": 2,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
257,
258,
259,
260,
261,
262,
263,
264,
265,
266,
267,
4411,
4412,
4413,
4414,
4415,
4416,
4417,
4418,
4419,
4760,
4761,
4762,
4763,
4764,
4765,
4766,
4767,
4768,
4769,
4770,
4771,
4772,
4773,
4763,
4764,
4765,
4774,
4775
]
},
{
"tb": 288,
"tbk": 6,
"tl": 3,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61
]
},
{
"tb": 6720,
"tbk": 24,
"tl": 448,
"mb": 2304,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2612,
2613,
2614,
2615,
2616,
2617,
2618,
2619,
2620,
2621,
2622,
2623,
2624,
2625,
2626,
2627,
2628,
2629,
2630,
3418,
3419,
3420,
3421,
3422,
3423,
3424,
3425,
3426,
3427,
3428,
3429,
823,
824,
825,
826,
827,
828,
829,
826,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 400,
"tbk": 2,
"tl": 8277,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1925,
1926,
1927,
1928,
1929,
1396,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 6912,
"tbk": 108,
"tl": 105371,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
1373,
1374,
1375,
1376,
1377,
1378,
1379,
1380,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 21168,
"tbk": 42,
"tl": 570988,
"mb": 4608,
"mbk": 3,
"gb": 3072,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
313,
313,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 3456,
"tbk": 9,
"tl": 323437,
"mb": 3456,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2075,
2076,
2077,
2078,
2079,
2080,
2081,
2082,
2083,
2084,
2085,
2086,
2087,
2088,
2089,
2090,
2091,
2092,
2093,
2094,
2095,
2096,
283,
61,
99
]
},
{
"tb": 120,
"tbk": 3,
"tl": 13510,
"mb": 120,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1874,
1875,
1876,
1877,
1878,
1879,
1880,
1881,
1882,
1883,
1884,
1884,
1885,
1886,
1887,
1888,
1889,
1890,
1891,
1892,
1893,
1894,
1895,
1896,
1897,
1898,
1899,
1900,
1901,
782,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 180,
"tbk": 1,
"tl": 22,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
4776,
4777,
4778,
4779,
4780,
4781,
4782,
4783,
4784,
236,
237,
238,
239,
240,
241,
242,
243,
244,
245,
246,
247,
248,
249,
250,
251,
252,
237,
238,
239,
240,
241,
242,
243,
247,
253,
254,
255,
256
]
},
{
"tb": 256,
"tbk": 4,
"tl": 12,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3154,
3155,
3156,
3157,
3158,
3159,
3160,
3161,
3162,
3495,
3496,
3497,
3498,
3499,
3500,
3501,
3499,
3502,
3503,
1243,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 240,
"tbk": 6,
"tl": 540026,
"mb": 200,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4171,
4172,
4173,
4174,
4175,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 432,
"tbk": 3,
"tl": 497652,
"mb": 432,
"mbk": 3,
"gb": 288,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
75,
76,
77,
78,
79,
80,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 864,
"tbk": 12,
"tl": 6,
"mb": 144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
312,
313,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 160,
"tbk": 1,
"tl": 287,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
557,
558,
1872,
1873,
1017,
129,
113,
114
]
},
{
"tb": 304,
"tbk": 2,
"tl": 127,
"mb": 152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4195,
4196,
4197,
4198,
4199,
4200,
4201,
4202,
4203,
4204,
4205,
4206,
4207,
4208,
4209,
4210,
4211,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859
]
},
{
"tb": 96,
"tbk": 3,
"tl": 953,
"mb": 96,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
865,
866,
1017,
385,
61,
62
]
},
{
"tb": 1200,
"tbk": 6,
"tl": 275064,
"mb": 400,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3507,
3508,
3509,
3510,
3511,
3512,
3513,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 180,
"tbk": 1,
"tl": 135,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
3514,
3515,
3516,
3517,
3518,
3519,
3520,
3520,
3521,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 180,
"tbk": 1,
"tl": 142,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
3012,
3013,
3014,
3015,
3016,
3017,
3018,
3018,
3019,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 200,
"tbk": 5,
"tl": 2327,
"mb": 120,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
757,
758,
759,
760,
761,
762,
763,
764,
765,
703,
704,
705,
706,
707,
708,
709,
710,
711,
712,
205,
206,
207,
713,
714,
654,
655,
656,
703,
704,
705,
706,
707,
708,
709,
710,
711,
712,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 360,
"tbk": 9,
"tl": 217836,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
158,
159,
160,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
170,
171,
172,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
1239,
1240,
181,
182,
183,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
1551,
1552,
1553,
1554,
1555,
1556,
1557,
1558,
1559,
1560
]
},
{
"tb": 32,
"tbk": 1,
"tl": 32,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
4127,
4128,
4129,
4130,
4130,
4131,
4132,
4133,
4134,
4135,
4136,
4137,
4138,
4132,
4133,
4139,
4140,
4141,
4135,
4136,
4137,
4142,
4143,
4144,
4145,
4146,
4147,
4148,
447
]
},
{
"tb": 32,
"tbk": 1,
"tl": 21,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
2243,
2244,
2245,
2246,
384,
129,
113,
114
]
},
{
"tb": 288,
"tbk": 12,
"tl": 5,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
312,
313,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 743424,
"tbk": 134,
"tl": 1435005,
"mb": 156768,
"mbk": 6,
"gb": 156768,
"gbk": 6,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1210,
1211,
3600,
3601,
3602,
3603,
3604,
3605,
3606,
3607,
3608,
3609,
3610,
3611,
3612,
3613,
3614,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 1196,
"tbk": 3,
"tl": 25,
"mb": 1016,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
1658,
1659,
1660,
1661,
1662,
1663,
1664,
1664,
1665,
1666,
1667,
1668,
1669,
1670,
1671,
1672,
1673,
1667,
1674,
1675,
1676,
1669,
1670,
1671,
1677,
1678,
1679,
1680,
1681,
1682,
1683,
1684,
128,
129,
61,
99
]
},
{
"tb": 11088,
"tbk": 66,
"tl": 15,
"mb": 1280,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
313,
313,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 2160,
"tbk": 54,
"tl": 29,
"mb": 176,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
312,
312,
312,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 1536,
"tbk": 8,
"tl": 28483,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2014,
2015,
2016,
2017,
2018,
2019,
2020,
2021,
2022,
2023,
4434,
4435,
4436,
4437,
4435,
4438,
4439,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 2592,
"tbk": 27,
"tl": 415688,
"mb": 288,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1210,
1211,
1835,
1836,
1837,
1838,
1839,
1840,
1841,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 240,
"tbk": 1,
"tl": 64351,
"mb": 240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
354,
355,
356,
357,
358,
359,
360,
361,
362,
363,
364,
365,
366,
789,
61,
62
]
},
{
"tb": 2016,
"tbk": 18,
"tl": 48,
"mb": 288,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
407,
408,
408,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 200,
"tbk": 5,
"tl": 31,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
151,
152,
153,
154,
1410
]
},
{
"tb": 1344,
"tbk": 54,
"tl": 5767,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
2206,
2207,
2208,
2209,
2210,
2211,
1452,
1453,
1454,
1455,
1456,
1457,
1453,
1458,
1459,
1460,
1461,
1462,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
408,
409,
410,
411,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
283,
61,
99
]
},
{
"tb": 128,
"tbk": 2,
"tl": 6,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1195,
1196,
1197,
1198,
1199,
1200,
1201,
1202,
1203,
1204,
1205,
1206,
1203,
1207,
1208,
1209,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
283,
61,
62
]
},
{
"tb": 4656,
"tbk": 194,
"tl": 511,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2484,
2485,
2486,
2487,
2488,
2489,
2490,
2491,
2492,
2493,
2494,
2495,
2496,
2497,
4149,
4150,
4151,
4152,
4153,
4154,
4155,
4156,
4157,
4154,
4158,
4159,
4160,
4161,
4162,
4163,
4164,
4165,
823,
824,
825,
826,
827,
828,
829,
826,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207
]
},
{
"tb": 48,
"tbk": 2,
"tl": 0,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61,
99
]
},
{
"tb": 288,
"tbk": 6,
"tl": 1,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
312,
313,
313,
312,
312,
314,
315,
316
]
},
{
"tb": 168,
"tbk": 2,
"tl": 24,
"mb": 84,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
944,
945,
945,
946,
947,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
128,
385,
61,
99
]
},
{
"tb": 48,
"tbk": 1,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
113,
114
]
},
{
"tb": 192,
"tbk": 4,
"tl": 1,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
61
]
},
{
"tb": 640,
"tbk": 1,
"tl": 638818,
"mb": 640,
"mbk": 1,
"gb": 640,
"gbk": 1,
"eb": 640,
"ebk": 1,
"fs": [
4785,
4786,
4787,
4788,
4789,
4790,
4791,
4792,
4793,
1855,
1856,
1857,
1858,
1859,
1860,
1861,
1862,
1863,
1864,
1865,
1866,
1867,
1868,
1869,
1870,
1871,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 480,
"tbk": 1,
"tl": 281,
"mb": 480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1746,
1747,
1748,
1749,
1750,
1751,
1752,
1753,
1754,
1755,
1756,
789,
61,
99
]
},
{
"tb": 736,
"tbk": 2,
"tl": 6203,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1244,
1245,
1246,
1247,
1248,
1249,
268,
269,
270,
271,
272,
273,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
61,
99
]
},
{
"tb": 288,
"tbk": 6,
"tl": 36,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
408,
408,
408,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 1536,
"tbk": 32,
"tl": 20428541,
"mb": 1536,
"mbk": 32,
"gb": 1536,
"gbk": 32,
"eb": 1536,
"ebk": 32,
"fs": [
4794,
4795,
4796,
4797,
4798,
4799,
4800,
4801,
529,
530,
531,
532,
533,
534,
535,
536,
537,
538,
539,
540,
541,
542,
543,
544,
545,
546,
547,
548,
548,
549,
550,
551,
552,
553,
554,
555,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
556
]
},
{
"tb": 180,
"tbk": 1,
"tl": 118,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
766,
767,
768,
769,
770,
771,
772,
773,
2853,
2854,
2855,
2856,
2857,
2858,
2859,
2859,
2860,
1886,
1887,
1888,
1889,
1890,
1891,
1892,
1893,
1894,
1895,
1896,
1897,
1898,
1899,
1900,
1901,
929,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 80,
"tbk": 2,
"tl": 5309,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
606,
607,
608,
609,
610,
611,
612,
613,
614,
615,
616,
616,
617,
1886,
1887,
1888,
1889,
1890,
1891,
1892,
1893,
1894,
1895,
1896,
1897,
1898,
1899,
1900,
1901,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 240,
"tbk": 6,
"tl": 24480,
"mb": 120,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4033,
4034,
4035,
4036,
4037,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 280,
"tbk": 1,
"tl": 3675,
"mb": 280,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
503,
504,
505,
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
517,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
283,
61,
62
]
},
{
"tb": 360,
"tbk": 2,
"tl": 14,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
1658,
1659,
1660,
1661,
1662,
1663,
1664,
1664,
1665,
1666,
1667,
1668,
1669,
1670,
1671,
1672,
1673,
1667,
1674,
1675,
1676,
1669,
1670,
1671,
1677,
1678,
1679,
1680,
1681,
1682,
1683,
1684,
128,
385,
61,
62
]
},
{
"tb": 48,
"tbk": 1,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
113,
114
]
},
{
"tb": 972,
"tbk": 3,
"tl": 63,
"mb": 824,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
2234,
2235,
2236,
2237,
2238,
2239,
2240,
2241,
2241,
2242,
1222,
1223,
1224,
1225,
1226,
1227,
1228,
1229,
1230,
1231,
1232,
1233,
1234,
384,
129,
113,
114
]
},
{
"tb": 4060,
"tbk": 35,
"tl": 852,
"mb": 696,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3481,
3482,
3483,
3484,
3485,
3486,
3487,
3488,
3489,
3490,
3491,
3492,
3493,
3494,
2061,
2062,
2063,
2064,
2065,
2066,
2067,
2068,
2069,
2070,
2071,
2072,
2073,
2074,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 78552,
"tbk": 1,
"tl": 567898,
"mb": 78552,
"mbk": 1,
"gb": 78552,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
791,
792,
3206,
3207,
3208,
3209,
3210,
3211,
799,
800,
801,
802
]
},
{
"tb": 576,
"tbk": 5,
"tl": 47538,
"mb": 576,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
968,
969,
970,
971,
972,
4395,
4396,
4397,
4398,
4399,
4400,
4401,
4402,
4403,
4404,
4405,
4406,
4407,
4408,
4409,
4397,
4398,
4399,
4400,
4401,
4402,
4403,
4404,
4405,
4407,
4410,
3361,
3362,
3363,
61,
62
]
},
{
"tb": 11664,
"tbk": 30,
"tl": 18472,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4212,
4213,
4214,
4215,
4216,
4217,
4218,
4219,
4220,
4221,
4222,
1696,
1697,
1698,
1699,
1700,
1701,
1702,
1703,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 6912,
"tbk": 108,
"tl": 91687,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
2844,
2845,
2846,
2847,
2848,
2849,
2850,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 1216,
"tbk": 14,
"tl": 1,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
733,
734,
735,
736,
737,
738,
739,
740,
741,
742,
743,
744,
741,
745,
746,
747,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61,
62
]
},
{
"tb": 144,
"tbk": 1,
"tl": 18490,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2097,
2098,
2099,
2100,
2101,
2102,
2103,
2104,
2105,
2106,
2107,
2108,
2109,
113,
114
]
},
{
"tb": 428,
"tbk": 2,
"tl": 19,
"mb": 428,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
2234,
2235,
2236,
2237,
2238,
2239,
2240,
2241,
2241,
2242,
1222,
1223,
1224,
1225,
1226,
1227,
1228,
1229,
1230,
1231,
1232,
1233,
1234,
384,
385,
113,
114
]
},
{
"tb": 384,
"tbk": 1,
"tl": 634805,
"mb": 384,
"mbk": 1,
"gb": 384,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
4802,
4803,
4804,
4805,
4806,
4807,
4808
]
},
{
"tb": 576,
"tbk": 24,
"tl": 12,
"mb": 64,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
313,
313,
313,
312,
313,
314,
315,
316
]
},
{
"tb": 368,
"tbk": 1,
"tl": 2675,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1047,
1048,
1049,
1050,
1051,
1052,
16,
17,
18,
19,
20,
21,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 1792,
"tbk": 32,
"tl": 20428635,
"mb": 1792,
"mbk": 32,
"gb": 1792,
"gbk": 32,
"eb": 1792,
"ebk": 32,
"fs": [
4809,
4810,
4811,
4812,
4813,
4814,
4815,
4816,
4817,
4818,
4819,
4820,
4821,
529,
530,
531,
532,
533,
534,
535,
536,
537,
538,
539,
540,
541,
542,
543,
544,
545,
546,
547,
548,
548,
549,
550,
551,
552,
553,
554,
555,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
556
]
},
{
"tb": 2240,
"tbk": 56,
"tl": 4254332,
"mb": 360,
"mbk": 9,
"gb": 320,
"gbk": 8,
"eb": 0,
"ebk": 0,
"fs": [
3299,
3300,
3301,
3302,
3303,
3304,
3305,
3306,
3307,
3308,
3309,
3310,
3311,
3312,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 768,
"tbk": 6,
"tl": 1932,
"mb": 768,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
123,
124,
1017,
385,
61,
62
]
},
{
"tb": 200,
"tbk": 1,
"tl": 639678,
"mb": 200,
"mbk": 1,
"gb": 200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
4822,
4823,
4824,
4825,
4826,
4827,
4828,
4829,
4830
]
},
{
"tb": 165648,
"tbk": 1,
"tl": 151741,
"mb": 165648,
"mbk": 1,
"gb": 165648,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
791,
792,
3206,
3207,
3208,
3209,
3210,
3211,
3933,
3934,
3935,
3936
]
},
{
"tb": 128,
"tbk": 1,
"tl": 163,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
990,
991,
1744,
1745,
967,
129,
113,
114
]
},
{
"tb": 32,
"tbk": 1,
"tl": 639672,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
4831,
4832,
4833,
4834,
4835
]
},
{
"tb": 288,
"tbk": 6,
"tl": 44,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
407,
407,
408,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 768,
"tbk": 6,
"tl": 114676,
"mb": 768,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
968,
969,
970,
971,
972,
4395,
4396,
4397,
4398,
4399,
4400,
4401,
4402,
4403,
4404,
4405,
4406,
4407,
4408,
4409,
4397,
4398,
4399,
4400,
4401,
4402,
4403,
4404,
4405,
4407,
4410,
2107,
2108,
2109,
61,
99
]
},
{
"tb": 288,
"tbk": 3,
"tl": 11341,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1210,
1211,
1561,
1562,
1563,
1564,
1565,
1566,
1567,
1563,
1564,
1565,
1568,
283,
61,
99
]
},
{
"tb": 96,
"tbk": 2,
"tl": 0,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
1381,
1382,
1383,
1516,
1655,
1656,
1657,
62
]
},
{
"tb": 1248,
"tbk": 53,
"tl": 1001,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
2206,
2207,
2912,
2913,
2914,
2915,
2916,
2917,
1452,
1453,
1454,
1455,
1456,
1457,
1453,
1458,
1459,
1460,
1461,
1462,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 1184,
"tbk": 8,
"tl": 447,
"mb": 1184,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
1704,
1705,
1706,
1707,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1712,
1716,
1717,
1718,
1719,
1720,
1721,
1722,
1723,
1724,
1725,
556
]
},
{
"tb": 1920,
"tbk": 15,
"tl": 6952,
"mb": 384,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
284,
285,
286,
287,
288,
289,
290,
291,
292,
293,
294,
295,
296,
297,
298,
299,
300,
1061,
1062,
1063,
1064,
1065,
1066,
1067,
1068,
1069,
1070,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 20640,
"tbk": 26,
"tl": 472925,
"mb": 6144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1210,
1211,
1930,
1931,
1932,
1933,
1934,
1935,
1936,
1937,
1938,
1939,
1940,
1941,
1942,
1943,
1944,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859,
205,
206,
207
]
},
{
"tb": 120,
"tbk": 3,
"tl": 1297,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2380,
2381,
2382,
2383,
2384,
2385,
2386,
2387,
2387,
2388,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
1239,
1240,
181,
182,
183,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502
]
},
{
"tb": 768,
"tbk": 6,
"tl": 247702,
"mb": 640,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2905,
2906,
2907,
2908,
2909,
2910,
2911,
4085,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 96,
"tbk": 2,
"tl": 11007,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1967,
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1980,
1981,
1981,
1982,
1886,
1887,
1888,
1889,
1890,
1891,
1892,
1893,
1894,
1895,
1896,
1897,
1898,
1899,
1900,
1901,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 200,
"tbk": 1,
"tl": 54437,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3443,
3444,
3445,
3446,
3447,
3448,
3449,
3450,
3451,
3452,
3453,
3453,
3454,
1150,
1151,
1152,
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1164,
1165,
1396,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 604,
"tbk": 4,
"tl": 30,
"mb": 464,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1273,
1274,
1275,
1276,
1277,
1278,
1279,
1280,
1281,
1282,
1283,
1284,
1285,
1286,
1287,
1288,
1289,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1291,
1292,
1298,
1299,
1300,
1294,
1295,
1296,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
1308,
379
]
},
{
"tb": 200,
"tbk": 1,
"tl": 2648,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1384,
1385,
1386,
1387,
1388,
1389,
1390,
1391,
1392,
1393,
1394,
1394,
1395,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 512,
"tbk": 4,
"tl": 268,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
2431,
2432,
2433,
2434,
2435,
2436,
2437,
2438,
2439,
2440,
2441,
2442,
2443,
2444,
2445,
2446,
2447,
2448,
2449,
2450,
2451,
2452,
2453,
2454,
2455,
2446,
2447,
2449,
2456,
384,
129,
61,
99
]
},
{
"tb": 2566560,
"tbk": 96,
"tl": 1402461,
"mb": 492480,
"mbk": 4,
"gb": 492480,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
1913,
1914,
1915,
1916,
1917,
1918,
1919,
1920,
1921,
1922,
1923,
1924,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 80,
"tbk": 2,
"tl": 5,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
678,
679,
680,
681,
682,
683,
684,
685,
686,
687,
688,
689,
690,
691,
692,
693,
694,
695,
696,
697,
698,
699,
700,
701,
686,
702,
1250,
129,
113,
114
]
},
{
"tb": 300,
"tbk": 3,
"tl": 45,
"mb": 248,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1273,
1274,
1275,
1276,
1277,
1278,
1279,
1280,
1433,
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
1441,
1442,
1443,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
1250,
385,
61,
99
]
},
{
"tb": 896,
"tbk": 24,
"tl": 92,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 128,
"tbk": 8,
"tl": 24,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61
]
},
{
"tb": 128,
"tbk": 1,
"tl": 213,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
990,
991,
1744,
1745,
1250,
129,
113,
114
]
},
{
"tb": 1664,
"tbk": 11,
"tl": 541,
"mb": 1408,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
990,
991,
992,
993,
994,
995,
994,
996,
997,
998,
999,
1000,
1001,
1002,
1003,
1235,
99
]
},
{
"tb": 160,
"tbk": 5,
"tl": 14,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1236,
1237,
1238,
463,
464,
465,
466,
467,
468,
469,
470,
471,
472,
473,
474,
475,
476,
477,
478,
479,
480,
481,
482,
483,
484,
485,
486,
487,
488,
489,
490,
490,
491,
492,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 360,
"tbk": 1,
"tl": 2040,
"mb": 360,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
354,
355,
1006,
1007,
1008,
1009,
1010,
1011,
1012,
1013,
1014,
1015,
1016,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
447
]
},
{
"tb": 128,
"tbk": 1,
"tl": 180,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
990,
991,
1744,
1745,
1250,
385,
61,
99
]
},
{
"tb": 524,
"tbk": 2,
"tl": 22,
"mb": 524,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
4776,
4777,
4778,
4779,
4780,
4781,
4782,
4783,
4784,
236,
237,
238,
239,
240,
241,
242,
243,
244,
245,
246,
247,
248,
249,
250,
251,
252,
237,
238,
239,
240,
241,
242,
243,
247,
253,
254,
255,
1272
]
},
{
"tb": 2208,
"tbk": 6,
"tl": 18647,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1244,
1245,
1246,
1247,
1248,
1249,
268,
269,
270,
271,
272,
273,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
62
]
},
{
"tb": 832,
"tbk": 12,
"tl": 3,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207
]
},
{
"tb": 200,
"tbk": 5,
"tl": 1443,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
757,
758,
759,
760,
761,
762,
763,
764,
765,
646,
647,
648,
649,
650,
651,
652,
653,
654,
655,
656,
703,
704,
705,
706,
707,
708,
709,
710,
711,
712,
205,
206,
207,
713,
714,
654,
655,
656,
646,
647,
648,
649,
650,
651,
652,
653
]
},
{
"tb": 80,
"tbk": 2,
"tl": 117,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
757,
758,
759,
760,
761,
762,
763,
764,
765,
646,
647,
648,
649,
650,
651,
652,
653,
654,
655,
656,
703,
704,
705,
706,
707,
708,
709,
710,
711,
712,
205,
206,
207,
713,
714,
654,
655,
656,
657,
658,
659,
660,
661,
662,
663,
664,
665,
666,
667
]
},
{
"tb": 4464,
"tbk": 3,
"tl": 319,
"mb": 3000,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1463,
1464,
1465,
1466,
1467,
1468,
1469,
1470,
1471,
1472,
1473,
1474,
1475,
1476,
1477,
1478,
1479,
1480,
1481,
1482,
3418,
3419,
3420,
3421,
3422,
3423,
3424,
3425,
3426,
3427,
3428,
3429,
1497,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1502,
1506,
1507,
1508,
1509,
1510,
1511,
1512,
1513,
1514,
1515,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 240,
"tbk": 6,
"tl": 5,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2578,
2579,
2580,
2581,
2582,
2583,
2584,
2585,
2586,
2587,
2588,
2589,
2590,
2591,
2592,
2593,
2594,
2595,
2596,
2597,
2598,
2599,
2600,
967,
385,
61,
99
]
},
{
"tb": 8032,
"tbk": 9,
"tl": 1610,
"mb": 4368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4195,
4196,
4197,
4198,
4199,
4200,
4201,
4202,
4203,
4204,
4205,
4206,
4207,
4208,
4209,
4210,
4211,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 224,
"tbk": 3,
"tl": 1,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
1381,
1382,
1383,
567,
568,
569,
570,
379
]
},
{
"tb": 12216,
"tbk": 53,
"tl": 902,
"mb": 1536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1463,
1464,
1465,
1466,
1467,
1468,
1469,
1470,
1471,
1472,
1473,
1474,
1475,
1476,
1477,
1478,
1479,
1480,
1481,
1482,
1483,
1484,
1485,
1486,
1487,
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
823,
824,
825,
826,
827,
828,
829,
826,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 77696,
"tbk": 24,
"tl": 360985,
"mb": 38912,
"mbk": 3,
"gb": 38912,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
3942,
3943,
4112,
4113,
4114,
4115,
4116,
4117,
4118,
4119,
4120,
4121,
4122,
4123,
4124,
4125,
4126,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046
]
},
{
"tb": 972,
"tbk": 3,
"tl": 63,
"mb": 824,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
2234,
2235,
2236,
2237,
2238,
2239,
2240,
2241,
2241,
2242,
1222,
1223,
1224,
1225,
1226,
1227,
1228,
1229,
1230,
1231,
1232,
1233,
1234,
1235,
62
]
},
{
"tb": 288,
"tbk": 12,
"tl": 20,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
408,
407,
407,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 192,
"tbk": 2,
"tl": 10376,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2802,
2803,
2804,
2805,
2806,
2807,
2808,
2976,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 960,
"tbk": 8,
"tl": 5434,
"mb": 960,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
123,
124,
125,
113,
114
]
},
{
"tb": 288,
"tbk": 6,
"tl": 107,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
407,
407,
407,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 384,
"tbk": 3,
"tl": 945,
"mb": 384,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
865,
866,
1017,
385,
61,
62
]
},
{
"tb": 80,
"tbk": 2,
"tl": 434,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2380,
2381,
2382,
2383,
2384,
2385,
2386,
2387,
2387,
2388,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
1239,
1240,
181,
182,
183,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
1239,
1240
]
},
{
"tb": 6768,
"tbk": 28,
"tl": 524165,
"mb": 2376,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4223,
4224,
4225,
4226,
4227,
4228,
4229,
4230,
4231,
4232,
4233,
4234,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 96,
"tbk": 4,
"tl": 380,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
61
]
},
{
"tb": 120,
"tbk": 3,
"tl": 16,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
868,
869,
870,
871,
872,
873,
874,
875,
876,
877,
878,
879,
880,
881,
882,
883,
884,
885,
886,
887,
964,
965,
966,
1250,
385,
61,
62
]
},
{
"tb": 1104,
"tbk": 4,
"tl": 12315,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1138,
1139,
1140,
1141,
1142,
1143,
1144,
1145,
1146,
1147,
1148,
1149,
268,
269,
270,
271,
272,
273,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61,
62
]
},
{
"tb": 192,
"tbk": 1,
"tl": 29,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
257,
258,
259,
260,
261,
262,
263,
264,
265,
266,
267,
268,
269,
270,
271,
272,
273,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
283,
61,
62
]
},
{
"tb": 256,
"tbk": 6,
"tl": 3453,
"mb": 256,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
865,
866,
125,
61,
99
]
},
{
"tb": 192,
"tbk": 2,
"tl": 0,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
733,
734,
735,
736,
737,
738,
739,
740,
741,
742,
743,
744,
741,
745,
746,
747,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
113,
114
]
},
{
"tb": 144,
"tbk": 1,
"tl": 2725,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
16,
17,
18,
19,
20,
21,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 576,
"tbk": 5,
"tl": 129515,
"mb": 576,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
3364,
3365,
3366,
3367,
3368,
3369,
3370,
3371,
3372,
3373,
3374,
3375,
3376,
3377,
3378,
3366,
3367,
3368,
3369,
3370,
3371,
3372,
3373,
3374,
3376,
3379,
110,
111,
112,
61,
62
]
},
{
"tb": 127312,
"tbk": 4,
"tl": 118,
"mb": 71872,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
3099,
3100,
3183,
3184,
3185,
3186,
3187,
3188,
2542,
2543,
2544,
2984,
2985,
2986,
2987
]
},
{
"tb": 288,
"tbk": 6,
"tl": 6,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
312,
312,
313,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 800,
"tbk": 20,
"tl": 7368,
"mb": 160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
757,
758,
759,
760,
761,
762,
763,
764,
765,
646,
647,
648,
649,
650,
651,
652,
653,
654,
655,
656,
646,
647,
648,
649,
650,
651,
652,
653,
654,
655,
656,
657,
658,
659,
660,
661,
662,
663,
664,
665,
666,
667,
1569,
1570,
1571,
1572,
1573,
1574,
1575,
1576,
1577,
1578,
1766,
1767,
1768,
1769,
1770,
1771,
1772,
1773,
1774,
1775
]
},
{
"tb": 4176,
"tbk": 24,
"tl": 36719,
"mb": 1152,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2177,
2178,
2179,
2180,
2181,
2182,
2183,
2184,
2185,
2186,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 144,
"tbk": 3,
"tl": 2,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
313,
313,
312,
313,
312,
314,
315,
316
]
},
{
"tb": 1680,
"tbk": 15,
"tl": 14662,
"mb": 384,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
407,
409,
410,
411,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
62
]
},
{
"tb": 1920,
"tbk": 30,
"tl": 18670,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3976,
3977,
3978,
3979,
3980,
3981,
3982,
3983,
3984,
3985,
3986,
1349,
1350,
1351,
1352,
1353,
1354,
1355,
1356,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 192,
"tbk": 2,
"tl": 666,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
865,
866,
125,
61,
62
]
},
{
"tb": 320,
"tbk": 4,
"tl": 8,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
126,
127,
128,
129,
61,
99
]
},
{
"tb": 432,
"tbk": 3,
"tl": 157,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2256,
2257,
2258,
2259,
2260,
2261,
2262,
2263,
2264,
2265,
2266,
2267,
2268,
2269,
2270,
283,
113,
114
]
},
{
"tb": 256,
"tbk": 2,
"tl": 1130,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3154,
3155,
3156,
3157,
3158,
3159,
3160,
3161,
3162,
3163,
3164,
3165,
3166,
3167,
3168,
3169,
3170,
3171,
3172,
3173,
3174,
2995,
2996,
2997,
2998,
2999,
3000,
3001,
3002,
1579,
1580,
1581,
1582,
1583,
1584,
1585,
1586,
1763,
1764,
1765,
1579,
1580,
1581,
1582,
1583,
1584,
1585,
1586,
1763,
1764,
1765,
1579,
1580,
1581,
1582,
1583,
1584,
1585,
1586,
3003,
3004,
3005,
3006,
3007,
3008,
3009,
3010,
3011
]
},
{
"tb": 2688,
"tbk": 18,
"tl": 2931,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
3942,
3943,
4532,
4533,
4534,
4535,
4536,
4537,
4538,
4539,
4540,
4541,
4542,
4543,
4544,
4545,
4546,
4547,
4548,
4549,
4550,
4551,
4552,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 96,
"tbk": 1,
"tl": 201661,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1210,
1211,
1212,
1213,
1214,
1004,
1005
]
},
{
"tb": 48640,
"tbk": 32,
"tl": 20426007,
"mb": 48640,
"mbk": 32,
"gb": 48640,
"gbk": 32,
"eb": 48640,
"ebk": 32,
"fs": [
4836,
4837,
4838,
4839,
4840,
4841,
4842,
4843,
4844,
4845,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 1536,
"tbk": 8,
"tl": 111165,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3581,
3582,
3583,
3584,
3585,
3586,
3587,
3588,
3589,
3590,
4337,
4338,
4339,
4340,
4338,
4341,
4342,
1243,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 144,
"tbk": 6,
"tl": 555,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
113,
114
]
},
{
"tb": 12840,
"tbk": 535,
"tl": 584,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2484,
2485,
2486,
2487,
2488,
2489,
2490,
2491,
2492,
2493,
2494,
2495,
2496,
2497,
4149,
4150,
4151,
4152,
4153,
4154,
4155,
4156,
4157,
4154,
4158,
4159,
4160,
4161,
4162,
4163,
4164,
4165,
1497,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1502,
1506,
1507,
1508,
1509,
1510,
1511,
1512,
1513,
1514,
1515,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 64,
"tbk": 4,
"tl": 12,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61,
99
]
},
{
"tb": 288,
"tbk": 2,
"tl": 6197,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
268,
269,
270,
271,
272,
273,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
61,
99
]
},
{
"tb": 16,
"tbk": 2,
"tl": 5,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
380,
381,
382,
383,
384,
385,
61,
99
]
},
{
"tb": 96,
"tbk": 6,
"tl": 25,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
407,
408,
408,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 144,
"tbk": 1,
"tl": 242254,
"mb": 144,
"mbk": 1,
"gb": 144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
16,
17,
18,
19,
20,
21,
21,
22,
1150,
1151,
1152,
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1164,
1165,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 48,
"tbk": 3,
"tl": 9,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
113,
114
]
},
{
"tb": 672,
"tbk": 21,
"tl": 1845,
"mb": 672,
"mbk": 21,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
3725,
3726,
3727,
3728,
3729,
3730,
3731,
3732,
3729,
3733,
3734,
3735,
3736,
3737,
3738,
3739,
3201,
3202,
3203,
99
]
},
{
"tb": 1920,
"tbk": 30,
"tl": 3,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2721,
2722,
2723,
2724,
2725,
2726,
2727,
2728,
2729,
2730,
2731,
2732,
2733,
2302,
2303,
2304,
2305,
2306,
2307,
2308,
2309,
2310,
2311,
2312,
2313,
2314,
2315,
2316,
2317,
2318,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 1196,
"tbk": 3,
"tl": 41,
"mb": 1016,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
1658,
1659,
1660,
1661,
1662,
1663,
1664,
1664,
1665,
1666,
1667,
1668,
1669,
1670,
1671,
1672,
1673,
1667,
1674,
1675,
1676,
1669,
1670,
1671,
1677,
1678,
1679,
1680,
1681,
1682,
1683,
1684,
967,
385,
61,
62
]
},
{
"tb": 672,
"tbk": 1,
"tl": 63362,
"mb": 672,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
748,
749,
750,
751,
752,
753,
754,
755,
756,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
447
]
},
{
"tb": 128,
"tbk": 2,
"tl": 26,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2400,
2401,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 368,
"tbk": 1,
"tl": 35772,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1047,
1048,
1049,
1050,
1051,
1052,
723,
724,
725,
726,
727,
728,
729,
730,
731,
732,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
3313,
3314,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 288,
"tbk": 9,
"tl": 319,
"mb": 288,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
2343,
2344,
2345,
2346,
2347,
2348,
2349,
2350,
2347,
2351,
2352,
2353,
2354,
2355,
2356,
2357,
3201,
3202,
3203,
62
]
},
{
"tb": 524,
"tbk": 3,
"tl": 51,
"mb": 440,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
944,
945,
945,
946,
947,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
967,
129,
113,
114
]
},
{
"tb": 180,
"tbk": 1,
"tl": 101,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
3012,
3013,
3014,
3015,
3016,
3017,
3018,
3018,
3019,
1150,
1151,
1152,
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1164,
1165,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 280,
"tbk": 1,
"tl": 22,
"mb": 280,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
2810,
2811,
2812,
2813,
2814,
2815,
2816,
2817,
2817,
2818,
2819,
2820,
2821,
2822,
2823,
2824,
2825,
2819,
2820,
2826,
2827,
2828,
2822,
2823,
2824,
2829,
2830,
2831,
2832,
2833,
2834,
2835,
447
]
},
{
"tb": 640,
"tbk": 14,
"tl": 52,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4086,
4087,
4088,
4089,
4090,
4091,
4092,
4093,
4094,
4095,
4096,
4097,
4098,
4099,
4100,
4101,
4102,
4103,
4104,
4105,
4106,
4107,
1332,
1333,
1334,
1335
]
},
{
"tb": 112,
"tbk": 3,
"tl": 0,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
407,
409,
410,
411,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
283,
61,
62
]
},
{
"tb": 960,
"tbk": 30,
"tl": 3143,
"mb": 960,
"mbk": 30,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
3725,
3726,
3727,
3728,
3729,
3730,
3731,
3732,
3729,
3733,
3734,
3735,
3736,
3737,
3738,
3739,
1544,
1545,
1546,
1547
]
},
{
"tb": 2016,
"tbk": 18,
"tl": 12613,
"mb": 384,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
62
]
},
{
"tb": 2016,
"tbk": 54,
"tl": 18,
"mb": 208,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
312,
313,
312,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 96,
"tbk": 2,
"tl": 0,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
113,
114
]
},
{
"tb": 4032,
"tbk": 18,
"tl": 280043,
"mb": 1152,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1210,
1211,
4362,
4363,
4364,
4365,
4366,
4367,
4368,
4369,
4370,
4371,
4372,
4373,
4374,
4375,
4376,
4377,
4378,
4379,
4380,
4381,
4382,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 528,
"tbk": 11,
"tl": 14,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
313,
313,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 1296,
"tbk": 18,
"tl": 9,
"mb": 192,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
312,
312,
313,
312,
313,
313
]
},
{
"tb": 11664,
"tbk": 30,
"tl": 17907,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4212,
4213,
4214,
4215,
4216,
4217,
4218,
4219,
4220,
4221,
4222,
1696,
1697,
1698,
1699,
1700,
1701,
1702,
1703,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 160,
"tbk": 4,
"tl": 13632,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4166,
4167,
4168,
4169,
4170,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 288,
"tbk": 12,
"tl": 25,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
408,
408,
407,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 4199552,
"tbk": 4687,
"tl": 75854,
"mb": 1792,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1444,
1445,
1446,
1447,
1448,
1449,
1450,
1451,
2601,
2602,
2603,
2604,
2605,
2606,
2602,
2607,
2608,
2609,
2610,
2611,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 148,
"tbk": 1,
"tl": 11,
"mb": 148,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
3643,
3644,
3645,
3646,
3647,
3648,
3649,
3650,
3650,
3651,
3652,
3653,
3654,
3655,
3656,
3657,
3658,
3652,
3653,
3659,
3660,
3661,
3655,
3656,
3657,
3662,
3663,
3664,
3665,
3666,
3667,
3668,
379
]
},
{
"tb": 119112,
"tbk": 5,
"tl": 86,
"mb": 70272,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
791,
792,
793,
794,
795,
796,
797,
798,
2542,
2543,
2544,
2545,
2546,
2547,
2548
]
},
{
"tb": 4320,
"tbk": 24,
"tl": 12,
"mb": 768,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
407,
407,
408,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 768,
"tbk": 4,
"tl": 2873,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2014,
2015,
2016,
2017,
2018,
2019,
2020,
2021,
2022,
2023,
4434,
4435,
4436,
4437,
4435,
4438,
4439,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 288,
"tbk": 6,
"tl": 12,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
408,
408,
407,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 20800,
"tbk": 325,
"tl": 3445,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4266,
4267,
4268,
4269,
4270,
4271,
4272,
4273,
3082,
3083,
3084,
3085,
3086,
3087,
3088,
3088,
3089,
3090,
3090,
3091,
3092,
3093,
3094,
3095,
3096,
3097,
3098,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 400,
"tbk": 10,
"tl": 5129,
"mb": 160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2380,
2381,
2382,
2383,
2384,
2385,
2386,
2387,
2387,
2388,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
1239,
1240,
181,
182,
183,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 384,
"tbk": 3,
"tl": 848,
"mb": 384,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
865,
866,
867,
61,
62
]
},
{
"tb": 432,
"tbk": 6,
"tl": 3,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
313,
313,
312,
312,
313,
312
]
},
{
"tb": 165648,
"tbk": 14,
"tl": 393,
"mb": 25392,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3566,
3567,
3568,
3569,
3570,
3571,
3572,
3573,
3574,
3575,
3576,
3577,
3578,
3579,
3580,
3115,
3116,
3117,
3118
]
},
{
"tb": 240,
"tbk": 6,
"tl": 508662,
"mb": 120,
"mbk": 3,
"gb": 80,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
2765,
2766,
2767,
2768,
2769,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 528,
"tbk": 22,
"tl": 17,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
312,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 16,
"tbk": 1,
"tl": 4,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
407,
409,
410,
411,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
283,
113,
114
]
},
{
"tb": 240,
"tbk": 6,
"tl": 21648,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4274,
4275,
4276,
4277,
4278,
4279,
4280,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 720,
"tbk": 6,
"tl": 15005,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3669,
3670,
3671,
3672,
3673,
3674,
3675,
3676,
3677,
3678,
3679,
3680,
3681,
3682,
3683,
3684,
3685,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 680,
"tbk": 8,
"tl": 276790,
"mb": 560,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3686,
3687,
3688,
3689,
3690,
3691,
3692,
3693,
3694,
3695,
3696,
3697,
3698,
3699,
3700,
3701,
3702,
3703,
3704,
3692,
3693,
3695,
3705,
110,
111,
112,
113,
114
]
},
{
"tb": 64,
"tbk": 2,
"tl": 24,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
2243,
2244,
2245,
2246,
384,
385,
113,
114
]
},
{
"tb": 160,
"tbk": 4,
"tl": 18716,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
606,
607,
608,
609,
610,
611,
612,
613,
614,
615,
616,
616,
617,
618,
619,
620,
621,
622,
623,
624,
625,
626,
627,
628,
629,
630,
631,
632,
633,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 736,
"tbk": 2,
"tl": 6207,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1047,
1048,
1049,
1050,
1051,
1052,
268,
269,
270,
271,
272,
273,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
61,
99
]
},
{
"tb": 800,
"tbk": 5,
"tl": 2375,
"mb": 480,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
354,
355,
637,
638,
639,
640,
641,
642,
643,
644,
645,
703,
704,
705,
706,
707,
708,
709,
710,
711,
712,
205,
206,
207,
713,
714,
654,
655,
656,
703,
704,
705,
706,
707,
708,
709,
710,
711,
712,
205,
206,
207
]
},
{
"tb": 2016,
"tbk": 18,
"tl": 26,
"mb": 288,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
407,
408,
407,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 560,
"tbk": 1,
"tl": 8,
"mb": 560,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
2878,
2879,
2880,
2881,
2882,
2883,
2884,
2885,
2885,
2886,
2887,
2888,
2889,
2890,
2891,
2892,
2893,
2887,
2888,
2894,
2895,
2896,
2890,
2891,
2892,
2897,
2898,
2899,
2900,
2901,
2902,
2903,
2904,
379
]
},
{
"tb": 288,
"tbk": 6,
"tl": 84,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
407,
408,
407,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 80,
"tbk": 2,
"tl": 8402,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4166,
4167,
4168,
4169,
4170,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 288,
"tbk": 1,
"tl": 10975,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1967,
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1980,
1981,
1981,
1982,
1886,
1887,
1888,
1889,
1890,
1891,
1892,
1893,
1894,
1895,
1896,
1897,
1898,
1899,
1900,
1901,
929,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 680,
"tbk": 8,
"tl": 78378,
"mb": 560,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4038,
4039,
4040,
4041,
4042,
4043,
4044,
4045,
4046,
4047,
4048,
4049,
4050,
4051,
4052,
4053,
4054,
4055,
4056,
4044,
4045,
4047,
4057,
3361,
3362,
3363,
61,
99
]
},
{
"tb": 288,
"tbk": 6,
"tl": 12,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
407,
407,
408,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 32,
"tbk": 1,
"tl": 543,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
284,
285,
286,
287,
288,
289,
290,
291,
292,
293,
294,
295,
296,
297,
298,
299,
300,
290,
291,
292,
293,
294,
295,
296,
297,
298,
299,
300,
1061,
1062,
1063,
1064,
1065,
1066,
1067,
1068,
1069,
1070,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 48,
"tbk": 2,
"tl": 0,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
113,
114
]
},
{
"tb": 16,
"tbk": 2,
"tl": 6,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
380,
381,
382,
383,
384,
385,
113,
114
]
},
{
"tb": 120,
"tbk": 3,
"tl": 2,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2578,
2579,
2580,
2581,
2582,
2583,
2584,
2585,
2586,
2587,
2588,
2589,
2590,
2591,
2592,
2593,
2594,
2595,
2596,
2597,
2598,
2599,
2600,
967,
129,
61,
99
]
},
{
"tb": 288,
"tbk": 1,
"tl": 32,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
2792,
2793,
2794,
2795,
2796,
2797,
2798,
2799,
2799,
2800,
2801,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
128,
129,
61,
99
]
},
{
"tb": 2208,
"tbk": 6,
"tl": 207841,
"mb": 1104,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1047,
1048,
1049,
1050,
1051,
1052,
723,
724,
725,
726,
727,
728,
729,
730,
731,
732,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 192,
"tbk": 6,
"tl": 1571,
"mb": 192,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
123,
124,
1017,
385,
61,
99
]
},
{
"tb": 80,
"tbk": 2,
"tl": 83,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
571,
572,
573,
574,
575,
576,
577,
578,
579,
580,
581,
582,
583,
584,
585,
586,
577,
578,
580,
587,
384,
385,
61,
62
]
},
{
"tb": 240,
"tbk": 5,
"tl": 11,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550
]
},
{
"tb": 40,
"tbk": 1,
"tl": 128,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
757,
758,
759,
760,
761,
762,
763,
764,
765,
703,
704,
705,
706,
707,
708,
709,
710,
711,
712,
205,
206,
207,
713,
714,
654,
655,
656,
657,
658,
659,
660,
661,
662,
663,
664,
665,
666,
667,
715,
716,
717,
718,
719,
720,
721,
722,
4846,
4847,
4848
]
},
{
"tb": 20792,
"tbk": 206,
"tl": 528395,
"mb": 2048,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1018,
1019,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 540,
"tbk": 3,
"tl": 502,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
3514,
3515,
3516,
3517,
3518,
3519,
3520,
3520,
3521,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 2592,
"tbk": 18,
"tl": 18191,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
1373,
1374,
1375,
1376,
1377,
1378,
1379,
1380,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 45272,
"tbk": 227,
"tl": 11224099,
"mb": 17424,
"mbk": 66,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2953,
2954,
2955,
2956,
2957,
2958,
2959,
2960,
2961,
2962,
2963,
2964,
2965,
2966,
2967,
2968,
2969,
2970,
2960,
2961,
2971,
2972,
2973,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 180,
"tbk": 1,
"tl": 109,
"mb": 180,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
766,
767,
768,
769,
770,
771,
772,
773,
774,
775,
776,
777,
778,
779,
780,
780,
781,
913,
914,
915,
916,
917,
918,
919,
920,
921,
922,
923,
924,
925,
926,
927,
928,
929,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 48,
"tbk": 3,
"tl": 10,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
313,
313,
312,
313,
312,
312
]
},
{
"tb": 640,
"tbk": 20,
"tl": 8,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
3965,
3966,
3967,
3968,
3969,
3970,
3971,
3972,
3973,
3974,
3975,
3196,
3197,
3198,
3199,
3200,
1544,
1545,
1546,
1547
]
},
{
"tb": 236,
"tbk": 2,
"tl": 18,
"mb": 236,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
944,
945,
945,
946,
947,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
128,
129,
61,
62
]
},
{
"tb": 320,
"tbk": 4,
"tl": 497,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
126,
127,
1250,
385,
61,
62
]
},
{
"tb": 1296,
"tbk": 18,
"tl": 8,
"mb": 144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
312,
313,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 288,
"tbk": 1,
"tl": 167,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2749,
2750,
2751,
2752,
2753,
2754,
2755,
2756,
2757,
2758,
2759,
2760,
2761,
2762,
2763,
2763,
2764,
913,
914,
915,
916,
917,
918,
919,
920,
921,
922,
923,
924,
925,
926,
927,
928,
929,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 535680,
"tbk": 1,
"tl": 127,
"mb": 535680,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
2533,
2534,
2535,
2536,
2537,
2538,
2539,
2540,
2541,
3769,
3770,
3771,
3772
]
},
{
"tb": 960,
"tbk": 30,
"tl": 2924,
"mb": 960,
"mbk": 30,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
1217,
1218,
1219,
1220,
1220,
1221,
1222,
1223,
1224,
1225,
1226,
1227,
1228,
1229,
1230,
1231,
1232,
1233,
1234,
1004,
1005
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
4849,
4850,
4851,
4852,
4853,
4854,
4855,
4856,
4857,
4858,
4859
]
},
{
"tb": 240,
"tbk": 5,
"tl": 1,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
407,
409,
410,
411,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
99
]
},
{
"tb": 160,
"tbk": 4,
"tl": 1437,
"mb": 80,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
757,
758,
759,
760,
761,
762,
763,
764,
765,
646,
647,
648,
649,
650,
651,
652,
653,
654,
655,
656,
646,
647,
648,
649,
650,
651,
652,
653,
654,
655,
656,
657,
658,
659,
660,
661,
662,
663,
664,
665,
666,
667,
715,
716,
717,
718,
719,
720,
721,
722,
4846,
4847,
4848
]
},
{
"tb": 368,
"tbk": 1,
"tl": 35761,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1244,
1245,
1246,
1247,
1248,
1249,
723,
724,
725,
726,
727,
728,
729,
730,
731,
732,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
205,
206,
207,
3313,
3314,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 288,
"tbk": 1,
"tl": 27,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
2792,
2793,
2794,
2795,
2796,
2797,
2798,
2799,
2799,
2800,
2801,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
1250,
385,
61,
99
]
},
{
"tb": 192,
"tbk": 6,
"tl": 63,
"mb": 192,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
1217,
1218,
1219,
1220,
1220,
1221,
1222,
1223,
1224,
1225,
1226,
1227,
1228,
1229,
1230,
1231,
1232,
1233,
1234,
384,
385,
61,
99
]
},
{
"tb": 112,
"tbk": 7,
"tl": 24,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
312,
313,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 176,
"tbk": 11,
"tl": 39,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
312,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 30888,
"tbk": 9,
"tl": 15678,
"mb": 11856,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2649,
2650,
2651,
2652,
2653,
2654,
2655,
2656,
2657,
2658,
2659,
2660,
2661,
2662,
2663,
2664,
2665,
1497,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1502,
1506,
1507,
1508,
1509,
1510,
1511,
1512,
1513,
1514,
1515,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 896,
"tbk": 6,
"tl": 92448,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
561,
562,
563,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 864,
"tbk": 3,
"tl": 265796,
"mb": 864,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1138,
1139,
1140,
1141,
1142,
1143,
1144,
1145,
1146,
1147,
1148,
1149,
75,
76,
77,
78,
79,
80,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 2664,
"tbk": 36,
"tl": 16,
"mb": 216,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
313,
313,
312,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 560,
"tbk": 15,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
407,
409,
410,
411,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
113,
114
]
},
{
"tb": 64,
"tbk": 4,
"tl": 14,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
313,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 240,
"tbk": 5,
"tl": 1,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
408,
409,
410,
411,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
113,
114
]
},
{
"tb": 456840,
"tbk": 8,
"tl": 355,
"mb": 240768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
790,
791,
792,
3206,
3207,
3208,
3209,
3210,
3211,
2542,
2543,
2544,
3115,
3116,
3117,
3118
]
},
{
"tb": 1512,
"tbk": 1,
"tl": 20,
"mb": 1512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2612,
2613,
2614,
2615,
2616,
2617,
2618,
2619,
2620,
2621,
2622,
2623,
2624,
2625,
2626,
2627,
2628,
2629,
2630,
1483,
1484,
1485,
1486,
1487,
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
1497,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1502,
1506,
1507,
1508,
1509,
1510,
1511,
1512,
1513,
1514,
1515,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207
]
},
{
"tb": 576,
"tbk": 4,
"tl": 12450,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
268,
269,
270,
271,
272,
273,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61,
99
]
},
{
"tb": 2640,
"tbk": 1,
"tl": 40,
"mb": 2640,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
588,
589,
590,
591,
592,
593,
594,
595,
596,
597,
598,
599,
600,
601,
602,
603,
604,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
379
]
},
{
"tb": 144,
"tbk": 1,
"tl": 126065,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
16,
17,
18,
19,
20,
21,
21,
22,
1150,
1151,
1152,
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1164,
1165,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 800,
"tbk": 4,
"tl": 13279,
"mb": 400,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3391,
3392,
3393,
3394,
3395,
1243,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 288,
"tbk": 18,
"tl": 1707,
"mb": 32,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4067,
4068,
4069,
4070,
4071,
4072,
4073,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 192,
"tbk": 12,
"tl": 47,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
312,
312,
312,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 864,
"tbk": 6,
"tl": 520082,
"mb": 432,
"mbk": 3,
"gb": 288,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
3740,
3741,
3742,
3743,
3744,
3745,
3746,
3747,
3748,
3749,
3750,
3751,
3752,
3753,
3754,
3755,
3756,
3757,
3758,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 41920,
"tbk": 97,
"tl": 422344,
"mb": 4096,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
803,
804,
805,
806,
807,
808,
809,
810,
811,
812,
813,
814,
811,
815,
816,
817,
818,
819,
820,
821,
822,
823,
824,
825,
826,
827,
828,
829,
826,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 524,
"tbk": 2,
"tl": 82,
"mb": 524,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2691,
2692,
2693,
2694,
2695,
2696,
2697,
2698,
2699,
2700,
2701,
2702,
2703,
2704,
2705,
2706,
2707,
2708,
2709,
2710,
2707,
2711,
2712,
2713,
2714,
2715,
2716,
2717,
2718,
2719,
2720,
447
]
},
{
"tb": 256,
"tbk": 2,
"tl": 0,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
990,
991,
1744,
1745,
128,
385,
61,
62
]
},
{
"tb": 100288,
"tbk": 1567,
"tl": 2932,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3383,
3384,
3385,
3386,
3387,
3388,
3389,
3390,
3082,
3083,
3084,
3085,
3086,
3087,
3088,
3088,
3089,
3090,
3090,
3091,
3092,
3093,
3094,
3095,
3096,
3097,
3098,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 1784,
"tbk": 31,
"tl": 9490,
"mb": 224,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
313,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 16,
"tbk": 1,
"tl": 5,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
113,
114
]
},
{
"tb": 800,
"tbk": 4,
"tl": 13417,
"mb": 400,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1925,
1926,
1927,
1928,
1929,
1243,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 32768,
"tbk": 32,
"tl": 20461308,
"mb": 32768,
"mbk": 32,
"gb": 32768,
"gbk": 32,
"eb": 32768,
"ebk": 32,
"fs": [
4860,
4861,
4862,
4863,
4864,
4865,
4866,
4867,
4868,
4869,
4868,
4870,
4871,
4872,
4873,
4874,
4875,
4876,
4877,
4878,
529,
530,
531,
532,
533,
534,
535,
536,
537,
538,
539,
540,
541,
542,
543,
544,
545,
546,
547,
548,
548,
549,
550,
551,
552,
553,
554,
555,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
556
]
},
{
"tb": 128,
"tbk": 4,
"tl": 2558413,
"mb": 128,
"mbk": 4,
"gb": 128,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
3859,
3860,
3861,
3862,
3863,
3864,
3865,
3866,
3867,
3868,
3869,
1272
]
},
{
"tb": 48,
"tbk": 2,
"tl": 0,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
61,
62
]
},
{
"tb": 1920,
"tbk": 30,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2721,
2722,
2723,
2724,
2725,
2726,
2727,
2728,
2729,
2730,
2731,
2732,
2733,
2302,
2303,
2304,
2305,
2306,
2307,
2308,
2309,
2310,
2311,
2312,
2313,
2314,
2315,
2316,
2317,
2318,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 480,
"tbk": 2,
"tl": 32,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
557,
558,
559,
560,
125,
113,
114
]
},
{
"tb": 112,
"tbk": 7,
"tl": 25,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
313,
313,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 160,
"tbk": 5,
"tl": 337,
"mb": 160,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
4127,
4128,
4129,
4130,
4130,
4131,
4132,
4133,
4134,
4135,
4136,
4137,
4138,
4132,
4133,
4139,
4140,
4141,
4135,
4136,
4137,
4142,
4143,
4144,
4145,
4146,
4147,
4148,
155
]
},
{
"tb": 768,
"tbk": 4,
"tl": 3002,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3581,
3582,
3583,
3584,
3585,
3586,
3587,
3588,
3589,
3590,
4337,
4338,
4339,
4340,
4338,
4341,
4342,
1396,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 1536,
"tbk": 8,
"tl": 29552,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2014,
2015,
2016,
2017,
2018,
2019,
2020,
2021,
2022,
2023,
4434,
4435,
4436,
4437,
4435,
4438,
4439,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 7904,
"tbk": 8,
"tl": 136,
"mb": 1976,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2048,
2049,
2050,
2051,
2052,
2053,
2054,
2055,
2056,
2057,
2058,
2059,
2060,
3455,
3456,
3457,
3458,
3459,
3460,
3461,
3462,
3463,
3464,
3465,
3466,
3467,
3468,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 513312,
"tbk": 96,
"tl": 1407163,
"mb": 98496,
"mbk": 4,
"gb": 98496,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1210,
1211,
1930,
1931,
1932,
1933,
1934,
1935,
1936,
1937,
1938,
1939,
1940,
1941,
1942,
1943,
1944,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 96,
"tbk": 3,
"tl": 101,
"mb": 96,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
3870,
3871,
3872,
3873,
3873,
3874,
3875,
3876,
3877,
3878,
3879,
3880,
3881,
3875,
3876,
3882,
3883,
3884,
3878,
3879,
3880,
3885,
3886,
3887,
3888,
1655,
1656,
1657,
99
]
},
{
"tb": 480,
"tbk": 2,
"tl": 308,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
557,
558,
1872,
1873,
1017,
385,
61,
62
]
},
{
"tb": 320,
"tbk": 16,
"tl": 2,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2212,
2213,
2214,
2215,
2216,
2217,
2218,
2219,
2220,
2221,
2222,
2223,
2224,
2225,
2226,
2227,
2228,
2229,
2230,
556
]
},
{
"tb": 160,
"tbk": 5,
"tl": 243,
"mb": 160,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
3870,
3871,
3872,
3873,
3873,
3874,
3875,
3876,
3877,
3878,
3879,
3880,
3881,
3875,
3876,
3882,
3883,
3884,
3878,
3879,
3880,
3885,
3886,
3887,
3888,
1332,
1333,
1334,
1335
]
},
{
"tb": 280,
"tbk": 1,
"tl": 3680,
"mb": 280,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
503,
504,
505,
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
516,
517,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
283,
61,
99
]
},
{
"tb": 864,
"tbk": 18,
"tl": 15,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
313,
313,
313,
312,
313,
312
]
},
{
"tb": 992,
"tbk": 28,
"tl": 2135229,
"mb": 224,
"mbk": 6,
"gb": 224,
"gbk": 6,
"eb": 0,
"ebk": 0,
"fs": [
3816,
3817,
3818,
3819,
3820,
3821,
3822,
3823,
3824,
3825,
3826,
3827,
3828,
3829,
3830,
3831,
3832,
3833,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 41544,
"tbk": 4,
"tl": 5358,
"mb": 34832,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4195,
4196,
4197,
4198,
4199,
4200,
4201,
4202,
4203,
4204,
4205,
4206,
4207,
4208,
4209,
4210,
4211,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
205,
206,
207
]
},
{
"tb": 160,
"tbk": 1,
"tl": 326,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
557,
558,
1872,
1873,
1017,
129,
61,
62
]
},
{
"tb": 80,
"tbk": 5,
"tl": 14,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
407,
409,
410,
411,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
113,
114
]
},
{
"tb": 576,
"tbk": 5,
"tl": 46444,
"mb": 576,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
968,
969,
970,
971,
972,
4395,
4396,
4397,
4398,
4399,
4400,
4401,
4402,
4403,
4404,
4405,
4406,
4407,
4408,
4409,
4397,
4398,
4399,
4400,
4401,
4402,
4403,
4404,
4405,
4407,
4410,
3361,
3362,
3363,
61,
99
]
},
{
"tb": 384,
"tbk": 2,
"tl": 0,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4440,
4441,
4442,
4443,
4444,
4445,
4446,
4447,
4448,
4449,
4450,
4451,
4452,
4453,
4454,
4455,
4760,
4761,
4762,
4763,
4764,
4765,
4766,
4767,
4768,
4769,
4770,
4771,
4772,
4773,
4763,
4764,
4765,
4774,
4775
]
},
{
"tb": 200,
"tbk": 1,
"tl": 639675,
"mb": 200,
"mbk": 1,
"gb": 200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
4879,
4880,
4881,
4882,
4883,
4884,
4885,
4886,
4887,
4888
]
},
{
"tb": 11664,
"tbk": 30,
"tl": 18656,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4212,
4213,
4214,
4215,
4216,
4217,
4218,
4219,
4220,
4221,
4222,
1696,
1697,
1698,
1699,
1700,
1701,
1702,
1703,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 144,
"tbk": 6,
"tl": 582,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
313,
313,
312,
312,
313,
313,
312,
313
]
},
{
"tb": 128,
"tbk": 3,
"tl": 2310,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2988,
2989,
2990,
2991,
2992,
2993,
2994,
2995,
2996,
2997,
2998,
2999,
3000,
3001,
3002,
1579,
1580,
1581,
1582,
1583,
1584,
1585,
1586,
1763,
1764,
1765,
1579,
1580,
1581,
1582,
1583,
1584,
1585,
1586,
1763,
1764,
1765,
1766,
1767,
1768,
1769,
1770,
1771,
1772,
1773,
1774,
1775,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 70560,
"tbk": 30,
"tl": 2485,
"mb": 3120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3797,
3798,
3799,
3800,
3801,
3802,
3803,
4304,
4305,
4306,
4307,
4308,
4309,
4310,
4311,
4312,
4313,
4314,
4315,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 200,
"tbk": 1,
"tl": 126041,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1384,
1385,
1386,
1387,
1388,
1389,
1390,
1391,
1392,
1393,
1394,
1394,
1395,
1150,
1151,
1152,
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1164,
1165,
98,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 8064,
"tbk": 18,
"tl": 13216,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2187,
2188,
2189,
2190,
2191,
2192,
2193,
2194,
2195,
2196,
2197,
2198,
2199,
2200,
2201,
2202,
2203,
2204,
2205,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 96,
"tbk": 6,
"tl": 85,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
408,
407,
407,
407,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 80,
"tbk": 2,
"tl": 13,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
868,
869,
870,
871,
872,
873,
874,
875,
876,
877,
878,
879,
880,
881,
882,
883,
884,
885,
886,
887,
964,
965,
966,
128,
385,
61,
62
]
},
{
"tb": 96,
"tbk": 2,
"tl": 282121,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1397,
1398,
1399,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 192,
"tbk": 2,
"tl": 593,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
123,
124,
1017,
129,
61,
99
]
},
{
"tb": 128,
"tbk": 3,
"tl": 2649,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2988,
2989,
2990,
2991,
2992,
2993,
2994,
3353,
3354,
3355,
3356,
3357,
3358,
3359,
3360,
290,
291,
292,
293,
294,
295,
296,
297,
298,
299,
300,
290,
291,
292,
293,
294,
295,
296,
297,
298,
299,
300,
1061,
1062,
1063,
1064,
1065,
1066,
1067,
1068,
1069,
1070,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 160,
"tbk": 1,
"tl": 31,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
557,
558,
559,
560,
867,
61,
62
]
},
{
"tb": 200,
"tbk": 1,
"tl": 61968,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
354,
355,
356,
357,
358,
359,
360,
361,
362,
363,
364,
365,
366,
605,
61,
99
]
},
{
"tb": 576,
"tbk": 12,
"tl": 11,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
313,
313,
313,
312,
313,
314,
315,
316
]
},
{
"tb": 144,
"tbk": 3,
"tl": 13843,
"mb": 144,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1967,
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1980,
1981,
1981,
1982,
618,
619,
620,
621,
622,
623,
624,
625,
626,
627,
628,
629,
630,
631,
632,
633,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 384,
"tbk": 8,
"tl": 3,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61
]
},
{
"tb": 1104,
"tbk": 3,
"tl": 267451,
"mb": 1104,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1047,
1048,
1049,
1050,
1051,
1052,
75,
76,
77,
78,
79,
80,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
39,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 96,
"tbk": 2,
"tl": 10420,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1967,
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1980,
1981,
1981,
1982,
1886,
1887,
1888,
1889,
1890,
1891,
1892,
1893,
1894,
1895,
1896,
1897,
1898,
1899,
1900,
1901,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 1152,
"tbk": 6,
"tl": 13412,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2014,
2015,
2016,
2017,
2018,
2019,
2020,
2021,
2022,
2023,
2024,
2025,
2026,
2027,
2025,
2028,
2029,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 27776,
"tbk": 434,
"tl": 15967,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4505,
4506,
4507,
4508,
4509,
4510,
4511,
4512,
4513,
4514,
4515,
4516,
4517,
4518,
4519,
4520,
4521,
4522,
4523,
4524,
4525,
4526,
4516,
4527,
4518,
4519,
4520,
4521,
4522,
4528,
4524,
4525,
4529,
4530,
4531,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850
]
},
{
"tb": 288,
"tbk": 9,
"tl": 77861,
"mb": 288,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2006,
2007,
2008,
2009,
2010,
2011,
2012,
2008,
2009,
2010,
2013,
283,
61,
99
]
},
{
"tb": 6048,
"tbk": 54,
"tl": 18,
"mb": 624,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
312,
313,
312,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 16,
"tbk": 1,
"tl": 4,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
61,
62
]
},
{
"tb": 40,
"tbk": 1,
"tl": 10393,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1874,
1875,
1876,
1877,
1878,
1879,
1880,
1881,
1882,
1883,
1884,
1884,
1885,
1886,
1887,
1888,
1889,
1890,
1891,
1892,
1893,
1894,
1895,
1896,
1897,
1898,
1899,
1900,
1901,
929,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 5992,
"tbk": 10,
"tl": 131,
"mb": 1312,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2048,
2049,
2050,
2051,
2052,
2053,
2054,
2055,
2056,
2057,
2058,
2059,
2060,
2061,
2062,
2063,
2064,
2065,
2066,
2067,
2068,
2069,
2070,
2071,
2072,
2073,
2074,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 300,
"tbk": 3,
"tl": 61,
"mb": 248,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1273,
1274,
1275,
1276,
1277,
1278,
1279,
1280,
1433,
1434,
1435,
1436,
1437,
1438,
1439,
1440,
1441,
1441,
1442,
1443,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
1250,
129,
61,
99
]
},
{
"tb": 128,
"tbk": 1,
"tl": 639673,
"mb": 128,
"mbk": 1,
"gb": 128,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
4889,
4890,
4891,
4892,
4893
]
},
{
"tb": 720,
"tbk": 15,
"tl": 29,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
312,
313,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 160,
"tbk": 5,
"tl": 108,
"mb": 160,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
3396,
3397,
3398,
3399,
3399,
3400,
3401,
3402,
3403,
3404,
3405,
3406,
3407,
3401,
3402,
3408,
3409,
3410,
3404,
3405,
3406,
3411,
3412,
3413,
3414,
3415,
3416,
3417,
447
]
},
{
"tb": 560,
"tbk": 15,
"tl": 64,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550,
397,
398,
399,
400,
401,
402,
403,
404,
1548,
1549,
1550
]
},
{
"tb": 96,
"tbk": 2,
"tl": 10858,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1967,
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1980,
1981,
1981,
1982,
1886,
1887,
1888,
1889,
1890,
1891,
1892,
1893,
1894,
1895,
1896,
1897,
1898,
1899,
1900,
1901,
980,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 576,
"tbk": 3,
"tl": 51,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
257,
258,
259,
260,
261,
262,
263,
264,
265,
266,
267,
4894,
4895,
4896,
4897,
4898,
4899,
4900,
4901,
4902,
4903,
4904,
4905,
256
]
},
{
"tb": 288,
"tbk": 12,
"tl": 52,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
408,
408,
408,
407,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 152,
"tbk": 1,
"tl": 9676,
"mb": 152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
930,
931,
932,
933,
934,
935,
936,
937,
1166,
1167,
1168,
1169,
1170,
3315,
3316,
3317,
3318,
3319,
322,
61,
62
]
},
{
"tb": 1536,
"tbk": 8,
"tl": 108889,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3581,
3582,
3583,
3584,
3585,
3586,
3587,
3588,
3589,
3590,
4337,
4338,
4339,
4340,
4338,
4341,
4342,
1243,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 240,
"tbk": 15,
"tl": 49,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
312,
313,
313,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 300,
"tbk": 3,
"tl": 18,
"mb": 248,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1273,
1274,
1275,
1276,
1277,
1278,
1279,
1280,
1281,
1282,
1283,
1284,
1285,
1286,
1287,
1288,
1289,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1291,
1292,
1298,
1299,
1300,
1294,
1295,
1296,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
1308,
1410
]
},
{
"tb": 1008,
"tbk": 14,
"tl": 6,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
312,
312,
312,
312,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 3456,
"tbk": 54,
"tl": 124013,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
68,
69,
70,
72,
73,
74,
981,
982,
983,
984,
985,
986,
987,
988,
984,
985,
986,
989,
283,
113,
114
]
},
{
"tb": 224,
"tbk": 3,
"tl": 47,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1215,
1216,
2243,
2244,
2245,
2246,
1004,
1005
]
},
{
"tb": 116544,
"tbk": 24,
"tl": 360783,
"mb": 58368,
"mbk": 3,
"gb": 58368,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
1210,
1211,
3600,
3601,
3602,
3603,
3604,
3605,
3606,
3607,
3608,
3609,
3610,
3611,
3612,
3613,
3614,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046
]
},
{
"tb": 300,
"tbk": 3,
"tl": 26,
"mb": 248,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1273,
1274,
1275,
1276,
1277,
1278,
1279,
1280,
1309,
1310,
1311,
1312,
1313,
1314,
1315,
1316,
1316,
1317,
1318,
1319,
1320,
1321,
1322,
1323,
1324,
1318,
1319,
1325,
1326,
1327,
1321,
1322,
1323,
1328,
1329,
1330,
1331,
1655,
1656,
1657,
62
]
},
{
"tb": 560,
"tbk": 8,
"tl": 98272,
"mb": 480,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4038,
4039,
4040,
4041,
4042,
4043,
4044,
4045,
4046,
4047,
4048,
4049,
4050,
4051,
4052,
4053,
4054,
4055,
4056,
4044,
4045,
4047,
4057,
2107,
2108,
2109,
61,
99
]
},
{
"tb": 4032,
"tbk": 36,
"tl": 4061,
"mb": 432,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
313,
313,
312,
313,
312,
312
]
},
{
"tb": 240,
"tbk": 4,
"tl": 8537,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3987,
3988,
3989,
3990,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 400,
"tbk": 2,
"tl": 8281,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3391,
3392,
3393,
3394,
3395,
1396,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 288,
"tbk": 6,
"tl": 6,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
312,
313,
313,
312,
312,
313,
313
]
},
{
"tb": 288,
"tbk": 6,
"tl": 319,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
408,
407,
408,
408,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 240,
"tbk": 5,
"tl": 4,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
312,
313,
312,
313,
313,
314,
315,
316,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 128,
"tbk": 1,
"tl": 249,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
990,
991,
1744,
1745,
1250,
385,
61,
62
]
},
{
"tb": 32768,
"tbk": 32,
"tl": 20453594,
"mb": 32768,
"mbk": 32,
"gb": 32768,
"gbk": 32,
"eb": 32768,
"ebk": 32,
"fs": [
4906,
4907,
4908,
4909,
4910,
4911,
4912,
4913,
4914,
4915,
4914,
4916,
4917,
4560,
4561,
4562,
4563,
4564,
4565,
4566,
529,
530,
531,
532,
533,
534,
535,
536,
537,
538,
539,
540,
541,
542,
543,
544,
545,
546,
547,
548,
548,
549,
550,
551,
552,
553,
554,
555,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
378,
556
]
},
{
"tb": 864,
"tbk": 12,
"tl": 19,
"mb": 144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1336,
1337,
407,
408,
408,
408,
408,
409,
410,
411,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 192,
"tbk": 2,
"tl": 0,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1195,
1196,
1197,
1198,
1199,
1200,
1201,
1202,
1203,
1204,
1205,
1206,
1203,
1207,
1208,
1209,
448,
449,
450,
451,
452,
453,
454,
455,
451,
452,
453,
456,
322,
61,
62
]
},
{
"tb": 128,
"tbk": 4,
"tl": 1073,
"mb": 128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
121,
122,
2851,
2852,
1017,
129,
113,
114
]
},
{
"tb": 40480,
"tbk": 4,
"tl": 234,
"mb": 17376,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3246,
3247,
3248,
3249,
3250,
3251,
3252,
3253,
3254,
3255,
3256,
3257,
3258,
3259,
3260,
909,
910,
911,
912
]
},
{
"tb": 96,
"tbk": 6,
"tl": 18,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
310,
311,
312,
312,
314,
315,
316,
317,
318,
319,
320,
321,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
283,
113,
114
]
},
{
"tb": 1196,
"tbk": 5,
"tl": 38,
"mb": 896,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1273,
1274,
1275,
1276,
1277,
1278,
1279,
1280,
1281,
1282,
1283,
1284,
1285,
1286,
1287,
1288,
1289,
1289,
1290,
1291,
1292,
1293,
1294,
1295,
1296,
1297,
1291,
1292,
1298,
1299,
1300,
1294,
1295,
1296,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
1308,
155
]
},
{
"tb": 32,
"tbk": 1,
"tl": 634794,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3773,
3774,
3775,
3776,
3777,
3778,
3779,
3780,
3781,
3782,
3783,
3784,
256
]
},
{
"tb": 80,
"tbk": 2,
"tl": 0,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2578,
2579,
2580,
2581,
2582,
2583,
2584,
2585,
2586,
2587,
2588,
2589,
2590,
2591,
2592,
2593,
2594,
2595,
2596,
2597,
2598,
2599,
2600,
128,
385,
61,
99
]
},
{
"tb": 192,
"tbk": 3,
"tl": 2016,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
352,
353,
2942,
2943,
2944,
2945,
2946,
2947,
2948,
2949,
2950,
2950,
2951,
2952,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
197,
198,
199,
200,
201,
202,
203,
204,
205,
206,
207,
1239,
1240
]
},
{
"tb": 800,
"tbk": 7,
"tl": 2549,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3154,
3155,
3156,
3157,
3158,
3159,
3160,
3161,
3162,
3163,
3164,
3165,
3166,
3167,
3168,
3169,
3170,
3171,
3172,
3173,
3174,
3353,
3354,
3355,
3356,
3357,
3358,
3359,
3360,
290,
291,
292,
293,
294,
295,
296,
297,
298,
299,
300,
290,
291,
292,
293,
294,
295,
296,
297,
301,
302,
303,
304,
305,
306,
307,
308,
309,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 200,
"tbk": 1,
"tl": 634838,
"mb": 200,
"mbk": 1,
"gb": 200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
4918,
4919,
4920,
4921,
4922,
4923,
4924,
4925,
4926,
4927
]
},
{
"tb": 1216,
"tbk": 14,
"tl": 1,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
733,
734,
735,
736,
737,
738,
739,
740,
741,
742,
743,
744,
741,
745,
746,
747,
274,
275,
276,
277,
278,
279,
280,
281,
277,
278,
279,
282,
322,
113,
114
]
},
{
"tb": 2044,
"tbk": 4,
"tl": 140,
"mb": 1616,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
2234,
2235,
2236,
2237,
2238,
2239,
2240,
2241,
2241,
2242,
1222,
1223,
1224,
1225,
1226,
1227,
1228,
1229,
1230,
1231,
1232,
1233,
1234,
1235,
99
]
},
{
"tb": 128,
"tbk": 2,
"tl": 21,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2400,
2401,
634,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
113,
114
]
},
{
"tb": 400,
"tbk": 2,
"tl": 46024,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1384,
1385,
1386,
1387,
1388,
1389,
1390,
1391,
1392,
1393,
1394,
1394,
1395,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
1243,
40,
41,
42,
43,
40,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
99
]
},
{
"tb": 288,
"tbk": 9,
"tl": 489525,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3816,
3817,
3818,
3819,
3820,
3821,
3822,
3823,
3824,
3825,
3826,
3827,
3828,
3829,
3830,
3831,
3832,
3833,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
840,
841,
842,
843,
844,
845,
846,
847,
851,
852,
853,
854,
855,
856,
857,
858,
859,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
221,
222
]
},
{
"tb": 148,
"tbk": 1,
"tl": 24,
"mb": 148,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1609,
1610,
1611,
1612,
1613,
1614,
1615,
1616,
1617,
1618,
1619,
1620,
1621,
1622,
1623,
1624,
1625,
1626,
1627,
1628,
1629,
1630,
1631,
384,
385,
113,
114
]
},
{
"tb": 120,
"tbk": 3,
"tl": 865,
"mb": 120,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
757,
758,
759,
760,
761,
762,
763,
764,
765,
703,
704,
705,
706,
707,
708,
709,
710,
711,
712,
205,
206,
207,
713,
714,
654,
655,
656,
657,
658,
659,
660,
661,
662,
663,
664,
665,
666,
667,
1569,
1570,
1571,
1572,
1573,
1574,
1575,
1576,
1577,
1578,
1766,
1767,
1768,
1769,
1770,
1771,
1772,
1773,
1774,
1775
]
},
{
"tb": 120,
"tbk": 3,
"tl": 19,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
868,
869,
870,
871,
872,
873,
874,
875,
876,
877,
878,
879,
880,
881,
882,
883,
884,
885,
886,
887,
964,
965,
966,
1250,
385,
61,
99
]
},
{
"tb": 2664,
"tbk": 24,
"tl": 600,
"mb": 240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
635,
636,
313,
313,
312,
313,
313,
313,
312,
314,
315,
316
]
},
{
"tb": 384,
"tbk": 3,
"tl": 144,
"mb": 384,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
323,
324,
325,
326,
327,
860,
861,
862,
863,
864,
865,
866,
867,
113,
114
]
}
],
"ftbl": [
"[root]",
"0x55d5862113c2: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5862113c2: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5862113c2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5862113c2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5862113c2: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x55d5862113c2: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d5862113c2: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d5862113c2: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d5862113c2: <truck_geometry::nurbs::BSplineSurface<P> as core::clone::Clone>::clone (src/nurbs/mod.rs:114:5)",
"0x55d5862113c2: <truck_geometry::nurbs::NurbsSurface<V> as core::clone::Clone>::clone (src/nurbs/mod.rs:122:10)",
"0x55d5862113c2: <truck_modeling::geometry::Surface as core::clone::Clone>::clone (truck-modeling/src/geometry.rs:171:18)",
"0x55d586210d95: <T as core::clone::CloneToUninit>::clone_to_uninit (core/src/clone.rs:278:29)",
"0x55d586210d95: <alloc::boxed::Box<T,A> as core::clone::Clone>::clone (alloc/src/boxed.rs:1351:13)",
"0x55d586210d95: <truck_geometry::decorators::IntersectionCurve<C,S> as core::clone::Clone>::clone (src/decorators/mod.rs:131:5)",
"0x55d586210d95: <truck_modeling::geometry::Curve as core::clone::Clone>::clone (truck-modeling/src/geometry.rs:56:23)",
"0x55d5862177b1: truck_topology::edge::<impl truck_topology::Edge<P,C>>::curve (truck-topology/src/edge.rs:255:9)",
"0x55d5862177b1: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:186:69)",
"0x55d5862177b1: std::collections::hash::map::Entry<K,V>::or_insert_with (collections/hash/map.rs:2666:43)",
"0x55d5862177b1: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}} (transversal/loops_store/mod.rs:185:21)",
"0x55d5862177b1: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d5862177b1: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5862177b1: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861daae1: <alloc::collections::vec_deque::iter_mut::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (collections/vec_deque/iter_mut.rs:71:21)",
"0x55d5861daae1: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d5861daae1: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d5861daae1: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d5861daae1: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861daae1: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861daae1: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d5861daae1: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d5861daae1: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d5861daae1: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d5861daae1: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d5861daae1: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex (transversal/loops_store/mod.rs:183:14)",
"0x55d5861daae1: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::change_vertex::{{closure}} (transversal/loops_store/mod.rs:295:31)",
"0x55d5861daae1: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d5861daae1: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::change_vertex (transversal/loops_store/mod.rs:294:9)",
"0x55d5861daae1: truck_shapeops::transversal::loops_store::LoopsStore<cgmath::point::Point3<f64>,C>::add_geom_vertex (transversal/loops_store/mod.rs:359:22)",
"0x55d5861d3613: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:511:25)",
"0x55d5861a7874: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d5861a7874: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::try_fold (src/vec/into_iter.rs:340:25)",
"0x55d5861a7874: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d5861a7874: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:479:14)",
"0x55d5861a7874: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861a7874: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d5861a7874: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861a7874: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d5861a7874: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d5861dcce5: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:507:30)",
"0x55d5861dcce5: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d5861dcce5: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861dcce5: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d5861dcce5: <core::iter::adapters::fuse::Fuse<I> as core::iter::adapters::fuse::FuseImpl<I>>::try_fold (iter/adapters/fuse.rs:375:19)",
"0x55d5861dcce5: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/fuse.rs:89:9)",
"0x55d5861dcce5: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_try_fold (iter/adapters/flatten.rs:515:25)",
"0x55d5861dcce5: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/flatten.rs:653:9)",
"0x55d5861dcce5: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/flatten.rs:81:20)",
"0x55d5861dcce5: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:14)",
"0x55d5861dcce5: truck_shapeops::transversal::loops_store::create_loops_stores (transversal/loops_store/mod.rs:464:10)",
"0x55d5861dcce5: truck_shapeops::transversal::integrate::process_one_pair_of_shells (transversal/integrate/mod.rs:62:9)",
"0x55d5861dec00: truck_shapeops::transversal::integrate::and (transversal/integrate/mod.rs:112:30)",
"0x55d58622134d: test_truck::main (test-truck/src/main.rs:69:22)",
"0x55d586211484: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d586211484: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d586211484: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d586211484: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d586211484: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d586211484: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d586211484: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d586211484: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d586211484: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x55d586211484: <truck_geometry::nurbs::BSplineSurface<P> as core::clone::Clone>::clone (src/nurbs/mod.rs:114:5)",
"0x55d586211484: <truck_geometry::nurbs::NurbsSurface<V> as core::clone::Clone>::clone (src/nurbs/mod.rs:122:10)",
"0x55d586211484: <truck_modeling::geometry::Surface as core::clone::Clone>::clone (truck-modeling/src/geometry.rs:171:18)",
"0x55d586217a3a: truck_topology::edge::<impl truck_topology::Edge<P,C>>::curve (truck-topology/src/edge.rs:255:9)",
"0x55d586217a3a: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:190:70)",
"0x55d586217a3a: std::collections::hash::map::Entry<K,V>::or_insert_with (collections/hash/map.rs:2666:43)",
"0x55d586217a3a: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}} (transversal/loops_store/mod.rs:189:21)",
"0x55d586217a3a: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d586217a3a: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d586217a3a: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861da8e1: <alloc::collections::vec_deque::iter_mut::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (collections/vec_deque/iter_mut.rs:71:21)",
"0x55d5861da8e1: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d5861da8e1: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d5861da8e1: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d5861da8e1: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861da8e1: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861da8e1: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d5861da8e1: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d5861da8e1: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d5861da8e1: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d5861da8e1: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d5861da8e1: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex (transversal/loops_store/mod.rs:183:14)",
"0x55d5861da8e1: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::change_vertex::{{closure}} (transversal/loops_store/mod.rs:295:31)",
"0x55d5861da8e1: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d5861da8e1: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::change_vertex (transversal/loops_store/mod.rs:294:9)",
"0x55d5861da8e1: truck_shapeops::transversal::loops_store::LoopsStore<cgmath::point::Point3<f64>,C>::add_geom_vertex (transversal/loops_store/mod.rs:366:22)",
"0x55d5861d371d: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:524:25)",
"0x55d586221f49: test_truck::main (test-truck/src/main.rs:86:26)",
"0x55d5861f54e0: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5861f54e0: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5861f54e0: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5861f54e0: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5861f54e0: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d5861f54e0: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d5861f54e0: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861f54e0: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861f54e0: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861f54e0: <truck_shapeops::transversal::loops_store::LoopsStore<P,C> as core::iter::traits::collect::FromIterator<&truck_topology::Face<P,C,S>>>::from_iter (transversal/loops_store/mod.rs:129:48)",
"0x55d5861dcb95: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861dcb95: truck_shapeops::transversal::loops_store::create_loops_stores (transversal/loops_store/mod.rs:458:75)",
"0x55d5861dcb95: truck_shapeops::transversal::integrate::process_one_pair_of_shells (transversal/integrate/mod.rs:62:9)",
"0x55d5862215ab: truck_shapeops::transversal::integrate::or (transversal/integrate/mod.rs:135:29)",
"0x55d5862215ab: test_truck::main (test-truck/src/main.rs:76:21)",
"0x55d586210326: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d586210326: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d586210326: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d586210326: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d586210326: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x55d586210326: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d586210326: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d586210326: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d5861dbc95: truck_topology::face::<impl core::clone::Clone for truck_topology::Face<P,C,S>>::clone (truck-topology/src/face.rs:1029:25)",
"0x55d5861dbc95: truck_shapeops::transversal::faces_classification::FacesClassification<P,C,S>::and_or_unknown (transversal/faces_classification/mod.rs:31:47)",
"0x55d5861dd154: truck_shapeops::transversal::integrate::process_one_pair_of_shells (transversal/integrate/mod.rs:67:41)",
"0x55d5861e2b17: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861e2b17: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::extract_boundaries (alloc/src/macros.rs:54:13)",
"0x55d5861dc07c: truck_shapeops::transversal::faces_classification::FacesClassification<P,C,S>::integrate_by_component (transversal/faces_classification/mod.rs:44:28)",
"0x55d5861dd0cd: truck_shapeops::transversal::integrate::process_one_pair_of_shells (transversal/integrate/mod.rs:64:5)",
"0x55d5861ab300: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5861ab300: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5861ab300: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5861ab300: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5861ab300: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d5861ab300: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d5861ab300: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861ab300: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861ab300: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861ab300: truck_topology::face::<impl truck_topology::Face<P,C,S>>::boundary_iters (truck-topology/src/face.rs:211:14)",
"0x55d5861ab300: truck_topology::face::<impl truck_topology::Face<P,C,S>>::edge_iter (truck-topology/src/face.rs:224:14)",
"0x55d5861ab300: core::ops::function::FnMut::call_mut (src/ops/function.rs:166:5)",
"0x55d5861ab300: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d5861ab300: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861ab300: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861ab300: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d5861ab300: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d5861ab300: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d5861ab300: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d5861ab300: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d5861ab300: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency (truck-topology/src/shell.rs:230:26)",
"0x55d5861ab300: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::is_connected (truck-topology/src/shell.rs:405:29)",
"0x55d5861ab300: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:22:24)",
"0x55d5861ab300: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d5861ab300: <truck_topology::Solid<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:300:9)",
"0x55d586221965: test_truck::main (test-truck/src/main.rs:77:17)",
"0x55d58620a103: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d58620a103: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d58620a103: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d58620a103: truck_topology::vertex::<impl truck_topology::Vertex<P>>::new (truck-topology/src/vertex.rs:17:20)",
"0x55d58620a103: truck_topology::vertex::<impl truck_topology::Vertex<P>>::mapped (truck-topology/src/vertex.rs:90:9)",
"0x55d58620a103: truck_meshalgo::tessellation::triangulation::shell_tessellation::{{closure}} (src/tessellation/triangulation.rs:64:27)",
"0x55d58620a103: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut (src/ops/function.rs:272:13)",
"0x55d58620a103: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d58620a103: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d58620a103: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d58620a103: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d58620a103: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d58620a103: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d58620a103: <rayon::iter::extend::ListVecFolder<T> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/extend.rs:130:18)",
"0x55d58620a103: <rayon::iter::map::MapFolder<C,F> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/map.rs:248:21)",
"0x55d58620a103: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d58620a103: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d58619d8bc: rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (iter/plumbing/mod.rs:417:21)",
"0x55d58619d8bc: rayon_core::join::join_context::call_a::{{closure}} (src/join/mod.rs:124:17)",
"0x55d58619d8bc: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d58619d8bc: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d58619d8bc: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d58619d8bc: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d58619d8bc: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d58619d8bc: rayon_core::join::join_context::{{closure}} (src/join/mod.rs:142:24)",
"0x55d58620a4b6: rayon_core::registry::in_worker (rayon-core-1.12.1/src/registry.rs:0:0)",
"0x55d58620a4b6: rayon_core::join::join_context (src/join/mod.rs:132:5)",
"0x55d58620a4b6: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:415:47)",
"0x55d586208e83: rayon::iter::plumbing::bridge_producer_consumer (iter/plumbing/mod.rs:396:12)",
"0x55d586208e83: <rayon::iter::plumbing::bridge::Callback<C> as rayon::iter::plumbing::ProducerCallback<I>>::callback (iter/plumbing/mod.rs:372:13)",
"0x55d586208e83: <rayon::vec::Drain<T> as rayon::iter::IndexedParallelIterator>::with_producer (rayon-1.10.0/src/vec.rs:147:13)",
"0x55d586208e83: <rayon::vec::IntoIter<T> as rayon::iter::IndexedParallelIterator>::with_producer (rayon-1.10.0/src/vec.rs:83:9)",
"0x55d586208e83: rayon::iter::plumbing::bridge (iter/plumbing/mod.rs:356:12)",
"0x55d586208e83: <rayon::vec::IntoIter<T> as rayon::iter::ParallelIterator>::drive_unindexed (rayon-1.10.0/src/vec.rs:58:9)",
"0x55d586208e83: <rayon::collections::vec_deque::IntoIter<T> as rayon::iter::ParallelIterator>::drive_unindexed (rayon-1.10.0/src/delegate.rs:21:28)",
"0x55d586208e83: <rayon::iter::flatten::FlattenFolder<C,<C as rayon::iter::plumbing::Consumer<<T as rayon::iter::IntoParallelIterator>::Item>>::Result> as rayon::iter::plumbing::Folder<T>>::consume (src/iter/flatten.rs:114:22)",
"0x55d586208e83: rayon::iter::plumbing::Folder::consume_iter (iter/plumbing/mod.rs:178:20)",
"0x55d586208e83: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d586208e83: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d586213023: rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (iter/plumbing/mod.rs:426:21)",
"0x55d586213023: rayon_core::join::join_context::call_b::{{closure}} (src/join/mod.rs:129:25)",
"0x55d586213023: rayon_core::job::JobResult<T>::call::{{closure}} (rayon-core-1.12.1/src/job.rs:218:41)",
"0x55d586213023: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d586213023: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d586213023: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d586213023: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d586213023: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d586213023: rayon_core::job::JobResult<T>::call (rayon-core-1.12.1/src/job.rs:218:15)",
"0x55d586213023: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.12.1/src/job.rs:120:32)",
"0x55d586269a10: rayon_core::job::JobRef::execute (rayon-core-1.12.1/src/job.rs:64:9)",
"0x55d586269a10: rayon_core::registry::WorkerThread::execute (rayon-core-1.12.1/src/registry.rs:860:13)",
"0x55d586269a10: rayon_core::registry::WorkerThread::wait_until_cold (rayon-core-1.12.1/src/registry.rs:794:26)",
"0x55d58626bfb6: rayon_core::registry::WorkerThread::wait_until (rayon-core-1.12.1/src/registry.rs:769:13)",
"0x55d58626bfb6: rayon_core::registry::WorkerThread::wait_until_out_of_work (rayon-core-1.12.1/src/registry.rs:818:9)",
"0x55d58626bfb6: rayon_core::registry::main_loop (rayon-core-1.12.1/src/registry.rs:923:5)",
"0x55d58626bfb6: rayon_core::registry::ThreadBuilder::run (rayon-core-1.12.1/src/registry.rs:53:18)",
"0x55d58626bfb6: <rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn::{{closure}} (rayon-core-1.12.1/src/registry.rs:98:20)",
"0x55d58626bfb6: std::sys::backtrace::__rust_begin_short_backtrace (src/sys/backtrace.rs:155:18)",
"0x55d58626bdca: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (src/thread/mod.rs:542:17)",
"0x55d58626bdca: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d58626bdca: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d58626bdca: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d58626bdca: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d58626bdca: std::thread::Builder::spawn_unchecked_::{{closure}} (src/thread/mod.rs:541:30)",
"0x55d58626bdca: core::ops::function::FnOnce::call_once{{vtable.shim}} (src/ops/function.rs:250:5)",
"0x55d5862b5f2b: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once (alloc/src/boxed.rs:2064:9)",
"0x55d5862b5f2b: std::sys::pal::unix::thread::Thread::new::thread_start (pal/unix/thread.rs:108:17)",
"0x55d586215c87: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d586215c87: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d586215c87: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d586215c87: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new_unchecked (truck-topology/src/edge.rs:45:20)",
"0x55d586215c87: truck_topology::edge::<impl truck_topology::Edge<P,C>>::debug_new (truck-topology/src/edge.rs:57:22)",
"0x55d586215c87: truck_topology::wire::edge_entry_map_closure::{{closure}} (truck-topology/src/wire.rs:581:9)",
"0x55d586215c87: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert::{{closure}} (truck-base/src/entry_map.rs:60:32)",
"0x55d586215c87: std::collections::hash::map::Entry<K,V>::or_insert_with (collections/hash/map.rs:2666:43)",
"0x55d586215c87: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert (truck-base/src/entry_map.rs:58:9)",
"0x55d586215c87: truck_topology::wire::<impl truck_topology::Wire<P,C>>::sub_mapped::{{closure}} (truck-topology/src/wire.rs:433:32)",
"0x55d586215c87: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d586215c87: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d586215c87: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861c69ce: <alloc::collections::vec_deque::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (collections/vec_deque/iter.rs:80:21)",
"0x55d5861c69ce: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861c69ce: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d5861c69ce: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d5861c69ce: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d5861c69ce: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d5861c69ce: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861c69ce: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861c69ce: <alloc::collections::vec_deque::VecDeque<T> as alloc::collections::vec_deque::spec_from_iter::SpecFromIter<T,I>>::spec_from_iter (collections/vec_deque/spec_from_iter.rs:17:9)",
"0x55d5861c69ce: <alloc::collections::vec_deque::VecDeque<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (collections/vec_deque/mod.rs:2863:9)",
"0x55d5861c69ce: truck_topology::wire::<impl core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>> for truck_topology::Wire<P,C>>::from_iter (truck-topology/src/wire.rs:599:20)",
"0x55d5861c69ce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861c69ce: truck_topology::wire::<impl truck_topology::Wire<P,C>>::sub_mapped (truck-topology/src/wire.rs:439:14)",
"0x55d5861c69ce: truck_topology::wire::<impl truck_topology::Wire<P,C>>::mapped (truck-topology/src/wire.rs:494:9)",
"0x55d5861c69ce: truck_topology::face::<impl truck_topology::Face<P,C,S>>::mapped::{{closure}} (truck-topology/src/face.rs:488:25)",
"0x55d5861c69ce: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d5861c69ce: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861c69ce: truck_topology::face::<impl truck_topology::Face<P,C,S>>::mapped (truck-topology/src/face.rs:489:14)",
"0x55d5861c69ce: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (truck-modeling/src/sweep.rs:232:23)",
"0x55d5861c69ce: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d58622114a: test_truck::main (test-truck/src/main.rs:60:20)",
"0x55d586210cfd: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d586210cfd: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d586210cfd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d586210cfd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d586210cfd: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d586210cfd: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d586210cfd: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d586210cfd: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d586210cfd: <truck_geometry::nurbs::BSplineCurve<P> as core::clone::Clone>::clone (src/nurbs/mod.rs:50:5)",
"0x55d586210cfd: <truck_geometry::nurbs::NurbsCurve<V> as core::clone::Clone>::clone (src/nurbs/mod.rs:118:10)",
"0x55d586210cfd: <truck_modeling::geometry::Curve as core::clone::Clone>::clone (truck-modeling/src/geometry.rs:54:16)",
"0x55d586202196: truck_topology::edge::<impl truck_topology::Edge<P,C>>::curve (truck-topology/src/edge.rs:255:9)",
"0x55d586202196: truck_shapeops::transversal::divide_face::create_parameter_boundary::{{closure}}::{{closure}} (transversal/divide_face/mod.rs:26:25)",
"0x55d586202196: std::collections::hash::map::Entry<K,V>::or_insert_with (collections/hash/map.rs:2666:43)",
"0x55d586202196: truck_shapeops::transversal::divide_face::create_parameter_boundary::{{closure}} (transversal/divide_face/mod.rs:25:20)",
"0x55d586202196: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d586202196: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861ca837: <alloc::collections::vec_deque::iter::Iter<T> as core::iter::traits::iterator::Iterator>::try_fold (collections/vec_deque/iter.rs:89:19)",
"0x55d5861ca837: truck_shapeops::transversal::divide_face::create_parameter_boundary (transversal/divide_face/mod.rs:24:15)",
"0x55d5861ca837: truck_shapeops::transversal::divide_face::divide_one_face::{{closure}} (transversal/divide_face/mod.rs:64:20)",
"0x55d5861ca837: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d5861ca837: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861ca837: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d5861ca837: truck_shapeops::transversal::divide_face::divide_one_face (transversal/divide_face/mod.rs:63:18)",
"0x55d5861ca837: truck_shapeops::transversal::divide_face::divide_faces::{{closure}} (transversal/divide_face/mod.rs:122:27)",
"0x55d5861ca837: truck_shapeops::transversal::divide_face::divide_faces (transversal/divide_face/mod.rs:115:10)",
"0x55d5861dd0f4: truck_shapeops::transversal::integrate::process_one_pair_of_shells (transversal/integrate/mod.rs:65:20)",
"0x55d586206804: truck_topology::face::<impl truck_topology::Face<P,C,S>>::boundaries (truck-topology/src/face.rs:103:21)",
"0x55d586206804: core::ops::function::Fn::call (src/ops/function.rs:79:5)",
"0x55d586206804: <rayon::iter::flat_map::FlatMapFolder<C,F,<C as rayon::iter::plumbing::Consumer<<U as rayon::iter::IntoParallelIterator>::Item>>::Result> as rayon::iter::plumbing::Folder<T>>::consume (src/iter/flat_map.rs:125:24)",
"0x55d586206804: rayon::iter::plumbing::Folder::consume_iter (iter/plumbing/mod.rs:178:20)",
"0x55d586206804: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d586206804: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d58619c79a: rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (iter/plumbing/mod.rs:417:21)",
"0x55d58619c79a: rayon_core::join::join_context::call_a::{{closure}} (src/join/mod.rs:124:17)",
"0x55d58619c79a: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d58619c79a: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d58619c79a: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d58619c79a: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d58619c79a: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d58619c79a: rayon_core::join::join_context::{{closure}} (src/join/mod.rs:142:24)",
"0x55d586206e6e: rayon_core::registry::in_worker (rayon-core-1.12.1/src/registry.rs:0:0)",
"0x55d586206e6e: rayon_core::join::join_context (src/join/mod.rs:132:5)",
"0x55d586206e6e: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:415:47)",
"0x55d5862124d1: rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (rayon-core-1.12.1/src/registry.rs:522:21)",
"0x55d5862124d1: rayon_core::job::JobResult<T>::call::{{closure}} (rayon-core-1.12.1/src/job.rs:218:41)",
"0x55d5862124d1: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d5862124d1: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d5862124d1: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d5862124d1: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d5862124d1: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d5862124d1: rayon_core::job::JobResult<T>::call (rayon-core-1.12.1/src/job.rs:218:15)",
"0x55d5862124d1: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.12.1/src/job.rs:120:32)",
"0x55d5862ed3e8: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5862ed3e8: truck_geotrait::algo::curve::sub_parameter_division (alloc/src/macros.rs:54:13)",
"0x55d5862ed50e: truck_geotrait::algo::curve::sub_parameter_division (src/algo/curve.rs:117:37)",
"0x55d5862ed368: truck_geotrait::algo::curve::sub_parameter_division (src/algo/curve.rs:109:37)",
"0x55d5862ebf28: truck_geotrait::algo::curve::parameter_division (src/algo/curve.rs:79:5)",
"0x55d5862ebf28: truck_geometry::decorators::intersection_curve::<impl truck_geotrait::traits::curve::ParameterDivision1D for truck_geometry::decorators::IntersectionCurve<C,S>>::parameter_division (src/decorators/intersection_curve.rs:168:9)",
"0x55d5862ebf28: <truck_modeling::geometry::Curve as truck_geotrait::traits::curve::ParameterDivision1D>::parameter_division (truck-modeling/src/geometry.rs:42:5)",
"0x55d5862021d2: truck_shapeops::transversal::divide_face::create_parameter_boundary::{{closure}}::{{closure}} (transversal/divide_face/mod.rs:27:23)",
"0x55d5862021d2: std::collections::hash::map::Entry<K,V>::or_insert_with (collections/hash/map.rs:2666:43)",
"0x55d5862021d2: truck_shapeops::transversal::divide_face::create_parameter_boundary::{{closure}} (transversal/divide_face/mod.rs:25:20)",
"0x55d5862021d2: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5862021d2: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861dce7f: truck_shapeops::transversal::integrate::process_one_pair_of_shells (transversal/integrate/mod.rs:63:20)",
"0x55d5862154ed: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5862154ed: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5862154ed: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5862154ed: alloc::collections::vec_deque::VecDeque<T,A>::with_capacity_in (collections/vec_deque/mod.rs:619:42)",
"0x55d5862154ed: <alloc::collections::vec_deque::VecDeque<T,A> as core::clone::Clone>::clone (collections/vec_deque/mod.rs:111:23)",
"0x55d5861cb2e8: truck_topology::wire::<impl core::clone::Clone for truck_topology::Wire<P,C>>::clone (truck-topology/src/wire.rs:778:24)",
"0x55d5861cb2e8: truck_shapeops::transversal::divide_face::divide_one_face::{{closure}}::{{closure}} (transversal/divide_face/mod.rs:90:49)",
"0x55d5861cb2e8: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:28)",
"0x55d5861cb2e8: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::try_fold (src/vec/into_iter.rs:340:25)",
"0x55d5861cb2e8: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d5861cb2e8: <I as alloc::vec::in_place_collect::SpecInPlaceCollect<T,I>>::collect_in_place (src/vec/in_place_collect.rs:379:13)",
"0x55d5861cb2e8: alloc::vec::in_place_collect::from_iter_in_place (src/vec/in_place_collect.rs:270:9)",
"0x55d5861cb2e8: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:246:9)",
"0x55d5861cb2e8: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861cb2e8: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861cb2e8: truck_shapeops::transversal::divide_face::divide_one_face::{{closure}} (transversal/divide_face/mod.rs:91:18)",
"0x55d5861cb2e8: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d5861cb2e8: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d5861cb2e8: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861cb2e8: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d5861cb2e8: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d5861cb2e8: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d5861cb2e8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d5861cb2e8: truck_shapeops::transversal::divide_face::divide_one_face (transversal/divide_face/mod.rs:98:10)",
"0x55d5861cb2e8: truck_shapeops::transversal::divide_face::divide_faces::{{closure}} (transversal/divide_face/mod.rs:122:27)",
"0x55d5861cb2e8: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d5861cb2e8: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861cb2e8: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d5861cb2e8: truck_shapeops::transversal::divide_face::divide_faces (transversal/divide_face/mod.rs:115:10)",
"0x55d58625cd1a: <dhat::Alloc as core::alloc::global::GlobalAlloc>::alloc (dhat-0.3.3/src/lib.rs:1176:9)",
"0x55d586205ac9: alloc::raw_vec::finish_grow (core/src/result.rs:0:0)",
"0x55d586205cec: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:486:19)",
"0x55d586205cec: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:349:31)",
"0x55d5861aa941: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:355:13)",
"0x55d5861aa941: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:972:18)",
"0x55d5861aa941: rayon::iter::collect::collect_with_consumer (iter/collect/mod.rs:81:9)",
"0x55d5861aa941: rayon::iter::collect::special_extend (iter/collect/mod.rs:39:5)",
"0x55d5861aa941: rayon::iter::extend::<impl rayon::iter::ParallelExtend<T> for alloc::vec::Vec<T>>::par_extend (src/iter/extend.rs:584:17)",
"0x55d5861aa941: rayon::iter::from_par_iter::collect_extended (src/iter/from_par_iter.rs:20:5)",
"0x55d5861aa941: rayon::iter::from_par_iter::<impl rayon::iter::FromParallelIterator<T> for alloc::vec::Vec<T>>::from_par_iter (src/iter/from_par_iter.rs:33:9)",
"0x55d5861aa941: truck_topology::shell::<impl rayon::iter::FromParallelIterator<truck_topology::Face<P,C,S>> for truck_topology::Shell<P,C,S>>::from_par_iter (truck-topology/src/shell.rs:1199:20)",
"0x55d5861aa941: rayon::iter::ParallelIterator::collect (src/iter/mod.rs:2069:9)",
"0x55d5861aa941: truck_meshalgo::tessellation::triangulation::shell_tessellation (src/tessellation/triangulation.rs:94:44)",
"0x55d5861aa941: <truck_topology::Shell<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:261:19)",
"0x55d5861ab17a: <truck_topology::Solid<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation::{{closure}} (src/tessellation/mod.rs:298:26)",
"0x55d5861ab17a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d5861ab17a: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861ab17a: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861ab17a: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d5861ab17a: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d5861ab17a: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d5861ab17a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d5861ab17a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861ab17a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861ab17a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861ab17a: <truck_topology::Solid<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:299:14)",
"0x55d586221f95: test_truck::main (test-truck/src/main.rs:87:17)",
"0x55d5861e3d03: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861e3d03: truck_topology::shell::create_one_component (alloc/src/macros.rs:54:13)",
"0x55d5861e3d03: truck_topology::shell::create_components (truck-topology/src/shell.rs:1143:25)",
"0x55d5861e3d03: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::connected_components (truck-topology/src/shell.rs:451:26)",
"0x55d5861dbf2d: truck_shapeops::transversal::faces_classification::FacesClassification<P,C,S>::integrate_by_component (transversal/faces_classification/mod.rs:42:26)",
"0x55d5861dd13f: truck_shapeops::transversal::integrate::process_one_pair_of_shells (transversal/integrate/mod.rs:66:5)",
"0x55d586207cae: <&C as truck_geotrait::traits::curve::ParameterDivision1D>::parameter_division (src/traits/curve.rs:155:9)",
"0x55d586207cae: truck_polymesh::meshing_shape::<impl truck_polymesh::PolylineCurve<P>>::from_curve (truck-polymesh/src/meshing_shape.rs:7:23)",
"0x55d586207cae: truck_meshalgo::tessellation::triangulation::shell_tessellation::{{closure}} (src/tessellation/triangulation.rs:73:24)",
"0x55d586207cae: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut (src/ops/function.rs:272:13)",
"0x55d586207cae: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d586207cae: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d586207cae: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d586207cae: rayon::iter::plumbing::Folder::consume_iter (iter/plumbing/mod.rs:177:21)",
"0x55d586207cae: <rayon::iter::map::MapFolder<C,F> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/map.rs:248:21)",
"0x55d586207cae: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d586207cae: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d58619ed90: rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (iter/plumbing/mod.rs:417:21)",
"0x55d58619ed90: rayon_core::join::join_context::call_a::{{closure}} (src/join/mod.rs:124:17)",
"0x55d58619ed90: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d58619ed90: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d58619ed90: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d58619ed90: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d58619ed90: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d58619ed90: rayon_core::join::join_context::{{closure}} (src/join/mod.rs:142:24)",
"0x55d5862ecb99: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5862ecb99: truck_geotrait::algo::curve::sub_parameter_division (alloc/src/macros.rs:54:13)",
"0x55d5862ecb1c: truck_geotrait::algo::curve::sub_parameter_division (src/algo/curve.rs:109:37)",
"0x55d5862eccc3: truck_geotrait::algo::curve::sub_parameter_division (src/algo/curve.rs:117:37)",
"0x55d5862ebdad: truck_geotrait::algo::curve::parameter_division (src/algo/curve.rs:79:5)",
"0x55d5862ebdad: truck_geometry::nurbs::nurbscurve::<impl truck_geotrait::traits::curve::ParameterDivision1D for truck_geometry::nurbs::NurbsCurve<V>>::parameter_division (src/nurbs/nurbscurve.rs:424:9)",
"0x55d5862ebdad: <truck_modeling::geometry::Curve as truck_geotrait::traits::curve::ParameterDivision1D>::parameter_division (truck-modeling/src/geometry.rs:42:5)",
"0x55d58621203e: rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (iter/plumbing/mod.rs:426:21)",
"0x55d58621203e: rayon_core::join::join_context::call_b::{{closure}} (src/join/mod.rs:129:25)",
"0x55d58621203e: rayon_core::job::JobResult<T>::call::{{closure}} (rayon-core-1.12.1/src/job.rs:218:41)",
"0x55d58621203e: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d58621203e: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d58621203e: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d58621203e: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d58621203e: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d58621203e: rayon_core::job::JobResult<T>::call (rayon-core-1.12.1/src/job.rs:218:15)",
"0x55d58621203e: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.12.1/src/job.rs:120:32)",
"0x55d5861ac07e: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5861ac07e: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5861ac07e: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5861ac07e: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5861ac07e: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d5861ac07e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d5861ac07e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861ac07e: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861ac07e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861ac07e: truck_topology::face::<impl truck_topology::Face<P,C,S>>::boundary_iters (truck-topology/src/face.rs:211:14)",
"0x55d5861ac07e: truck_topology::face::<impl truck_topology::Face<P,C,S>>::edge_iter (truck-topology/src/face.rs:224:14)",
"0x55d5861ac07e: core::ops::function::FnMut::call_mut (src/ops/function.rs:166:5)",
"0x55d5861ac07e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d5861ac07e: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861ac07e: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861ac07e: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d5861ac07e: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d5861ac07e: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d5861ac07e: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d5861ac07e: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d5861ac07e: <truck_topology::shell::Boundaries<C> as core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>>>::from_iter (truck-topology/src/shell.rs:1126:9)",
"0x55d5861ac07e: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::shell_condition (truck-topology/src/shell.rs:133:26)",
"0x55d5861ac07e: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:24:23)",
"0x55d5861ac07e: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d5861ac07e: <truck_topology::Solid<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:300:9)",
"0x55d58622117f: test_truck::main (test-truck/src/main.rs:63:17)",
"0x55d5861ca897: <alloc::collections::vec_deque::iter::Iter<T> as core::iter::traits::iterator::Iterator>::try_fold (collections/vec_deque/iter.rs:90:9)",
"0x55d5861ca897: truck_shapeops::transversal::divide_face::create_parameter_boundary (transversal/divide_face/mod.rs:24:15)",
"0x55d5861ca897: truck_shapeops::transversal::divide_face::divide_one_face::{{closure}} (transversal/divide_face/mod.rs:64:20)",
"0x55d5861ca897: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d5861ca897: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861ca897: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d5861ca897: truck_shapeops::transversal::divide_face::divide_one_face (transversal/divide_face/mod.rs:63:18)",
"0x55d5861ca897: truck_shapeops::transversal::divide_face::divide_faces::{{closure}} (transversal/divide_face/mod.rs:122:27)",
"0x55d5861ca897: truck_shapeops::transversal::divide_face::divide_faces (transversal/divide_face/mod.rs:115:10)",
"0x55d586268e2d: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d586268e2d: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d586268e2d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d586268e2d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d586268e2d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d586268e2d: parking_lot_core::parking_lot::HashTable::new (parking_lot_core-0.9.10/src/parking_lot.rs:75:27)",
"0x55d586268d60: parking_lot_core::parking_lot::create_hashtable (parking_lot_core-0.9.10/src/parking_lot.rs:237:35)",
"0x55d586268bf0: parking_lot_core::parking_lot::get_hashtable (parking_lot_core-0.9.10/src/parking_lot.rs:225:9)",
"0x55d586268bf0: parking_lot_core::parking_lot::grow_hashtable (parking_lot_core-0.9.10/src/parking_lot.rs:267:21)",
"0x55d586268bf0: parking_lot_core::parking_lot::ThreadData::new (parking_lot_core-0.9.10/src/parking_lot.rs:180:9)",
"0x55d5862684cc: parking_lot_core::parking_lot::with_thread_data::THREAD_DATA::__init (parking_lot_core-0.9.10/src/parking_lot.rs:202:52)",
"0x55d5862684cc: core::ops::function::FnOnce::call_once (src/ops/function.rs:250:5)",
"0x55d5862684cc: core::option::Option<T>::unwrap_or_else (core/src/option.rs:1008:21)",
"0x55d5862684cc: std::sys::thread_local::native::lazy::Storage<T,D>::initialize (thread_local/native/lazy.rs:65:42)",
"0x55d5862688bc: std::sys::thread_local::native::lazy::Storage<T,D>::get_or_init (thread_local/native/lazy.rs:57:40)",
"0x55d5862688bc: parking_lot_core::parking_lot::with_thread_data::THREAD_DATA::{{constant}}::{{closure}} (thread_local/native/mod.rs:93:25)",
"0x55d5862688bc: core::ops::function::FnOnce::call_once (src/ops/function.rs:250:5)",
"0x55d5862688bc: std::thread::local::LocalKey<T>::try_with (src/thread/local.rs:282:37)",
"0x55d5862688bc: parking_lot_core::parking_lot::with_thread_data (parking_lot_core-0.9.10/src/parking_lot.rs:203:27)",
"0x55d5862688bc: parking_lot_core::parking_lot::park (parking_lot_core-0.9.10/src/parking_lot.rs:600:5)",
"0x55d5862688bc: parking_lot::raw_mutex::RawMutex::lock_slow (parking_lot-0.12.3/src/raw_mutex.rs:262:17)",
"0x55d58620a0cd: <parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex>::lock (parking_lot-0.12.3/src/raw_mutex.rs:72:13)",
"0x55d58620a0cd: lock_api::mutex::Mutex<R,T>::lock (lock_api-0.4.12/src/mutex.rs:223:18)",
"0x55d58620a0cd: truck_topology::vertex::<impl truck_topology::Vertex<P>>::mapped (truck-topology/src/vertex.rs:90:48)",
"0x55d58620a0cd: truck_meshalgo::tessellation::triangulation::shell_tessellation::{{closure}} (src/tessellation/triangulation.rs:64:27)",
"0x55d58620a0cd: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut (src/ops/function.rs:272:13)",
"0x55d58620a0cd: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d58620a0cd: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d58620a0cd: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d58620a0cd: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d58620a0cd: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d58620a0cd: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d58620a0cd: <rayon::iter::extend::ListVecFolder<T> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/extend.rs:130:18)",
"0x55d58620a0cd: <rayon::iter::map::MapFolder<C,F> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/map.rs:248:21)",
"0x55d58620a0cd: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d58620a0cd: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d586212a03: rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (iter/plumbing/mod.rs:426:21)",
"0x55d586212a03: rayon_core::join::join_context::call_b::{{closure}} (src/join/mod.rs:129:25)",
"0x55d586212a03: rayon_core::job::JobResult<T>::call::{{closure}} (rayon-core-1.12.1/src/job.rs:218:41)",
"0x55d586212a03: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d586212a03: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d586212a03: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d586212a03: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d586212a03: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d586212a03: rayon_core::job::JobResult<T>::call (rayon-core-1.12.1/src/job.rs:218:15)",
"0x55d586212a03: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.12.1/src/job.rs:120:32)",
"0x55d58621bfd0: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d58621bfd0: hashbrown::raw::alloc::inner::do_alloc (src/raw/alloc.rs:15:15)",
"0x55d58621bfd0: hashbrown::raw::RawTableInner::new_uninitialized (src/raw/mod.rs:1750:38)",
"0x55d58621bfd0: hashbrown::raw::RawTableInner::fallible_with_capacity (src/raw/mod.rs:1788:30)",
"0x55d58621bfd0: hashbrown::raw::RawTableInner::prepare_resize (src/raw/mod.rs:2864:13)",
"0x55d58621bfd0: hashbrown::raw::RawTableInner::resize_inner (src/raw/mod.rs:3060:34)",
"0x55d58621bfd0: hashbrown::raw::RawTableInner::reserve_rehash_inner (src/raw/mod.rs:2950:13)",
"0x55d58621bfd0: hashbrown::raw::RawTable<T,A>::reserve_rehash (src/raw/mod.rs:1231:13)",
"0x55d586202172: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d586202172: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d586202172: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.14.5/src/rustc_entry.rs:46:18)",
"0x55d586202172: std::collections::hash::map::HashMap<K,V,S>::entry (collections/hash/map.rs:856:19)",
"0x55d586202172: truck_shapeops::transversal::divide_face::create_parameter_boundary::{{closure}} (transversal/divide_face/mod.rs:25:26)",
"0x55d586202172: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d586202172: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d586287dfa: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d586287dfa: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d586287dfa: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d586287dfa: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d586287dfa: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d586287dfa: std::sys::pal::unix::thread::cgroups::quota (pal/unix/thread.rs:506:27)",
"0x55d586287dfa: std::sys::pal::unix::thread::available_parallelism (pal/unix/thread.rs:328:25)",
"0x55d586287dfa: std::thread::available_parallelism (src/thread/mod.rs:1855:5)",
"0x55d58626cf5b: rayon_core::ThreadPoolBuilder<S>::get_num_threads::{{closure}} (rayon-core-1.12.1/src/lib.rs:473:17)",
"0x55d58626cf5b: rayon_core::ThreadPoolBuilder<S>::get_num_threads (rayon-core-1.12.1/src/lib.rs:493:22)",
"0x55d58626cf5b: rayon_core::registry::Registry::new (rayon-core-1.12.1/src/registry.rs:237:34)",
"0x55d58626c78e: rayon_core::registry::default_global_registry (rayon-core-1.12.1/src/registry.rs:201:18)",
"0x55d58626c78e: core::ops::function::FnOnce::call_once (src/ops/function.rs:250:5)",
"0x55d58626c78e: rayon_core::registry::set_global_registry::{{closure}} (rayon-core-1.12.1/src/registry.rs:193:18)",
"0x55d58626c78e: std::sync::once::Once::call_once::{{closure}} (src/sync/once.rs:158:41)",
"0x55d58626c78e: std::sys::sync::once::futex::Once::call (sync/once/futex.rs:124:21)",
"0x55d58626c584: std::sync::once::Once::call_once (src/sync/once.rs:158:9)",
"0x55d58626c584: rayon_core::registry::set_global_registry (rayon-core-1.12.1/src/registry.rs:192:5)",
"0x55d58626c584: rayon_core::registry::global_registry (rayon-core-1.12.1/src/registry.rs:166:5)",
"0x55d5861a93cc: rayon_core::registry::Registry::current_num_threads (rayon-core-1.12.1/src/registry.rs:334:17)",
"0x55d5861a93cc: rayon_core::current_num_threads (rayon-core-1.12.1/src/lib.rs:144:5)",
"0x55d5861a93cc: rayon::iter::plumbing::Splitter::new (iter/plumbing/mod.rs:266:21)",
"0x55d5861a93cc: rayon::iter::plumbing::LengthSplitter::new (iter/plumbing/mod.rs:314:20)",
"0x55d5861a93cc: rayon::iter::plumbing::bridge_producer_consumer (iter/plumbing/mod.rs:395:20)",
"0x55d5861a93cc: <rayon::iter::plumbing::bridge::Callback<C> as rayon::iter::plumbing::ProducerCallback<I>>::callback (iter/plumbing/mod.rs:372:13)",
"0x55d5861a93cc: <rayon::slice::Iter<T> as rayon::iter::IndexedParallelIterator>::with_producer (src/slice/mod.rs:826:9)",
"0x55d5861a93cc: rayon::iter::plumbing::bridge (iter/plumbing/mod.rs:356:12)",
"0x55d5861a93cc: <rayon::slice::Iter<T> as rayon::iter::ParallelIterator>::drive_unindexed (src/slice/mod.rs:802:9)",
"0x55d5861a93cc: <rayon::iter::flat_map::FlatMap<I,F> as rayon::iter::ParallelIterator>::drive_unindexed (src/iter/flat_map.rs:44:9)",
"0x55d5861a93cc: <rayon::iter::flatten::Flatten<I> as rayon::iter::ParallelIterator>::drive_unindexed (src/iter/flatten.rs:38:9)",
"0x55d5861a93cc: <rayon::iter::map::Map<I,F> as rayon::iter::ParallelIterator>::drive_unindexed (src/iter/map.rs:49:9)",
"0x55d5861a93cc: rayon::iter::extend::fast_collect (src/iter/extend.rs:80:31)",
"0x55d5861a93cc: rayon::iter::extend::<impl rayon::iter::ParallelExtend<(K,V)> for std::collections::hash::map::HashMap<K,V,S>>::par_extend (src/iter/extend.rs:32:20)",
"0x55d5861a93cc: rayon::iter::from_par_iter::collect_extended (src/iter/from_par_iter.rs:20:5)",
"0x55d5861a93cc: rayon::iter::from_par_iter::<impl rayon::iter::FromParallelIterator<(K,V)> for std::collections::hash::map::HashMap<K,V,S>>::from_par_iter (src/iter/from_par_iter.rs:131:9)",
"0x55d5861a93cc: rayon::iter::ParallelIterator::collect (src/iter/mod.rs:2069:9)",
"0x55d5861a93cc: truck_meshalgo::tessellation::triangulation::shell_tessellation (src/tessellation/triangulation.rs:65:10)",
"0x55d5861a93cc: <truck_topology::Shell<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:261:19)",
"0x55d58621e2bc: test_truck::main (test-truck/src/main.rs:47:17)",
"0x55d58620666e: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:486:19)",
"0x55d58620666e: alloc::raw_vec::RawVec<T,A>::grow_one (alloc/src/raw_vec.rs:364:27)",
"0x55d5861dbba2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d5861dbba2: truck_shapeops::transversal::faces_classification::FacesClassification<P,C,S>::and_or_unknown (transversal/faces_classification/mod.rs:30:40)",
"0x55d5861d0fc0: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861d0fc0: truck_shapeops::transversal::loops_store::Loops<P,C>::add_edge (alloc/src/macros.rs:54:13)",
"0x55d5861d3f62: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:563:21)",
"0x55d5861e038a: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861e038a: truck_topology::shell::create_one_component (alloc/src/macros.rs:54:13)",
"0x55d5861e038a: truck_topology::shell::check_connectivity (truck-topology/src/shell.rs:1133:5)",
"0x55d5861abed5: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::is_connected (truck-topology/src/shell.rs:415:9)",
"0x55d5861abed5: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:22:24)",
"0x55d5861abed5: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d5861abed5: <truck_topology::Solid<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:300:9)",
"0x55d5861e4217: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5861e4217: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5861e4217: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5861e4217: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5861e4217: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d5861e4217: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d5861e4217: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:246:9)",
"0x55d5861e4217: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861e4217: truck_topology::shell::<impl core::iter::traits::collect::FromIterator<truck_topology::Face<P,C,S>> for truck_topology::Shell<P,C,S>>::from_iter (truck-topology/src/shell.rs:853:24)",
"0x55d5861e4217: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861e4217: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::connected_components::{{closure}} (truck-topology/src/shell.rs:454:49)",
"0x55d5861e4217: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:28)",
"0x55d5861e4217: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::try_fold (src/vec/into_iter.rs:340:25)",
"0x55d5861e4217: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d5861e4217: <I as alloc::vec::in_place_collect::SpecInPlaceCollect<T,I>>::collect_in_place (src/vec/in_place_collect.rs:379:13)",
"0x55d5861e4217: alloc::vec::in_place_collect::from_iter_in_place (src/vec/in_place_collect.rs:270:9)",
"0x55d5861e4217: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::connected_components (truck-topology/src/shell.rs:455:14)",
"0x55d58621acf6: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d58621acf6: hashbrown::raw::alloc::inner::do_alloc (src/raw/alloc.rs:15:15)",
"0x55d58621acf6: hashbrown::raw::RawTableInner::new_uninitialized (src/raw/mod.rs:1750:38)",
"0x55d58621acf6: hashbrown::raw::RawTableInner::fallible_with_capacity (src/raw/mod.rs:1788:30)",
"0x55d58621acf6: hashbrown::raw::RawTableInner::prepare_resize (src/raw/mod.rs:2864:13)",
"0x55d58621acf6: hashbrown::raw::RawTableInner::resize_inner (src/raw/mod.rs:3060:34)",
"0x55d58621acf6: hashbrown::raw::RawTableInner::reserve_rehash_inner (src/raw/mod.rs:2950:13)",
"0x55d58621acf6: hashbrown::raw::RawTable<T,A>::reserve_rehash (src/raw/mod.rs:1231:13)",
"0x55d5861a9904: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d5861a9904: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d5861a9904: std::collections::hash::map::HashMap<K,V,S>::reserve (collections/hash/map.rs:758:19)",
"0x55d5861a9904: rayon::iter::extend::<impl rayon::iter::ParallelExtend<(K,V)> for std::collections::hash::map::HashMap<K,V,S>>::par_extend (src/iter/extend.rs:33:15)",
"0x55d5861a9904: rayon::iter::from_par_iter::collect_extended (src/iter/from_par_iter.rs:20:5)",
"0x55d5861a9904: rayon::iter::from_par_iter::<impl rayon::iter::FromParallelIterator<(K,V)> for std::collections::hash::map::HashMap<K,V,S>>::from_par_iter (src/iter/from_par_iter.rs:131:9)",
"0x55d5861a9904: rayon::iter::ParallelIterator::collect (src/iter/mod.rs:2069:9)",
"0x55d5861a9904: truck_meshalgo::tessellation::triangulation::shell_tessellation (src/tessellation/triangulation.rs:66:79)",
"0x55d5861a9904: <truck_topology::Shell<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:261:19)",
"0x55d5861dcb32: truck_shapeops::transversal::integrate::process_one_pair_of_shells (transversal/integrate/mod.rs:57:23)",
"0x55d586216de0: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d586216de0: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d586216de0: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d586216de0: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new_unchecked (truck-topology/src/edge.rs:45:20)",
"0x55d586216de0: truck_topology::edge::<impl truck_topology::Edge<P,C>>::try_new (truck-topology/src/edge.rs:20:16)",
"0x55d586216de0: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new (truck-topology/src/edge.rs:33:9)",
"0x55d586216de0: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:186:25)",
"0x55d586216de0: std::collections::hash::map::Entry<K,V>::or_insert_with (collections/hash/map.rs:2666:43)",
"0x55d586216de0: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}} (transversal/loops_store/mod.rs:185:21)",
"0x55d586216de0: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d586216de0: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d586216de0: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861d7211: <alloc::collections::vec_deque::iter_mut::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (collections/vec_deque/iter_mut.rs:71:21)",
"0x55d5861d7211: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d5861d7211: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d5861d7211: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d5861d7211: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861d7211: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861d7211: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d5861d7211: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d5861d7211: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d5861d7211: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d5861d7211: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d5861d7211: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex (transversal/loops_store/mod.rs:183:14)",
"0x55d5861d7211: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::change_vertex::{{closure}} (transversal/loops_store/mod.rs:295:31)",
"0x55d5861d7211: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d5861d7211: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::change_vertex (transversal/loops_store/mod.rs:294:9)",
"0x55d5861d7211: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::add_polygon_vertex (transversal/loops_store/mod.rs:320:22)",
"0x55d5861d37d5: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:535:25)",
"0x55d5862ed41f: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5862ed41f: truck_geotrait::algo::curve::sub_parameter_division (alloc/src/macros.rs:54:13)",
"0x55d586208803: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:355:13)",
"0x55d586208803: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:972:18)",
"0x55d586208803: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3069:22)",
"0x55d586208803: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d586208803: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d586208803: <rayon::iter::extend::ListVecFolder<T> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/extend.rs:130:18)",
"0x55d586208803: <rayon::iter::map::MapFolder<C,F> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/map.rs:248:21)",
"0x55d586208803: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d586208803: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d58619d313: rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (iter/plumbing/mod.rs:417:21)",
"0x55d58619d313: rayon_core::join::join_context::call_a::{{closure}} (src/join/mod.rs:124:17)",
"0x55d58619d313: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d58619d313: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d58619d313: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d58619d313: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d58619d313: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d58619d313: rayon_core::join::join_context::{{closure}} (src/join/mod.rs:142:24)",
"0x55d586208af8: rayon_core::registry::in_worker (rayon-core-1.12.1/src/registry.rs:0:0)",
"0x55d586208af8: rayon_core::join::join_context (src/join/mod.rs:132:5)",
"0x55d586208af8: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:415:47)",
"0x55d5862073de: rayon::iter::plumbing::bridge_producer_consumer (iter/plumbing/mod.rs:396:12)",
"0x55d5862073de: <rayon::iter::plumbing::bridge::Callback<C> as rayon::iter::plumbing::ProducerCallback<I>>::callback (iter/plumbing/mod.rs:372:13)",
"0x55d5862073de: <rayon::vec::Drain<T> as rayon::iter::IndexedParallelIterator>::with_producer (rayon-1.10.0/src/vec.rs:147:13)",
"0x55d5862073de: <rayon::vec::IntoIter<T> as rayon::iter::IndexedParallelIterator>::with_producer (rayon-1.10.0/src/vec.rs:83:9)",
"0x55d5862073de: rayon::iter::plumbing::bridge (iter/plumbing/mod.rs:356:12)",
"0x55d5862073de: <rayon::vec::IntoIter<T> as rayon::iter::ParallelIterator>::drive_unindexed (rayon-1.10.0/src/vec.rs:58:9)",
"0x55d5862073de: <rayon::collections::vec_deque::IntoIter<T> as rayon::iter::ParallelIterator>::drive_unindexed (rayon-1.10.0/src/delegate.rs:21:28)",
"0x55d5862073de: <rayon::iter::flatten::FlattenFolder<C,<C as rayon::iter::plumbing::Consumer<<T as rayon::iter::IntoParallelIterator>::Item>>::Result> as rayon::iter::plumbing::Folder<T>>::consume (src/iter/flatten.rs:114:22)",
"0x55d5862073de: rayon::iter::plumbing::Folder::consume_iter (iter/plumbing/mod.rs:178:20)",
"0x55d5862073de: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d5862073de: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d586211d59: rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (iter/plumbing/mod.rs:426:21)",
"0x55d586211d59: rayon_core::join::join_context::call_b::{{closure}} (src/join/mod.rs:129:25)",
"0x55d586211d59: rayon_core::job::JobResult<T>::call::{{closure}} (rayon-core-1.12.1/src/job.rs:218:41)",
"0x55d586211d59: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d586211d59: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d586211d59: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d586211d59: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d586211d59: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d586211d59: rayon_core::job::JobResult<T>::call (rayon-core-1.12.1/src/job.rs:218:15)",
"0x55d586211d59: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.12.1/src/job.rs:120:32)",
"0x55d5861e240e: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5861e240e: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5861e240e: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5861e240e: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5861e240e: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d5861e240e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d5861e240e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861e240e: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861e240e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861e240e: truck_topology::face::<impl truck_topology::Face<P,C,S>>::boundary_iters (truck-topology/src/face.rs:211:14)",
"0x55d5861e240e: truck_topology::face::<impl truck_topology::Face<P,C,S>>::edge_iter (truck-topology/src/face.rs:224:14)",
"0x55d5861e240e: core::ops::function::FnMut::call_mut (src/ops/function.rs:166:5)",
"0x55d5861e240e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d5861e240e: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861e240e: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861e240e: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d5861e240e: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d5861e240e: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d5861e240e: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d5861e240e: <core::iter::adapters::filter_map::FilterMap<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/filter_map.rs:148:9)",
"0x55d5861e240e: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d5861e240e: <hashbrown::map::HashMap<K,V,S,A> as core::iter::traits::collect::Extend<(K,V)>>::extend (hashbrown-0.14.5/src/map.rs:6511:9)",
"0x55d5861e240e: <std::collections::hash::map::HashMap<K,V,S> as core::iter::traits::collect::Extend<(K,V)>>::extend (collections/hash/map.rs:3144:9)",
"0x55d5861e240e: <std::collections::hash::map::HashMap<K,V,S> as core::iter::traits::collect::FromIterator<(K,V)>>::from_iter (collections/hash/map.rs:3129:13)",
"0x55d5861e240e: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::extract_boundaries (truck-topology/src/shell.rs:180:14)",
"0x55d586213b59: rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (iter/plumbing/mod.rs:426:21)",
"0x55d586213b59: rayon_core::join::join_context::call_b::{{closure}} (src/join/mod.rs:129:25)",
"0x55d586213b59: rayon_core::job::JobResult<T>::call::{{closure}} (rayon-core-1.12.1/src/job.rs:218:41)",
"0x55d586213b59: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d586213b59: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d586213b59: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d586213b59: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d586213b59: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d586213b59: rayon_core::job::JobResult<T>::call (rayon-core-1.12.1/src/job.rs:218:15)",
"0x55d586213b59: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.12.1/src/job.rs:120:32)",
"0x55d58619d44c: rayon_core::registry::WorkerThread::wait_until (rayon-core-1.12.1/src/registry.rs:769:13)",
"0x55d58619d44c: rayon_core::join::join_context::{{closure}} (src/join/mod.rs:167:17)",
"0x55d58619e3c2: rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (iter/plumbing/mod.rs:417:21)",
"0x55d58619e3c2: rayon_core::join::join_context::call_a::{{closure}} (src/join/mod.rs:124:17)",
"0x55d58619e3c2: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d58619e3c2: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d58619e3c2: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d58619e3c2: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d58619e3c2: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d58619e3c2: rayon_core::join::join_context::{{closure}} (src/join/mod.rs:142:24)",
"0x55d586207c7c: truck_topology::edge::<impl truck_topology::Edge<P,C>>::curve (truck-topology/src/edge.rs:255:9)",
"0x55d586207c7c: truck_meshalgo::tessellation::triangulation::shell_tessellation::{{closure}} (src/tessellation/triangulation.rs:72:25)",
"0x55d586207c7c: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut (src/ops/function.rs:272:13)",
"0x55d586207c7c: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d586207c7c: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d586207c7c: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d586207c7c: rayon::iter::plumbing::Folder::consume_iter (iter/plumbing/mod.rs:177:21)",
"0x55d586207c7c: <rayon::iter::map::MapFolder<C,F> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/map.rs:248:21)",
"0x55d586207c7c: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d586207c7c: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d586201f5b: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d586201f5b: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d586201f5b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d586201f5b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d586201f5b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d586201f5b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55d586201f5b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d586201f5b: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d586201f5b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d586201f5b: <core::option::Option<V> as core::iter::traits::collect::FromIterator<core::option::Option<A>>>::from_iter::{{closure}} (core/src/option.rs:2467:51)",
"0x55d586201f5b: core::iter::adapters::try_process (iter/adapters/mod.rs:173:17)",
"0x55d586201f5b: <core::option::Option<V> as core::iter::traits::collect::FromIterator<core::option::Option<A>>>::from_iter (core/src/option.rs:2467:9)",
"0x55d586201f5b: truck_shapeops::transversal::divide_face::create_parameter_boundary::{{closure}} (transversal/divide_face/mod.rs:37:61)",
"0x55d586201f5b: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d586201f5b: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861aa5cf: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d5861aa5cf: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d5861aa5cf: std::collections::hash::map::HashMap<K,V,S>::reserve (collections/hash/map.rs:758:19)",
"0x55d5861aa5cf: rayon::iter::extend::<impl rayon::iter::ParallelExtend<(K,V)> for std::collections::hash::map::HashMap<K,V,S>>::par_extend (src/iter/extend.rs:33:15)",
"0x55d5861aa5cf: rayon::iter::from_par_iter::collect_extended (src/iter/from_par_iter.rs:20:5)",
"0x55d5861aa5cf: rayon::iter::from_par_iter::<impl rayon::iter::FromParallelIterator<(K,V)> for std::collections::hash::map::HashMap<K,V,S>>::from_par_iter (src/iter/from_par_iter.rs:131:9)",
"0x55d5861aa5cf: rayon::iter::ParallelIterator::collect (src/iter/mod.rs:2069:9)",
"0x55d5861aa5cf: truck_meshalgo::tessellation::triangulation::shell_tessellation (src/tessellation/triangulation.rs:76:10)",
"0x55d5861aa5cf: <truck_topology::Shell<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:261:19)",
"0x55d58621860a: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d58621860a: <&A as core::alloc::Allocator>::allocate (src/alloc/mod.rs:381:9)",
"0x55d58621860a: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:529:13)",
"0x55d58621860a: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:491:15)",
"0x55d58621860a: alloc::boxed::Box<T,A>::new_in (alloc/src/boxed.rs:425:25)",
"0x55d58621860a: alloc::collections::linked_list::LinkedList<T,A>::push_back (src/collections/linked_list.rs:897:20)",
"0x55d58621860a: <rayon::iter::extend::ListVecFolder<T> as rayon::iter::plumbing::Folder<T>>::complete (src/iter/extend.rs:137:13)",
"0x55d58621860a: <rayon::iter::map::MapFolder<C,F> as rayon::iter::plumbing::Folder<T>>::complete (src/iter/map.rs:253:9)",
"0x55d5862088e8: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d58621ba5b: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d58621ba5b: hashbrown::raw::alloc::inner::do_alloc (src/raw/alloc.rs:15:15)",
"0x55d58621ba5b: hashbrown::raw::RawTableInner::new_uninitialized (src/raw/mod.rs:1750:38)",
"0x55d58621ba5b: hashbrown::raw::RawTableInner::fallible_with_capacity (src/raw/mod.rs:1788:30)",
"0x55d58621ba5b: hashbrown::raw::RawTableInner::prepare_resize (src/raw/mod.rs:2864:13)",
"0x55d58621ba5b: hashbrown::raw::RawTableInner::resize_inner (src/raw/mod.rs:3060:34)",
"0x55d58621ba5b: hashbrown::raw::RawTableInner::reserve_rehash_inner (src/raw/mod.rs:2950:13)",
"0x55d58621ba5b: hashbrown::raw::RawTable<T,A>::reserve_rehash (src/raw/mod.rs:1231:13)",
"0x55d586217066: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d586217066: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d586217066: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.14.5/src/rustc_entry.rs:46:18)",
"0x55d586217066: std::collections::hash::map::HashMap<K,V,S>::entry (collections/hash/map.rs:856:19)",
"0x55d586217066: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}} (transversal/loops_store/mod.rs:185:26)",
"0x55d586217066: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d586217066: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d586217066: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861d35a9: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:509:25)",
"0x55d58621e466: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d58621e466: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d58621e466: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d58621e466: truck_topology::vertex::<impl truck_topology::Vertex<P>>::new (truck-topology/src/vertex.rs:17:20)",
"0x55d58621e466: truck_modeling::builder::vertex (truck-modeling/src/builder.rs:15:39)",
"0x55d58621e466: test_truck::main (test-truck/src/main.rs:52:17)",
"0x55d5861dcb0f: truck_shapeops::transversal::integrate::process_one_pair_of_shells (transversal/integrate/mod.rs:56:23)",
"0x55d5862621e9: alloc::raw_vec::finish_grow (core/src/result.rs:0:0)",
"0x55d5862f4cfc: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:486:19)",
"0x55d5862f4cfc: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:349:31)",
"0x55d5862f4997: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:355:13)",
"0x55d5862f4997: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:972:18)",
"0x55d5862f4997: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2146:14)",
"0x55d5862f4997: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,alloc::vec::into_iter::IntoIter<T>>>::spec_extend (src/vec/spec_extend.rs:33:13)",
"0x55d5862f4997: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d5862f4997: truck_polymesh::polygon_mesh::<impl truck_polymesh::PolygonMesh>::merge (truck-polymesh/src/polygon_mesh.rs:123:33)",
"0x55d58622125d: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon::{{closure}} (src/tessellation/mod.rs:84:13)",
"0x55d58622125d: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d58622125d: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon (src/tessellation/mod.rs:83:9)",
"0x55d58622125d: test_truck::main (test-truck/src/main.rs:63:17)",
"0x55d58619b82b: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d58619b82b: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d58619b82b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d58619b82b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d58619b82b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d58619b82b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55d58619b82b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d58619b82b: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d58619b82b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d58619b82b: <core::option::Option<V> as core::iter::traits::collect::FromIterator<core::option::Option<A>>>::from_iter::{{closure}} (core/src/option.rs:2467:51)",
"0x55d58619b82b: core::iter::adapters::try_process (iter/adapters/mod.rs:173:17)",
"0x55d58619b82b: <core::option::Option<V> as core::iter::traits::collect::FromIterator<core::option::Option<A>>>::from_iter (core/src/option.rs:2467:9)",
"0x55d58619b82b: truck_meshalgo::tessellation::triangulation::PolyBoundaryPiece::try_new (src/tessellation/triangulation.rs:272:14)",
"0x55d58619b82b: truck_meshalgo::tessellation::triangulation::shell_create_polygon::{{closure}} (src/tessellation/triangulation.rs:213:13)",
"0x55d58619b82b: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:28)",
"0x55d58619b82b: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d58619b82b: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d58619b82b: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/mod.rs:204:9)",
"0x55d58619b82b: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d58619b82b: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::next (iter/adapters/mod.rs:187:14)",
"0x55d58620ab6f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:26:32)",
"0x55d58620ab6f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d58620ab6f: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d58620ab6f: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d58620ab6f: <core::option::Option<V> as core::iter::traits::collect::FromIterator<core::option::Option<A>>>::from_iter::{{closure}} (core/src/option.rs:2467:51)",
"0x55d58620ab6f: core::iter::adapters::try_process (iter/adapters/mod.rs:173:17)",
"0x55d58620ab6f: <core::option::Option<V> as core::iter::traits::collect::FromIterator<core::option::Option<A>>>::from_iter (core/src/option.rs:2467:9)",
"0x55d58620ab6f: truck_meshalgo::tessellation::triangulation::shell_create_polygon (src/tessellation/triangulation.rs:215:10)",
"0x55d58620ab6f: truck_meshalgo::tessellation::triangulation::shell_tessellation::{{closure}} (src/tessellation/triangulation.rs:92:9)",
"0x55d58620ab6f: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut (src/ops/function.rs:272:13)",
"0x55d58620ab6f: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d58620ab6f: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d58620ab6f: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d58620ab6f: rayon::iter::plumbing::Folder::consume_iter (iter/plumbing/mod.rs:177:21)",
"0x55d58620ab6f: <rayon::iter::map::MapFolder<C,F> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/map.rs:248:21)",
"0x55d58620ab6f: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d58620ab6f: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d58619e8ba: rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (iter/plumbing/mod.rs:417:21)",
"0x55d58619e8ba: rayon_core::join::join_context::call_a::{{closure}} (src/join/mod.rs:124:17)",
"0x55d58619e8ba: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d58619e8ba: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d58619e8ba: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d58619e8ba: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d58619e8ba: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d58619e8ba: rayon_core::join::join_context::{{closure}} (src/join/mod.rs:142:24)",
"0x55d58620b39e: rayon_core::registry::in_worker (rayon-core-1.12.1/src/registry.rs:0:0)",
"0x55d58620b39e: rayon_core::join::join_context (src/join/mod.rs:132:5)",
"0x55d58620b39e: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:415:47)",
"0x55d586212ee1: rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (rayon-core-1.12.1/src/registry.rs:522:21)",
"0x55d586212ee1: rayon_core::job::JobResult<T>::call::{{closure}} (rayon-core-1.12.1/src/job.rs:218:41)",
"0x55d586212ee1: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d586212ee1: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d586212ee1: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d586212ee1: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d586212ee1: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d586212ee1: rayon_core::job::JobResult<T>::call (rayon-core-1.12.1/src/job.rs:218:15)",
"0x55d586212ee1: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.12.1/src/job.rs:120:32)",
"0x55d586210356: truck_topology::wire::<impl core::clone::Clone for truck_topology::Wire<P,C>>::clone (truck-topology/src/wire.rs:778:24)",
"0x55d586210356: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x55d586210356: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d586210356: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d586210356: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d5861dbb49: truck_topology::face::<impl core::clone::Clone for truck_topology::Face<P,C,S>>::clone (truck-topology/src/face.rs:1029:25)",
"0x55d5861dbb49: truck_shapeops::transversal::faces_classification::FacesClassification<P,C,S>::and_or_unknown (transversal/faces_classification/mod.rs:30:49)",
"0x55d5861dd9e5: truck_shapeops::transversal::integrate::process_one_pair_of_shells (transversal/integrate/mod.rs:82:41)",
"0x55d5862014a8: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5862014a8: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5862014a8: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5862014a8: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5862014a8: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d5862014a8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d5862014a8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5862014a8: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5862014a8: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5862014a8: truck_topology::face::<impl truck_topology::Face<P,C,S>>::boundary_iters (truck-topology/src/face.rs:211:14)",
"0x55d5862014a8: truck_topology::face::<impl truck_topology::Face<P,C,S>>::edge_iter (truck-topology/src/face.rs:224:14)",
"0x55d5862014a8: core::ops::function::FnMut::call_mut (src/ops/function.rs:166:5)",
"0x55d5862014a8: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d5862014a8: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5862014a8: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5862014a8: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d5862014a8: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d5862014a8: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d5862014a8: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d5862014a8: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d5861e1707: <truck_topology::shell::Boundaries<C> as core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>>>::from_iter (truck-topology/src/shell.rs:1126:9)",
"0x55d5861e1707: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861e1707: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::shell_condition (truck-topology/src/shell.rs:133:26)",
"0x55d5861dee68: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:24:23)",
"0x55d5861dee68: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d5861dee68: truck_shapeops::transversal::integrate::and (transversal/integrate/mod.rs:122:10)",
"0x55d5862bf35f: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5862bf35f: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5862bf35f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5862bf35f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5862bf35f: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d5862bf35f: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d5862bf35f: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d5862bf35f: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d5862bf35f: <truck_polymesh::Faces<V> as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:75:5)",
"0x55d5862bf35f: <truck_polymesh::PolygonMesh<V,A> as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:88:5)",
"0x55d5862bf35f: <core::option::Option<T> as core::clone::Clone>::clone (core/src/option.rs:2038:29)",
"0x55d5862bf35f: truck_topology::face::<impl truck_topology::Face<P,C,S>>::surface (truck-topology/src/face.rs:509:9)",
"0x55d5862bf35f: <truck_topology::Shell<cgmath::point::Point3<f64>,truck_polymesh::PolylineCurve<cgmath::point::Point3<f64>>,core::option::Option<truck_polymesh::PolygonMesh>> as truck_meshalgo::tessellation::MeshedShape>::to_polygon::{{closure}} (src/tessellation/mod.rs:67:37)",
"0x55d5862bf35f: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d5862bf35f: <truck_topology::Shell<cgmath::point::Point3<f64>,truck_polymesh::PolylineCurve<cgmath::point::Point3<f64>>,core::option::Option<truck_polymesh::PolygonMesh>> as truck_meshalgo::tessellation::MeshedShape>::to_polygon (src/tessellation/mod.rs:66:9)",
"0x55d586221472: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon::{{closure}} (src/tessellation/mod.rs:84:27)",
"0x55d586221472: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d586221472: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon (src/tessellation/mod.rs:83:9)",
"0x55d586221472: test_truck::main (test-truck/src/main.rs:70:17)",
"0x55d5861d7226: <alloc::collections::vec_deque::iter_mut::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (collections/vec_deque/iter_mut.rs:72:9)",
"0x55d5861d7226: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d5861d7226: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d5861d7226: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d5861d7226: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861d7226: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861d7226: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d5861d7226: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d5861d7226: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d5861d7226: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d5861d7226: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d5861d7226: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex (transversal/loops_store/mod.rs:183:14)",
"0x55d5861d7226: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::change_vertex::{{closure}} (transversal/loops_store/mod.rs:295:31)",
"0x55d5861d7226: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d5861d7226: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::change_vertex (transversal/loops_store/mod.rs:294:9)",
"0x55d5861d7226: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::add_polygon_vertex (transversal/loops_store/mod.rs:320:22)",
"0x55d5861d36b3: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:522:25)",
"0x55d586219500: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d586219500: hashbrown::raw::alloc::inner::do_alloc (src/raw/alloc.rs:15:15)",
"0x55d586219500: hashbrown::raw::RawTableInner::new_uninitialized (src/raw/mod.rs:1750:38)",
"0x55d586219500: hashbrown::raw::RawTableInner::fallible_with_capacity (src/raw/mod.rs:1788:30)",
"0x55d586219500: hashbrown::raw::RawTableInner::prepare_resize (src/raw/mod.rs:2864:13)",
"0x55d586219500: hashbrown::raw::RawTableInner::resize_inner (src/raw/mod.rs:3060:34)",
"0x55d586219500: hashbrown::raw::RawTableInner::reserve_rehash_inner (src/raw/mod.rs:2950:13)",
"0x55d586219500: hashbrown::raw::RawTable<T,A>::reserve_rehash (src/raw/mod.rs:1231:13)",
"0x55d5861a3888: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d5861a3888: hashbrown::raw::RawTable<T,A>::find_or_find_insert_slot (src/raw/mod.rs:1413:9)",
"0x55d5861a3888: hashbrown::map::HashMap<K,V,S,A>::insert (hashbrown-0.14.5/src/map.rs:1754:15)",
"0x55d5861a3888: std::collections::hash::map::HashMap<K,V,S>::insert (collections/hash/map.rs:1106:9)",
"0x55d5861a3888: truck_topology::shell::Boundaries<C>::insert (truck-topology/src/shell.rs:1097:33)",
"0x55d5861a3888: <truck_topology::shell::Boundaries<C> as core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>>>::from_iter::{{closure}} (truck-topology/src/shell.rs:1126:42)",
"0x55d5861a3888: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d5861a3888: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861a3888: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d5861a3888: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d5861a3261: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d5861a3261: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d5861a3261: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d5861a3261: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d5861a3261: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d5861a3261: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:321:9)",
"0x55d5861a3261: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d58620159d: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d58620159d: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d58620159d: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d58620159d: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d58620159d: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d58620159d: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d58620159d: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d58620159d: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d58620159d: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d5861e230c: <truck_topology::shell::Boundaries<C> as core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>>>::from_iter (truck-topology/src/shell.rs:1126:9)",
"0x55d5861e230c: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861e230c: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::extract_boundaries (truck-topology/src/shell.rs:171:58)",
"0x55d5861dbf10: truck_shapeops::transversal::faces_classification::FacesClassification<P,C,S>::integrate_by_component (transversal/faces_classification/mod.rs:41:27)",
"0x55d58621514d: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d58621514d: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d58621514d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d58621514d: alloc::collections::vec_deque::VecDeque<T,A>::with_capacity_in (collections/vec_deque/mod.rs:619:42)",
"0x55d58621514d: <alloc::collections::vec_deque::VecDeque<T,A> as core::clone::Clone>::clone (collections/vec_deque/mod.rs:111:23)",
"0x55d5861d7b38: truck_topology::wire::<impl core::clone::Clone for truck_topology::Wire<P,C>>::clone (truck-topology/src/wire.rs:778:24)",
"0x55d5861d7b38: truck_shapeops::transversal::loops_store::Loops<P,C>::swap_edge_into_wire::{{closure}} (transversal/loops_store/mod.rs:212:60)",
"0x55d5861d7b38: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d5861d7b38: truck_shapeops::transversal::loops_store::Loops<P,C>::swap_edge_into_wire (transversal/loops_store/mod.rs:208:9)",
"0x55d5861d7b38: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::swap_edge_into_wire::{{closure}} (transversal/loops_store/mod.rs:301:31)",
"0x55d5861d7b38: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::swap_edge_into_wire (transversal/loops_store/mod.rs:300:9)",
"0x55d5861d7b38: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::add_polygon_vertex (transversal/loops_store/mod.rs:333:22)",
"0x55d5861d38ed: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:548:25)",
"0x55d5861ca663: truck_topology::face::<impl truck_topology::Face<P,C,S>>::surface (truck-topology/src/face.rs:509:9)",
"0x55d5861ca663: truck_shapeops::transversal::divide_face::create_parameter_boundary (transversal/divide_face/mod.rs:21:19)",
"0x55d5861ca663: truck_shapeops::transversal::divide_face::divide_one_face::{{closure}} (transversal/divide_face/mod.rs:64:20)",
"0x55d5861ca663: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d5861ca663: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861ca663: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d5861ca663: truck_shapeops::transversal::divide_face::divide_one_face (transversal/divide_face/mod.rs:63:18)",
"0x55d5861ca663: truck_shapeops::transversal::divide_face::divide_faces::{{closure}} (transversal/divide_face/mod.rs:122:27)",
"0x55d5861ca663: truck_shapeops::transversal::divide_face::divide_faces (transversal/divide_face/mod.rs:115:10)",
"0x55d58620607f: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:486:19)",
"0x55d58620607f: alloc::raw_vec::RawVec<T,A>::grow_one (alloc/src/raw_vec.rs:364:27)",
"0x55d5861e39e4: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d5861e39e4: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::face_adjacency::{{closure}}::{{closure}}::{{closure}} (truck-topology/src/shell.rs:346:25)",
"0x55d5861e39e4: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d5861e39e4: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::face_adjacency::{{closure}}::{{closure}} (truck-topology/src/shell.rs:333:17)",
"0x55d5861e39e4: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::face_adjacency::{{closure}} (truck-topology/src/shell.rs:331:13)",
"0x55d5861e39e4: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d5861e39e4: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d5861e39e4: <hashbrown::map::IntoIter<K,V,A> as core::iter::traits::iterator::Iterator>::fold (hashbrown-0.14.5/src/map.rs:4827:9)",
"0x55d5861e39e4: <std::collections::hash::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::fold (collections/hash/map.rs:2332:19)",
"0x55d5861e39e4: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d5861e39e4: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::face_adjacency (truck-topology/src/shell.rs:330:35)",
"0x55d5861e39e4: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::connected_components (truck-topology/src/shell.rs:450:29)",
"0x55d586221807: truck_shapeops::transversal::integrate::or (transversal/integrate/mod.rs:144:22)",
"0x55d586221807: test_truck::main (test-truck/src/main.rs:76:21)",
"0x55d5861aa332: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:355:13)",
"0x55d5861aa332: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:972:18)",
"0x55d5861aa332: rayon::iter::collect::collect_with_consumer (iter/collect/mod.rs:81:9)",
"0x55d5861aa332: rayon::iter::collect::special_extend (iter/collect/mod.rs:39:5)",
"0x55d5861aa332: rayon::iter::extend::fast_collect (src/iter/extend.rs:77:13)",
"0x55d5861aa332: rayon::iter::extend::<impl rayon::iter::ParallelExtend<(K,V)> for std::collections::hash::map::HashMap<K,V,S>>::par_extend (src/iter/extend.rs:32:20)",
"0x55d5861aa332: rayon::iter::from_par_iter::collect_extended (src/iter/from_par_iter.rs:20:5)",
"0x55d5861aa332: rayon::iter::from_par_iter::<impl rayon::iter::FromParallelIterator<(K,V)> for std::collections::hash::map::HashMap<K,V,S>>::from_par_iter (src/iter/from_par_iter.rs:131:9)",
"0x55d5861aa332: rayon::iter::ParallelIterator::collect (src/iter/mod.rs:2069:9)",
"0x55d5861aa332: truck_meshalgo::tessellation::triangulation::shell_tessellation (src/tessellation/triangulation.rs:76:10)",
"0x55d5861aa332: <truck_topology::Shell<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:261:19)",
"0x55d5861dbe84: truck_shapeops::transversal::faces_classification::FacesClassification<P,C,S>::integrate_by_component (transversal/faces_classification/mod.rs:39:34)",
"0x55d5862f4100: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5862f4100: truck_geotrait::algo::surface::sub_parameter_division (alloc/src/macros.rs:54:13)",
"0x55d5861bfa0b: truck_geotrait::algo::surface::parameter_division (src/algo/surface.rs:194:5)",
"0x55d5861bfa0b: truck_geometry::nurbs::nurbssurface::<impl truck_geotrait::traits::surface::ParameterDivision2D for truck_geometry::nurbs::NurbsSurface<V>>::parameter_division (src/nurbs/nurbssurface.rs:677:9)",
"0x55d5861bfa0b: <truck_modeling::geometry::Surface as truck_geotrait::traits::surface::ParameterDivision2D>::parameter_division (truck-modeling/src/geometry.rs:161:5)",
"0x55d5861bfa0b: <&S as truck_geotrait::traits::surface::ParameterDivision2D>::parameter_division (src/traits/surface.rs:155:9)",
"0x55d5861bfa0b: truck_meshalgo::tessellation::triangulation::insert_surface (src/tessellation/triangulation.rs:547:24)",
"0x55d5861bfa0b: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:527:5)",
"0x55d5861bfa0b: truck_meshalgo::tessellation::triangulation::shell_create_polygon::{{closure}} (src/tessellation/triangulation.rs:218:14)",
"0x55d58620ad9d: truck_meshalgo::tessellation::triangulation::shell_create_polygon (src/tessellation/triangulation.rs:216:40)",
"0x55d58620ad9d: truck_meshalgo::tessellation::triangulation::shell_tessellation::{{closure}} (src/tessellation/triangulation.rs:92:9)",
"0x55d58620ad9d: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut (src/ops/function.rs:272:13)",
"0x55d58620ad9d: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d58620ad9d: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d58620ad9d: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d58620ad9d: rayon::iter::plumbing::Folder::consume_iter (iter/plumbing/mod.rs:177:21)",
"0x55d58620ad9d: <rayon::iter::map::MapFolder<C,F> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/map.rs:248:21)",
"0x55d58620ad9d: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d58620ad9d: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d5862134ee: rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (iter/plumbing/mod.rs:426:21)",
"0x55d5862134ee: rayon_core::join::join_context::call_b::{{closure}} (src/join/mod.rs:129:25)",
"0x55d5862134ee: rayon_core::job::JobResult<T>::call::{{closure}} (rayon-core-1.12.1/src/job.rs:218:41)",
"0x55d5862134ee: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d5862134ee: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d5862134ee: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d5862134ee: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d5862134ee: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d5862134ee: rayon_core::job::JobResult<T>::call (rayon-core-1.12.1/src/job.rs:218:15)",
"0x55d5862134ee: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.12.1/src/job.rs:120:32)",
"0x55d586210d24: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d586210d24: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:529:13)",
"0x55d586210d24: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:491:15)",
"0x55d586210d24: <alloc::boxed::Box<T,A> as core::clone::Clone>::clone (alloc/src/boxed.rs:1349:25)",
"0x55d586210d24: <truck_geometry::decorators::IntersectionCurve<C,S> as core::clone::Clone>::clone (src/decorators/mod.rs:130:5)",
"0x55d586210d24: <truck_modeling::geometry::Curve as core::clone::Clone>::clone (truck-modeling/src/geometry.rs:56:23)",
"0x55d5861cac58: truck_topology::face::<impl core::clone::Clone for truck_topology::Face<P,C,S>>::clone (truck-topology/src/face.rs:1029:25)",
"0x55d5861cac58: truck_shapeops::transversal::divide_face::divide_faces::{{closure}} (transversal/divide_face/mod.rs:120:26)",
"0x55d5861cac58: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d5861cac58: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861cac58: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d5861cac58: truck_shapeops::transversal::divide_face::divide_faces (transversal/divide_face/mod.rs:115:10)",
"0x55d58619c96b: rayon_core::registry::WorkerThread::wait_until (rayon-core-1.12.1/src/registry.rs:769:13)",
"0x55d58619c96b: rayon_core::join::join_context::{{closure}} (src/join/mod.rs:167:17)",
"0x55d5862121e4: rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (iter/plumbing/mod.rs:426:21)",
"0x55d5862121e4: rayon_core::join::join_context::call_b::{{closure}} (src/join/mod.rs:129:25)",
"0x55d5862121e4: rayon_core::job::JobResult<T>::call::{{closure}} (rayon-core-1.12.1/src/job.rs:218:41)",
"0x55d5862121e4: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d5862121e4: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d5862121e4: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d5862121e4: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d5862121e4: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d5862121e4: rayon_core::job::JobResult<T>::call (rayon-core-1.12.1/src/job.rs:218:15)",
"0x55d5862121e4: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.12.1/src/job.rs:120:32)",
"0x55d5862baf92: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5862baf92: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5862baf92: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5862baf92: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5862baf92: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d5862baf92: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d5862baf92: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d5862baf92: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d5862baf92: truck_meshalgo::analyzers::collision::colliding_segment_pairs::{{closure}} (src/analyzers/collision.rs:113:26)",
"0x55d5862baf92: core::iter::adapters::filter_map::filter_map_try_fold::{{closure}} (iter/adapters/filter_map.rs:49:28)",
"0x55d5862baf92: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::try_fold (src/vec/into_iter.rs:340:25)",
"0x55d5862baf92: <core::iter::adapters::filter_map::FilterMap<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/filter_map.rs:140:9)",
"0x55d5862baf92: <core::iter::adapters::fuse::Fuse<I> as core::iter::adapters::fuse::FuseImpl<I>>::try_fold (iter/adapters/fuse.rs:375:19)",
"0x55d5862baf92: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/fuse.rs:89:9)",
"0x55d5862baf92: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_try_fold (iter/adapters/flatten.rs:515:25)",
"0x55d5862baf92: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/flatten.rs:653:9)",
"0x55d5862baf92: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/flatten.rs:313:9)",
"0x55d5862baf92: core::iter::traits::iterator::Iterator::find_map (iter/traits/iterator.rs:2913:9)",
"0x55d5862baf92: <core::iter::adapters::filter_map::FilterMap<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/filter_map.rs:64:9)",
"0x55d5861a5d22: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d5861a5d22: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d5861a5d22: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:43:9)",
"0x55d5861a5d22: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861a5d22: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861a5d22: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861a5d22: truck_meshalgo::analyzers::collision::collision (src/analyzers/collision.rs:229:10)",
"0x55d5861a5d22: <truck_polymesh::PolygonMesh as truck_meshalgo::analyzers::collision::Collision>::extract_interference (src/analyzers/collision.rs:34:9)",
"0x55d5861a5d22: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:157:34)",
"0x55d5861a5d22: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d5861a5d22: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d5861a5d22: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861a5d22: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d5861a5d22: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861a5d22: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d5861a5d22: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d58620172a: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d58620172a: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d58620172a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d58620172a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d58620172a: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d58620172a: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d58620172a: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d58620172a: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d58620172a: <truck_polymesh::PolylineCurve<P> as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:101:29)",
"0x55d58620172a: truck_topology::edge::<impl truck_topology::Edge<P,C>>::curve (truck-topology/src/edge.rs:255:9)",
"0x55d58620172a: truck_shapeops::transversal::loops_store::Loops<P,C>::search_parameter::{{closure}} (transversal/loops_store/mod.rs:167:29)",
"0x55d58620172a: core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (iter/traits/iterator.rs:2907:32)",
"0x55d58620172a: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d58620172a: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d58620172a: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::try_fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:87:27)",
"0x55d58620172a: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861d6cea: <alloc::collections::vec_deque::iter::Iter<T> as core::iter::traits::iterator::Iterator>::try_fold (collections/vec_deque/iter.rs:89:19)",
"0x55d5861d6cea: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/enumerate.rs:93:9)",
"0x55d5861d6cea: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d5861d6cea: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d5861d6cea: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:507:30)",
"0x55d5861d6cea: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d5861d6cea: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::try_fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:87:27)",
"0x55d5861d6cea: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861d6cea: <core::iter::adapters::fuse::Fuse<I> as core::iter::adapters::fuse::FuseImpl<I>>::try_fold (iter/adapters/fuse.rs:375:19)",
"0x55d5861d6cea: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/fuse.rs:89:9)",
"0x55d5861d6cea: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_try_fold (iter/adapters/flatten.rs:515:25)",
"0x55d5861d6cea: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/flatten.rs:653:9)",
"0x55d5861d6cea: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/flatten.rs:81:9)",
"0x55d5861d6cea: core::iter::traits::iterator::Iterator::find_map (iter/traits/iterator.rs:2913:14)",
"0x55d5861d6cea: truck_shapeops::transversal::loops_store::Loops<P,C>::search_parameter (transversal/loops_store/mod.rs:166:14)",
"0x55d5861d6cea: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::add_polygon_vertex (transversal/loops_store/mod.rs:314:46)",
"0x55d586210e13: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d586210e13: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d586210e13: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d586210e13: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d586210e13: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d586210e13: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d586210e13: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d586210e13: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d586210e13: <truck_polymesh::PolylineCurve<P> as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:100:10)",
"0x55d586210e13: <truck_modeling::geometry::Leader as core::clone::Clone>::clone (truck-modeling/src/geometry.rs:27:14)",
"0x55d586210e13: <truck_geometry::decorators::IntersectionCurve<C,S> as core::clone::Clone>::clone (src/decorators/mod.rs:132:5)",
"0x55d586210e13: <truck_modeling::geometry::Curve as core::clone::Clone>::clone (truck-modeling/src/geometry.rs:56:23)",
"0x55d5861daaf6: <alloc::collections::vec_deque::iter_mut::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (collections/vec_deque/iter_mut.rs:72:9)",
"0x55d5861daaf6: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d5861daaf6: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d5861daaf6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d5861daaf6: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861daaf6: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861daaf6: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d5861daaf6: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d5861daaf6: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d5861daaf6: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d5861daaf6: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d5861daaf6: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex (transversal/loops_store/mod.rs:183:14)",
"0x55d5861daaf6: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::change_vertex::{{closure}} (transversal/loops_store/mod.rs:295:31)",
"0x55d5861daaf6: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d5861daaf6: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::change_vertex (transversal/loops_store/mod.rs:294:9)",
"0x55d5861daaf6: truck_shapeops::transversal::loops_store::LoopsStore<cgmath::point::Point3<f64>,C>::add_geom_vertex (transversal/loops_store/mod.rs:359:22)",
"0x55d5861dc93b: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d5861dc93b: hashbrown::raw::RawTable<T,A>::find_or_find_insert_slot (src/raw/mod.rs:1413:9)",
"0x55d5861dc93b: hashbrown::map::HashMap<K,V,S,A>::insert (hashbrown-0.14.5/src/map.rs:1754:15)",
"0x55d5861dc93b: std::collections::hash::map::HashMap<K,V,S>::insert (collections/hash/map.rs:1106:9)",
"0x55d5861dc93b: truck_shapeops::transversal::faces_classification::FacesClassification<P,C,S>::push (transversal/faces_classification/mod.rs:22:21)",
"0x55d5861cb5ed: truck_shapeops::transversal::divide_face::divide_faces::{{closure}}::{{closure}} (transversal/divide_face/mod.rs:124:48)",
"0x55d5861cb5ed: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d5861cb5ed: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d5861cb5ed: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d5861cb5ed: truck_shapeops::transversal::divide_face::divide_faces::{{closure}} (transversal/divide_face/mod.rs:124:22)",
"0x55d5861cb5ed: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d5861cb5ed: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861cb5ed: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d5861cb5ed: truck_shapeops::transversal::divide_face::divide_faces (transversal/divide_face/mod.rs:115:10)",
"0x55d5861c881b: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861c881b: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d5861c881b: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d5861c881b: truck_topology::face::<impl truck_topology::Face<P,C,S>>::new_unchecked (truck-topology/src/face.rs:64:22)",
"0x55d5861c881b: truck_topology::face::<impl truck_topology::Face<P,C,S>>::debug_new (truck-topology/src/face.rs:76:22)",
"0x55d5861c881b: truck_modeling::topo_impls::sub_connect_wires (truck-modeling/src/topo_impls.rs:75:20)",
"0x55d5861c881b: truck_modeling::topo_impls::connect_raw_wires::{{closure}} (truck-modeling/src/topo_impls.rs:118:9)",
"0x55d5861c881b: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d5861c881b: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d5861c881b: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d5861c881b: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d5861c881b: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d5861c881b: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d5861c881b: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (truck-modeling/src/sweep.rs:235:15)",
"0x55d5861c881b: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d586201d75: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d586201d75: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d586201d75: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d586201d75: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d586201d75: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d586201d75: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55d586201d75: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d586201d75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d586201d75: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d586201d75: <core::option::Option<V> as core::iter::traits::collect::FromIterator<core::option::Option<A>>>::from_iter::{{closure}} (core/src/option.rs:2467:51)",
"0x55d586201d75: core::iter::adapters::try_process (iter/adapters/mod.rs:173:17)",
"0x55d586201d75: <core::option::Option<V> as core::iter::traits::collect::FromIterator<core::option::Option<A>>>::from_iter (core/src/option.rs:2467:9)",
"0x55d586201d75: truck_shapeops::transversal::divide_face::create_parameter_boundary::{{closure}} (transversal/divide_face/mod.rs:36:54)",
"0x55d586201d75: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d586201d75: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d58620638e: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:486:19)",
"0x55d58620638e: alloc::raw_vec::RawVec<T,A>::grow_one (alloc/src/raw_vec.rs:364:27)",
"0x55d5861e40c8: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d5861e40c8: truck_topology::shell::create_components (truck-topology/src/shell.rs:1146:22)",
"0x55d5861e40c8: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::connected_components (truck-topology/src/shell.rs:451:26)",
"0x55d586206140: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:486:19)",
"0x55d586206140: alloc::raw_vec::RawVec<T,A>::grow_one (alloc/src/raw_vec.rs:364:27)",
"0x55d58621667c: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d58621667c: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::face_adjacency::{{closure}}::{{closure}} (truck-topology/src/shell.rs:326:33)",
"0x55d58621667c: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d58621667c: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d58621667c: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861e3564: <alloc::collections::vec_deque::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (collections/vec_deque/iter.rs:80:21)",
"0x55d5861e3564: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d5861e3564: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d5861e3564: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861e3564: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d5861e3564: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d5861e3564: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d5861e3564: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:321:9)",
"0x55d5861e3564: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d5861e3564: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::face_adjacency::{{closure}} (truck-topology/src/shell.rs:327:57)",
"0x55d5861e3564: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d5861e3564: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::face_adjacency (truck-topology/src/shell.rs:325:9)",
"0x55d5861e3564: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::connected_components (truck-topology/src/shell.rs:450:29)",
"0x55d5861dedfa: truck_shapeops::transversal::integrate::and (transversal/integrate/mod.rs:121:22)",
"0x55d586268f4c: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d586268f4c: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d586268f4c: parking_lot_core::parking_lot::HashTable::new (parking_lot_core-0.9.10/src/parking_lot.rs:81:9)",
"0x55d58619da87: rayon_core::registry::WorkerThread::wait_until (rayon-core-1.12.1/src/registry.rs:769:13)",
"0x55d58619da87: rayon_core::join::join_context::{{closure}} (src/join/mod.rs:167:17)",
"0x55d5861db3b8: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861db3b8: truck_shapeops::transversal::loops_store::LoopsStore<cgmath::point::Point3<f64>,C>::add_geom_vertex (alloc/src/macros.rs:54:13)",
"0x55d5861d3957: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:550:25)",
"0x55d586210d75: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d586210d75: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:529:13)",
"0x55d586210d75: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:491:15)",
"0x55d586210d75: <alloc::boxed::Box<T,A> as core::clone::Clone>::clone (alloc/src/boxed.rs:1349:25)",
"0x55d586210d75: <truck_geometry::decorators::IntersectionCurve<C,S> as core::clone::Clone>::clone (src/decorators/mod.rs:131:5)",
"0x55d586210d75: <truck_modeling::geometry::Curve as core::clone::Clone>::clone (truck-modeling/src/geometry.rs:56:23)",
"0x55d5861dbef9: truck_shapeops::transversal::faces_classification::FacesClassification<P,C,S>::integrate_by_component (transversal/faces_classification/mod.rs:40:28)",
"0x55d58621a2de: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d58621a2de: hashbrown::raw::alloc::inner::do_alloc (src/raw/alloc.rs:15:15)",
"0x55d58621a2de: hashbrown::raw::RawTableInner::new_uninitialized (src/raw/mod.rs:1750:38)",
"0x55d58621a2de: hashbrown::raw::RawTableInner::fallible_with_capacity (src/raw/mod.rs:1788:30)",
"0x55d58621a2de: hashbrown::raw::RawTableInner::prepare_resize (src/raw/mod.rs:2864:13)",
"0x55d58621a2de: hashbrown::raw::RawTableInner::resize_inner (src/raw/mod.rs:3060:34)",
"0x55d58621a2de: hashbrown::raw::RawTableInner::reserve_rehash_inner (src/raw/mod.rs:2950:13)",
"0x55d58621a2de: hashbrown::raw::RawTable<T,A>::reserve_rehash (src/raw/mod.rs:1231:13)",
"0x55d5861a12f7: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d5861a12f7: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d5861a12f7: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.14.5/src/rustc_entry.rs:46:18)",
"0x55d5861a12f7: std::collections::hash::map::HashMap<K,V,S>::entry (collections/hash/map.rs:856:19)",
"0x55d5861a12f7: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert (truck-base/src/entry_map.rs:59:14)",
"0x55d586215a14: truck_topology::wire::edge_entry_map_closure::{{closure}} (truck-topology/src/wire.rs:577:23)",
"0x55d586215a14: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert::{{closure}} (truck-base/src/entry_map.rs:60:32)",
"0x55d586215a14: std::collections::hash::map::Entry<K,V>::or_insert_with (collections/hash/map.rs:2666:43)",
"0x55d586215a14: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert (truck-base/src/entry_map.rs:58:9)",
"0x55d586215a14: truck_topology::wire::<impl truck_topology::Wire<P,C>>::sub_mapped::{{closure}} (truck-topology/src/wire.rs:433:32)",
"0x55d586215a14: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d586215a14: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d586215a14: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d58621e29f: test_truck::main (test-truck/src/main.rs:44:16)",
"0x55d5862199f2: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5862199f2: hashbrown::raw::alloc::inner::do_alloc (src/raw/alloc.rs:15:15)",
"0x55d5862199f2: hashbrown::raw::RawTableInner::new_uninitialized (src/raw/mod.rs:1750:38)",
"0x55d5862199f2: hashbrown::raw::RawTableInner::fallible_with_capacity (src/raw/mod.rs:1788:30)",
"0x55d5862199f2: hashbrown::raw::RawTableInner::prepare_resize (src/raw/mod.rs:2864:13)",
"0x55d5862199f2: hashbrown::raw::RawTableInner::resize_inner (src/raw/mod.rs:3060:34)",
"0x55d5862199f2: hashbrown::raw::RawTableInner::reserve_rehash_inner (src/raw/mod.rs:2950:13)",
"0x55d5862199f2: hashbrown::raw::RawTable<T,A>::reserve_rehash (src/raw/mod.rs:1231:13)",
"0x55d5861ac375: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d5861ac375: hashbrown::raw::RawTable<T,A>::find_or_find_insert_slot (src/raw/mod.rs:1413:9)",
"0x55d5861ac375: hashbrown::map::HashMap<K,V,S,A>::insert (hashbrown-0.14.5/src/map.rs:1754:15)",
"0x55d5861ac375: hashbrown::set::HashSet<T,S,A>::insert (hashbrown-0.14.5/src/set.rs:1115:9)",
"0x55d5861ac375: std::collections::hash::set::HashSet<T,S>::insert (collections/hash/set.rs:890:19)",
"0x55d5861ac375: truck_topology::shell::Boundaries<C>::insert (truck-topology/src/shell.rs:1096:30)",
"0x55d5861ac375: <truck_topology::shell::Boundaries<C> as core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>>>::from_iter::{{closure}} (truck-topology/src/shell.rs:1126:42)",
"0x55d5861ac375: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d5861ac375: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861ac375: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d5861ac375: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d5861ac375: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d5861ac375: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d5861ac375: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d5861ac375: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d5861ac375: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d5861ac375: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:321:9)",
"0x55d5861ac375: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d5861ac375: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861ac375: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861ac375: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d5861ac375: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d5861ac375: <truck_topology::shell::Boundaries<C> as core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>>>::from_iter (truck-topology/src/shell.rs:1126:9)",
"0x55d5861ac375: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861ac375: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::shell_condition (truck-topology/src/shell.rs:133:26)",
"0x55d5861ac375: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:24:23)",
"0x55d5861ac375: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d5861ac375: <truck_topology::Solid<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:300:9)",
"0x55d5861e0b3f: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d5861e0b3f: hashbrown::raw::RawTable<T,A>::find_or_find_insert_slot (src/raw/mod.rs:1413:9)",
"0x55d5861e0b3f: hashbrown::map::HashMap<K,V,S,A>::insert (hashbrown-0.14.5/src/map.rs:1754:15)",
"0x55d5861e0b3f: hashbrown::set::HashSet<T,S,A>::insert (hashbrown-0.14.5/src/set.rs:1115:9)",
"0x55d5861e0b3f: std::collections::hash::set::HashSet<T,S>::insert (collections/hash/set.rs:890:19)",
"0x55d5861e0b3f: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency::{{closure}} (truck-topology/src/shell.rs:231:26)",
"0x55d5861e0b3f: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d5861e0b3f: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861e0b3f: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d5861e0b3f: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d5861e0b3f: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d5861e0b3f: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d5861e0b3f: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d5861e0b3f: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d5861e0b3f: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d5861e0b3f: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:321:9)",
"0x55d5861e0b3f: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d5861e0b3f: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861e0b3f: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861e0b3f: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d5861e0b3f: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d5861e0b3f: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency (truck-topology/src/shell.rs:230:26)",
"0x55d5861e0b3f: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::is_connected (truck-topology/src/shell.rs:405:29)",
"0x55d586221861: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:22:24)",
"0x55d586221861: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d586221861: truck_shapeops::transversal::integrate::or (transversal/integrate/mod.rs:145:10)",
"0x55d586221861: test_truck::main (test-truck/src/main.rs:76:21)",
"0x55d5862ecbcf: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5862ecbcf: truck_geotrait::algo::curve::sub_parameter_division (alloc/src/macros.rs:54:13)",
"0x55d5862105fa: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5862105fa: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5862105fa: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5862105fa: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5862105fa: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d5862105fa: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d5862105fa: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d5862105fa: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d5862105fa: <truck_polymesh::Faces<V> as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:75:5)",
"0x55d5862105fa: <truck_polymesh::PolygonMesh<V,A> as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:88:5)",
"0x55d5862105fa: <core::option::Option<T> as core::clone::Clone>::clone (core/src/option.rs:2038:29)",
"0x55d5861a4871: truck_topology::face::<impl truck_topology::Face<P,C,S>>::surface (truck-topology/src/face.rs:509:9)",
"0x55d5861a4871: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:469:28)",
"0x55d5861a4871: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d5861a4871: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861a4871: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d5861a4871: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861a4871: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d5861a4871: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d5861d6d11: <alloc::collections::vec_deque::iter::Iter<T> as core::iter::traits::iterator::Iterator>::try_fold (collections/vec_deque/iter.rs:90:9)",
"0x55d5861d6d11: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/enumerate.rs:93:9)",
"0x55d5861d6d11: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d5861d6d11: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d5861d6d11: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:507:30)",
"0x55d5861d6d11: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d5861d6d11: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::try_fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:87:27)",
"0x55d5861d6d11: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861d6d11: <core::iter::adapters::fuse::Fuse<I> as core::iter::adapters::fuse::FuseImpl<I>>::try_fold (iter/adapters/fuse.rs:375:19)",
"0x55d5861d6d11: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/fuse.rs:89:9)",
"0x55d5861d6d11: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_try_fold (iter/adapters/flatten.rs:515:25)",
"0x55d5861d6d11: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/flatten.rs:653:9)",
"0x55d5861d6d11: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/flatten.rs:81:9)",
"0x55d5861d6d11: core::iter::traits::iterator::Iterator::find_map (iter/traits/iterator.rs:2913:14)",
"0x55d5861d6d11: truck_shapeops::transversal::loops_store::Loops<P,C>::search_parameter (transversal/loops_store/mod.rs:166:14)",
"0x55d5861d6d11: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::add_polygon_vertex (transversal/loops_store/mod.rs:314:46)",
"0x55d5861a481d: truck_topology::face::<impl truck_topology::Face<P,C,S>>::surface (truck-topology/src/face.rs:509:9)",
"0x55d5861a481d: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:468:28)",
"0x55d5861a481d: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d5861a481d: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861a481d: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d5861a481d: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861a481d: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d5861a481d: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d5861e055b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d5861e055b: truck_topology::shell::create_one_component (truck-topology/src/shell.rs:1165:13)",
"0x55d5861e055b: truck_topology::shell::check_connectivity (truck-topology/src/shell.rs:1133:5)",
"0x55d586217967: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d586217967: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d586217967: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d586217967: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new_unchecked (truck-topology/src/edge.rs:45:20)",
"0x55d586217967: truck_topology::edge::<impl truck_topology::Edge<P,C>>::try_new (truck-topology/src/edge.rs:20:16)",
"0x55d586217967: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new (truck-topology/src/edge.rs:33:9)",
"0x55d586217967: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:186:25)",
"0x55d586217967: std::collections::hash::map::Entry<K,V>::or_insert_with (collections/hash/map.rs:2666:43)",
"0x55d586217967: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}} (transversal/loops_store/mod.rs:185:21)",
"0x55d586217967: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d586217967: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d586217967: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861d383f: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:537:25)",
"0x55d5862eb930: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5862eb930: truck_geometry::specifieds::line::<impl truck_geotrait::traits::curve::ParameterDivision1D for truck_geometry::specifieds::Line<P>>::parameter_division (alloc/src/macros.rs:54:13)",
"0x55d5862eb930: <truck_modeling::geometry::Curve as truck_geotrait::traits::curve::ParameterDivision1D>::parameter_division (truck-modeling/src/geometry.rs:42:5)",
"0x55d5861ab12b: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5861ab12b: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5861ab12b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5861ab12b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5861ab12b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d5861ab12b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d5861ab12b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861ab12b: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861ab12b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861ab12b: <truck_topology::Solid<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:299:14)",
"0x55d586221391: test_truck::main (test-truck/src/main.rs:70:17)",
"0x55d5861a6d88: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861a6d88: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d5861a6d88: truck_shapeops::transversal::intersection_curve::IntersectionCurveWithParameters<S>::try_new (transversal/intersection_curve/mod.rs:57:17)",
"0x55d5861a6d88: truck_shapeops::transversal::intersection_curve::intersection_curves::{{closure}} (transversal/intersection_curve/mod.rs:162:25)",
"0x55d5861a6d88: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d5861a6d88: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d5861a6d88: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861a6d88: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d5861a6d88: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d5861a6d88: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d5861a6d88: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d5861a6d88: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:246:9)",
"0x55d5861a6d88: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861a6d88: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861a6d88: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:170:10)",
"0x55d5861a6d88: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d5861a6d88: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d5861a6d88: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861a6d88: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d5861a6d88: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861a6d88: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d5861a6d88: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d5861a3512: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d5861a3512: hashbrown::raw::RawTable<T,A>::find_or_find_insert_slot (src/raw/mod.rs:1413:9)",
"0x55d5861a3512: hashbrown::map::HashMap<K,V,S,A>::insert (hashbrown-0.14.5/src/map.rs:1754:15)",
"0x55d5861a3512: hashbrown::set::HashSet<T,S,A>::insert (hashbrown-0.14.5/src/set.rs:1115:9)",
"0x55d5861a3512: std::collections::hash::set::HashSet<T,S>::insert (collections/hash/set.rs:890:19)",
"0x55d5861a3512: truck_topology::shell::Boundaries<C>::insert (truck-topology/src/shell.rs:1096:30)",
"0x55d5861a3512: <truck_topology::shell::Boundaries<C> as core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>>>::from_iter::{{closure}} (truck-topology/src/shell.rs:1126:42)",
"0x55d5861a3512: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d5861a3512: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861a3512: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d5861a3512: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d58620e745: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d58620e745: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d58620e745: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d58620e745: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d58620e745: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d58620e745: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::get_conflict_resolutions (spade/src/cdt.rs:904:35)",
"0x55d58620e745: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::try_add_constraint_inner (spade/src/cdt.rs:818:13)",
"0x55d58620e745: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::add_constraint (spade/src/cdt.rs:550:17)",
"0x55d5861c45c4: truck_meshalgo::tessellation::triangulation::insert_surface::{{closure}}::{{closure}} (src/tessellation/triangulation.rs:569:25)",
"0x55d5861c45c4: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d5861c45c4: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::fold (iter/adapters/zip.rs:287:25)",
"0x55d5861c45c4: <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/zip.rs:103:9)",
"0x55d5861c45c4: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d5861c45c4: truck_meshalgo::tessellation::triangulation::insert_surface::{{closure}} (src/tessellation/triangulation.rs:560:40)",
"0x55d5861c45c4: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d5861c45c4: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d5861c45c4: truck_meshalgo::tessellation::triangulation::insert_surface (src/tessellation/triangulation.rs:559:27)",
"0x55d5861c45c4: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:527:5)",
"0x55d5861c45c4: truck_meshalgo::tessellation::triangulation::shell_create_polygon::{{closure}} (src/tessellation/triangulation.rs:218:14)",
"0x55d5861a1510: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5861a1510: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5861a1510: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5861a1510: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5861a1510: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d5861a1510: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d5861a1510: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861a1510: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861a1510: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861a1510: truck_polymesh::polyline_curve::<impl truck_geotrait::traits::Invertible for truck_polymesh::PolylineCurve<P>>::inverse (truck-polymesh/src/polyline_curve.rs:253:65)",
"0x55d5861a1510: truck_topology::edge::<impl truck_topology::Edge<P,C>>::oriented_curve (truck-topology/src/edge.rs:323:22)",
"0x55d5861a1510: core::ops::function::FnMut::call_mut (src/ops/function.rs:166:5)",
"0x55d5861a1510: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d5861a1510: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d5861a1510: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d5861a1510: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:9)",
"0x55d5861a1510: <core::iter::adapters::fuse::Fuse<I> as core::iter::adapters::fuse::FuseImpl<I>>::next (iter/adapters/fuse.rs:359:9)",
"0x55d5861a1510: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/fuse.rs:50:9)",
"0x55d5861a1510: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next (iter/adapters/flatten.rs:610:29)",
"0x55d5861a1510: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/flatten.rs:66:9)",
"0x55d58619b4a7: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d58619b4a7: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d58619b4a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:43:9)",
"0x55d58619b4a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d58619b4a7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d58619b4a7: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d58619b4a7: truck_meshalgo::tessellation::triangulation::PolyBoundaryPiece::try_new (src/tessellation/triangulation.rs:243:14)",
"0x55d58619b4a7: truck_meshalgo::tessellation::triangulation::shell_create_polygon::{{closure}} (src/tessellation/triangulation.rs:213:13)",
"0x55d58619b4a7: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:28)",
"0x55d58619b4a7: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d58619b4a7: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d58619b4a7: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/mod.rs:204:9)",
"0x55d58619b4a7: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d58619b4a7: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::next (iter/adapters/mod.rs:187:14)",
"0x55d58620ac6c: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d58620ac6c: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d58620ac6c: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:43:9)",
"0x55d58620ac6c: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d58620ac6c: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d58620ac6c: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d58620ac6c: <core::option::Option<V> as core::iter::traits::collect::FromIterator<core::option::Option<A>>>::from_iter::{{closure}} (core/src/option.rs:2467:51)",
"0x55d58620ac6c: core::iter::adapters::try_process (iter/adapters/mod.rs:173:17)",
"0x55d58620ac6c: <core::option::Option<V> as core::iter::traits::collect::FromIterator<core::option::Option<A>>>::from_iter (core/src/option.rs:2467:9)",
"0x55d58620ac6c: truck_meshalgo::tessellation::triangulation::shell_create_polygon (src/tessellation/triangulation.rs:215:10)",
"0x55d58620ac6c: truck_meshalgo::tessellation::triangulation::shell_tessellation::{{closure}} (src/tessellation/triangulation.rs:92:9)",
"0x55d58620ac6c: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut (src/ops/function.rs:272:13)",
"0x55d58620ac6c: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d58620ac6c: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d58620ac6c: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d58620ac6c: rayon::iter::plumbing::Folder::consume_iter (iter/plumbing/mod.rs:177:21)",
"0x55d58620ac6c: <rayon::iter::map::MapFolder<C,F> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/map.rs:248:21)",
"0x55d58620ac6c: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d58620ac6c: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d5861e1415: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::is_connected (truck-topology/src/shell.rs:415:9)",
"0x55d586218b20: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d586218b20: hashbrown::raw::alloc::inner::do_alloc (src/raw/alloc.rs:15:15)",
"0x55d586218b20: hashbrown::raw::RawTableInner::new_uninitialized (src/raw/mod.rs:1750:38)",
"0x55d586218b20: hashbrown::raw::RawTableInner::fallible_with_capacity (src/raw/mod.rs:1788:30)",
"0x55d586218b20: hashbrown::raw::RawTableInner::prepare_resize (src/raw/mod.rs:2864:13)",
"0x55d586218b20: hashbrown::raw::RawTableInner::resize_inner (src/raw/mod.rs:3060:34)",
"0x55d586218b20: hashbrown::raw::RawTableInner::reserve_rehash_inner (src/raw/mod.rs:2950:13)",
"0x55d586218b20: hashbrown::raw::RawTable<T,A>::reserve_rehash (src/raw/mod.rs:1231:13)",
"0x55d5861e1dd2: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d5861e1dd2: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d5861e1dd2: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.14.5/src/rustc_entry.rs:46:18)",
"0x55d5861e1dd2: std::collections::hash::map::HashMap<K,V,S>::entry (collections/hash/map.rs:856:19)",
"0x55d5861e1dd2: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert (truck-base/src/entry_map.rs:59:14)",
"0x55d5861e1dd2: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices::{{closure}} (truck-topology/src/shell.rs:534:21)",
"0x55d5861e1dd2: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d5861e1dd2: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861e1dd2: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861e1dd2: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d5861e1dd2: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d5861e1dd2: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d5861e1dd2: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861e1dd2: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d5861e1dd2: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d5861e1dd2: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d5861e1dd2: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d5861e1dd2: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d5861e1dd2: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices (truck-topology/src/shell.rs:528:14)",
"0x55d586221892: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:26:24)",
"0x55d586221892: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d586221892: truck_shapeops::transversal::integrate::or (transversal/integrate/mod.rs:145:10)",
"0x55d586221892: test_truck::main (test-truck/src/main.rs:76:21)",
"0x55d586208226: rayon_core::registry::in_worker (rayon-core-1.12.1/src/registry.rs:0:0)",
"0x55d586208226: rayon_core::join::join_context (src/join/mod.rs:132:5)",
"0x55d586208226: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:415:47)",
"0x55d586206964: rayon::iter::plumbing::bridge_producer_consumer (iter/plumbing/mod.rs:396:12)",
"0x55d586206964: <rayon::iter::plumbing::bridge::Callback<C> as rayon::iter::plumbing::ProducerCallback<I>>::callback (iter/plumbing/mod.rs:372:13)",
"0x55d586206964: <rayon::vec::Drain<T> as rayon::iter::IndexedParallelIterator>::with_producer (rayon-1.10.0/src/vec.rs:147:13)",
"0x55d586206964: <rayon::vec::IntoIter<T> as rayon::iter::IndexedParallelIterator>::with_producer (rayon-1.10.0/src/vec.rs:83:9)",
"0x55d586206964: rayon::iter::plumbing::bridge (iter/plumbing/mod.rs:356:12)",
"0x55d586206964: <rayon::vec::IntoIter<T> as rayon::iter::ParallelIterator>::drive_unindexed (rayon-1.10.0/src/vec.rs:58:9)",
"0x55d586206964: <rayon::iter::flat_map::FlatMapFolder<C,F,<C as rayon::iter::plumbing::Consumer<<U as rayon::iter::IntoParallelIterator>::Item>>::Result> as rayon::iter::plumbing::Folder<T>>::consume (src/iter/flat_map.rs:127:22)",
"0x55d586206964: rayon::iter::plumbing::Folder::consume_iter (iter/plumbing/mod.rs:178:20)",
"0x55d586206964: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d586206964: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d5861cabdf: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d5861cabdf: truck_shapeops::transversal::divide_face::divide_one_face::{{closure}} (transversal/divide_face/mod.rs:66:21)",
"0x55d5861cabdf: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d5861cabdf: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861cabdf: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d5861cabdf: truck_shapeops::transversal::divide_face::divide_one_face (transversal/divide_face/mod.rs:63:18)",
"0x55d5861cabdf: truck_shapeops::transversal::divide_face::divide_faces::{{closure}} (transversal/divide_face/mod.rs:122:27)",
"0x55d5861cabdf: truck_shapeops::transversal::divide_face::divide_faces (transversal/divide_face/mod.rs:115:10)",
"0x55d5862097f6: rayon::iter::plumbing::bridge_producer_consumer (iter/plumbing/mod.rs:396:12)",
"0x55d5862097f6: <rayon::iter::plumbing::bridge::Callback<C> as rayon::iter::plumbing::ProducerCallback<I>>::callback (iter/plumbing/mod.rs:372:13)",
"0x55d5862097f6: <rayon::vec::Drain<T> as rayon::iter::IndexedParallelIterator>::with_producer (rayon-1.10.0/src/vec.rs:147:13)",
"0x55d5862097f6: <rayon::vec::IntoIter<T> as rayon::iter::IndexedParallelIterator>::with_producer (rayon-1.10.0/src/vec.rs:83:9)",
"0x55d5862097f6: rayon::iter::plumbing::bridge (iter/plumbing/mod.rs:356:12)",
"0x55d5862097f6: <rayon::vec::IntoIter<T> as rayon::iter::ParallelIterator>::drive_unindexed (rayon-1.10.0/src/vec.rs:58:9)",
"0x55d5862097f6: <rayon::iter::flat_map::FlatMapFolder<C,F,<C as rayon::iter::plumbing::Consumer<<U as rayon::iter::IntoParallelIterator>::Item>>::Result> as rayon::iter::plumbing::Folder<T>>::consume (src/iter/flat_map.rs:127:22)",
"0x55d5862097f6: rayon::iter::plumbing::Folder::consume_iter (iter/plumbing/mod.rs:178:20)",
"0x55d5862097f6: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d5862097f6: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d58619df79: rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (iter/plumbing/mod.rs:417:21)",
"0x55d58619df79: rayon_core::join::join_context::call_a::{{closure}} (src/join/mod.rs:124:17)",
"0x55d58619df79: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d58619df79: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d58619df79: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d58619df79: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d58619df79: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d58619df79: rayon_core::join::join_context::{{closure}} (src/join/mod.rs:142:24)",
"0x55d58620abc6: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d58620abc6: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d58620abc6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d58620abc6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d58620abc6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d58620abc6: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55d58620abc6: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d58620abc6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d58620abc6: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d58620abc6: <core::option::Option<V> as core::iter::traits::collect::FromIterator<core::option::Option<A>>>::from_iter::{{closure}} (core/src/option.rs:2467:51)",
"0x55d58620abc6: core::iter::adapters::try_process (iter/adapters/mod.rs:173:17)",
"0x55d58620abc6: <core::option::Option<V> as core::iter::traits::collect::FromIterator<core::option::Option<A>>>::from_iter (core/src/option.rs:2467:9)",
"0x55d58620abc6: truck_meshalgo::tessellation::triangulation::shell_create_polygon (src/tessellation/triangulation.rs:215:10)",
"0x55d58620abc6: truck_meshalgo::tessellation::triangulation::shell_tessellation::{{closure}} (src/tessellation/triangulation.rs:92:9)",
"0x55d58620abc6: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut (src/ops/function.rs:272:13)",
"0x55d58620abc6: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d58620abc6: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d58620abc6: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d58620abc6: rayon::iter::plumbing::Folder::consume_iter (iter/plumbing/mod.rs:177:21)",
"0x55d58620abc6: <rayon::iter::map::MapFolder<C,F> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/map.rs:248:21)",
"0x55d58620abc6: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d58620abc6: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d586219f40: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d586219f40: hashbrown::raw::alloc::inner::do_alloc (src/raw/alloc.rs:15:15)",
"0x55d586219f40: hashbrown::raw::RawTableInner::new_uninitialized (src/raw/mod.rs:1750:38)",
"0x55d586219f40: hashbrown::raw::RawTableInner::fallible_with_capacity (src/raw/mod.rs:1788:30)",
"0x55d586219f40: hashbrown::raw::RawTableInner::prepare_resize (src/raw/mod.rs:2864:13)",
"0x55d586219f40: hashbrown::raw::RawTableInner::resize_inner (src/raw/mod.rs:3060:34)",
"0x55d586219f40: hashbrown::raw::RawTableInner::reserve_rehash_inner (src/raw/mod.rs:2950:13)",
"0x55d586219f40: hashbrown::raw::RawTable<T,A>::reserve_rehash (src/raw/mod.rs:1231:13)",
"0x55d5861e3a0c: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d5861e3a0c: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d5861e3a0c: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.14.5/src/rustc_entry.rs:46:18)",
"0x55d5861e3a0c: std::collections::hash::map::HashMap<K,V,S>::entry (collections/hash/map.rs:856:19)",
"0x55d5861e3a0c: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert (truck-base/src/entry_map.rs:59:14)",
"0x55d5861e3a0c: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::face_adjacency::{{closure}}::{{closure}} (truck-topology/src/shell.rs:332:33)",
"0x55d5861e3a0c: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d5861e3a0c: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::face_adjacency::{{closure}} (truck-topology/src/shell.rs:331:13)",
"0x55d5861e3a0c: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d5861e3a0c: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d5861e3a0c: <hashbrown::map::IntoIter<K,V,A> as core::iter::traits::iterator::Iterator>::fold (hashbrown-0.14.5/src/map.rs:4827:9)",
"0x55d5861e3a0c: <std::collections::hash::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::fold (collections/hash/map.rs:2332:19)",
"0x55d5861e3a0c: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d5861e3a0c: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::face_adjacency (truck-topology/src/shell.rs:330:35)",
"0x55d5861e3a0c: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::connected_components (truck-topology/src/shell.rs:450:29)",
"0x55d5861e0f3c: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d5861e0f3c: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d5861e0f3c: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.14.5/src/rustc_entry.rs:46:18)",
"0x55d5861e0f3c: std::collections::hash::map::HashMap<K,V,S>::entry (collections/hash/map.rs:856:19)",
"0x55d5861e0f3c: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert (truck-base/src/entry_map.rs:59:14)",
"0x55d5861e0f3c: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency::{{closure}} (truck-topology/src/shell.rs:234:17)",
"0x55d5861e0f3c: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d5861e0f3c: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861e0f3c: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d5861e0f3c: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d5861e0f3c: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d5861e0f3c: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d5861e0f3c: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d5861e0f3c: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d5861e0f3c: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d5861e0f3c: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:321:9)",
"0x55d5861e0f3c: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d5861e0f3c: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861e0f3c: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861e0f3c: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d5861e0f3c: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d5861e0f3c: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency (truck-topology/src/shell.rs:230:26)",
"0x55d5861e0f3c: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::is_connected (truck-topology/src/shell.rs:405:29)",
"0x55d5861dee51: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:22:24)",
"0x55d5861dee51: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d5861dee51: truck_shapeops::transversal::integrate::and (transversal/integrate/mod.rs:122:10)",
"0x55d5861a3efc: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d5861a3efc: hashbrown::raw::RawTable<T,A>::find_or_find_insert_slot (src/raw/mod.rs:1413:9)",
"0x55d5861a3efc: hashbrown::map::HashMap<K,V,S,A>::insert (hashbrown-0.14.5/src/map.rs:1754:15)",
"0x55d5861a3efc: <hashbrown::map::HashMap<K,V,S,A> as core::iter::traits::collect::Extend<(K,V)>>::extend::{{closure}} (hashbrown-0.14.5/src/map.rs:6512:13)",
"0x55d5861a3efc: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d5861a3efc: core::iter::adapters::filter_map::filter_map_fold::{{closure}} (iter/adapters/filter_map.rs:40:20)",
"0x55d5861a3efc: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861a3efc: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d5861a3efc: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d5861e24fa: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d5861e24fa: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d5861e24fa: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d5861e24fa: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d5861e24fa: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d5861e24fa: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:321:9)",
"0x55d5861e24fa: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d5861e24fa: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d5861e24fa: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861e24fa: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861e24fa: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d5861e24fa: <core::iter::adapters::filter_map::FilterMap<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/filter_map.rs:148:9)",
"0x55d5861e24fa: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d5861e24fa: <hashbrown::map::HashMap<K,V,S,A> as core::iter::traits::collect::Extend<(K,V)>>::extend (hashbrown-0.14.5/src/map.rs:6511:9)",
"0x55d5861e24fa: <std::collections::hash::map::HashMap<K,V,S> as core::iter::traits::collect::Extend<(K,V)>>::extend (collections/hash/map.rs:3144:9)",
"0x55d5861e24fa: <std::collections::hash::map::HashMap<K,V,S> as core::iter::traits::collect::FromIterator<(K,V)>>::from_iter (collections/hash/map.rs:3129:13)",
"0x55d5861e24fa: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861e24fa: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::extract_boundaries (truck-topology/src/shell.rs:180:14)",
"0x55d586210545: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d586210545: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d586210545: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d586210545: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d586210545: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d586210545: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d586210545: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d586210545: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d586210545: <truck_polymesh::StandardAttributes as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:44:5)",
"0x55d586210545: <truck_polymesh::PolygonMesh<V,A> as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:87:5)",
"0x55d586210545: <core::option::Option<T> as core::clone::Clone>::clone (core/src/option.rs:2038:29)",
"0x55d5861a4951: truck_topology::face::<impl truck_topology::Face<P,C,S>>::surface (truck-topology/src/face.rs:509:9)",
"0x55d5861a4951: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:470:28)",
"0x55d5861a4951: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d5861a4951: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861a4951: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d5861a4951: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861a4951: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d5861a4951: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d5861acf43: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d5861acf43: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d5861acf43: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.14.5/src/rustc_entry.rs:46:18)",
"0x55d5861acf43: std::collections::hash::map::HashMap<K,V,S>::entry (collections/hash/map.rs:856:19)",
"0x55d5861acf43: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert (truck-base/src/entry_map.rs:59:14)",
"0x55d5861acf43: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices::{{closure}} (truck-topology/src/shell.rs:534:21)",
"0x55d5861acf43: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d5861acf43: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861acf43: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861acf43: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d5861acf43: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d5861acf43: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d5861acf43: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861acf43: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d5861acf43: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d5861acf43: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d5861acf43: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d5861acf43: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d5861acf43: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices (truck-topology/src/shell.rs:528:14)",
"0x55d5861acf43: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:26:24)",
"0x55d5861acf43: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d5861acf43: <truck_topology::Solid<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:300:9)",
"0x55d5861cb211: truck_topology::face::<impl truck_topology::Face<P,C,S>>::surface (truck-topology/src/face.rs:509:9)",
"0x55d5861cb211: truck_shapeops::transversal::divide_face::divide_one_face::{{closure}} (transversal/divide_face/mod.rs:80:27)",
"0x55d5861cb211: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d5861cb211: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d5861cb211: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861cb211: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d5861cb211: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d5861cb211: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d5861cb211: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d5861cb211: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:246:9)",
"0x55d5861cb211: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861cb211: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861cb211: truck_shapeops::transversal::divide_face::divide_one_face (transversal/divide_face/mod.rs:98:10)",
"0x55d5861cb211: truck_shapeops::transversal::divide_face::divide_faces::{{closure}} (transversal/divide_face/mod.rs:122:27)",
"0x55d5861cb211: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d5861cb211: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861cb211: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d5861cb211: truck_shapeops::transversal::divide_face::divide_faces (transversal/divide_face/mod.rs:115:10)",
"0x55d5861e2ff9: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d5861e2ff9: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::extract_boundaries (truck-topology/src/shell.rs:195:17)",
"0x55d5861a9f9f: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5861a9f9f: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5861a9f9f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5861a9f9f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5861a9f9f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d5861a9f9f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55d5861a9f9f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861a9f9f: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861a9f9f: rayon::collections::hash_map::<impl rayon::iter::IntoParallelIterator for std::collections::hash::map::HashMap<K,V,S>>::into_par_iter (src/collections/mod.rs:18:32)",
"0x55d5861a9f9f: truck_meshalgo::tessellation::triangulation::shell_tessellation (src/tessellation/triangulation.rs:67:35)",
"0x55d5861a9f9f: <truck_topology::Shell<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:261:19)",
"0x55d5862096c0: truck_topology::face::<impl truck_topology::Face<P,C,S>>::boundaries (truck-topology/src/face.rs:103:21)",
"0x55d5862096c0: core::ops::function::Fn::call (src/ops/function.rs:79:5)",
"0x55d5862096c0: <rayon::iter::flat_map::FlatMapFolder<C,F,<C as rayon::iter::plumbing::Consumer<<U as rayon::iter::IntoParallelIterator>::Item>>::Result> as rayon::iter::plumbing::Folder<T>>::consume (src/iter/flat_map.rs:125:24)",
"0x55d5862096c0: rayon::iter::plumbing::Folder::consume_iter (iter/plumbing/mod.rs:178:20)",
"0x55d5862096c0: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d5862096c0: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d586209c0e: rayon_core::registry::in_worker (rayon-core-1.12.1/src/registry.rs:0:0)",
"0x55d586209c0e: rayon_core::join::join_context (src/join/mod.rs:132:5)",
"0x55d586209c0e: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:415:47)",
"0x55d586214053: rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (iter/plumbing/mod.rs:426:21)",
"0x55d586214053: rayon_core::join::join_context::call_b::{{closure}} (src/join/mod.rs:129:25)",
"0x55d586214053: rayon_core::job::JobResult<T>::call::{{closure}} (rayon-core-1.12.1/src/job.rs:218:41)",
"0x55d586214053: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d586214053: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d586214053: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d586214053: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d586214053: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d586214053: rayon_core::job::JobResult<T>::call (rayon-core-1.12.1/src/job.rs:218:15)",
"0x55d586214053: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.12.1/src/job.rs:120:32)",
"0x55d58622147d: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon::{{closure}} (src/tessellation/mod.rs:84:13)",
"0x55d58622147d: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d58622147d: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon (src/tessellation/mod.rs:83:9)",
"0x55d58622147d: test_truck::main (test-truck/src/main.rs:70:17)",
"0x55d5861e39b9: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861e39b9: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::face_adjacency::{{closure}}::{{closure}}::{{closure}} (alloc/src/macros.rs:54:13)",
"0x55d5861e39b9: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d5861e39b9: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::face_adjacency::{{closure}}::{{closure}} (truck-topology/src/shell.rs:333:17)",
"0x55d5861e39b9: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::face_adjacency::{{closure}} (truck-topology/src/shell.rs:331:13)",
"0x55d5861e39b9: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d5861e39b9: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d5861e39b9: <hashbrown::map::IntoIter<K,V,A> as core::iter::traits::iterator::Iterator>::fold (hashbrown-0.14.5/src/map.rs:4827:9)",
"0x55d5861e39b9: <std::collections::hash::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::fold (collections/hash/map.rs:2332:19)",
"0x55d5861e39b9: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d5861e39b9: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::face_adjacency (truck-topology/src/shell.rs:330:35)",
"0x55d5861e39b9: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::connected_components (truck-topology/src/shell.rs:450:29)",
"0x55d58621e7f8: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d58621e7f8: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d58621e7f8: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d58621e7f8: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d58621e7f8: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d58621e7f8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d58621e7f8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d58621e7f8: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d58621e7f8: <alloc::collections::vec_deque::VecDeque<T> as alloc::collections::vec_deque::spec_from_iter::SpecFromIter<T,I>>::spec_from_iter (collections/vec_deque/spec_from_iter.rs:17:9)",
"0x55d58621e7f8: <alloc::collections::vec_deque::VecDeque<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (collections/vec_deque/mod.rs:2863:9)",
"0x55d58621e7f8: truck_topology::wire::<impl core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>> for truck_topology::Wire<P,C>>::from_iter (truck-topology/src/wire.rs:599:20)",
"0x55d58621e7f8: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d58621e7f8: truck_modeling::closed_sweep::<impl truck_modeling::topo_traits::ClosedSweep<P,C,S> for truck_topology::Vertex<P>>::closed_sweep (truck-modeling/src/closed_sweep.rs:29:14)",
"0x55d58621e7f8: truck_modeling::builder::whole_rsweep (truck-modeling/src/builder.rs:679:5)",
"0x55d58621e7f8: truck_modeling::builder::rsweep (truck-modeling/src/builder.rs:636:9)",
"0x55d58621e7f8: test_truck::main (test-truck/src/main.rs:53:18)",
"0x55d5861ac689: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d5861ac689: hashbrown::raw::RawTable<T,A>::find_or_find_insert_slot (src/raw/mod.rs:1413:9)",
"0x55d5861ac689: hashbrown::map::HashMap<K,V,S,A>::insert (hashbrown-0.14.5/src/map.rs:1754:15)",
"0x55d5861ac689: std::collections::hash::map::HashMap<K,V,S>::insert (collections/hash/map.rs:1106:9)",
"0x55d5861ac689: truck_topology::shell::Boundaries<C>::insert (truck-topology/src/shell.rs:1097:33)",
"0x55d5861ac689: <truck_topology::shell::Boundaries<C> as core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>>>::from_iter::{{closure}} (truck-topology/src/shell.rs:1126:42)",
"0x55d5861ac689: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d5861ac689: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861ac689: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d5861ac689: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d5861ac689: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d5861ac689: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d5861ac689: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d5861ac689: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d5861ac689: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d5861ac689: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:321:9)",
"0x55d5861ac689: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d5861ac689: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861ac689: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861ac689: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d5861ac689: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d5861ac689: <truck_topology::shell::Boundaries<C> as core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>>>::from_iter (truck-topology/src/shell.rs:1126:9)",
"0x55d5861ac689: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861ac689: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::shell_condition (truck-topology/src/shell.rs:133:26)",
"0x55d5861ac689: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:24:23)",
"0x55d5861ac689: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d5861ac689: <truck_topology::Solid<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:300:9)",
"0x55d5861be39c: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d5861be39c: truck_meshalgo::tessellation::triangulation::PolyBoundary::new::{{closure}} (src/tessellation/triangulation.rs:344:21)",
"0x55d5861be39c: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d5861be39c: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d5861be39c: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d5861be39c: truck_meshalgo::tessellation::triangulation::PolyBoundary::new (src/tessellation/triangulation.rs:340:28)",
"0x55d5861be39c: truck_meshalgo::tessellation::triangulation::shell_create_polygon::{{closure}} (src/tessellation/triangulation.rs:217:24)",
"0x55d5862522f8: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5862522f8: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d5862522f8: <T as crossbeam_epoch::atomic::Pointable>::init (crossbeam-epoch-0.9.18/src/atomic.rs:200:23)",
"0x55d5862522f8: crossbeam_epoch::atomic::Owned<T>::init (crossbeam-epoch-0.9.18/src/atomic.rs:1147:35)",
"0x55d5862522f8: crossbeam_epoch::atomic::Owned<T>::new (crossbeam-epoch-0.9.18/src/atomic.rs:1132:9)",
"0x55d5862522f8: crossbeam_epoch::sync::queue::Queue<T>::new (src/sync/queue.rs:50:24)",
"0x55d5862522f8: crossbeam_epoch::internal::Global::new (crossbeam-epoch-0.9.18/src/internal.rs:176:20)",
"0x55d5862522f8: <crossbeam_epoch::collector::Collector as core::default::Default>::default (crossbeam-epoch-0.9.18/src/collector.rs:32:30)",
"0x55d5862522f8: crossbeam_epoch::collector::Collector::new (crossbeam-epoch-0.9.18/src/collector.rs:40:9)",
"0x55d5862522f8: core::ops::function::FnOnce::call_once (src/ops/function.rs:250:5)",
"0x55d5862522f8: crossbeam_epoch::sync::once_lock::OnceLock<T>::initialize::{{closure}} (src/sync/once_lock.rs:67:25)",
"0x55d5862522f8: std::sync::once::Once::call_once::{{closure}} (src/sync/once.rs:158:41)",
"0x55d5862522f8: std::sys::sync::once::futex::Once::call (sync/once/futex.rs:124:21)",
"0x55d5862521ab: std::sync::once::Once::call_once (src/sync/once.rs:158:9)",
"0x55d5862521ab: crossbeam_epoch::sync::once_lock::OnceLock<T>::initialize (src/sync/once_lock.rs:66:9)",
"0x55d58626a32b: crossbeam_epoch::sync::once_lock::OnceLock<T>::get_or_init (src/sync/once_lock.rs:53:9)",
"0x55d58626a32b: crossbeam_epoch::default::collector (crossbeam-epoch-0.9.18/src/default.rs:18:9)",
"0x55d58626a32b: crossbeam_epoch::default::HANDLE::__init (crossbeam-epoch-0.9.18/src/default.rs:34:34)",
"0x55d58626a32b: core::ops::function::FnOnce::call_once (src/ops/function.rs:250:5)",
"0x55d58626a32b: core::option::Option<T>::unwrap_or_else (core/src/option.rs:1008:21)",
"0x55d58626a32b: std::sys::thread_local::native::lazy::Storage<T,D>::initialize (thread_local/native/lazy.rs:65:42)",
"0x55d58626a58d: std::sys::thread_local::native::lazy::Storage<T,D>::get_or_init (thread_local/native/lazy.rs:57:40)",
"0x55d58626a58d: crossbeam_epoch::default::HANDLE::{{constant}}::{{closure}} (thread_local/native/mod.rs:93:25)",
"0x55d58626a58d: core::ops::function::FnOnce::call_once (src/ops/function.rs:250:5)",
"0x55d58626a58d: std::thread::local::LocalKey<T>::try_with (src/thread/local.rs:282:37)",
"0x55d58626a58d: crossbeam_epoch::default::with_handle (crossbeam-epoch-0.9.18/src/default.rs:59:5)",
"0x55d58626a58d: crossbeam_epoch::default::is_pinned (crossbeam-epoch-0.9.18/src/default.rs:46:5)",
"0x55d58626a58d: crossbeam_deque::deque::Stealer<T>::steal (crossbeam-deque-0.8.5/src/deque.rs:641:12)",
"0x55d586269c6b: rayon_core::registry::WorkerThread::take_local_job (rayon-core-1.12.1/src/registry.rs:751:19)",
"0x55d5862693a0: rayon_core::registry::WorkerThread::wait_until_cold (rayon-core-1.12.1/src/registry.rs:785:32)",
"0x55d5861dbce5: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d5861dbce5: truck_shapeops::transversal::faces_classification::FacesClassification<P,C,S>::and_or_unknown (transversal/faces_classification/mod.rs:31:39)",
"0x55d586216f62: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d586216f62: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d586216f62: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d586216f62: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new_unchecked (truck-topology/src/edge.rs:45:20)",
"0x55d586216f62: truck_topology::edge::<impl truck_topology::Edge<P,C>>::try_new (truck-topology/src/edge.rs:20:16)",
"0x55d586216f62: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new (truck-topology/src/edge.rs:33:9)",
"0x55d586216f62: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:190:25)",
"0x55d586216f62: std::collections::hash::map::Entry<K,V>::or_insert_with (collections/hash/map.rs:2666:43)",
"0x55d586216f62: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}} (transversal/loops_store/mod.rs:189:21)",
"0x55d586216f62: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d586216f62: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d586216f62: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861d70a1: <alloc::collections::vec_deque::iter_mut::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (collections/vec_deque/iter_mut.rs:71:21)",
"0x55d5861d70a1: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d5861d70a1: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d5861d70a1: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d5861d70a1: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861d70a1: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861d70a1: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d5861d70a1: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d5861d70a1: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d5861d70a1: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d5861d70a1: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d5861d70a1: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex (transversal/loops_store/mod.rs:183:14)",
"0x55d5861d70a1: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::change_vertex::{{closure}} (transversal/loops_store/mod.rs:295:31)",
"0x55d5861d70a1: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d5861d70a1: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::change_vertex (transversal/loops_store/mod.rs:294:9)",
"0x55d5861d70a1: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::add_polygon_vertex (transversal/loops_store/mod.rs:326:22)",
"0x55d5861c7c0f: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861c7c0f: truck_modeling::topo_impls::sub_connect_wires (alloc/src/macros.rs:54:13)",
"0x55d5861c7c0f: truck_modeling::topo_impls::connect_raw_wires::{{closure}} (truck-modeling/src/topo_impls.rs:118:9)",
"0x55d5861c7c0f: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d5861c7c0f: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d5861c7c0f: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d5861c7c0f: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d5861c7c0f: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d5861c7c0f: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d5861c7c0f: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (truck-modeling/src/sweep.rs:235:15)",
"0x55d5861c7c0f: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d5861c4997: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5861c4997: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5861c4997: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5861c4997: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5861c4997: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d5861c4997: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55d5861c4997: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861c4997: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861c4997: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861c4997: truck_meshalgo::tessellation::triangulation::triangulation_into_polymesh (src/tessellation/triangulation.rs:618:10)",
"0x55d5861c4997: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:528:20)",
"0x55d5861c4997: truck_meshalgo::tessellation::triangulation::shell_create_polygon::{{closure}} (src/tessellation/triangulation.rs:218:14)",
"0x55d5861db271: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861db271: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d5861db271: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d5861db271: truck_topology::edge::<impl truck_topology::Edge<P,C>>::cut_with_parameter (truck-topology/src/edge.rs:457:20)",
"0x55d5861db271: truck_shapeops::transversal::loops_store::LoopsStore<cgmath::point::Point3<f64>,C>::add_geom_vertex (transversal/loops_store/mod.rs:375:38)",
"0x55d5861c22a5: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d5861c22a5: truck_meshalgo::tessellation::triangulation::triangulation_into_polymesh::{{closure}} (src/tessellation/triangulation.rs:598:13)",
"0x55d5861c22a5: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d5861c22a5: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:108:27)",
"0x55d5861c22a5: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d5861c22a5: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:114:9)",
"0x55d5861c22a5: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861c22a5: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d5861c22a5: <hashbrown::map::HashMap<K,V,S,A> as core::iter::traits::collect::Extend<(K,V)>>::extend (hashbrown-0.14.5/src/map.rs:6511:9)",
"0x55d5861c22a5: <std::collections::hash::map::HashMap<K,V,S> as core::iter::traits::collect::Extend<(K,V)>>::extend (collections/hash/map.rs:3144:9)",
"0x55d5861c22a5: <std::collections::hash::map::HashMap<K,V,S> as core::iter::traits::collect::FromIterator<(K,V)>>::from_iter (collections/hash/map.rs:3129:13)",
"0x55d5861c22a5: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861c22a5: truck_meshalgo::tessellation::triangulation::triangulation_into_polymesh (src/tessellation/triangulation.rs:603:10)",
"0x55d5861c22a5: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:528:20)",
"0x55d5861c22a5: truck_meshalgo::tessellation::triangulation::shell_create_polygon::{{closure}} (src/tessellation/triangulation.rs:218:14)",
"0x55d5862bb2e9: alloc::raw_vec::finish_grow (core/src/result.rs:0:0)",
"0x55d5862c3c38: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:486:19)",
"0x55d5862c3c38: alloc::raw_vec::RawVec<T,A>::grow_one (alloc/src/raw_vec.rs:364:27)",
"0x55d5862c0581: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d5862c0581: spade::delaunay_core::dcel_operations::insert_second_vertex (src/delaunay_core/dcel_operations.rs:875:5)",
"0x55d5862c0581: spade::delaunay_core::triangulation_ext::TriangulationExt::insert_second_vertex (src/delaunay_core/triangulation_ext.rs:179:29)",
"0x55d5862c0581: spade::delaunay_core::triangulation_ext::TriangulationExt::insert_with_hint_option_impl (src/delaunay_core/triangulation_ext.rs:83:18)",
"0x55d5862c0581: spade::delaunay_core::triangulation_ext::TriangulationExt::insert_with_hint_option (src/delaunay_core/triangulation_ext.rs:67:22)",
"0x55d5861bf51c: spade::triangulation::Triangulation::insert (spade/src/triangulation.rs:552:9)",
"0x55d5861bf51c: truck_meshalgo::tessellation::triangulation::PolyBoundary::insert_to::{{closure}} (src/tessellation/triangulation.rs:482:31)",
"0x55d5861bf51c: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d5861bf51c: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d5861bf51c: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d5861bf51c: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d5861bf51c: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d5861bf51c: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:43:9)",
"0x55d5861bf51c: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861bf51c: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861bf51c: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861bf51c: truck_meshalgo::tessellation::triangulation::PolyBoundary::insert_to (src/tessellation/triangulation.rs:484:14)",
"0x55d5861bf51c: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:526:5)",
"0x55d5861bf51c: truck_meshalgo::tessellation::triangulation::shell_create_polygon::{{closure}} (src/tessellation/triangulation.rs:218:14)",
"0x55d586216d3e: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d586216d3e: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d586216d3e: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d586216d3e: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d586216d3e: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d586216d3e: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d586216d3e: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d586216d3e: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d586216d3e: <truck_polymesh::PolylineCurve<P> as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:101:29)",
"0x55d586216d3e: truck_topology::edge::<impl truck_topology::Edge<P,C>>::curve (truck-topology/src/edge.rs:255:9)",
"0x55d586216d3e: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:190:70)",
"0x55d586216d3e: std::collections::hash::map::Entry<K,V>::or_insert_with (collections/hash/map.rs:2666:43)",
"0x55d586216d3e: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}} (transversal/loops_store/mod.rs:189:21)",
"0x55d586216d3e: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d586216d3e: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d586216d3e: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861e1012: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d5861e1012: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d5861e1012: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.14.5/src/rustc_entry.rs:46:18)",
"0x55d5861e1012: std::collections::hash::map::HashMap<K,V,S>::entry (collections/hash/map.rs:856:19)",
"0x55d5861e1012: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert (truck-base/src/entry_map.rs:59:14)",
"0x55d5861e1012: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency::{{closure}} (truck-topology/src/shell.rs:235:17)",
"0x55d5861e1012: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d5861e1012: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861e1012: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d5861e1012: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d5861e1012: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d5861e1012: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d5861e1012: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d5861e1012: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d5861e1012: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d5861e1012: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:321:9)",
"0x55d5861e1012: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d5861e1012: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861e1012: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861e1012: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d5861e1012: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d5861e1012: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency (truck-topology/src/shell.rs:230:26)",
"0x55d5861e1012: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::is_connected (truck-topology/src/shell.rs:405:29)",
"0x55d5861cab91: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861cab91: truck_shapeops::transversal::divide_face::divide_one_face::{{closure}} (alloc/src/macros.rs:54:13)",
"0x55d5861cab91: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d5861cab91: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861cab91: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d5861cab91: truck_shapeops::transversal::divide_face::divide_one_face (transversal/divide_face/mod.rs:63:18)",
"0x55d5861cab91: truck_shapeops::transversal::divide_face::divide_faces::{{closure}} (transversal/divide_face/mod.rs:122:27)",
"0x55d5861cab91: truck_shapeops::transversal::divide_face::divide_faces (transversal/divide_face/mod.rs:115:10)",
"0x55d5861df9bd: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5861df9bd: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5861df9bd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5861df9bd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5861df9bd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d5861df9bd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55d5861df9bd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861df9bd: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861df9bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861df9bd: truck_topology::wire::<impl truck_topology::Wire<P,C>>::swap_edge_into_wire (truck-topology/src/wire.rs:364:55)",
"0x55d5861d7b4b: truck_shapeops::transversal::loops_store::Loops<P,C>::swap_edge_into_wire::{{closure}} (transversal/loops_store/mod.rs:212:21)",
"0x55d5861d7b4b: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d5861d7b4b: truck_shapeops::transversal::loops_store::Loops<P,C>::swap_edge_into_wire (transversal/loops_store/mod.rs:208:9)",
"0x55d5861d7b4b: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::swap_edge_into_wire::{{closure}} (transversal/loops_store/mod.rs:301:31)",
"0x55d5861d7b4b: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::swap_edge_into_wire (transversal/loops_store/mod.rs:300:9)",
"0x55d5861d7b4b: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::add_polygon_vertex (transversal/loops_store/mod.rs:333:22)",
"0x55d5861acee0: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d5861acee0: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices::{{closure}} (truck-topology/src/shell.rs:535:21)",
"0x55d5861acee0: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d5861acee0: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861acee0: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861acee0: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d5861acee0: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d5861acee0: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d5861acee0: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861acee0: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d5861acee0: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d5861acee0: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d5861acee0: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d5861acee0: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d5861acee0: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices (truck-topology/src/shell.rs:528:14)",
"0x55d5861acee0: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:26:24)",
"0x55d5861acee0: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d5861acee0: <truck_topology::Solid<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:300:9)",
"0x55d5862f6b89: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5862f6b89: hashbrown::raw::alloc::inner::do_alloc (src/raw/alloc.rs:15:15)",
"0x55d5862f6b89: hashbrown::raw::RawTableInner::new_uninitialized (src/raw/mod.rs:1750:38)",
"0x55d5862f6b89: hashbrown::raw::RawTableInner::fallible_with_capacity (src/raw/mod.rs:1788:30)",
"0x55d5862f6b89: hashbrown::raw::RawTableInner::prepare_resize (src/raw/mod.rs:2864:13)",
"0x55d5862f6b89: hashbrown::raw::RawTableInner::resize_inner (src/raw/mod.rs:3060:34)",
"0x55d5862f6b89: hashbrown::raw::RawTableInner::reserve_rehash_inner (src/raw/mod.rs:2950:13)",
"0x55d5862f6b89: hashbrown::raw::RawTable<T,A>::reserve_rehash (src/raw/mod.rs:1231:13)",
"0x55d5862f54a6: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d5862f54a6: hashbrown::raw::RawTable<T,A>::find_or_find_insert_slot (src/raw/mod.rs:1413:9)",
"0x55d5862f54a6: hashbrown::map::HashMap<K,V,S,A>::insert (hashbrown-0.14.5/src/map.rs:1754:15)",
"0x55d5862f54a6: std::collections::hash::map::HashMap<K,V,S>::insert (collections/hash/map.rs:1106:9)",
"0x55d5862f54a6: truck_shapeops::transversal::polyline_construction::Graph::add_half_edge (transversal/polyline_construction/mod.rs:75:18)",
"0x55d5861a5e7a: truck_shapeops::transversal::polyline_construction::Graph::add_edge (transversal/polyline_construction/mod.rs:81:13)",
"0x55d5861a5e7a: <truck_shapeops::transversal::polyline_construction::Graph as core::iter::traits::collect::FromIterator<&(cgmath::point::Point3<f64>,cgmath::point::Point3<f64>)>>::from_iter::{{closure}} (transversal/polyline_construction/mod.rs:111:42)",
"0x55d5861a5e7a: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d5861a5e7a: <truck_shapeops::transversal::polyline_construction::Graph as core::iter::traits::collect::FromIterator<&(cgmath::point::Point3<f64>,cgmath::point::Point3<f64>)>>::from_iter (transversal/polyline_construction/mod.rs:111:9)",
"0x55d5861a5e7a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861a5e7a: truck_shapeops::transversal::polyline_construction::construct_polylines (transversal/polyline_construction/mod.rs:7:41)",
"0x55d5861a5e7a: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:158:21)",
"0x55d5861a5e7a: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d5861a5e7a: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d5861a5e7a: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861a5e7a: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d5861a5e7a: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861a5e7a: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d5861a5e7a: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d5861cb3b1: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861cb3b1: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d5861cb3b1: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d5861cb3b1: truck_topology::face::<impl truck_topology::Face<P,C,S>>::new_unchecked (truck-topology/src/face.rs:64:22)",
"0x55d5861cb3b1: truck_topology::face::<impl truck_topology::Face<P,C,S>>::debug_new (truck-topology/src/face.rs:76:22)",
"0x55d5861cb3b1: truck_shapeops::transversal::divide_face::divide_one_face::{{closure}} (transversal/divide_face/mod.rs:92:32)",
"0x55d5861cb3b1: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d5861cb3b1: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d5861cb3b1: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861cb3b1: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d5861cb3b1: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d5861cb3b1: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d5861cb3b1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d5861cb3b1: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:246:9)",
"0x55d5861cb3b1: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861cb3b1: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861cb3b1: truck_shapeops::transversal::divide_face::divide_one_face (transversal/divide_face/mod.rs:98:10)",
"0x55d5861cb3b1: truck_shapeops::transversal::divide_face::divide_faces::{{closure}} (transversal/divide_face/mod.rs:122:27)",
"0x55d5861cb3b1: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d5861cb3b1: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861cb3b1: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d5861cb3b1: truck_shapeops::transversal::divide_face::divide_faces (transversal/divide_face/mod.rs:115:10)",
"0x55d5861f5730: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5861f5730: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5861f5730: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5861f5730: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5861f5730: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d5861f5730: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d5861f5730: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861f5730: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861f5730: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861f5730: <truck_shapeops::transversal::loops_store::LoopsStore<P,C> as core::iter::traits::collect::FromIterator<&truck_topology::Face<P,C,S>>>::from_iter (transversal/loops_store/mod.rs:129:48)",
"0x55d5861dcb7d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861dcb7d: truck_shapeops::transversal::loops_store::create_loops_stores (transversal/loops_store/mod.rs:457:75)",
"0x55d5861dcb7d: truck_shapeops::transversal::integrate::process_one_pair_of_shells (transversal/integrate/mod.rs:62:9)",
"0x55d586205c2d: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:486:19)",
"0x55d586205c2d: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:349:31)",
"0x55d5861df2d3: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:355:13)",
"0x55d5861df2d3: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:972:18)",
"0x55d5861df2d3: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3093:18)",
"0x55d5861df2d3: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d5861df2d3: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d5861df2d3: truck_topology::wire::<impl truck_topology::Wire<P,C>>::swap_edge_into_wire (truck-topology/src/wire.rs:365:18)",
"0x55d5861db548: truck_shapeops::transversal::loops_store::Loops<P,C>::swap_edge_into_wire::{{closure}} (transversal/loops_store/mod.rs:212:21)",
"0x55d5861db548: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d5861db548: truck_shapeops::transversal::loops_store::Loops<P,C>::swap_edge_into_wire (transversal/loops_store/mod.rs:208:9)",
"0x55d5861db548: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::swap_edge_into_wire::{{closure}} (transversal/loops_store/mod.rs:301:31)",
"0x55d5861db548: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::swap_edge_into_wire (transversal/loops_store/mod.rs:300:9)",
"0x55d5861db548: truck_shapeops::transversal::loops_store::LoopsStore<cgmath::point::Point3<f64>,C>::add_geom_vertex (transversal/loops_store/mod.rs:377:22)",
"0x55d5861e0e4e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d5861e0e4e: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency::{{closure}} (truck-topology/src/shell.rs:235:17)",
"0x55d5861e0e4e: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d5861e0e4e: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861e0e4e: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d5861e0e4e: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d5861e0e4e: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d5861e0e4e: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d5861e0e4e: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d5861e0e4e: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d5861e0e4e: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d5861e0e4e: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:321:9)",
"0x55d5861e0e4e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d5861e0e4e: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861e0e4e: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861e0e4e: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d5861e0e4e: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d5861e0e4e: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency (truck-topology/src/shell.rs:230:26)",
"0x55d5861e0e4e: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::is_connected (truck-topology/src/shell.rs:405:29)",
"0x55d5862f61de: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:486:19)",
"0x55d5862f61de: alloc::raw_vec::RawVec<T,A>::grow_one (alloc/src/raw_vec.rs:364:27)",
"0x55d5861a640f: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d5861a640f: truck_shapeops::transversal::polyline_construction::construct_polylines (transversal/polyline_construction/mod.rs:21:9)",
"0x55d5861a640f: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:158:21)",
"0x55d5861a640f: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d5861a640f: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d5861a640f: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861a640f: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d5861a640f: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861a640f: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d5861a640f: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d5861c90e3: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d5861c90e3: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d5861c90e3: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.14.5/src/rustc_entry.rs:46:18)",
"0x55d5861c90e3: std::collections::hash::map::HashMap<K,V,S>::entry (collections/hash/map.rs:856:19)",
"0x55d5861c90e3: truck_modeling::topo_impls::sub_connect_wires (truck-modeling/src/topo_impls.rs:66:10)",
"0x55d5861c90e3: truck_modeling::topo_impls::connect_raw_wires::{{closure}} (truck-modeling/src/topo_impls.rs:118:9)",
"0x55d5861c90e3: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d5861c90e3: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d5861c90e3: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d5861c90e3: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d5861c90e3: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d5861c90e3: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d5861c90e3: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (truck-modeling/src/sweep.rs:235:15)",
"0x55d5861c90e3: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d58626e36f: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d58626e36f: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d58626e36f: std::sys::pal::unix::thread::Thread::new (pal/unix/thread.rs:52:31)",
"0x55d58626e36f: std::thread::Builder::spawn_unchecked_ (src/thread/mod.rs:581:30)",
"0x55d58626e36f: std::thread::Builder::spawn_unchecked (src/thread/mod.rs:456:32)",
"0x55d58626e36f: std::thread::Builder::spawn (src/thread/mod.rs:388:18)",
"0x55d58626e36f: <rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn (rayon-core-1.12.1/src/registry.rs:98:11)",
"0x55d58626e36f: rayon_core::registry::Registry::new (rayon-core-1.12.1/src/registry.rs:304:29)",
"0x55d5861a5fc1: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861a5fc1: truck_shapeops::transversal::polyline_construction::construct_polylines (alloc/src/macros.rs:54:13)",
"0x55d5861a5fc1: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:158:21)",
"0x55d5861a5fc1: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d5861a5fc1: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d5861a5fc1: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861a5fc1: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d5861a5fc1: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861a5fc1: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d5861a5fc1: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d5861a5bfd: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5861a5bfd: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5861a5bfd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5861a5bfd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5861a5bfd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d5861a5bfd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55d5861a5bfd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861a5bfd: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861a5bfd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861a5bfd: truck_meshalgo::analyzers::collision::collision (src/analyzers/collision.rs:229:10)",
"0x55d5861a5bfd: <truck_polymesh::PolygonMesh as truck_meshalgo::analyzers::collision::Collision>::extract_interference (src/analyzers/collision.rs:34:9)",
"0x55d5861a5bfd: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:157:34)",
"0x55d5861a5bfd: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d5861a5bfd: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d5861a5bfd: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861a5bfd: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d5861a5bfd: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861a5bfd: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d5861a5bfd: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d5862064ea: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:486:19)",
"0x55d5862064ea: alloc::raw_vec::RawVec<T,A>::grow_one (alloc/src/raw_vec.rs:364:27)",
"0x55d58620e928: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d58620e928: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::get_conflict_resolutions (spade/src/cdt.rs:911:25)",
"0x55d58620e928: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::try_add_constraint_inner (spade/src/cdt.rs:818:13)",
"0x55d58620e928: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::add_constraint (spade/src/cdt.rs:550:17)",
"0x55d5861a2b95: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861a2b95: truck_topology::shell::create_one_component (alloc/src/macros.rs:54:13)",
"0x55d5861a2b95: truck_topology::shell::check_connectivity (truck-topology/src/shell.rs:1133:5)",
"0x55d5861a2b95: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices::{{closure}}::{{closure}} (truck-topology/src/shell.rs:541:42)",
"0x55d5861a2b95: core::option::Option<T>::filter (core/src/option.rs:1479:16)",
"0x55d5861a2b95: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices::{{closure}} (truck-topology/src/shell.rs:541:17)",
"0x55d5861a2b95: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861a2b95: core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (iter/traits/iterator.rs:2907:32)",
"0x55d5861a2b95: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861a2b95: core::iter::traits::iterator::Iterator::find_map (iter/traits/iterator.rs:2913:9)",
"0x55d5861a2b95: <core::iter::adapters::filter_map::FilterMap<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/filter_map.rs:64:9)",
"0x55d5861ad1d4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:26:32)",
"0x55d5861ad1d4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861ad1d4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861ad1d4: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861ad1d4: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices (truck-topology/src/shell.rs:543:14)",
"0x55d5861ad1d4: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:26:24)",
"0x55d5861ad1d4: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d5861ad1d4: <truck_topology::Solid<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:300:9)",
"0x55d5862eb8f6: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5862eb8f6: truck_geometry::specifieds::line::<impl truck_geotrait::traits::curve::ParameterDivision1D for truck_geometry::specifieds::Line<P>>::parameter_division (alloc/src/macros.rs:54:13)",
"0x55d5862eb8f6: <truck_modeling::geometry::Curve as truck_geotrait::traits::curve::ParameterDivision1D>::parameter_division (truck-modeling/src/geometry.rs:42:5)",
"0x55d5862166ae: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d5862166ae: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d5862166ae: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.14.5/src/rustc_entry.rs:46:18)",
"0x55d5862166ae: std::collections::hash::map::HashMap<K,V,S>::entry (collections/hash/map.rs:856:19)",
"0x55d5862166ae: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert (truck-base/src/entry_map.rs:59:14)",
"0x55d5862166ae: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::face_adjacency::{{closure}}::{{closure}} (truck-topology/src/shell.rs:326:33)",
"0x55d5862166ae: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d5862166ae: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5862166ae: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861e3edf: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d5861e3edf: truck_topology::shell::create_one_component (truck-topology/src/shell.rs:1165:13)",
"0x55d5861e3edf: truck_topology::shell::create_components (truck-topology/src/shell.rs:1143:25)",
"0x55d5861e3edf: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::connected_components (truck-topology/src/shell.rs:451:26)",
"0x55d58621c9a8: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d58621c9a8: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d58621c9a8: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d58621c9a8: truck_topology::vertex::<impl truck_topology::Vertex<P>>::new (truck-topology/src/vertex.rs:17:20)",
"0x55d58621c9a8: truck_topology::vertex::<impl truck_topology::Vertex<P>>::mapped (truck-topology/src/vertex.rs:90:9)",
"0x55d58621c9a8: truck_topology::edge::<impl truck_topology::Edge<P,C>>::mapped (truck-topology/src/edge.rs:376:18)",
"0x55d58621c9a8: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Edge<P,C>>::sweep (truck-modeling/src/sweep.rs:98:20)",
"0x55d58621c9a8: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d58621c9a8: test_truck::main (test-truck/src/main.rs:43:21)",
"0x55d5861cb142: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5861cb142: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5861cb142: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5861cb142: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5861cb142: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d5861cb142: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d5861cb142: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:246:9)",
"0x55d5861cb142: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861cb142: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861cb142: truck_shapeops::transversal::divide_face::divide_one_face (transversal/divide_face/mod.rs:98:10)",
"0x55d5861cb142: truck_shapeops::transversal::divide_face::divide_faces::{{closure}} (transversal/divide_face/mod.rs:122:27)",
"0x55d5861cb142: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d5861cb142: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861cb142: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d5861cb142: truck_shapeops::transversal::divide_face::divide_faces (transversal/divide_face/mod.rs:115:10)",
"0x55d5861c8f91: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861c8f91: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d5861c8f91: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d5861c8f91: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new_unchecked (truck-topology/src/edge.rs:45:20)",
"0x55d5861c8f91: truck_topology::edge::<impl truck_topology::Edge<P,C>>::debug_new (truck-topology/src/edge.rs:57:22)",
"0x55d5861c8f91: truck_modeling::topo_impls::connect_vertices (truck-modeling/src/topo_impls.rs:17:5)",
"0x55d5861c8f91: truck_modeling::topo_impls::sub_connect_wires::{{closure}} (truck-modeling/src/topo_impls.rs:63:28)",
"0x55d5861c8f91: std::collections::hash::map::Entry<K,V>::or_insert_with (collections/hash/map.rs:2666:43)",
"0x55d5861c8f91: truck_modeling::topo_impls::sub_connect_wires (truck-modeling/src/topo_impls.rs:61:17)",
"0x55d5861c8f91: truck_modeling::topo_impls::connect_raw_wires::{{closure}} (truck-modeling/src/topo_impls.rs:118:9)",
"0x55d5861c8f91: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d5861c8f91: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d5861c8f91: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d5861c8f91: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d5861c8f91: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d5861c8f91: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d5861c8f91: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (truck-modeling/src/sweep.rs:235:15)",
"0x55d5861c8f91: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d5862ba8fc: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5862ba8fc: truck_meshalgo::analyzers::collision::EndPoint::from_seg (alloc/src/macros.rs:54:13)",
"0x55d5862ba8fc: truck_meshalgo::analyzers::collision::sorted_endpoints::{{closure}} (src/analyzers/collision.rs:93:38)",
"0x55d5862ba8fc: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d5862ba8fc: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d5862ba8fc: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d5862ba8fc: <core::iter::adapters::fuse::Fuse<I> as core::iter::adapters::fuse::FuseImpl<I>>::next (iter/adapters/fuse.rs:359:9)",
"0x55d5862ba8fc: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/fuse.rs:50:9)",
"0x55d5862ba8fc: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next (iter/adapters/flatten.rs:610:29)",
"0x55d5862ba8fc: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/flatten.rs:66:9)",
"0x55d5862ba8fc: <core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::next::{{closure}} (iter/adapters/chain.rs:84:67)",
"0x55d5862ba8fc: core::option::Option<T>::or_else (core/src/option.rs:1543:21)",
"0x55d5862ba8fc: <core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::next (iter/adapters/chain.rs:84:9)",
"0x55d5861a56db: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d5861a56db: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d5861a56db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:43:9)",
"0x55d5861a56db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861a56db: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861a56db: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861a56db: truck_meshalgo::analyzers::collision::sorted_endpoints (src/analyzers/collision.rs:95:10)",
"0x55d5861a56db: truck_meshalgo::analyzers::collision::collision (src/analyzers/collision.rs:220:29)",
"0x55d5861a56db: <truck_polymesh::PolygonMesh as truck_meshalgo::analyzers::collision::Collision>::extract_interference (src/analyzers/collision.rs:34:9)",
"0x55d5861a56db: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:157:34)",
"0x55d5861a56db: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d5861a56db: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d5861a56db: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861a56db: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d5861a56db: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861a56db: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d5861a56db: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d58621f046: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d58621f046: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d58621f046: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d58621f046: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new_unchecked (truck-topology/src/edge.rs:45:20)",
"0x55d58621f046: truck_topology::edge::<impl truck_topology::Edge<P,C>>::debug_new (truck-topology/src/edge.rs:57:22)",
"0x55d58621f046: truck_modeling::topo_impls::connect_vertices (truck-modeling/src/topo_impls.rs:17:5)",
"0x55d58621f046: truck_modeling::closed_sweep::<impl truck_modeling::topo_traits::ClosedSweep<P,C,S> for truck_topology::Vertex<P>>::closed_sweep::{{closure}} (truck-modeling/src/closed_sweep.rs:25:28)",
"0x55d58621f046: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d58621f046: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d58621f046: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d58621f046: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d58621f046: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d58621f046: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d58621f046: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d58621f046: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d58621f046: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d58621f046: <alloc::collections::vec_deque::VecDeque<T> as alloc::collections::vec_deque::spec_from_iter::SpecFromIter<T,I>>::spec_from_iter (collections/vec_deque/spec_from_iter.rs:17:9)",
"0x55d58621f046: <alloc::collections::vec_deque::VecDeque<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (collections/vec_deque/mod.rs:2863:9)",
"0x55d58621f046: truck_topology::wire::<impl core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>> for truck_topology::Wire<P,C>>::from_iter (truck-topology/src/wire.rs:599:20)",
"0x55d58621f046: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d58621f046: truck_modeling::closed_sweep::<impl truck_modeling::topo_traits::ClosedSweep<P,C,S> for truck_topology::Vertex<P>>::closed_sweep (truck-modeling/src/closed_sweep.rs:29:14)",
"0x55d58621f046: truck_modeling::builder::whole_rsweep (truck-modeling/src/builder.rs:679:5)",
"0x55d58621f046: truck_modeling::builder::rsweep (truck-modeling/src/builder.rs:636:9)",
"0x55d58621f046: test_truck::main (test-truck/src/main.rs:53:18)",
"0x55d5861e1d70: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d5861e1d70: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices::{{closure}} (truck-topology/src/shell.rs:535:21)",
"0x55d5861e1d70: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d5861e1d70: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861e1d70: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861e1d70: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d5861e1d70: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d5861e1d70: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d5861e1d70: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861e1d70: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d5861e1d70: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d5861e1d70: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d5861e1d70: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d5861e1d70: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d5861e1d70: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices (truck-topology/src/shell.rs:528:14)",
"0x55d5861a5542: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5861a5542: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5861a5542: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5861a5542: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5861a5542: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d5861a5542: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55d5861a5542: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861a5542: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861a5542: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861a5542: truck_meshalgo::analyzers::collision::sorted_endpoints (src/analyzers/collision.rs:95:10)",
"0x55d5861a5542: truck_meshalgo::analyzers::collision::collision (src/analyzers/collision.rs:220:29)",
"0x55d5861a5542: <truck_polymesh::PolygonMesh as truck_meshalgo::analyzers::collision::Collision>::extract_interference (src/analyzers/collision.rs:34:9)",
"0x55d5861a5542: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:157:34)",
"0x55d5861a5542: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d5861a5542: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d5861a5542: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861a5542: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d5861a5542: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861a5542: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d5861a5542: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d5861dca16: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d5861dca16: truck_shapeops::transversal::faces_classification::FacesClassification<P,C,S>::push (transversal/faces_classification/mod.rs:23:9)",
"0x55d58621870b: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d58621870b: <&A as core::alloc::Allocator>::allocate (src/alloc/mod.rs:381:9)",
"0x55d58621870b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:529:13)",
"0x55d58621870b: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:491:15)",
"0x55d58621870b: alloc::boxed::Box<T,A>::new_in (alloc/src/boxed.rs:425:25)",
"0x55d58621870b: alloc::collections::linked_list::LinkedList<T,A>::push_back (src/collections/linked_list.rs:897:20)",
"0x55d58621870b: <rayon::iter::extend::ListVecFolder<T> as rayon::iter::plumbing::Folder<T>>::complete (src/iter/extend.rs:137:13)",
"0x55d58621870b: <rayon::iter::map::MapFolder<C,F> as rayon::iter::plumbing::Folder<T>>::complete (src/iter/map.rs:253:9)",
"0x55d58620a294: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d58619ccdc: rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (iter/plumbing/mod.rs:417:21)",
"0x55d58619ccdc: rayon_core::join::join_context::call_a::{{closure}} (src/join/mod.rs:124:17)",
"0x55d58619ccdc: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d58619ccdc: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d58619ccdc: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d58619ccdc: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d58619ccdc: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d58619ccdc: rayon_core::join::join_context::{{closure}} (src/join/mod.rs:142:24)",
"0x55d5862093a8: rayon_core::registry::in_worker (rayon-core-1.12.1/src/registry.rs:0:0)",
"0x55d5862093a8: rayon_core::join::join_context (src/join/mod.rs:132:5)",
"0x55d5862093a8: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:415:47)",
"0x55d5861d79b7: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861d79b7: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::add_polygon_vertex (alloc/src/macros.rs:54:13)",
"0x55d586221878: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:24:23)",
"0x55d586221878: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d586221878: truck_shapeops::transversal::integrate::or (transversal/integrate/mod.rs:145:10)",
"0x55d586221878: test_truck::main (test-truck/src/main.rs:76:21)",
"0x55d5861c6955: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5861c6955: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5861c6955: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5861c6955: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5861c6955: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d5861c6955: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d5861c6955: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861c6955: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861c6955: <alloc::collections::vec_deque::VecDeque<T> as alloc::collections::vec_deque::spec_from_iter::SpecFromIter<T,I>>::spec_from_iter (collections/vec_deque/spec_from_iter.rs:17:9)",
"0x55d5861c6955: <alloc::collections::vec_deque::VecDeque<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (collections/vec_deque/mod.rs:2863:9)",
"0x55d5861c6955: truck_topology::wire::<impl core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>> for truck_topology::Wire<P,C>>::from_iter (truck-topology/src/wire.rs:599:20)",
"0x55d5861c6955: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861c6955: truck_topology::wire::<impl truck_topology::Wire<P,C>>::sub_mapped (truck-topology/src/wire.rs:439:14)",
"0x55d5861c6955: truck_topology::wire::<impl truck_topology::Wire<P,C>>::mapped (truck-topology/src/wire.rs:494:9)",
"0x55d5861c6955: truck_topology::face::<impl truck_topology::Face<P,C,S>>::mapped::{{closure}} (truck-topology/src/face.rs:488:25)",
"0x55d5861c6955: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d5861c6955: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861c6955: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861c6955: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d5861c6955: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d5861c6955: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d5861c6955: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d5861c6955: truck_topology::face::<impl truck_topology::Face<P,C,S>>::mapped (truck-topology/src/face.rs:489:14)",
"0x55d5861c6955: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (truck-modeling/src/sweep.rs:232:23)",
"0x55d5861c6955: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d5861e42e6: truck_topology::wire::<impl core::clone::Clone for truck_topology::Wire<P,C>>::clone (truck-topology/src/wire.rs:778:24)",
"0x55d5861e42e6: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x55d5861e42e6: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d5861e42e6: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d5861e42e6: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d5861e42e6: truck_topology::face::<impl core::clone::Clone for truck_topology::Face<P,C,S>>::clone (truck-topology/src/face.rs:1029:25)",
"0x55d5861e42e6: core::ops::function::FnMut::call_mut (src/ops/function.rs:166:5)",
"0x55d5861e42e6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d5861e42e6: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d5861e42e6: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861e42e6: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/cloned.rs:61:31)",
"0x55d5861e42e6: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d5861e42e6: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d5861e42e6: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d5861e42e6: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d5861e42e6: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:246:9)",
"0x55d5861e42e6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861e42e6: truck_topology::shell::<impl core::iter::traits::collect::FromIterator<truck_topology::Face<P,C,S>> for truck_topology::Shell<P,C,S>>::from_iter (truck-topology/src/shell.rs:853:24)",
"0x55d5861e42e6: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861e42e6: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::connected_components::{{closure}} (truck-topology/src/shell.rs:454:49)",
"0x55d5861e42e6: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:28)",
"0x55d5861e42e6: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::try_fold (src/vec/into_iter.rs:340:25)",
"0x55d5861e42e6: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d5861e42e6: <I as alloc::vec::in_place_collect::SpecInPlaceCollect<T,I>>::collect_in_place (src/vec/in_place_collect.rs:379:13)",
"0x55d5861e42e6: alloc::vec::in_place_collect::from_iter_in_place (src/vec/in_place_collect.rs:270:9)",
"0x55d5861e42e6: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::connected_components (truck-topology/src/shell.rs:455:14)",
"0x55d58620ea33: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d58620ea33: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d58620ea33: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d58620ea33: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d58620ea33: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d58620ea33: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::resolve_conflict_groups (spade/src/cdt.rs:1017:36)",
"0x55d58620ea33: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::try_add_constraint_inner (spade/src/cdt.rs:824:13)",
"0x55d58620ea33: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::add_constraint (spade/src/cdt.rs:550:17)",
"0x55d5861a117c: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861a117c: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d5861a117c: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d5861a117c: truck_topology::vertex::<impl truck_topology::Vertex<P>>::new (truck-topology/src/vertex.rs:17:20)",
"0x55d5861a117c: truck_topology::vertex::<impl truck_topology::Vertex<P>>::mapped (truck-topology/src/vertex.rs:90:9)",
"0x55d5861a117c: truck_topology::wire::<impl truck_topology::Wire<P,C>>::mapped::{{closure}} (truck-topology/src/wire.rs:489:65)",
"0x55d5861a117c: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert::{{closure}} (truck-base/src/entry_map.rs:60:32)",
"0x55d5861a117c: std::collections::hash::map::Entry<K,V>::or_insert_with (collections/hash/map.rs:2666:43)",
"0x55d5861a117c: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert (truck-base/src/entry_map.rs:58:9)",
"0x55d586215a4c: truck_topology::wire::edge_entry_map_closure::{{closure}} (truck-topology/src/wire.rs:579:23)",
"0x55d586215a4c: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert::{{closure}} (truck-base/src/entry_map.rs:60:32)",
"0x55d586215a4c: std::collections::hash::map::Entry<K,V>::or_insert_with (collections/hash/map.rs:2666:43)",
"0x55d586215a4c: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert (truck-base/src/entry_map.rs:58:9)",
"0x55d586215a4c: truck_topology::wire::<impl truck_topology::Wire<P,C>>::sub_mapped::{{closure}} (truck-topology/src/wire.rs:433:32)",
"0x55d586215a4c: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d586215a4c: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d586215a4c: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5862f2a46: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5862f2a46: truck_geotrait::algo::surface::sub_parameter_division (alloc/src/macros.rs:54:13)",
"0x55d58619c465: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d58619c465: truck_meshalgo::tessellation::triangulation::PolyBoundaryPiece::try_new::{{closure}}::{{closure}} (alloc/src/macros.rs:54:13)",
"0x55d58619c465: truck_meshalgo::tessellation::triangulation::PolyBoundaryPiece::try_new::{{closure}} (src/tessellation/triangulation.rs:259:27)",
"0x55d58619c465: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:28)",
"0x55d58619c465: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::try_fold (src/vec/into_iter.rs:340:25)",
"0x55d58619c465: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d58619c465: <core::iter::adapters::fuse::Fuse<I> as core::iter::adapters::fuse::FuseImpl<I>>::try_fold (iter/adapters/fuse.rs:375:19)",
"0x55d58619c465: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/fuse.rs:89:9)",
"0x55d58619c465: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_try_fold (iter/adapters/flatten.rs:515:25)",
"0x55d58619c465: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/flatten.rs:653:9)",
"0x55d58619c465: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/flatten.rs:81:9)",
"0x55d58619c465: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/mod.rs:204:9)",
"0x55d58619c465: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d58619c465: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::next (iter/adapters/mod.rs:187:14)",
"0x55d58619b7f7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:26:32)",
"0x55d58619b7f7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d58619b7f7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d58619b7f7: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d58619b7f7: <core::option::Option<V> as core::iter::traits::collect::FromIterator<core::option::Option<A>>>::from_iter::{{closure}} (core/src/option.rs:2467:51)",
"0x55d58619b7f7: core::iter::adapters::try_process (iter/adapters/mod.rs:173:17)",
"0x55d58619b7f7: <core::option::Option<V> as core::iter::traits::collect::FromIterator<core::option::Option<A>>>::from_iter (core/src/option.rs:2467:9)",
"0x55d58619b7f7: truck_meshalgo::tessellation::triangulation::PolyBoundaryPiece::try_new (src/tessellation/triangulation.rs:272:14)",
"0x55d58619b7f7: truck_meshalgo::tessellation::triangulation::shell_create_polygon::{{closure}} (src/tessellation/triangulation.rs:213:13)",
"0x55d58619b7f7: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:28)",
"0x55d58619b7f7: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d58619b7f7: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d58619b7f7: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/mod.rs:204:9)",
"0x55d58619b7f7: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d58619b7f7: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::next (iter/adapters/mod.rs:187:14)",
"0x55d5861dbc30: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d5861dbc30: truck_shapeops::transversal::faces_classification::FacesClassification<P,C,S>::and_or_unknown (transversal/faces_classification/mod.rs:32:44)",
"0x55d5861acdf7: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d5861acdf7: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices::{{closure}} (truck-topology/src/shell.rs:534:21)",
"0x55d5861acdf7: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d5861acdf7: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861acdf7: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861acdf7: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d5861acdf7: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d5861acdf7: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d5861acdf7: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861acdf7: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d5861acdf7: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d5861acdf7: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d5861acdf7: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d5861acdf7: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d5861acdf7: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices (truck-topology/src/shell.rs:528:14)",
"0x55d5861acdf7: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:26:24)",
"0x55d5861acdf7: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d5861acdf7: <truck_topology::Solid<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:300:9)",
"0x55d5862f4db0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:486:19)",
"0x55d5862f4db0: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:349:31)",
"0x55d5862f4a2d: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:355:13)",
"0x55d5862f4a2d: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:972:18)",
"0x55d5862f4a2d: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2146:14)",
"0x55d5862f4a2d: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,alloc::vec::into_iter::IntoIter<T>>>::spec_extend (src/vec/spec_extend.rs:33:13)",
"0x55d5862f4a2d: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d5862f4a2d: truck_polymesh::faces::<impl truck_polymesh::Faces<V>>::naive_concat (truck-polymesh/src/faces.rs:264:24)",
"0x55d5862f4a2d: truck_polymesh::polygon_mesh::<impl truck_polymesh::PolygonMesh>::merge (truck-polymesh/src/polygon_mesh.rs:124:9)",
"0x55d5862bf129: <truck_topology::Shell<cgmath::point::Point3<f64>,truck_polymesh::PolylineCurve<cgmath::point::Point3<f64>>,core::option::Option<truck_polymesh::PolygonMesh>> as truck_meshalgo::tessellation::MeshedShape>::to_polygon::{{closure}} (src/tessellation/mod.rs:71:17)",
"0x55d5862bf129: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d5862bf129: <truck_topology::Shell<cgmath::point::Point3<f64>,truck_polymesh::PolylineCurve<cgmath::point::Point3<f64>>,core::option::Option<truck_polymesh::PolygonMesh>> as truck_meshalgo::tessellation::MeshedShape>::to_polygon (src/tessellation/mod.rs:66:9)",
"0x55d586222072: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon::{{closure}} (src/tessellation/mod.rs:84:27)",
"0x55d586222072: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d586222072: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon (src/tessellation/mod.rs:83:9)",
"0x55d586222072: test_truck::main (test-truck/src/main.rs:87:17)",
"0x55d58620a927: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d58620a927: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d58620a927: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d58620a927: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d58620a927: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d58620a927: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d58620a927: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d58620a927: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d58620a927: <alloc::collections::vec_deque::VecDeque<T> as alloc::collections::vec_deque::spec_from_iter::SpecFromIter<T,I>>::spec_from_iter (collections/vec_deque/spec_from_iter.rs:17:9)",
"0x55d58620a927: <alloc::collections::vec_deque::VecDeque<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (collections/vec_deque/mod.rs:2863:9)",
"0x55d58620a927: truck_topology::wire::<impl core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>> for truck_topology::Wire<P,C>>::from_iter (truck-topology/src/wire.rs:599:20)",
"0x55d58620a927: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d58620a927: truck_meshalgo::tessellation::triangulation::shell_tessellation::{{closure}} (src/tessellation/triangulation.rs:85:84)",
"0x55d58620a927: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d58620a927: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d58620a927: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d58620a927: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d58620a927: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d58620a927: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d58620a927: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d58620a927: truck_meshalgo::tessellation::triangulation::shell_tessellation::{{closure}} (src/tessellation/triangulation.rs:91:14)",
"0x55d58620a927: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut (src/ops/function.rs:272:13)",
"0x55d58620a927: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d58620a927: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d58620a927: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d58620a927: rayon::iter::plumbing::Folder::consume_iter (iter/plumbing/mod.rs:177:21)",
"0x55d58620a927: <rayon::iter::map::MapFolder<C,F> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/map.rs:248:21)",
"0x55d58620a927: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d58620a927: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d5861e2639: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5861e2639: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5861e2639: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5861e2639: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5861e2639: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d5861e2639: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d5861e2639: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861e2639: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861e2639: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861e2639: truck_topology::face::<impl truck_topology::Face<P,C,S>>::boundary_iters (truck-topology/src/face.rs:211:14)",
"0x55d5861e2639: truck_topology::face::<impl truck_topology::Face<P,C,S>>::edge_iter (truck-topology/src/face.rs:224:14)",
"0x55d5861e2639: core::ops::function::FnMut::call_mut (src/ops/function.rs:166:5)",
"0x55d5861e2639: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:28)",
"0x55d5861e2639: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861e2639: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d5861e2639: <core::iter::adapters::fuse::Fuse<I> as core::iter::adapters::fuse::FuseImpl<I>>::try_fold (iter/adapters/fuse.rs:375:19)",
"0x55d5861e2639: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/fuse.rs:89:9)",
"0x55d5861e2639: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_try_fold (iter/adapters/flatten.rs:515:25)",
"0x55d5861e2639: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/flatten.rs:653:9)",
"0x55d5861e2639: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/flatten.rs:81:9)",
"0x55d5861e2639: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:19)",
"0x55d5861e2639: core::iter::traits::iterator::Iterator::find_map (iter/traits/iterator.rs:2913:14)",
"0x55d5861e2639: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::extract_boundaries (truck-topology/src/shell.rs:183:43)",
"0x55d5861c4712: truck_meshalgo::tessellation::triangulation::insert_surface::{{closure}}::{{closure}} (src/tessellation/triangulation.rs:564:25)",
"0x55d5861c4712: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d5861c4712: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::fold (iter/adapters/zip.rs:287:25)",
"0x55d5861c4712: <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/zip.rs:103:9)",
"0x55d5861c4712: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d5861c4712: truck_meshalgo::tessellation::triangulation::insert_surface::{{closure}} (src/tessellation/triangulation.rs:560:40)",
"0x55d5861c4712: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d5861c4712: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d5861c4712: truck_meshalgo::tessellation::triangulation::insert_surface (src/tessellation/triangulation.rs:559:27)",
"0x55d5861c4712: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:527:5)",
"0x55d5861c4712: truck_meshalgo::tessellation::triangulation::shell_create_polygon::{{closure}} (src/tessellation/triangulation.rs:218:14)",
"0x55d5861a149a: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5861a149a: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5861a149a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5861a149a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5861a149a: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d5861a149a: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d5861a149a: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d5861a149a: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d5861a149a: <truck_polymesh::PolylineCurve<P> as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:101:29)",
"0x55d5861a149a: truck_topology::edge::<impl truck_topology::Edge<P,C>>::oriented_curve (truck-topology/src/edge.rs:322:21)",
"0x55d5861a149a: core::ops::function::FnMut::call_mut (src/ops/function.rs:166:5)",
"0x55d5861a149a: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d5861a149a: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d5861a149a: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d5861a149a: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:9)",
"0x55d5861a149a: <core::iter::adapters::fuse::Fuse<I> as core::iter::adapters::fuse::FuseImpl<I>>::next (iter/adapters/fuse.rs:359:9)",
"0x55d5861a149a: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/fuse.rs:50:9)",
"0x55d5861a149a: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next (iter/adapters/flatten.rs:610:29)",
"0x55d5861a149a: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/flatten.rs:66:9)",
"0x55d5861c930e: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861c930e: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d5861c930e: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d5861c930e: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new_unchecked (truck-topology/src/edge.rs:45:20)",
"0x55d5861c930e: truck_topology::edge::<impl truck_topology::Edge<P,C>>::debug_new (truck-topology/src/edge.rs:57:22)",
"0x55d5861c930e: truck_modeling::topo_impls::connect_vertices (truck-modeling/src/topo_impls.rs:17:5)",
"0x55d5861c930e: truck_modeling::topo_impls::sub_connect_wires::{{closure}} (truck-modeling/src/topo_impls.rs:67:28)",
"0x55d5861c930e: std::collections::hash::map::Entry<K,V>::or_insert_with (collections/hash/map.rs:2666:43)",
"0x55d5861c930e: truck_modeling::topo_impls::sub_connect_wires (truck-modeling/src/topo_impls.rs:65:17)",
"0x55d5861c930e: truck_modeling::topo_impls::connect_raw_wires::{{closure}} (truck-modeling/src/topo_impls.rs:118:9)",
"0x55d5861c930e: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d5861c930e: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d5861c930e: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d5861c930e: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d5861c930e: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d5861c930e: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d5861c930e: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (truck-modeling/src/sweep.rs:235:15)",
"0x55d5861c930e: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d58619b3e3: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d58619b3e3: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d58619b3e3: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d58619b3e3: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d58619b3e3: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d58619b3e3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55d58619b3e3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d58619b3e3: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d58619b3e3: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d58619b3e3: truck_meshalgo::tessellation::triangulation::PolyBoundaryPiece::try_new (src/tessellation/triangulation.rs:243:14)",
"0x55d58619b3e3: truck_meshalgo::tessellation::triangulation::shell_create_polygon::{{closure}} (src/tessellation/triangulation.rs:213:13)",
"0x55d58619b3e3: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:28)",
"0x55d58619b3e3: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d58619b3e3: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d58619b3e3: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/mod.rs:204:9)",
"0x55d58619b3e3: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d58619b3e3: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::next (iter/adapters/mod.rs:187:14)",
"0x55d58626d605: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d58626d605: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d58626d605: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d58626d605: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d58626d605: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d58626d605: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d58626d605: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:246:9)",
"0x55d58626d605: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d58626d605: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d58626d605: rayon_core::registry::Registry::new (rayon-core-1.12.1/src/registry.rs:263:69)",
"0x55d5862bf1cc: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5862bf1cc: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5862bf1cc: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5862bf1cc: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5862bf1cc: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d5862bf1cc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d5862bf1cc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d5862bf1cc: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d5862bf1cc: <truck_polymesh::StandardAttributes as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:40:5)",
"0x55d5862bf1cc: <truck_polymesh::PolygonMesh<V,A> as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:87:5)",
"0x55d5862bf1cc: <core::option::Option<T> as core::clone::Clone>::clone (core/src/option.rs:2038:29)",
"0x55d5862bf1cc: truck_topology::face::<impl truck_topology::Face<P,C,S>>::surface (truck-topology/src/face.rs:509:9)",
"0x55d5862bf1cc: <truck_topology::Shell<cgmath::point::Point3<f64>,truck_polymesh::PolylineCurve<cgmath::point::Point3<f64>>,core::option::Option<truck_polymesh::PolygonMesh>> as truck_meshalgo::tessellation::MeshedShape>::to_polygon::{{closure}} (src/tessellation/mod.rs:67:37)",
"0x55d5862bf1cc: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d5862bf1cc: <truck_topology::Shell<cgmath::point::Point3<f64>,truck_polymesh::PolylineCurve<cgmath::point::Point3<f64>>,core::option::Option<truck_polymesh::PolygonMesh>> as truck_meshalgo::tessellation::MeshedShape>::to_polygon (src/tessellation/mod.rs:66:9)",
"0x55d58621b4ab: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d58621b4ab: hashbrown::raw::alloc::inner::do_alloc (src/raw/alloc.rs:15:15)",
"0x55d58621b4ab: hashbrown::raw::RawTableInner::new_uninitialized (src/raw/mod.rs:1750:38)",
"0x55d58621b4ab: hashbrown::raw::RawTableInner::fallible_with_capacity (src/raw/mod.rs:1788:30)",
"0x55d58621b4ab: hashbrown::raw::RawTableInner::prepare_resize (src/raw/mod.rs:2864:13)",
"0x55d58621b4ab: hashbrown::raw::RawTableInner::resize_inner (src/raw/mod.rs:3060:34)",
"0x55d58621b4ab: hashbrown::raw::RawTableInner::reserve_rehash_inner (src/raw/mod.rs:2950:13)",
"0x55d58621b4ab: hashbrown::raw::RawTable<T,A>::reserve_rehash (src/raw/mod.rs:1231:13)",
"0x55d5861acc28: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d5861acc28: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d5861acc28: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.14.5/src/rustc_entry.rs:46:18)",
"0x55d5861acc28: std::collections::hash::map::HashMap<K,V,S>::entry (collections/hash/map.rs:856:19)",
"0x55d5861acc28: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert (truck-base/src/entry_map.rs:59:14)",
"0x55d5861acc28: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices::{{closure}} (truck-topology/src/shell.rs:532:37)",
"0x55d5861acc28: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d5861acc28: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861acc28: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861acc28: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d5861acc28: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d5861acc28: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d5861acc28: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861acc28: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d5861acc28: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d5861acc28: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d5861acc28: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d5861acc28: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d5861acc28: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices (truck-topology/src/shell.rs:528:14)",
"0x55d5861acc28: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:26:24)",
"0x55d5861acc28: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d5861acc28: <truck_topology::Solid<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:300:9)",
"0x55d5862ba486: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5862ba486: truck_meshalgo::analyzers::collision::EndPoint::from_seg (alloc/src/macros.rs:54:13)",
"0x55d5862ba486: truck_meshalgo::analyzers::collision::sorted_endpoints::{{closure}} (src/analyzers/collision.rs:87:30)",
"0x55d5862ba486: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d5862ba486: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d5862ba486: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d5862ba486: <core::iter::adapters::fuse::Fuse<I> as core::iter::adapters::fuse::FuseImpl<I>>::next (iter/adapters/fuse.rs:359:9)",
"0x55d5862ba486: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/fuse.rs:50:9)",
"0x55d5862ba486: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next (iter/adapters/flatten.rs:610:29)",
"0x55d5862ba486: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/flatten.rs:66:9)",
"0x55d5862ba486: core::ops::function::FnOnce::call_once (src/ops/function.rs:250:5)",
"0x55d5862ba486: core::iter::adapters::chain::and_then_or_clear (iter/adapters/chain.rs:333:13)",
"0x55d5862ba486: <core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::next (iter/adapters/chain.rs:84:9)",
"0x55d5861a5235: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:26:32)",
"0x55d5861a5235: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861a5235: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861a5235: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861a5235: truck_meshalgo::analyzers::collision::sorted_endpoints (src/analyzers/collision.rs:95:10)",
"0x55d5861a5235: truck_meshalgo::analyzers::collision::collision (src/analyzers/collision.rs:220:29)",
"0x55d5861a5235: <truck_polymesh::PolygonMesh as truck_meshalgo::analyzers::collision::Collision>::extract_interference (src/analyzers/collision.rs:34:9)",
"0x55d5861a5235: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:157:34)",
"0x55d5861a5235: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d5861a5235: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d5861a5235: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861a5235: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d5861a5235: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861a5235: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d5861a5235: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d586216cad: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d586216cad: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d586216cad: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d586216cad: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d586216cad: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d586216cad: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d586216cad: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d586216cad: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d586216cad: <truck_polymesh::PolylineCurve<P> as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:101:29)",
"0x55d586216cad: truck_topology::edge::<impl truck_topology::Edge<P,C>>::curve (truck-topology/src/edge.rs:255:9)",
"0x55d586216cad: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:186:69)",
"0x55d586216cad: std::collections::hash::map::Entry<K,V>::or_insert_with (collections/hash/map.rs:2666:43)",
"0x55d586216cad: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}} (transversal/loops_store/mod.rs:185:21)",
"0x55d586216cad: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d586216cad: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d586216cad: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861d3519: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861d3519: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d5861d3519: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d5861d3519: truck_topology::vertex::<impl truck_topology::Vertex<P>>::new (truck-topology/src/vertex.rs:17:20)",
"0x55d5861d3519: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:503:31)",
"0x55d5861bf95d: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861bf95d: truck_geotrait::algo::surface::parameter_division (alloc/src/macros.rs:54:13)",
"0x55d5861bf95d: truck_geometry::nurbs::nurbssurface::<impl truck_geotrait::traits::surface::ParameterDivision2D for truck_geometry::nurbs::NurbsSurface<V>>::parameter_division (src/nurbs/nurbssurface.rs:677:9)",
"0x55d5861bf95d: <truck_modeling::geometry::Surface as truck_geotrait::traits::surface::ParameterDivision2D>::parameter_division (truck-modeling/src/geometry.rs:161:5)",
"0x55d5861bf95d: <&S as truck_geotrait::traits::surface::ParameterDivision2D>::parameter_division (src/traits/surface.rs:155:9)",
"0x55d5861bf95d: truck_meshalgo::tessellation::triangulation::insert_surface (src/tessellation/triangulation.rs:547:24)",
"0x55d5861bf95d: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:527:5)",
"0x55d5861bf95d: truck_meshalgo::tessellation::triangulation::shell_create_polygon::{{closure}} (src/tessellation/triangulation.rs:218:14)",
"0x55d58626d0db: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d58626d0db: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d58626d0db: <T as crossbeam_epoch::atomic::Pointable>::init (crossbeam-epoch-0.9.18/src/atomic.rs:200:23)",
"0x55d58626d0db: crossbeam_epoch::atomic::Owned<T>::init (crossbeam-epoch-0.9.18/src/atomic.rs:1147:35)",
"0x55d58626d0db: crossbeam_epoch::atomic::Atomic<T>::init (crossbeam-epoch-0.9.18/src/atomic.rs:330:20)",
"0x55d58626d0db: crossbeam_epoch::atomic::Atomic<T>::new (crossbeam-epoch-0.9.18/src/atomic.rs:314:9)",
"0x55d58626d0db: crossbeam_deque::deque::Worker<T>::new_lifo (crossbeam-deque-0.8.5/src/deque.rs:254:38)",
"0x55d58626d0db: rayon_core::registry::Registry::new::{{closure}} (rayon-core-1.12.1/src/registry.rs:246:21)",
"0x55d58626d0db: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d58626d0db: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d58626d0db: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d58626d0db: <(ExtendA,ExtendB) as core::iter::traits::collect::Extend<(A,B)>>::extend (iter/traits/collect.rs:519:9)",
"0x55d58626d0db: core::iter::traits::iterator::Iterator::unzip (iter/traits/iterator.rs:3396:9)",
"0x55d58626d0db: rayon_core::registry::Registry::new (rayon-core-1.12.1/src/registry.rs:241:53)",
"0x55d5861a35fb: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d5861a35fb: hashbrown::raw::RawTable<T,A>::find_or_find_insert_slot (src/raw/mod.rs:1413:9)",
"0x55d5861a35fb: hashbrown::map::HashMap<K,V,S,A>::insert (hashbrown-0.14.5/src/map.rs:1754:15)",
"0x55d5861a35fb: std::collections::hash::map::HashMap<K,V,S>::insert (collections/hash/map.rs:1106:9)",
"0x55d5861a35fb: truck_topology::shell::Boundaries<C>::insert (truck-topology/src/shell.rs:1097:33)",
"0x55d5861a35fb: <truck_topology::shell::Boundaries<C> as core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>>>::from_iter::{{closure}} (truck-topology/src/shell.rs:1126:42)",
"0x55d5861a35fb: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d5861a35fb: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861a35fb: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d5861a35fb: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d5861d218a: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5861d218a: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5861d218a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5861d218a: alloc::collections::vec_deque::VecDeque<T,A>::with_capacity_in (collections/vec_deque/mod.rs:619:42)",
"0x55d5861d218a: alloc::collections::vec_deque::VecDeque<T,A>::split_off (collections/vec_deque/mod.rs:1979:25)",
"0x55d5861d218a: truck_topology::wire::<impl truck_topology::Wire<P,C>>::split_off (truck-topology/src/wire.rs:146:24)",
"0x55d5861d218a: truck_shapeops::transversal::loops_store::Loops<P,C>::add_edge (transversal/loops_store/mod.rs:259:54)",
"0x55d5861d3faa: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:564:21)",
"0x55d5861abaa8: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d5861abaa8: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d5861abaa8: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.14.5/src/rustc_entry.rs:46:18)",
"0x55d5861abaa8: std::collections::hash::map::HashMap<K,V,S>::entry (collections/hash/map.rs:856:19)",
"0x55d5861abaa8: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert (truck-base/src/entry_map.rs:59:14)",
"0x55d5861abaa8: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency::{{closure}} (truck-topology/src/shell.rs:235:17)",
"0x55d5861abaa8: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d5861abaa8: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861abaa8: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d5861abaa8: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d5861abaa8: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d5861abaa8: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d5861abaa8: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d5861abaa8: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d5861abaa8: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d5861abaa8: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:321:9)",
"0x55d5861abaa8: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d5861abaa8: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861abaa8: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861abaa8: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d5861abaa8: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d5861abaa8: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency (truck-topology/src/shell.rs:230:26)",
"0x55d5861abaa8: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::is_connected (truck-topology/src/shell.rs:405:29)",
"0x55d5861abaa8: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:22:24)",
"0x55d5861abaa8: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d5861abaa8: <truck_topology::Solid<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:300:9)",
"0x55d5861c7241: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861c7241: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d5861c7241: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d5861c7241: truck_topology::face::<impl truck_topology::Face<P,C,S>>::new_unchecked (truck-topology/src/face.rs:64:22)",
"0x55d5861c7241: truck_topology::face::<impl truck_topology::Face<P,C,S>>::debug_new (truck-topology/src/face.rs:76:22)",
"0x55d5861c7241: truck_topology::face::<impl truck_topology::Face<P,C,S>>::mapped (truck-topology/src/face.rs:491:24)",
"0x55d5861c7241: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (truck-modeling/src/sweep.rs:232:23)",
"0x55d5861c7241: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d5861a4a01: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:474:17)",
"0x55d5861a4a01: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d5861a4a01: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861a4a01: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d5861a4a01: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861a4a01: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d5861a4a01: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d5861dbbd5: truck_topology::face::<impl core::clone::Clone for truck_topology::Face<P,C,S>>::clone (truck-topology/src/face.rs:1029:25)",
"0x55d5861dbbd5: truck_shapeops::transversal::faces_classification::FacesClassification<P,C,S>::and_or_unknown (transversal/faces_classification/mod.rs:32:57)",
"0x55d586217091: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d586217091: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d586217091: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.14.5/src/rustc_entry.rs:46:18)",
"0x55d586217091: std::collections::hash::map::HashMap<K,V,S>::entry (collections/hash/map.rs:856:19)",
"0x55d586217091: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}} (transversal/loops_store/mod.rs:189:26)",
"0x55d586217091: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d586217091: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d586217091: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861bf98f: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861bf98f: truck_geotrait::algo::surface::parameter_division (alloc/src/macros.rs:54:13)",
"0x55d5861bf98f: truck_geometry::nurbs::nurbssurface::<impl truck_geotrait::traits::surface::ParameterDivision2D for truck_geometry::nurbs::NurbsSurface<V>>::parameter_division (src/nurbs/nurbssurface.rs:677:9)",
"0x55d5861bf98f: <truck_modeling::geometry::Surface as truck_geotrait::traits::surface::ParameterDivision2D>::parameter_division (truck-modeling/src/geometry.rs:161:5)",
"0x55d5861bf98f: <&S as truck_geotrait::traits::surface::ParameterDivision2D>::parameter_division (src/traits/surface.rs:155:9)",
"0x55d5861bf98f: truck_meshalgo::tessellation::triangulation::insert_surface (src/tessellation/triangulation.rs:547:24)",
"0x55d5861bf98f: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:527:5)",
"0x55d5861bf98f: truck_meshalgo::tessellation::triangulation::shell_create_polygon::{{closure}} (src/tessellation/triangulation.rs:218:14)",
"0x55d58621c8b3: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d58621c8b3: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d58621c8b3: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d58621c8b3: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new_unchecked (truck-topology/src/edge.rs:45:20)",
"0x55d58621c8b3: truck_topology::edge::<impl truck_topology::Edge<P,C>>::debug_new (truck-topology/src/edge.rs:57:22)",
"0x55d58621c8b3: truck_modeling::topo_impls::connect_vertices (truck-modeling/src/topo_impls.rs:17:5)",
"0x55d58621c8b3: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Vertex<P>>::sweep (truck-modeling/src/sweep.rs:39:9)",
"0x55d58621c8b3: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d58621c8b3: test_truck::main (test-truck/src/main.rs:42:18)",
"0x55d5861ac470: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d5861ac470: hashbrown::raw::RawTable<T,A>::find_or_find_insert_slot (src/raw/mod.rs:1413:9)",
"0x55d5861ac470: hashbrown::map::HashMap<K,V,S,A>::insert (hashbrown-0.14.5/src/map.rs:1754:15)",
"0x55d5861ac470: std::collections::hash::map::HashMap<K,V,S>::insert (collections/hash/map.rs:1106:9)",
"0x55d5861ac470: truck_topology::shell::Boundaries<C>::insert (truck-topology/src/shell.rs:1097:33)",
"0x55d5861ac470: <truck_topology::shell::Boundaries<C> as core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>>>::from_iter::{{closure}} (truck-topology/src/shell.rs:1126:42)",
"0x55d5861ac470: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d5861ac470: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861ac470: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d5861ac470: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d5861ac470: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d5861ac470: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d5861ac470: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d5861ac470: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d5861ac470: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d5861ac470: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:321:9)",
"0x55d5861ac470: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d5861ac470: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861ac470: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861ac470: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d5861ac470: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d5861ac470: <truck_topology::shell::Boundaries<C> as core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>>>::from_iter (truck-topology/src/shell.rs:1126:9)",
"0x55d5861ac470: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861ac470: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::shell_condition (truck-topology/src/shell.rs:133:26)",
"0x55d5861ac470: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:24:23)",
"0x55d5861ac470: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d5861ac470: <truck_topology::Solid<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:300:9)",
"0x55d5861d116c: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5861d116c: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5861d116c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5861d116c: alloc::collections::vec_deque::VecDeque<T,A>::with_capacity_in (collections/vec_deque/mod.rs:619:42)",
"0x55d5861d116c: alloc::collections::vec_deque::VecDeque<T,A>::split_off (collections/vec_deque/mod.rs:1979:25)",
"0x55d5861d116c: truck_topology::wire::<impl truck_topology::Wire<P,C>>::split_off (truck-topology/src/wire.rs:146:24)",
"0x55d5861d116c: truck_shapeops::transversal::loops_store::Loops<P,C>::add_edge (transversal/loops_store/mod.rs:259:54)",
"0x55d58620ee92: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d58620ee92: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::resolve_conflict_region::{{closure}} (spade/src/cdt.rs:630:17)",
"0x55d58620ee92: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::resolve_conflict_region (spade/src/cdt.rs:635:9)",
"0x55d58620ee92: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::resolve_conflict_groups (spade/src/cdt.rs:1064:37)",
"0x55d58620ee92: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::try_add_constraint_inner (spade/src/cdt.rs:824:13)",
"0x55d58620ee92: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::add_constraint (spade/src/cdt.rs:550:17)",
"0x55d5861c5edb: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861c5edb: truck_modeling::geom_impls::unit_circle_arc (alloc/src/macros.rs:54:13)",
"0x55d5861c5edb: truck_modeling::geom_impls::circle_arc (truck-modeling/src/geom_impls.rs:53:26)",
"0x55d5861c5edb: truck_modeling::builder::whole_rsweep::{{closure}} (truck-modeling/src/builder.rs:683:23)",
"0x55d5861c5edb: truck_modeling::topo_impls::create_edge (truck-modeling/src/topo_impls.rs:9:5)",
"0x55d58621eb9e: truck_modeling::topo_impls::connect_vertices (truck-modeling/src/topo_impls.rs:17:29)",
"0x55d58621eb9e: truck_modeling::closed_sweep::<impl truck_modeling::topo_traits::ClosedSweep<P,C,S> for truck_topology::Vertex<P>>::closed_sweep::{{closure}} (truck-modeling/src/closed_sweep.rs:25:28)",
"0x55d58621eb9e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d58621eb9e: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d58621eb9e: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d58621eb9e: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d58621eb9e: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d58621eb9e: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d58621eb9e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d58621eb9e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d58621eb9e: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d58621eb9e: <alloc::collections::vec_deque::VecDeque<T> as alloc::collections::vec_deque::spec_from_iter::SpecFromIter<T,I>>::spec_from_iter (collections/vec_deque/spec_from_iter.rs:17:9)",
"0x55d58621eb9e: <alloc::collections::vec_deque::VecDeque<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (collections/vec_deque/mod.rs:2863:9)",
"0x55d58621eb9e: truck_topology::wire::<impl core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>> for truck_topology::Wire<P,C>>::from_iter (truck-topology/src/wire.rs:599:20)",
"0x55d58621eb9e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d58621eb9e: truck_modeling::closed_sweep::<impl truck_modeling::topo_traits::ClosedSweep<P,C,S> for truck_topology::Vertex<P>>::closed_sweep (truck-modeling/src/closed_sweep.rs:29:14)",
"0x55d58621eb9e: truck_modeling::builder::whole_rsweep (truck-modeling/src/builder.rs:679:5)",
"0x55d58621eb9e: truck_modeling::builder::rsweep (truck-modeling/src/builder.rs:636:9)",
"0x55d58621eb9e: test_truck::main (test-truck/src/main.rs:53:18)",
"0x55d586205e5d: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:486:19)",
"0x55d586205e5d: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:349:31)",
"0x55d58620a185: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:355:13)",
"0x55d58620a185: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:972:18)",
"0x55d58620a185: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3069:22)",
"0x55d58620a185: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d58620a185: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d58620a185: <rayon::iter::extend::ListVecFolder<T> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/extend.rs:130:18)",
"0x55d58620a185: <rayon::iter::map::MapFolder<C,F> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/map.rs:248:21)",
"0x55d58620a185: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d58620a185: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d5861bfcaf: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5861bfcaf: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5861bfcaf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5861bfcaf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5861bfcaf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d5861bfcaf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d5861bfcaf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861bfcaf: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861bfcaf: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861bfcaf: truck_meshalgo::tessellation::triangulation::insert_surface::{{closure}} (src/tessellation/triangulation.rs:556:18)",
"0x55d5861bfcaf: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d5861bfcaf: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d5861bfcaf: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861bfcaf: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d5861bfcaf: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d5861bfcaf: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d5861bfcaf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d5861bfcaf: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:246:9)",
"0x55d5861bfcaf: truck_meshalgo::tessellation::triangulation::insert_surface (src/tessellation/triangulation.rs:558:10)",
"0x55d5861bfcaf: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:527:5)",
"0x55d5861bfcaf: truck_meshalgo::tessellation::triangulation::shell_create_polygon::{{closure}} (src/tessellation/triangulation.rs:218:14)",
"0x55d5861d1fe6: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861d1fe6: truck_shapeops::transversal::loops_store::Loops<P,C>::add_edge (alloc/src/macros.rs:54:13)",
"0x55d5861d3e9e: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:562:21)",
"0x55d5861db538: truck_topology::wire::<impl core::clone::Clone for truck_topology::Wire<P,C>>::clone (truck-topology/src/wire.rs:778:24)",
"0x55d5861db538: truck_shapeops::transversal::loops_store::Loops<P,C>::swap_edge_into_wire::{{closure}} (transversal/loops_store/mod.rs:212:60)",
"0x55d5861db538: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d5861db538: truck_shapeops::transversal::loops_store::Loops<P,C>::swap_edge_into_wire (transversal/loops_store/mod.rs:208:9)",
"0x55d5861db538: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::swap_edge_into_wire::{{closure}} (transversal/loops_store/mod.rs:301:31)",
"0x55d5861db538: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::swap_edge_into_wire (transversal/loops_store/mod.rs:300:9)",
"0x55d5861db538: truck_shapeops::transversal::loops_store::LoopsStore<cgmath::point::Point3<f64>,C>::add_geom_vertex (transversal/loops_store/mod.rs:377:22)",
"0x55d586221252: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon::{{closure}} (src/tessellation/mod.rs:84:27)",
"0x55d586221252: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d586221252: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon (src/tessellation/mod.rs:83:9)",
"0x55d586221252: test_truck::main (test-truck/src/main.rs:63:17)",
"0x55d586218463: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d586218463: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d586218463: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d586218463: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d586218463: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d586218463: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d586218463: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d586209733: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d586209733: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d586209733: truck_topology::face::<impl truck_topology::Face<P,C,S>>::boundaries (truck-topology/src/face.rs:104:72)",
"0x55d586209733: core::ops::function::Fn::call (src/ops/function.rs:79:5)",
"0x55d586209733: <rayon::iter::flat_map::FlatMapFolder<C,F,<C as rayon::iter::plumbing::Consumer<<U as rayon::iter::IntoParallelIterator>::Item>>::Result> as rayon::iter::plumbing::Folder<T>>::consume (src/iter/flat_map.rs:125:24)",
"0x55d586209733: rayon::iter::plumbing::Folder::consume_iter (iter/plumbing/mod.rs:178:20)",
"0x55d586209733: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d586209733: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d586211ef5: rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (rayon-core-1.12.1/src/registry.rs:522:21)",
"0x55d586211ef5: rayon_core::job::JobResult<T>::call::{{closure}} (rayon-core-1.12.1/src/job.rs:218:41)",
"0x55d586211ef5: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d586211ef5: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d586211ef5: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d586211ef5: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d586211ef5: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d586211ef5: rayon_core::job::JobResult<T>::call (rayon-core-1.12.1/src/job.rs:218:15)",
"0x55d586211ef5: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.12.1/src/job.rs:120:32)",
"0x55d586217de9: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d586217de9: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d586217de9: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.14.5/src/rustc_entry.rs:46:18)",
"0x55d586217de9: std::collections::hash::map::HashMap<K,V,S>::entry (collections/hash/map.rs:856:19)",
"0x55d586217de9: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}} (transversal/loops_store/mod.rs:185:26)",
"0x55d586217de9: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d586217de9: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d586217de9: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861c73bc: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5861c73bc: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5861c73bc: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5861c73bc: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5861c73bc: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d5861c73bc: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d5861c73bc: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861c73bc: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861c73bc: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861c73bc: truck_topology::face::<impl truck_topology::Face<P,C,S>>::boundary_iters (truck-topology/src/face.rs:211:14)",
"0x55d5861c73bc: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (truck-modeling/src/sweep.rs:234:30)",
"0x55d5861c73bc: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d58621e873: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d58621e873: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d58621e873: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d58621e873: truck_topology::vertex::<impl truck_topology::Vertex<P>>::new (truck-topology/src/vertex.rs:17:20)",
"0x55d58621e873: truck_topology::vertex::<impl truck_topology::Vertex<P>>::mapped (truck-topology/src/vertex.rs:90:9)",
"0x55d58621e873: truck_modeling::closed_sweep::<impl truck_modeling::topo_traits::ClosedSweep<P,C,S> for truck_topology::Vertex<P>>::closed_sweep::{{closure}} (truck-modeling/src/closed_sweep.rs:24:34)",
"0x55d58621e873: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d58621e873: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d58621e873: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d58621e873: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d58621e873: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d58621e873: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d58621e873: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d58621e873: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d58621e873: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d58621e873: <alloc::collections::vec_deque::VecDeque<T> as alloc::collections::vec_deque::spec_from_iter::SpecFromIter<T,I>>::spec_from_iter (collections/vec_deque/spec_from_iter.rs:17:9)",
"0x55d58621e873: <alloc::collections::vec_deque::VecDeque<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (collections/vec_deque/mod.rs:2863:9)",
"0x55d58621e873: truck_topology::wire::<impl core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>> for truck_topology::Wire<P,C>>::from_iter (truck-topology/src/wire.rs:599:20)",
"0x55d58621e873: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d58621e873: truck_modeling::closed_sweep::<impl truck_modeling::topo_traits::ClosedSweep<P,C,S> for truck_topology::Vertex<P>>::closed_sweep (truck-modeling/src/closed_sweep.rs:29:14)",
"0x55d58621e873: truck_modeling::builder::whole_rsweep (truck-modeling/src/builder.rs:679:5)",
"0x55d58621e873: truck_modeling::builder::rsweep (truck-modeling/src/builder.rs:636:9)",
"0x55d58621e873: test_truck::main (test-truck/src/main.rs:53:18)",
"0x55d5862f29da: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:248:9)",
"0x55d5862f29da: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:232:38)",
"0x55d5862f29da: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:176:15)",
"0x55d5862f29da: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x55d5862f29da: alloc::vec::from_elem (src/vec/mod.rs:2738:5)",
"0x55d5862f29da: truck_geotrait::algo::surface::sub_parameter_division (alloc/src/macros.rs:47:9)",
"0x55d586221d67: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d586221d67: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d586221d67: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d586221d67: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d586221d67: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x55d586221d67: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d586221d67: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d586221d67: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d586221d67: truck_topology::face::<impl core::clone::Clone for truck_topology::Face<P,C,S>>::clone (truck-topology/src/face.rs:1029:25)",
"0x55d586221d67: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x55d586221d67: truck_topology::shell::<impl core::clone::Clone for truck_topology::Shell<P,C,S>>::clone (truck-topology/src/shell.rs:833:24)",
"0x55d586221d67: <truck_topology::Solid<P,C,S> as core::clone::Clone>::clone (truck-topology/src/lib.rs:172:10)",
"0x55d586221d67: test_truck::main (test-truck/src/main.rs:83:37)",
"0x55d5862c1285: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5862c1285: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5862c1285: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5862c1285: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5862c1285: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d5862c1285: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::get_conflict_resolutions (spade/src/cdt.rs:904:35)",
"0x55d5862c1285: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::try_add_constraint_inner (spade/src/cdt.rs:818:13)",
"0x55d5862c1285: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::add_constraint (spade/src/cdt.rs:550:17)",
"0x55d5861bf75c: truck_meshalgo::tessellation::triangulation::PolyBoundary::insert_to::{{closure}} (src/tessellation/triangulation.rs:0:0)",
"0x55d5861bf75c: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d5861bf75c: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861bf75c: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d5861bf75c: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d5861bf75c: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d5861bf75c: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d5861bf75c: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861bf75c: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861bf75c: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d5861bf75c: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d5861bf75c: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d5861bf75c: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:20)",
"0x55d5861bf75c: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d5861bf75c: truck_meshalgo::tessellation::triangulation::PolyBoundary::insert_to (src/tessellation/triangulation.rs:495:14)",
"0x55d5861bf75c: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:526:5)",
"0x55d5861bf75c: truck_meshalgo::tessellation::triangulation::shell_create_polygon::{{closure}} (src/tessellation/triangulation.rs:218:14)",
"0x55d58626f50d: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:486:19)",
"0x55d58626f50d: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:349:31)",
"0x55d58626d026: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:355:13)",
"0x55d58626d026: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:972:18)",
"0x55d58626d026: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend_reserve (src/vec/mod.rs:3049:14)",
"0x55d58626d026: <(ExtendA,ExtendB) as core::iter::traits::collect::Extend<(A,B)>>::extend (iter/traits/collect.rs:516:13)",
"0x55d58626d026: core::iter::traits::iterator::Iterator::unzip (iter/traits/iterator.rs:3396:9)",
"0x55d58626d026: rayon_core::registry::Registry::new (rayon-core-1.12.1/src/registry.rs:241:53)",
"0x55d58620e77e: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d58620e77e: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d58620e77e: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d58620e77e: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d58620e77e: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d58620e77e: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::get_conflict_resolutions (spade/src/cdt.rs:905:33)",
"0x55d58620e77e: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::try_add_constraint_inner (spade/src/cdt.rs:818:13)",
"0x55d58620e77e: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::add_constraint (spade/src/cdt.rs:550:17)",
"0x55d586221a32: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon::{{closure}} (src/tessellation/mod.rs:84:27)",
"0x55d586221a32: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d586221a32: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon (src/tessellation/mod.rs:83:9)",
"0x55d586221a32: test_truck::main (test-truck/src/main.rs:77:17)",
"0x55d5861a6dd3: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861a6dd3: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d5861a6dd3: truck_shapeops::transversal::intersection_curve::IntersectionCurveWithParameters<S>::try_new (transversal/intersection_curve/mod.rs:58:17)",
"0x55d5861a6dd3: truck_shapeops::transversal::intersection_curve::intersection_curves::{{closure}} (transversal/intersection_curve/mod.rs:162:25)",
"0x55d5861a6dd3: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d5861a6dd3: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d5861a6dd3: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861a6dd3: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d5861a6dd3: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d5861a6dd3: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d5861a6dd3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d5861a6dd3: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:246:9)",
"0x55d5861a6dd3: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861a6dd3: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861a6dd3: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:170:10)",
"0x55d5861a6dd3: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d5861a6dd3: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d5861a6dd3: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861a6dd3: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d5861a6dd3: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861a6dd3: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d5861a6dd3: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d5861d78a5: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861d78a5: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d5861d78a5: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d5861d78a5: truck_topology::edge::<impl truck_topology::Edge<P,C>>::cut_with_parameter (truck-topology/src/edge.rs:457:20)",
"0x55d5861d78a5: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::add_polygon_vertex (transversal/loops_store/mod.rs:331:38)",
"0x55d58626f464: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:486:19)",
"0x55d58626f464: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:349:31)",
"0x55d58626cffe: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:355:13)",
"0x55d58626cffe: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:972:18)",
"0x55d58626cffe: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend_reserve (src/vec/mod.rs:3049:14)",
"0x55d58626cffe: <(ExtendA,ExtendB) as core::iter::traits::collect::Extend<(A,B)>>::extend (iter/traits/collect.rs:515:13)",
"0x55d58626cffe: core::iter::traits::iterator::Iterator::unzip (iter/traits/iterator.rs:3396:9)",
"0x55d58626cffe: rayon_core::registry::Registry::new (rayon-core-1.12.1/src/registry.rs:241:53)",
"0x55d5861adc79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5861adc79: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5861adc79: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5861adc79: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5861adc79: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d5861adc79: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d5861adc79: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861adc79: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861adc79: <alloc::collections::vec_deque::VecDeque<T> as alloc::collections::vec_deque::spec_from_iter::SpecFromIter<T,I>>::spec_from_iter (collections/vec_deque/spec_from_iter.rs:17:9)",
"0x55d586218514: <alloc::collections::vec_deque::VecDeque<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (collections/vec_deque/mod.rs:2863:9)",
"0x55d586218514: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d586218514: truck_topology::wire::<impl truck_topology::Wire<P,C>>::inverse (truck-topology/src/wire.rs:189:75)",
"0x55d586218514: truck_topology::face::<impl truck_topology::Face<P,C,S>>::boundaries::{{closure}} (truck-topology/src/face.rs:104:61)",
"0x55d586218514: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d586218514: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d586218514: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d586218514: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d586218514: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d586218514: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d586218514: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d586218514: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861d3138: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861d3138: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d5861d3138: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d5861d3138: truck_topology::vertex::<impl truck_topology::Vertex<P>>::new (truck-topology/src/vertex.rs:17:20)",
"0x55d5861d3138: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:500:31)",
"0x55d5861c9536: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861c9536: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (alloc/src/macros.rs:54:13)",
"0x55d5861c9536: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d5862f4932: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:355:13)",
"0x55d5862f4932: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:972:18)",
"0x55d5862f4932: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2146:14)",
"0x55d5862f4932: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,alloc::vec::into_iter::IntoIter<T>>>::spec_extend (src/vec/spec_extend.rs:33:13)",
"0x55d5862f4932: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d5862f4932: truck_polymesh::polygon_mesh::<impl truck_polymesh::PolygonMesh>::merge (truck-polymesh/src/polygon_mesh.rs:122:35)",
"0x55d5861bf2bc: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861bf2bc: spade::delaunay_core::dcel_operations::new (alloc/src/macros.rs:54:13)",
"0x55d5861bf2bc: <spade::delaunay_core::dcel::Dcel<V,DE,UE,F> as core::default::Default>::default (src/delaunay_core/dcel.rs:114:9)",
"0x55d5861bf2bc: <spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L> as core::default::Default>::default (spade/src/cdt.rs:174:19)",
"0x55d5861bf2bc: spade::triangulation::Triangulation::new (spade/src/triangulation.rs:131:9)",
"0x55d5861bf2bc: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:525:29)",
"0x55d5861bf2bc: truck_meshalgo::tessellation::triangulation::shell_create_polygon::{{closure}} (src/tessellation/triangulation.rs:218:14)",
"0x55d5861e2057: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:26:32)",
"0x55d5861e2057: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861e2057: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861e2057: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861e2057: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices (truck-topology/src/shell.rs:543:14)",
"0x55d5861dee82: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:26:24)",
"0x55d5861dee82: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d5861dee82: truck_shapeops::transversal::integrate::and (transversal/integrate/mod.rs:122:10)",
"0x55d586268c11: parking_lot_core::parking_lot::grow_hashtable (parking_lot_core-0.9.10/src/parking_lot.rs:294:25)",
"0x55d586268c11: parking_lot_core::parking_lot::ThreadData::new (parking_lot_core-0.9.10/src/parking_lot.rs:180:9)",
"0x55d5862f48c6: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:355:13)",
"0x55d5862f48c6: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:972:18)",
"0x55d5862f48c6: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2146:14)",
"0x55d5862f48c6: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,alloc::vec::into_iter::IntoIter<T>>>::spec_extend (src/vec/spec_extend.rs:33:13)",
"0x55d5862f48c6: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d5862f48c6: truck_polymesh::polygon_mesh::<impl truck_polymesh::PolygonMesh>::merge (truck-polymesh/src/polygon_mesh.rs:121:35)",
"0x55d58621e39d: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon::{{closure}} (src/tessellation/mod.rs:84:13)",
"0x55d58621e39d: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d58621e39d: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon (src/tessellation/mod.rs:83:9)",
"0x55d58621e39d: test_truck::main (test-truck/src/main.rs:47:17)",
"0x55d58620eeeb: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d58620eeeb: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::resolve_conflict_region::{{closure}} (spade/src/cdt.rs:630:17)",
"0x55d58620eeeb: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::resolve_conflict_region (spade/src/cdt.rs:636:9)",
"0x55d58620eeeb: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::resolve_conflict_groups (spade/src/cdt.rs:1064:37)",
"0x55d58620eeeb: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::try_add_constraint_inner (spade/src/cdt.rs:824:13)",
"0x55d58620eeeb: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::add_constraint (spade/src/cdt.rs:550:17)",
"0x55d58620ae64: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d58620ae64: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d58620ae64: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d58620ae64: truck_topology::face::<impl truck_topology::Face<P,C,S>>::new_unchecked (truck-topology/src/face.rs:64:22)",
"0x55d58620ae64: truck_topology::face::<impl truck_topology::Face<P,C,S>>::debug_new (truck-topology/src/face.rs:76:22)",
"0x55d58620ae64: truck_meshalgo::tessellation::triangulation::shell_create_polygon (src/tessellation/triangulation.rs:220:24)",
"0x55d58620ae64: truck_meshalgo::tessellation::triangulation::shell_tessellation::{{closure}} (src/tessellation/triangulation.rs:92:9)",
"0x55d58620ae64: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut (src/ops/function.rs:272:13)",
"0x55d58620ae64: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d58620ae64: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d58620ae64: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d58620ae64: rayon::iter::plumbing::Folder::consume_iter (iter/plumbing/mod.rs:177:21)",
"0x55d58620ae64: <rayon::iter::map::MapFolder<C,F> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/map.rs:248:21)",
"0x55d58620ae64: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d58620ae64: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d5861a947c: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d5861a947c: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d5861a947c: std::collections::hash::map::HashMap<K,V,S>::reserve (collections/hash/map.rs:758:19)",
"0x55d5861a947c: rayon::iter::extend::<impl rayon::iter::ParallelExtend<(K,V)> for std::collections::hash::map::HashMap<K,V,S>>::par_extend (src/iter/extend.rs:33:15)",
"0x55d5861a947c: rayon::iter::from_par_iter::collect_extended (src/iter/from_par_iter.rs:20:5)",
"0x55d5861a947c: rayon::iter::from_par_iter::<impl rayon::iter::FromParallelIterator<(K,V)> for std::collections::hash::map::HashMap<K,V,S>>::from_par_iter (src/iter/from_par_iter.rs:131:9)",
"0x55d5861a947c: rayon::iter::ParallelIterator::collect (src/iter/mod.rs:2069:9)",
"0x55d5861a947c: truck_meshalgo::tessellation::triangulation::shell_tessellation (src/tessellation/triangulation.rs:65:10)",
"0x55d5861a947c: <truck_topology::Shell<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:261:19)",
"0x55d5862bf236: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5862bf236: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5862bf236: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5862bf236: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5862bf236: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d5862bf236: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d5862bf236: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d5862bf236: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d5862bf236: <truck_polymesh::StandardAttributes as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:42:5)",
"0x55d5862bf236: <truck_polymesh::PolygonMesh<V,A> as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:87:5)",
"0x55d5862bf236: <core::option::Option<T> as core::clone::Clone>::clone (core/src/option.rs:2038:29)",
"0x55d5862bf236: truck_topology::face::<impl truck_topology::Face<P,C,S>>::surface (truck-topology/src/face.rs:509:9)",
"0x55d5862bf236: <truck_topology::Shell<cgmath::point::Point3<f64>,truck_polymesh::PolylineCurve<cgmath::point::Point3<f64>>,core::option::Option<truck_polymesh::PolygonMesh>> as truck_meshalgo::tessellation::MeshedShape>::to_polygon::{{closure}} (src/tessellation/mod.rs:67:37)",
"0x55d5862bf236: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d5862bf236: <truck_topology::Shell<cgmath::point::Point3<f64>,truck_polymesh::PolylineCurve<cgmath::point::Point3<f64>>,core::option::Option<truck_polymesh::PolygonMesh>> as truck_meshalgo::tessellation::MeshedShape>::to_polygon (src/tessellation/mod.rs:66:9)",
"0x55d5861bf41a: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5861bf41a: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5861bf41a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5861bf41a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5861bf41a: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d5861bf41a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55d5861bf41a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861bf41a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861bf41a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861bf41a: truck_meshalgo::tessellation::triangulation::PolyBoundary::insert_to (src/tessellation/triangulation.rs:484:14)",
"0x55d5861bf41a: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:526:5)",
"0x55d5861bf41a: truck_meshalgo::tessellation::triangulation::shell_create_polygon::{{closure}} (src/tessellation/triangulation.rs:218:14)",
"0x55d5861ab5d6: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d5861ab5d6: hashbrown::raw::RawTable<T,A>::find_or_find_insert_slot (src/raw/mod.rs:1413:9)",
"0x55d5861ab5d6: hashbrown::map::HashMap<K,V,S,A>::insert (hashbrown-0.14.5/src/map.rs:1754:15)",
"0x55d5861ab5d6: hashbrown::set::HashSet<T,S,A>::insert (hashbrown-0.14.5/src/set.rs:1115:9)",
"0x55d5861ab5d6: std::collections::hash::set::HashSet<T,S>::insert (collections/hash/set.rs:890:19)",
"0x55d5861ab5d6: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency::{{closure}} (truck-topology/src/shell.rs:231:26)",
"0x55d5861ab5d6: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d5861ab5d6: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861ab5d6: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d5861ab5d6: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d5861ab5d6: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d5861ab5d6: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d5861ab5d6: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d5861ab5d6: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d5861ab5d6: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d5861ab5d6: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:321:9)",
"0x55d5861ab5d6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d5861ab5d6: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861ab5d6: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861ab5d6: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d5861ab5d6: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d5861ab5d6: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency (truck-topology/src/shell.rs:230:26)",
"0x55d5861ab5d6: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::is_connected (truck-topology/src/shell.rs:405:29)",
"0x55d5861ab5d6: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:22:24)",
"0x55d5861ab5d6: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d5861ab5d6: <truck_topology::Solid<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:300:9)",
"0x55d586207d43: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d586207d43: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d586207d43: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d586207d43: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new_unchecked (truck-topology/src/edge.rs:45:20)",
"0x55d586207d43: truck_topology::edge::<impl truck_topology::Edge<P,C>>::debug_new (truck-topology/src/edge.rs:57:22)",
"0x55d586207d43: truck_meshalgo::tessellation::triangulation::shell_tessellation::{{closure}} (src/tessellation/triangulation.rs:74:18)",
"0x55d586207d43: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut (src/ops/function.rs:272:13)",
"0x55d586207d43: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d586207d43: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d586207d43: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d586207d43: rayon::iter::plumbing::Folder::consume_iter (iter/plumbing/mod.rs:177:21)",
"0x55d586207d43: <rayon::iter::map::MapFolder<C,F> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/map.rs:248:21)",
"0x55d586207d43: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d586207d43: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d58619ef46: rayon_core::registry::WorkerThread::wait_until (rayon-core-1.12.1/src/registry.rs:769:13)",
"0x55d58619ef46: rayon_core::join::join_context::{{closure}} (src/join/mod.rs:167:17)",
"0x55d5861cacc1: truck_shapeops::transversal::divide_face::divide_faces::{{closure}} (transversal/divide_face/mod.rs:120:17)",
"0x55d5861cacc1: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d5861cacc1: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861cacc1: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d5861cacc1: truck_shapeops::transversal::divide_face::divide_faces (transversal/divide_face/mod.rs:115:10)",
"0x55d5861a5bc9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:26:32)",
"0x55d5861a5bc9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861a5bc9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861a5bc9: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861a5bc9: truck_meshalgo::analyzers::collision::collision (src/analyzers/collision.rs:229:10)",
"0x55d5861a5bc9: <truck_polymesh::PolygonMesh as truck_meshalgo::analyzers::collision::Collision>::extract_interference (src/analyzers/collision.rs:34:9)",
"0x55d5861a5bc9: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:157:34)",
"0x55d5861a5bc9: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d5861a5bc9: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d5861a5bc9: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861a5bc9: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d5861a5bc9: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861a5bc9: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d5861a5bc9: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d5861e1aad: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d5861e1aad: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d5861e1aad: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.14.5/src/rustc_entry.rs:46:18)",
"0x55d5861e1aad: std::collections::hash::map::HashMap<K,V,S>::entry (collections/hash/map.rs:856:19)",
"0x55d5861e1aad: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert (truck-base/src/entry_map.rs:59:14)",
"0x55d5861e1aad: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices::{{closure}} (truck-topology/src/shell.rs:532:37)",
"0x55d5861e1aad: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d5861e1aad: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861e1aad: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861e1aad: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d5861e1aad: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d5861e1aad: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d5861e1aad: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861e1aad: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d5861e1aad: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d5861e1aad: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d5861e1aad: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d5861e1aad: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d5861e1aad: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices (truck-topology/src/shell.rs:528:14)",
"0x55d586206880: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d586206880: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d586206880: truck_topology::face::<impl truck_topology::Face<P,C,S>>::boundaries (truck-topology/src/face.rs:104:72)",
"0x55d586206880: core::ops::function::Fn::call (src/ops/function.rs:79:5)",
"0x55d586206880: <rayon::iter::flat_map::FlatMapFolder<C,F,<C as rayon::iter::plumbing::Consumer<<U as rayon::iter::IntoParallelIterator>::Item>>::Result> as rayon::iter::plumbing::Folder<T>>::consume (src/iter/flat_map.rs:125:24)",
"0x55d586206880: rayon::iter::plumbing::Folder::consume_iter (iter/plumbing/mod.rs:178:20)",
"0x55d586206880: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d586206880: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d5861dcbd0: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861dcbd0: truck_shapeops::transversal::loops_store::create_loops_stores (transversal/loops_store/mod.rs:459:75)",
"0x55d5861dcbd0: truck_shapeops::transversal::integrate::process_one_pair_of_shells (transversal/integrate/mod.rs:62:9)",
"0x55d5861f55de: truck_topology::wire::<impl core::clone::Clone for truck_topology::Wire<P,C>>::clone (truck-topology/src/wire.rs:778:24)",
"0x55d5861f55de: <truck_shapeops::transversal::loops_store::Loops<P,C> as core::convert::From<&truck_topology::Face<P,C,S>>>::from::{{closure}} (transversal/loops_store/mod.rs:122:48)",
"0x55d5861f55de: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d5861f55de: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861f55de: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861f55de: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d5861f55de: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d5861f55de: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d5861f55de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d5861f55de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861f55de: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861f55de: <truck_shapeops::transversal::loops_store::Loops<P,C> as core::iter::traits::collect::FromIterator<truck_shapeops::transversal::loops_store::BoundaryWire<P,C>>>::from_iter (transversal/loops_store/mod.rs:113:14)",
"0x55d5861f55de: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861f55de: <truck_shapeops::transversal::loops_store::Loops<P,C> as core::convert::From<&truck_topology::Face<P,C,S>>>::from (transversal/loops_store/mod.rs:123:14)",
"0x55d5861f55de: core::ops::function::FnMut::call_mut (src/ops/function.rs:166:5)",
"0x55d5861f55de: <truck_shapeops::transversal::loops_store::LoopsStore<P,C> as core::iter::traits::collect::FromIterator<&truck_topology::Face<P,C,S>>>::from_iter (transversal/loops_store/mod.rs:129:48)",
"0x55d5861dcb5b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861dcb5b: truck_shapeops::transversal::loops_store::create_loops_stores (transversal/loops_store/mod.rs:456:75)",
"0x55d5861dcb5b: truck_shapeops::transversal::integrate::process_one_pair_of_shells (transversal/integrate/mod.rs:62:9)",
"0x55d5862c1573: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5862c1573: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5862c1573: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5862c1573: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5862c1573: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d5862c1573: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::resolve_conflict_groups (spade/src/cdt.rs:1017:36)",
"0x55d5862c1573: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::try_add_constraint_inner (spade/src/cdt.rs:824:13)",
"0x55d5862c1573: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::add_constraint (spade/src/cdt.rs:550:17)",
"0x55d5861db09f: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861db09f: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d5861db09f: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d5861db09f: truck_topology::edge::<impl truck_topology::Edge<P,C>>::cut_with_parameter (truck-topology/src/edge.rs:452:20)",
"0x55d5861db09f: truck_shapeops::transversal::loops_store::LoopsStore<cgmath::point::Point3<f64>,C>::add_geom_vertex (transversal/loops_store/mod.rs:375:38)",
"0x55d5861ab8cd: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d5861ab8cd: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency::{{closure}} (truck-topology/src/shell.rs:235:17)",
"0x55d5861ab8cd: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d5861ab8cd: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861ab8cd: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d5861ab8cd: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d5861ab8cd: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d5861ab8cd: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d5861ab8cd: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d5861ab8cd: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d5861ab8cd: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d5861ab8cd: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:321:9)",
"0x55d5861ab8cd: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d5861ab8cd: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861ab8cd: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861ab8cd: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d5861ab8cd: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d5861ab8cd: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency (truck-topology/src/shell.rs:230:26)",
"0x55d5861ab8cd: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::is_connected (truck-topology/src/shell.rs:405:29)",
"0x55d5861ab8cd: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:22:24)",
"0x55d5861ab8cd: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d5861ab8cd: <truck_topology::Solid<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:300:9)",
"0x55d58619b255: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:26:32)",
"0x55d58619b255: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d58619b255: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d58619b255: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d58619b255: truck_meshalgo::tessellation::triangulation::PolyBoundaryPiece::try_new (src/tessellation/triangulation.rs:243:14)",
"0x55d58619b255: truck_meshalgo::tessellation::triangulation::shell_create_polygon::{{closure}} (src/tessellation/triangulation.rs:213:13)",
"0x55d58619b255: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:28)",
"0x55d58619b255: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d58619b255: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d58619b255: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/mod.rs:204:9)",
"0x55d58619b255: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d58619b255: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::next (iter/adapters/mod.rs:187:14)",
"0x55d58621e392: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon::{{closure}} (src/tessellation/mod.rs:84:27)",
"0x55d58621e392: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d58621e392: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon (src/tessellation/mod.rs:83:9)",
"0x55d58621e392: test_truck::main (test-truck/src/main.rs:47:17)",
"0x55d5861ca7af: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861ca7af: truck_shapeops::transversal::divide_face::create_parameter_boundary (alloc/src/macros.rs:54:13)",
"0x55d5861ca7af: truck_shapeops::transversal::divide_face::divide_one_face::{{closure}} (transversal/divide_face/mod.rs:64:20)",
"0x55d5861ca7af: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d5861ca7af: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861ca7af: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d5861ca7af: truck_shapeops::transversal::divide_face::divide_one_face (transversal/divide_face/mod.rs:63:18)",
"0x55d5861ca7af: truck_shapeops::transversal::divide_face::divide_faces::{{closure}} (transversal/divide_face/mod.rs:122:27)",
"0x55d5861ca7af: truck_shapeops::transversal::divide_face::divide_faces (transversal/divide_face/mod.rs:115:10)",
"0x55d586217bef: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d586217bef: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d586217bef: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d586217bef: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new_unchecked (truck-topology/src/edge.rs:45:20)",
"0x55d586217bef: truck_topology::edge::<impl truck_topology::Edge<P,C>>::try_new (truck-topology/src/edge.rs:20:16)",
"0x55d586217bef: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new (truck-topology/src/edge.rs:33:9)",
"0x55d586217bef: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:190:25)",
"0x55d586217bef: std::collections::hash::map::Entry<K,V>::or_insert_with (collections/hash/map.rs:2666:43)",
"0x55d586217bef: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}} (transversal/loops_store/mod.rs:189:21)",
"0x55d586217bef: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d586217bef: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d586217bef: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861a5e8d: truck_shapeops::transversal::polyline_construction::Graph::add_edge (transversal/polyline_construction/mod.rs:82:13)",
"0x55d5861a5e8d: <truck_shapeops::transversal::polyline_construction::Graph as core::iter::traits::collect::FromIterator<&(cgmath::point::Point3<f64>,cgmath::point::Point3<f64>)>>::from_iter::{{closure}} (transversal/polyline_construction/mod.rs:111:42)",
"0x55d5861a5e8d: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d5861a5e8d: <truck_shapeops::transversal::polyline_construction::Graph as core::iter::traits::collect::FromIterator<&(cgmath::point::Point3<f64>,cgmath::point::Point3<f64>)>>::from_iter (transversal/polyline_construction/mod.rs:111:9)",
"0x55d5861a5e8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861a5e8d: truck_shapeops::transversal::polyline_construction::construct_polylines (transversal/polyline_construction/mod.rs:7:41)",
"0x55d5861a5e8d: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:158:21)",
"0x55d5861a5e8d: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d5861a5e8d: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d5861a5e8d: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861a5e8d: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d5861a5e8d: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861a5e8d: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d5861a5e8d: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d5861d73ad: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5861d73ad: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5861d73ad: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5861d73ad: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5861d73ad: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d5861d73ad: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d5861d73ad: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d5861d73ad: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d5861d73ad: <truck_polymesh::PolylineCurve<P> as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:101:29)",
"0x55d5861d73ad: truck_topology::edge::<impl truck_topology::Edge<P,C>>::curve (truck-topology/src/edge.rs:255:9)",
"0x55d5861d73ad: truck_topology::edge::<impl truck_topology::Edge<P,C>>::cut_with_parameter (truck-topology/src/edge.rs:440:26)",
"0x55d5861d73ad: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::add_polygon_vertex (transversal/loops_store/mod.rs:331:38)",
"0x55d5862f71bb: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5862f71bb: hashbrown::raw::alloc::inner::do_alloc (src/raw/alloc.rs:15:15)",
"0x55d5862f71bb: hashbrown::raw::RawTableInner::new_uninitialized (src/raw/mod.rs:1750:38)",
"0x55d5862f71bb: hashbrown::raw::RawTableInner::fallible_with_capacity (src/raw/mod.rs:1788:30)",
"0x55d5862f71bb: hashbrown::raw::RawTableInner::prepare_resize (src/raw/mod.rs:2864:13)",
"0x55d5862f71bb: hashbrown::raw::RawTableInner::resize_inner (src/raw/mod.rs:3060:34)",
"0x55d5862f71bb: hashbrown::raw::RawTableInner::reserve_rehash_inner (src/raw/mod.rs:2950:13)",
"0x55d5862f71bb: hashbrown::raw::RawTable<T,A>::reserve_rehash (src/raw/mod.rs:1231:13)",
"0x55d5862f66e7: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d5862f66e7: hashbrown::raw::RawTable<T,A>::find_or_find_insert_slot (src/raw/mod.rs:1413:9)",
"0x55d5862f66e7: hashbrown::map::HashMap<K,V,S,A>::insert (hashbrown-0.14.5/src/map.rs:1754:15)",
"0x55d5862f541a: hashbrown::set::HashSet<T,S,A>::insert (hashbrown-0.14.5/src/set.rs:1115:9)",
"0x55d5862f541a: std::collections::hash::set::HashSet<T,S>::insert (collections/hash/set.rs:890:19)",
"0x55d5862f541a: truck_shapeops::transversal::polyline_construction::Graph::add_half_edge (transversal/polyline_construction/mod.rs:74:17)",
"0x55d5861db589: <alloc::collections::vec_deque::VecDeque<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (collections/vec_deque/mod.rs:2863:9)",
"0x55d5861db589: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861db589: truck_topology::wire::<impl truck_topology::Wire<P,C>>::inverse (truck-topology/src/wire.rs:189:75)",
"0x55d5861db589: truck_shapeops::transversal::loops_store::Loops<P,C>::swap_edge_into_wire::{{closure}} (transversal/loops_store/mod.rs:214:60)",
"0x55d5861db589: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d5861db589: truck_shapeops::transversal::loops_store::Loops<P,C>::swap_edge_into_wire (transversal/loops_store/mod.rs:208:9)",
"0x55d5861db589: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::swap_edge_into_wire::{{closure}} (transversal/loops_store/mod.rs:301:31)",
"0x55d5861db589: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::swap_edge_into_wire (transversal/loops_store/mod.rs:300:9)",
"0x55d5861db589: truck_shapeops::transversal::loops_store::LoopsStore<cgmath::point::Point3<f64>,C>::add_geom_vertex (transversal/loops_store/mod.rs:377:22)",
"0x55d5862bf66e: <truck_topology::Shell<cgmath::point::Point3<f64>,truck_polymesh::PolylineCurve<cgmath::point::Point3<f64>>,core::option::Option<truck_polymesh::PolygonMesh>> as truck_meshalgo::tessellation::MeshedShape>::to_polygon::{{closure}} (src/tessellation/mod.rs:71:17)",
"0x55d5862bf66e: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d5862bf66e: <truck_topology::Shell<cgmath::point::Point3<f64>,truck_polymesh::PolylineCurve<cgmath::point::Point3<f64>>,core::option::Option<truck_polymesh::PolygonMesh>> as truck_meshalgo::tessellation::MeshedShape>::to_polygon (src/tessellation/mod.rs:66:9)",
"0x55d5861d3d16: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861d3d16: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d5861d3d16: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d5861d3d16: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new_unchecked (truck-topology/src/edge.rs:45:20)",
"0x55d5861d3d16: truck_topology::edge::<impl truck_topology::Edge<P,C>>::try_new (truck-topology/src/edge.rs:20:16)",
"0x55d5861d3d16: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new (truck-topology/src/edge.rs:33:9)",
"0x55d5861d3d16: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:561:33)",
"0x55d586217e1f: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d586217e1f: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d586217e1f: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.14.5/src/rustc_entry.rs:46:18)",
"0x55d586217e1f: std::collections::hash::map::HashMap<K,V,S>::entry (collections/hash/map.rs:856:19)",
"0x55d586217e1f: truck_shapeops::transversal::loops_store::Loops<P,C>::change_vertex::{{closure}} (transversal/loops_store/mod.rs:189:26)",
"0x55d586217e1f: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d586217e1f: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d586217e1f: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d58621c5d6: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d58621c5d6: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d58621c5d6: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d58621c5d6: truck_topology::vertex::<impl truck_topology::Vertex<P>>::new (truck-topology/src/vertex.rs:17:20)",
"0x55d58621c5d6: truck_topology::vertex::<impl truck_topology::Vertex<P>>::mapped (truck-topology/src/vertex.rs:90:9)",
"0x55d58621c5d6: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Vertex<P>>::sweep (truck-modeling/src/sweep.rs:38:17)",
"0x55d58621c5d6: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d58621c5d6: test_truck::main (test-truck/src/main.rs:42:18)",
"0x55d5861bf8c3: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861bf8c3: truck_geometry::specifieds::plane::<impl truck_geotrait::traits::surface::ParameterDivision2D for truck_geometry::specifieds::Plane>::parameter_division (alloc/src/macros.rs:54:13)",
"0x55d5861bf8c3: <truck_modeling::geometry::Surface as truck_geotrait::traits::surface::ParameterDivision2D>::parameter_division (truck-modeling/src/geometry.rs:161:5)",
"0x55d5861bf8c3: <&S as truck_geotrait::traits::surface::ParameterDivision2D>::parameter_division (src/traits/surface.rs:155:9)",
"0x55d5861bf8c3: truck_meshalgo::tessellation::triangulation::insert_surface (src/tessellation/triangulation.rs:547:24)",
"0x55d5861bf8c3: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:527:5)",
"0x55d5861bf8c3: truck_meshalgo::tessellation::triangulation::shell_create_polygon::{{closure}} (src/tessellation/triangulation.rs:218:14)",
"0x55d5862c3cfe: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:486:19)",
"0x55d5862c3cfe: alloc::raw_vec::RawVec<T,A>::grow_one (alloc/src/raw_vec.rs:364:27)",
"0x55d5862c03c9: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d5862c03c9: spade::delaunay_core::dcel_operations::insert_first_vertex (src/delaunay_core/dcel_operations.rs:855:5)",
"0x55d5862c03c9: spade::delaunay_core::triangulation_ext::TriangulationExt::insert_with_hint_option_impl (src/delaunay_core/triangulation_ext.rs:82:25)",
"0x55d5862c03c9: spade::delaunay_core::triangulation_ext::TriangulationExt::insert_with_hint_option (src/delaunay_core/triangulation_ext.rs:67:22)",
"0x55d5861bf3d0: spade::triangulation::Triangulation::insert (spade/src/triangulation.rs:552:9)",
"0x55d5861bf3d0: truck_meshalgo::tessellation::triangulation::PolyBoundary::insert_to::{{closure}} (src/tessellation/triangulation.rs:482:31)",
"0x55d5861bf3d0: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d5861bf3d0: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d5861bf3d0: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d5861bf3d0: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:26:32)",
"0x55d5861bf3d0: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861bf3d0: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861bf3d0: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861bf3d0: truck_meshalgo::tessellation::triangulation::PolyBoundary::insert_to (src/tessellation/triangulation.rs:484:14)",
"0x55d5861bf3d0: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:526:5)",
"0x55d5861bf3d0: truck_meshalgo::tessellation::triangulation::shell_create_polygon::{{closure}} (src/tessellation/triangulation.rs:218:14)",
"0x55d58621f3b2: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d58621f3b2: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d58621f3b2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d58621f3b2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d58621f3b2: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d58621f3b2: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d58621f3b2: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d58621f3b2: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d58621f3b2: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d58621f3b2: truck_modeling::builder::try_attach_plane (truck-modeling/src/builder.rs:416:10)",
"0x55d58621f3b2: test_truck::main (test-truck/src/main.rs:59:16)",
"0x55d5862bf2aa: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5862bf2aa: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5862bf2aa: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5862bf2aa: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5862bf2aa: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d5862bf2aa: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d5862bf2aa: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d5862bf2aa: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d5862bf2aa: <truck_polymesh::StandardAttributes as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:44:5)",
"0x55d5862bf2aa: <truck_polymesh::PolygonMesh<V,A> as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:87:5)",
"0x55d5862bf2aa: <core::option::Option<T> as core::clone::Clone>::clone (core/src/option.rs:2038:29)",
"0x55d5862bf2aa: truck_topology::face::<impl truck_topology::Face<P,C,S>>::surface (truck-topology/src/face.rs:509:9)",
"0x55d5862bf2aa: <truck_topology::Shell<cgmath::point::Point3<f64>,truck_polymesh::PolylineCurve<cgmath::point::Point3<f64>>,core::option::Option<truck_polymesh::PolygonMesh>> as truck_meshalgo::tessellation::MeshedShape>::to_polygon::{{closure}} (src/tessellation/mod.rs:67:37)",
"0x55d5862bf2aa: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d5862bf2aa: <truck_topology::Shell<cgmath::point::Point3<f64>,truck_polymesh::PolylineCurve<cgmath::point::Point3<f64>>,core::option::Option<truck_polymesh::PolygonMesh>> as truck_meshalgo::tessellation::MeshedShape>::to_polygon (src/tessellation/mod.rs:66:9)",
"0x55d5861df24e: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5861df24e: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5861df24e: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5861df24e: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5861df24e: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d5861df24e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55d5861df24e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861df24e: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861df24e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861df24e: truck_topology::wire::<impl truck_topology::Wire<P,C>>::swap_edge_into_wire (truck-topology/src/wire.rs:364:55)",
"0x55d586212d3b: rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (rayon-core-1.12.1/src/registry.rs:522:21)",
"0x55d586212d3b: rayon_core::job::JobResult<T>::call::{{closure}} (rayon-core-1.12.1/src/job.rs:218:41)",
"0x55d586212d3b: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:272:9)",
"0x55d586212d3b: std::panicking::try::do_call (std/src/panicking.rs:553:40)",
"0x55d586212d3b: std::panicking::try (std/src/panicking.rs:517:19)",
"0x55d586212d3b: std::panic::catch_unwind (std/src/panic.rs:350:14)",
"0x55d586212d3b: rayon_core::unwind::halt_unwinding (rayon-core-1.12.1/src/unwind.rs:17:5)",
"0x55d586212d3b: rayon_core::job::JobResult<T>::call (rayon-core-1.12.1/src/job.rs:218:15)",
"0x55d586212d3b: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.12.1/src/job.rs:120:32)",
"0x55d5861c429d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d5861c429d: truck_meshalgo::tessellation::triangulation::triangulation_into_polymesh::{{closure}} (src/tessellation/triangulation.rs:600:13)",
"0x55d5861c429d: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d5861c429d: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:108:27)",
"0x55d5861c429d: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d5861c429d: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:114:9)",
"0x55d5861c429d: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861c429d: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d5861c429d: <hashbrown::map::HashMap<K,V,S,A> as core::iter::traits::collect::Extend<(K,V)>>::extend (hashbrown-0.14.5/src/map.rs:6511:9)",
"0x55d5861c429d: <std::collections::hash::map::HashMap<K,V,S> as core::iter::traits::collect::Extend<(K,V)>>::extend (collections/hash/map.rs:3144:9)",
"0x55d5861c429d: <std::collections::hash::map::HashMap<K,V,S> as core::iter::traits::collect::FromIterator<(K,V)>>::from_iter (collections/hash/map.rs:3129:13)",
"0x55d5861c429d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861c429d: truck_meshalgo::tessellation::triangulation::triangulation_into_polymesh (src/tessellation/triangulation.rs:603:10)",
"0x55d5861c429d: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:528:20)",
"0x55d5861c429d: truck_meshalgo::tessellation::triangulation::shell_create_polygon::{{closure}} (src/tessellation/triangulation.rs:218:14)",
"0x55d58620aaa5: truck_topology::face::<impl truck_topology::Face<P,C,S>>::surface (truck-topology/src/face.rs:509:9)",
"0x55d58620aaa5: truck_meshalgo::tessellation::triangulation::shell_tessellation::{{closure}} (src/tessellation/triangulation.rs:92:31)",
"0x55d58620aaa5: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut (src/ops/function.rs:272:13)",
"0x55d58620aaa5: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d58620aaa5: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d58620aaa5: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d58620aaa5: rayon::iter::plumbing::Folder::consume_iter (iter/plumbing/mod.rs:177:21)",
"0x55d58620aaa5: <rayon::iter::map::MapFolder<C,F> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/map.rs:248:21)",
"0x55d58620aaa5: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d58620aaa5: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d5861c8072: truck_topology::edge::<impl truck_topology::Edge<P,C>>::curve (truck-topology/src/edge.rs:255:9)",
"0x55d5861c8072: truck_modeling::topo_impls::create_surface (truck-modeling/src/topo_impls.rs:25:21)",
"0x55d5861c8072: truck_modeling::topo_impls::sub_connect_wires (truck-modeling/src/topo_impls.rs:74:19)",
"0x55d5861c8072: truck_modeling::topo_impls::connect_raw_wires::{{closure}} (truck-modeling/src/topo_impls.rs:118:9)",
"0x55d5861c8072: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d5861c8072: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d5861c8072: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d5861c8072: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d5861c8072: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d5861c8072: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d5861c8072: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (truck-modeling/src/sweep.rs:235:15)",
"0x55d5861c8072: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d5861dfa4f: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:355:13)",
"0x55d5861dfa4f: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:972:18)",
"0x55d5861dfa4f: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3093:18)",
"0x55d5861dfa4f: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d5861dfa4f: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d5861dfa4f: truck_topology::wire::<impl truck_topology::Wire<P,C>>::swap_edge_into_wire (truck-topology/src/wire.rs:365:18)",
"0x55d5861ab9d4: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d5861ab9d4: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d5861ab9d4: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.14.5/src/rustc_entry.rs:46:18)",
"0x55d5861ab9d4: std::collections::hash::map::HashMap<K,V,S>::entry (collections/hash/map.rs:856:19)",
"0x55d5861ab9d4: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert (truck-base/src/entry_map.rs:59:14)",
"0x55d5861ab9d4: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency::{{closure}} (truck-topology/src/shell.rs:234:17)",
"0x55d5861ab9d4: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d5861ab9d4: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861ab9d4: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d5861ab9d4: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d5861ab9d4: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d5861ab9d4: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d5861ab9d4: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d5861ab9d4: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d5861ab9d4: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d5861ab9d4: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:321:9)",
"0x55d5861ab9d4: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d5861ab9d4: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861ab9d4: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861ab9d4: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d5861ab9d4: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d5861ab9d4: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency (truck-topology/src/shell.rs:230:26)",
"0x55d5861ab9d4: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::is_connected (truck-topology/src/shell.rs:405:29)",
"0x55d5861ab9d4: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:22:24)",
"0x55d5861ab9d4: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d5861ab9d4: <truck_topology::Solid<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:300:9)",
"0x55d5861a6583: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5861a6583: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5861a6583: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5861a6583: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5861a6583: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d5861a6583: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d5861a6583: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:246:9)",
"0x55d5861a6583: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861a6583: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861a6583: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:170:10)",
"0x55d5861a6583: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d5861a6583: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d5861a6583: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861a6583: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d5861a6583: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861a6583: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d5861a6583: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d5861f55b4: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5861f55b4: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5861f55b4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5861f55b4: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5861f55b4: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d5861f55b4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d5861f55b4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861f55b4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861f55b4: <truck_shapeops::transversal::loops_store::Loops<P,C> as core::iter::traits::collect::FromIterator<truck_shapeops::transversal::loops_store::BoundaryWire<P,C>>>::from_iter (transversal/loops_store/mod.rs:113:14)",
"0x55d5861f55b4: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861f55b4: <truck_shapeops::transversal::loops_store::Loops<P,C> as core::convert::From<&truck_topology::Face<P,C,S>>>::from (transversal/loops_store/mod.rs:123:14)",
"0x55d5861f55b4: core::ops::function::FnMut::call_mut (src/ops/function.rs:166:5)",
"0x55d5861f55b4: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d5861f55b4: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861f55b4: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861f55b4: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d5861f55b4: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d5861f55b4: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d5861f55b4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d5861f55b4: <truck_shapeops::transversal::loops_store::LoopsStore<P,C> as core::iter::traits::collect::FromIterator<&truck_topology::Face<P,C,S>>>::from_iter (transversal/loops_store/mod.rs:129:48)",
"0x55d58626d135: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d58626d135: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d58626d135: alloc::sync::Arc<T>::new (alloc/src/sync.rs:393:25)",
"0x55d58626d135: crossbeam_deque::deque::Worker<T>::new_lifo (crossbeam-deque-0.8.5/src/deque.rs:251:21)",
"0x55d58626d135: rayon_core::registry::Registry::new::{{closure}} (rayon-core-1.12.1/src/registry.rs:246:21)",
"0x55d58626d135: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d58626d135: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d58626d135: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d58626d135: <(ExtendA,ExtendB) as core::iter::traits::collect::Extend<(A,B)>>::extend (iter/traits/collect.rs:519:9)",
"0x55d58626d135: core::iter::traits::iterator::Iterator::unzip (iter/traits/iterator.rs:3396:9)",
"0x55d58626d135: rayon_core::registry::Registry::new (rayon-core-1.12.1/src/registry.rs:241:53)",
"0x55d5862c5e23: alloc::alloc::alloc (alloc/src/alloc.rs:100:9)",
"0x55d5862c5e23: smallvec::SmallVec<A>::try_grow (smallvec-1.13.2/src/lib.rs:1191:46)",
"0x55d5862c5e23: smallvec::SmallVec<A>::reserve_one_unchecked (smallvec-1.13.2/src/lib.rs:1231:20)",
"0x55d5862c5c2e: smallvec::SmallVec<A>::push (smallvec-1.13.2/src/lib.rs:1118:17)",
"0x55d5862c5c2e: spade::delaunay_core::triangulation_ext::TriangulationExt::legalize_edge (src/delaunay_core/triangulation_ext.rs:386:25)",
"0x55d5862c51a5: spade::delaunay_core::triangulation_ext::TriangulationExt::insert_outside_of_convex_hull (src/delaunay_core/triangulation_ext.rs:245:9)",
"0x55d5862c0cae: spade::delaunay_core::triangulation_ext::TriangulationExt::insert_with_hint_option_impl (src/delaunay_core/triangulation_ext.rs:0:0)",
"0x55d5862c0cae: spade::delaunay_core::triangulation_ext::TriangulationExt::insert_with_hint_option (src/delaunay_core/triangulation_ext.rs:67:22)",
"0x55d5861e1c88: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d5861e1c88: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices::{{closure}} (truck-topology/src/shell.rs:534:21)",
"0x55d5861e1c88: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d5861e1c88: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861e1c88: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861e1c88: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d5861e1c88: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d5861e1c88: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d5861e1c88: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861e1c88: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d5861e1c88: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d5861e1c88: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d5861e1c88: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d5861e1c88: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d5861e1c88: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices (truck-topology/src/shell.rs:528:14)",
"0x55d5861a675e: truck_shapeops::transversal::intersection_curve::intersection_curves::{{closure}} (transversal/intersection_curve/mod.rs:164:17)",
"0x55d5861a675e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d5861a675e: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d5861a675e: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861a675e: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d5861a675e: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d5861a675e: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d5861a675e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d5861a675e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:246:9)",
"0x55d5861a675e: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861a675e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861a675e: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:170:10)",
"0x55d5861a675e: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d5861a675e: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d5861a675e: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861a675e: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d5861a675e: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861a675e: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d5861a675e: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d58621d0ec: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d58621d0ec: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d58621d0ec: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d58621d0ec: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new_unchecked (truck-topology/src/edge.rs:45:20)",
"0x55d58621d0ec: truck_topology::edge::<impl truck_topology::Edge<P,C>>::debug_new (truck-topology/src/edge.rs:57:22)",
"0x55d58621d0ec: truck_modeling::topo_impls::connect_vertices (truck-modeling/src/topo_impls.rs:17:5)",
"0x55d58621d0ec: truck_modeling::topo_impls::connect_edges (truck-modeling/src/topo_impls.rs:40:17)",
"0x55d58621d0ec: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Edge<P,C>>::sweep (truck-modeling/src/sweep.rs:99:9)",
"0x55d58621d0ec: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d58621d0ec: test_truck::main (test-truck/src/main.rs:43:21)",
"0x55d58622207d: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon::{{closure}} (src/tessellation/mod.rs:84:13)",
"0x55d58622207d: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d58622207d: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon (src/tessellation/mod.rs:83:9)",
"0x55d58622207d: test_truck::main (test-truck/src/main.rs:87:17)",
"0x55d5861c67c3: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5861c67c3: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5861c67c3: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5861c67c3: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5861c67c3: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d5861c67c3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d5861c67c3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861c67c3: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861c67c3: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861c67c3: truck_topology::face::<impl truck_topology::Face<P,C,S>>::mapped (truck-topology/src/face.rs:489:14)",
"0x55d5861c67c3: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (truck-modeling/src/sweep.rs:232:23)",
"0x55d5861c67c3: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d5861c72db: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5861c72db: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5861c72db: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5861c72db: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5861c72db: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d5861c72db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d5861c72db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861c72db: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861c72db: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861c72db: truck_topology::face::<impl truck_topology::Face<P,C,S>>::boundary_iters (truck-topology/src/face.rs:211:14)",
"0x55d5861c72db: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (truck-modeling/src/sweep.rs:233:27)",
"0x55d5861c72db: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d5862b9fb3: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5862b9fb3: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5862b9fb3: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5862b9fb3: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5862b9fb3: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d5862b9fb3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55d5862b9fb3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861a4f06: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861a4f06: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861a4f06: truck_meshalgo::analyzers::collision::collision (src/analyzers/collision.rs:216:47)",
"0x55d5861a4f06: <truck_polymesh::PolygonMesh as truck_meshalgo::analyzers::collision::Collision>::extract_interference (src/analyzers/collision.rs:34:9)",
"0x55d5861a4f06: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:157:34)",
"0x55d5861a4f06: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d5861a4f06: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d5861a4f06: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861a4f06: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d5861a4f06: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861a4f06: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d5861a4f06: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d58620a80e: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d58620a80e: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d58620a80e: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d58620a80e: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d58620a80e: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d58620a80e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d58620a80e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d58620a80e: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d58620a80e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d58620a80e: truck_meshalgo::tessellation::triangulation::shell_tessellation::{{closure}} (src/tessellation/triangulation.rs:91:14)",
"0x55d58620a80e: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut (src/ops/function.rs:272:13)",
"0x55d58620a80e: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d58620a80e: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d58620a80e: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d58620a80e: rayon::iter::plumbing::Folder::consume_iter (iter/plumbing/mod.rs:177:21)",
"0x55d58620a80e: <rayon::iter::map::MapFolder<C,F> as rayon::iter::plumbing::Folder<T>>::consume_iter (src/iter/map.rs:248:21)",
"0x55d58620a80e: rayon::iter::plumbing::Producer::fold_with (iter/plumbing/mod.rs:109:9)",
"0x55d58620a80e: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:437:13)",
"0x55d5861ad9d9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5861ad9d9: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5861ad9d9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5861ad9d9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5861ad9d9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d5861ad9d9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d5861ad9d9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861ad9d9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861ad9d9: <alloc::collections::vec_deque::VecDeque<T> as alloc::collections::vec_deque::spec_from_iter::SpecFromIter<T,I>>::spec_from_iter (collections/vec_deque/spec_from_iter.rs:17:9)",
"0x55d5861d7b91: <alloc::collections::vec_deque::VecDeque<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (collections/vec_deque/mod.rs:2863:9)",
"0x55d5861d7b91: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861d7b91: truck_topology::wire::<impl truck_topology::Wire<P,C>>::inverse (truck-topology/src/wire.rs:189:75)",
"0x55d5861d7b91: truck_shapeops::transversal::loops_store::Loops<P,C>::swap_edge_into_wire::{{closure}} (transversal/loops_store/mod.rs:214:60)",
"0x55d5861d7b91: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d5861d7b91: truck_shapeops::transversal::loops_store::Loops<P,C>::swap_edge_into_wire (transversal/loops_store/mod.rs:208:9)",
"0x55d5861d7b91: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::swap_edge_into_wire::{{closure}} (transversal/loops_store/mod.rs:301:31)",
"0x55d5861d7b91: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::swap_edge_into_wire (transversal/loops_store/mod.rs:300:9)",
"0x55d5861d7b91: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::add_polygon_vertex (transversal/loops_store/mod.rs:333:22)",
"0x55d58626e313: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d58626e313: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d58626e313: std::thread::Builder::spawn_unchecked_ (src/thread/mod.rs:561:20)",
"0x55d58626e313: std::thread::Builder::spawn_unchecked (src/thread/mod.rs:456:32)",
"0x55d58626e313: std::thread::Builder::spawn (src/thread/mod.rs:388:18)",
"0x55d58626e313: <rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn (rayon-core-1.12.1/src/registry.rs:98:11)",
"0x55d58626e313: rayon_core::registry::Registry::new (rayon-core-1.12.1/src/registry.rs:304:29)",
"0x55d5861c8789: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861c8789: truck_modeling::topo_impls::sub_connect_wires (alloc/src/macros.rs:54:13)",
"0x55d5861c8789: truck_modeling::topo_impls::connect_raw_wires::{{closure}} (truck-modeling/src/topo_impls.rs:118:9)",
"0x55d5861c8789: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d5861c8789: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d5861c8789: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d5861c8789: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d5861c8789: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d5861c8789: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d5861c8789: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (truck-modeling/src/sweep.rs:235:15)",
"0x55d5861c8789: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d5861e0d5d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d5861e0d5d: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency::{{closure}} (truck-topology/src/shell.rs:234:17)",
"0x55d5861e0d5d: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d5861e0d5d: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861e0d5d: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d5861e0d5d: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d5861e0d5d: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d5861e0d5d: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d5861e0d5d: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d5861e0d5d: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d5861e0d5d: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d5861e0d5d: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:321:9)",
"0x55d5861e0d5d: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d5861e0d5d: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861e0d5d: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861e0d5d: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d5861e0d5d: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d5861e0d5d: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency (truck-topology/src/shell.rs:230:26)",
"0x55d5861e0d5d: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::is_connected (truck-topology/src/shell.rs:405:29)",
"0x55d5861e42ac: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5861e42ac: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5861e42ac: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5861e42ac: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5861e42ac: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x55d5861e42ac: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d5861e42ac: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d5861e42ac: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d5861e42ac: truck_topology::face::<impl core::clone::Clone for truck_topology::Face<P,C,S>>::clone (truck-topology/src/face.rs:1029:25)",
"0x55d5861e42ac: core::ops::function::FnMut::call_mut (src/ops/function.rs:166:5)",
"0x55d5861e42ac: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d5861e42ac: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d5861e42ac: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861e42ac: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/cloned.rs:61:31)",
"0x55d5861e42ac: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d5861e42ac: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d5861e42ac: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d5861e42ac: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d5861e42ac: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:246:9)",
"0x55d5861e42ac: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861e42ac: truck_topology::shell::<impl core::iter::traits::collect::FromIterator<truck_topology::Face<P,C,S>> for truck_topology::Shell<P,C,S>>::from_iter (truck-topology/src/shell.rs:853:24)",
"0x55d5861e42ac: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861e42ac: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::connected_components::{{closure}} (truck-topology/src/shell.rs:454:49)",
"0x55d5861e42ac: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:28)",
"0x55d5861e42ac: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::try_fold (src/vec/into_iter.rs:340:25)",
"0x55d5861e42ac: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d5861e42ac: <I as alloc::vec::in_place_collect::SpecInPlaceCollect<T,I>>::collect_in_place (src/vec/in_place_collect.rs:379:13)",
"0x55d5861e42ac: alloc::vec::in_place_collect::from_iter_in_place (src/vec/in_place_collect.rs:270:9)",
"0x55d5861e42ac: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::connected_components (truck-topology/src/shell.rs:455:14)",
"0x55d58621ca9d: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d58621ca9d: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d58621ca9d: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d58621ca9d: truck_topology::vertex::<impl truck_topology::Vertex<P>>::new (truck-topology/src/vertex.rs:17:20)",
"0x55d58621ca9d: truck_topology::vertex::<impl truck_topology::Vertex<P>>::mapped (truck-topology/src/vertex.rs:90:9)",
"0x55d58621ca9d: truck_topology::edge::<impl truck_topology::Edge<P,C>>::mapped (truck-topology/src/edge.rs:377:18)",
"0x55d58621ca9d: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Edge<P,C>>::sweep (truck-modeling/src/sweep.rs:98:20)",
"0x55d58621ca9d: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d58621ca9d: test_truck::main (test-truck/src/main.rs:43:21)",
"0x55d58626d398: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:355:13)",
"0x55d58626d398: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:972:18)",
"0x55d58626d398: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend_reserve (src/vec/mod.rs:3049:14)",
"0x55d58626d398: <(ExtendA,ExtendB) as core::iter::traits::collect::Extend<(A,B)>>::extend (iter/traits/collect.rs:516:13)",
"0x55d58626d398: core::iter::traits::iterator::Iterator::unzip (iter/traits/iterator.rs:3396:9)",
"0x55d58626d398: rayon_core::registry::Registry::new (rayon-core-1.12.1/src/registry.rs:254:66)",
"0x55d586221a3d: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon::{{closure}} (src/tessellation/mod.rs:84:13)",
"0x55d586221a3d: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d586221a3d: <truck_topology::Solid<P,C,S> as truck_meshalgo::tessellation::MeshedShape>::to_polygon (src/tessellation/mod.rs:83:9)",
"0x55d586221a3d: test_truck::main (test-truck/src/main.rs:77:17)",
"0x55d58621f130: truck_modeling::topo_impls::connect_vertices (truck-modeling/src/topo_impls.rs:17:29)",
"0x55d58621f130: truck_modeling::closed_sweep::<impl truck_modeling::topo_traits::ClosedSweep<P,C,S> for truck_topology::Vertex<P>>::closed_sweep (truck-modeling/src/closed_sweep.rs:30:24)",
"0x55d58621f130: truck_modeling::builder::whole_rsweep (truck-modeling/src/builder.rs:679:5)",
"0x55d58621f130: truck_modeling::builder::rsweep (truck-modeling/src/builder.rs:636:9)",
"0x55d58621f130: test_truck::main (test-truck/src/main.rs:53:18)",
"0x55d58620659f: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:486:19)",
"0x55d58620659f: alloc::raw_vec::RawVec<T,A>::grow_one (alloc/src/raw_vec.rs:364:27)",
"0x55d5861a6ab9: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d5861a6ab9: truck_shapeops::transversal::intersection_curve::IntersectionCurveWithParameters<S>::try_new (transversal/intersection_curve/mod.rs:36:13)",
"0x55d5861a6ab9: truck_shapeops::transversal::intersection_curve::intersection_curves::{{closure}} (transversal/intersection_curve/mod.rs:162:25)",
"0x55d5861a6ab9: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d5861a6ab9: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d5861a6ab9: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861a6ab9: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d5861a6ab9: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d5861a6ab9: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d5861a6ab9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d5861a6ab9: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:246:9)",
"0x55d5861a6ab9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861a6ab9: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861a6ab9: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:170:10)",
"0x55d5861a6ab9: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d5861a6ab9: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d5861a6ab9: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861a6ab9: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d5861a6ab9: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861a6ab9: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d5861a6ab9: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d5861a2d8b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d5861a2d8b: truck_topology::shell::create_one_component (truck-topology/src/shell.rs:1165:13)",
"0x55d5861a2d8b: truck_topology::shell::check_connectivity (truck-topology/src/shell.rs:1133:5)",
"0x55d5861a2d8b: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices::{{closure}}::{{closure}} (truck-topology/src/shell.rs:541:42)",
"0x55d5861a2d8b: core::option::Option<T>::filter (core/src/option.rs:1479:16)",
"0x55d5861a2d8b: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::singular_vertices::{{closure}} (truck-topology/src/shell.rs:541:17)",
"0x55d5861a2d8b: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861a2d8b: core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (iter/traits/iterator.rs:2907:32)",
"0x55d5861a2d8b: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861a2d8b: core::iter::traits::iterator::Iterator::find_map (iter/traits/iterator.rs:2913:9)",
"0x55d5861a2d8b: <core::iter::adapters::filter_map::FilterMap<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/filter_map.rs:64:9)",
"0x55d5862104d4: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5862104d4: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5862104d4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5862104d4: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5862104d4: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d5862104d4: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d5862104d4: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d5862104d4: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d5862104d4: <truck_polymesh::StandardAttributes as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:42:5)",
"0x55d5862104d4: <truck_polymesh::PolygonMesh<V,A> as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:87:5)",
"0x55d5862104d4: <core::option::Option<T> as core::clone::Clone>::clone (core/src/option.rs:2038:29)",
"0x55d5861ca2cc: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861ca2cc: truck_polymesh::polyline_curve::<impl truck_geotrait::traits::curve::Cut for truck_polymesh::PolylineCurve<P>>::cut (alloc/src/macros.rs:54:13)",
"0x55d5861d774b: truck_topology::edge::<impl truck_topology::Edge<P,C>>::cut_with_parameter (truck-topology/src/edge.rs:448:22)",
"0x55d5861d774b: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::add_polygon_vertex (transversal/loops_store/mod.rs:331:38)",
"0x55d5861a67b4: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5861a67b4: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5861a67b4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5861a67b4: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5861a67b4: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d5861a67b4: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d5861a67b4: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d5861a67b4: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d5861a67b4: <truck_polymesh::PolylineCurve<P> as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:100:10)",
"0x55d5861a67b4: truck_shapeops::transversal::intersection_curve::intersection_curves::{{closure}} (transversal/intersection_curve/mod.rs:165:26)",
"0x55d5861a67b4: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d5861a67b4: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d5861a67b4: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861a67b4: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d5861a67b4: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d5861a67b4: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d5861a67b4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d5861a67b4: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:246:9)",
"0x55d5861a67b4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861a67b4: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861a67b4: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:170:10)",
"0x55d5861a67b4: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d5861a67b4: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d5861a67b4: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861a67b4: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d5861a67b4: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861a67b4: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d5861a67b4: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d58623fb50: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:486:19)",
"0x55d58623fb50: alloc::raw_vec::RawVec<T,A>::grow_one (alloc/src/raw_vec.rs:364:27)",
"0x55d5862baf36: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d5862baf36: truck_meshalgo::analyzers::collision::colliding_segment_pairs::{{closure}} (src/analyzers/collision.rs:112:21)",
"0x55d5862baf36: core::iter::adapters::filter_map::filter_map_try_fold::{{closure}} (iter/adapters/filter_map.rs:49:28)",
"0x55d5862baf36: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::try_fold (src/vec/into_iter.rs:340:25)",
"0x55d5862baf36: <core::iter::adapters::filter_map::FilterMap<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/filter_map.rs:140:9)",
"0x55d5862baf36: <core::iter::adapters::fuse::Fuse<I> as core::iter::adapters::fuse::FuseImpl<I>>::try_fold (iter/adapters/fuse.rs:375:19)",
"0x55d5862baf36: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/fuse.rs:89:9)",
"0x55d5862baf36: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_try_fold (iter/adapters/flatten.rs:515:25)",
"0x55d5862baf36: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/flatten.rs:653:9)",
"0x55d5862baf36: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/flatten.rs:313:9)",
"0x55d5862baf36: core::iter::traits::iterator::Iterator::find_map (iter/traits/iterator.rs:2913:9)",
"0x55d5862baf36: <core::iter::adapters::filter_map::FilterMap<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/filter_map.rs:64:9)",
"0x55d5861d3328: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861d3328: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d5861d3328: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d5861d3328: truck_topology::vertex::<impl truck_topology::Vertex<P>>::new (truck-topology/src/vertex.rs:17:20)",
"0x55d5861d3328: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:501:31)",
"0x55d5861f5804: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5861f5804: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5861f5804: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5861f5804: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5861f5804: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d5861f5804: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d5861f5804: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861f5804: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861f5804: <truck_shapeops::transversal::loops_store::Loops<P,C> as core::iter::traits::collect::FromIterator<truck_shapeops::transversal::loops_store::BoundaryWire<P,C>>>::from_iter (transversal/loops_store/mod.rs:113:14)",
"0x55d5861f5804: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861f5804: <truck_shapeops::transversal::loops_store::Loops<P,C> as core::convert::From<&truck_topology::Face<P,C,S>>>::from (transversal/loops_store/mod.rs:123:14)",
"0x55d5861f5804: core::ops::function::FnMut::call_mut (src/ops/function.rs:166:5)",
"0x55d5861f5804: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d5861f5804: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861f5804: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861f5804: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d5861f5804: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d5861f5804: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d5861f5804: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d5861f5804: <truck_shapeops::transversal::loops_store::LoopsStore<P,C> as core::iter::traits::collect::FromIterator<&truck_topology::Face<P,C,S>>>::from_iter (transversal/loops_store/mod.rs:129:48)",
"0x55d586221daa: truck_topology::wire::<impl core::clone::Clone for truck_topology::Wire<P,C>>::clone (truck-topology/src/wire.rs:778:24)",
"0x55d586221daa: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x55d586221daa: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d586221daa: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d586221daa: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d586221daa: truck_topology::face::<impl core::clone::Clone for truck_topology::Face<P,C,S>>::clone (truck-topology/src/face.rs:1029:25)",
"0x55d586221daa: truck_topology::shell::<impl core::clone::Clone for truck_topology::Shell<P,C,S>>::clone (truck-topology/src/shell.rs:833:24)",
"0x55d586221daa: <truck_topology::Solid<P,C,S> as core::clone::Clone>::clone (truck-topology/src/lib.rs:172:10)",
"0x55d586221daa: test_truck::main (test-truck/src/main.rs:83:37)",
"0x55d5861bf891: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861bf891: truck_geometry::specifieds::plane::<impl truck_geotrait::traits::surface::ParameterDivision2D for truck_geometry::specifieds::Plane>::parameter_division (alloc/src/macros.rs:54:13)",
"0x55d5861bf891: <truck_modeling::geometry::Surface as truck_geotrait::traits::surface::ParameterDivision2D>::parameter_division (truck-modeling/src/geometry.rs:161:5)",
"0x55d5861bf891: <&S as truck_geotrait::traits::surface::ParameterDivision2D>::parameter_division (src/traits/surface.rs:155:9)",
"0x55d5861bf891: truck_meshalgo::tessellation::triangulation::insert_surface (src/tessellation/triangulation.rs:547:24)",
"0x55d5861bf891: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:527:5)",
"0x55d5861bf891: truck_meshalgo::tessellation::triangulation::shell_create_polygon::{{closure}} (src/tessellation/triangulation.rs:218:14)",
"0x55d5862518c4: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5862518c4: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d5862518c4: <T as crossbeam_epoch::atomic::Pointable>::init (crossbeam-epoch-0.9.18/src/atomic.rs:200:23)",
"0x55d5862518c4: crossbeam_epoch::atomic::Owned<T>::init (crossbeam-epoch-0.9.18/src/atomic.rs:1147:35)",
"0x55d5862518c4: crossbeam_epoch::atomic::Owned<T>::new (crossbeam-epoch-0.9.18/src/atomic.rs:1132:9)",
"0x55d5862518c4: crossbeam_epoch::internal::Local::register (crossbeam-epoch-0.9.18/src/internal.rs:320:25)",
"0x55d5862518c4: crossbeam_epoch::collector::Collector::register (crossbeam-epoch-0.9.18/src/collector.rs:45:9)",
"0x55d58626a2b1: crossbeam_epoch::default::HANDLE::__init (crossbeam-epoch-0.9.18/src/default.rs:34:34)",
"0x55d58626a2b1: core::ops::function::FnOnce::call_once (src/ops/function.rs:250:5)",
"0x55d58626a2b1: core::option::Option<T>::unwrap_or_else (core/src/option.rs:1008:21)",
"0x55d58626a2b1: std::sys::thread_local::native::lazy::Storage<T,D>::initialize (thread_local/native/lazy.rs:65:42)",
"0x55d5861d3feb: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:565:21)",
"0x55d5861e0868: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5861e0868: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5861e0868: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5861e0868: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5861e0868: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d5861e0868: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d5861e0868: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861e0868: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861e0868: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861e0868: truck_topology::face::<impl truck_topology::Face<P,C,S>>::boundary_iters (truck-topology/src/face.rs:211:14)",
"0x55d5861e0868: truck_topology::face::<impl truck_topology::Face<P,C,S>>::edge_iter (truck-topology/src/face.rs:224:14)",
"0x55d5861e0868: core::ops::function::FnMut::call_mut (src/ops/function.rs:166:5)",
"0x55d5861e0868: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d5861e0868: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861e0868: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861e0868: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d5861e0868: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d5861e0868: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d5861e0868: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d5861e0868: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d5861e0868: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency (truck-topology/src/shell.rs:230:26)",
"0x55d5861e0868: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::is_connected (truck-topology/src/shell.rs:405:29)",
"0x55d5861c66f4: truck_topology::face::<impl core::clone::Clone for truck_topology::Face<P,C,S>>::clone (truck-topology/src/face.rs:1029:25)",
"0x55d5861c66f4: truck_topology::face::<impl truck_topology::Face<P,C,S>>::inverse (truck-topology/src/face.rs:670:24)",
"0x55d5861c66f4: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (truck-modeling/src/sweep.rs:231:35)",
"0x55d5861c66f4: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d5861c22f6: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d5861c22f6: truck_meshalgo::tessellation::triangulation::triangulation_into_polymesh::{{closure}} (src/tessellation/triangulation.rs:599:13)",
"0x55d5861c22f6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d5861c22f6: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:108:27)",
"0x55d5861c22f6: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d5861c22f6: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:114:9)",
"0x55d5861c22f6: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861c22f6: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d5861c22f6: <hashbrown::map::HashMap<K,V,S,A> as core::iter::traits::collect::Extend<(K,V)>>::extend (hashbrown-0.14.5/src/map.rs:6511:9)",
"0x55d5861c22f6: <std::collections::hash::map::HashMap<K,V,S> as core::iter::traits::collect::Extend<(K,V)>>::extend (collections/hash/map.rs:3144:9)",
"0x55d5861c22f6: <std::collections::hash::map::HashMap<K,V,S> as core::iter::traits::collect::FromIterator<(K,V)>>::from_iter (collections/hash/map.rs:3129:13)",
"0x55d5861c22f6: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861c22f6: truck_meshalgo::tessellation::triangulation::triangulation_into_polymesh (src/tessellation/triangulation.rs:603:10)",
"0x55d5861c22f6: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:528:20)",
"0x55d5861c22f6: truck_meshalgo::tessellation::triangulation::shell_create_polygon::{{closure}} (src/tessellation/triangulation.rs:218:14)",
"0x55d5861ab7dd: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d5861ab7dd: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency::{{closure}} (truck-topology/src/shell.rs:234:17)",
"0x55d5861ab7dd: core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (iter/traits/iterator.rs:815:29)",
"0x55d5861ab7dd: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861ab7dd: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d5861ab7dd: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold::flatten::{{closure}} (iter/adapters/flatten.rs:665:30)",
"0x55d5861ab7dd: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold::flatten::{{closure}} (iter/adapters/flatten.rs:475:30)",
"0x55d5861ab7dd: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d5861ab7dd: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/fuse.rs:98:19)",
"0x55d5861ab7dd: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_fold (iter/adapters/flatten.rs:482:15)",
"0x55d5861ab7dd: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:668:9)",
"0x55d5861ab7dd: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:321:9)",
"0x55d5861ab7dd: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:21)",
"0x55d5861ab7dd: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861ab7dd: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861ab7dd: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/flatten.rs:89:9)",
"0x55d5861ab7dd: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:14)",
"0x55d5861ab7dd: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::vertex_adjacency (truck-topology/src/shell.rs:230:26)",
"0x55d5861ab7dd: truck_topology::shell::<impl truck_topology::Shell<P,C,S>>::is_connected (truck-topology/src/shell.rs:405:29)",
"0x55d5861ab7dd: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::try_new (truck-topology/src/solid.rs:22:24)",
"0x55d5861ab7dd: truck_topology::solid::<impl truck_topology::Solid<P,C,S>>::new (truck-topology/src/solid.rs:12:9)",
"0x55d5861ab7dd: <truck_topology::Solid<cgmath::point::Point3<f64>,C,S> as truck_meshalgo::tessellation::MeshableShape>::triangulation (src/tessellation/mod.rs:300:9)",
"0x55d58619b918: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d58619b918: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d58619b918: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:43:9)",
"0x55d58619b918: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d58619b918: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d58619b918: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d58619b918: <core::option::Option<V> as core::iter::traits::collect::FromIterator<core::option::Option<A>>>::from_iter::{{closure}} (core/src/option.rs:2467:51)",
"0x55d58619b918: core::iter::adapters::try_process (iter/adapters/mod.rs:173:17)",
"0x55d58619b918: <core::option::Option<V> as core::iter::traits::collect::FromIterator<core::option::Option<A>>>::from_iter (core/src/option.rs:2467:9)",
"0x55d58619b918: truck_meshalgo::tessellation::triangulation::PolyBoundaryPiece::try_new (src/tessellation/triangulation.rs:272:14)",
"0x55d58619b918: truck_meshalgo::tessellation::triangulation::shell_create_polygon::{{closure}} (src/tessellation/triangulation.rs:213:13)",
"0x55d58619b918: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:28)",
"0x55d58619b918: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d58619b918: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d58619b918: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/mod.rs:204:9)",
"0x55d58619b918: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d58619b918: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::next (iter/adapters/mod.rs:187:14)",
"0x55d5861d77c8: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861d77c8: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d5861d77c8: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d5861d77c8: truck_topology::edge::<impl truck_topology::Edge<P,C>>::cut_with_parameter (truck-topology/src/edge.rs:452:20)",
"0x55d5861d77c8: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::add_polygon_vertex (transversal/loops_store/mod.rs:331:38)",
"0x55d5861d339b: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861d339b: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d5861d339b: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d5861d339b: truck_topology::vertex::<impl truck_topology::Vertex<P>>::new (truck-topology/src/vertex.rs:17:20)",
"0x55d5861d339b: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:502:31)",
"0x55d586218ebb: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d586218ebb: hashbrown::raw::alloc::inner::do_alloc (src/raw/alloc.rs:15:15)",
"0x55d586218ebb: hashbrown::raw::RawTableInner::new_uninitialized (src/raw/mod.rs:1750:38)",
"0x55d586218ebb: hashbrown::raw::RawTableInner::fallible_with_capacity (src/raw/mod.rs:1788:30)",
"0x55d586218ebb: hashbrown::raw::RawTableInner::prepare_resize (src/raw/mod.rs:2864:13)",
"0x55d586218ebb: hashbrown::raw::RawTableInner::resize_inner (src/raw/mod.rs:3060:34)",
"0x55d586218ebb: hashbrown::raw::RawTableInner::reserve_rehash_inner (src/raw/mod.rs:2950:13)",
"0x55d586218ebb: hashbrown::raw::RawTable<T,A>::reserve_rehash (src/raw/mod.rs:1231:13)",
"0x55d586220e16: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d586220e16: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d586220e16: <hashbrown::map::HashMap<K,V,S,A> as core::iter::traits::collect::Extend<(K,V)>>::extend (hashbrown-0.14.5/src/map.rs:6510:14)",
"0x55d586220e16: <hashbrown::set::HashSet<T,S,A> as core::iter::traits::collect::Extend<T>>::extend (hashbrown-0.14.5/src/set.rs:1355:9)",
"0x55d586220e16: <std::collections::hash::set::HashSet<T,S> as core::iter::traits::collect::Extend<T>>::extend (collections/hash/set.rs:1077:9)",
"0x55d586220e16: truck_topology::wire::<impl truck_topology::Wire<P,C>>::disjoint_wires::{{closure}} (truck-topology/src/wire.rs:306:17)",
"0x55d586220e16: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::all (slice/iter/macros.rs:268:25)",
"0x55d586220e16: truck_topology::wire::<impl truck_topology::Wire<P,C>>::disjoint_wires (truck-topology/src/wire.rs:300:9)",
"0x55d586220e16: truck_topology::face::<impl truck_topology::Face<P,C,S>>::try_new (truck-topology/src/face.rs:39:13)",
"0x55d586220e16: truck_modeling::builder::try_attach_plane (truck-modeling/src/builder.rs:421:8)",
"0x55d586220e16: test_truck::main (test-truck/src/main.rs:59:16)",
"0x55d58621a7ee: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d58621a7ee: hashbrown::raw::alloc::inner::do_alloc (src/raw/alloc.rs:15:15)",
"0x55d58621a7ee: hashbrown::raw::RawTableInner::new_uninitialized (src/raw/mod.rs:1750:38)",
"0x55d58621a7ee: hashbrown::raw::RawTableInner::fallible_with_capacity (src/raw/mod.rs:1788:30)",
"0x55d58621a7ee: hashbrown::raw::RawTableInner::prepare_resize (src/raw/mod.rs:2864:13)",
"0x55d58621a7ee: hashbrown::raw::RawTableInner::resize_inner (src/raw/mod.rs:3060:34)",
"0x55d58621a7ee: hashbrown::raw::RawTableInner::reserve_rehash_inner (src/raw/mod.rs:2950:13)",
"0x55d58621a7ee: hashbrown::raw::RawTable<T,A>::reserve_rehash (src/raw/mod.rs:1231:13)",
"0x55d5861c1d11: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d5861c1d11: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d5861c1d11: <hashbrown::map::HashMap<K,V,S,A> as core::iter::traits::collect::Extend<(K,V)>>::extend (hashbrown-0.14.5/src/map.rs:6510:14)",
"0x55d5861c1d11: <std::collections::hash::map::HashMap<K,V,S> as core::iter::traits::collect::Extend<(K,V)>>::extend (collections/hash/map.rs:3144:9)",
"0x55d5861c1d11: <std::collections::hash::map::HashMap<K,V,S> as core::iter::traits::collect::FromIterator<(K,V)>>::from_iter (collections/hash/map.rs:3129:13)",
"0x55d5861c1d11: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861c1d11: truck_meshalgo::tessellation::triangulation::triangulation_into_polymesh (src/tessellation/triangulation.rs:603:10)",
"0x55d5861c1d11: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:528:20)",
"0x55d5861c1d11: truck_meshalgo::tessellation::triangulation::shell_create_polygon::{{closure}} (src/tessellation/triangulation.rs:218:14)",
"0x55d586210463: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d586210463: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d586210463: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d586210463: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d586210463: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d586210463: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d586210463: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d586210463: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d586210463: <truck_polymesh::StandardAttributes as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:40:5)",
"0x55d586210463: <truck_polymesh::PolygonMesh<V,A> as core::clone::Clone>::clone (truck-polymesh/src/lib.rs:87:5)",
"0x55d586210463: <core::option::Option<T> as core::clone::Clone>::clone (core/src/option.rs:2038:29)",
"0x55d5861bfbca: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5861bfbca: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5861bfbca: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5861bfbca: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5861bfbca: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d5861bfbca: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d5861bfbca: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:246:9)",
"0x55d5861bfbca: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861bfbca: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861bfbca: truck_meshalgo::tessellation::triangulation::insert_surface (src/tessellation/triangulation.rs:558:10)",
"0x55d5861bfbca: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:527:5)",
"0x55d5861bfbca: truck_meshalgo::tessellation::triangulation::shell_create_polygon::{{closure}} (src/tessellation/triangulation.rs:218:14)",
"0x55d5862f2983: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:248:9)",
"0x55d5862f2983: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:232:38)",
"0x55d5862f2983: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:176:15)",
"0x55d5862f2983: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x55d5862f2983: alloc::vec::from_elem (src/vec/mod.rs:2738:5)",
"0x55d5862f2983: truck_geotrait::algo::surface::sub_parameter_division (alloc/src/macros.rs:47:9)",
"0x55d58626d707: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d58626d707: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d58626d707: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d58626d707: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d58626d707: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d58626d707: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d58626d707: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d58626d707: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d58626d707: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d58626d707: rayon_core::sleep::Sleep::new (src/sleep/mod.rs:64:77)",
"0x55d58626d707: rayon_core::registry::Registry::new (rayon-core-1.12.1/src/registry.rs:264:20)",
"0x55d586288608: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d586288608: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d586288608: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d586288608: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d586288608: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d586288608: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d586288608: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d586288608: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:437:14)",
"0x55d586288608: alloc::slice::<impl alloc::borrow::ToOwned for [T]>::to_owned (alloc/src/slice.rs:844:14)",
"0x55d586288608: std::sys::pal::unix::thread::cgroups::quota::{{closure}} (pal/unix/thread.rs:531:37)",
"0x55d586288608: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d586288608: std::sys::pal::unix::thread::cgroups::quota (pal/unix/thread.rs:510:17)",
"0x55d586288608: std::sys::pal::unix::thread::available_parallelism (pal/unix/thread.rs:328:25)",
"0x55d586288608: std::thread::available_parallelism (src/thread/mod.rs:1855:5)",
"0x55d5862c12be: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5862c12be: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5862c12be: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5862c12be: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5862c12be: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d5862c12be: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::get_conflict_resolutions (spade/src/cdt.rs:905:33)",
"0x55d5862c12be: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::try_add_constraint_inner (spade/src/cdt.rs:818:13)",
"0x55d5862c12be: spade::cdt::ConstrainedDelaunayTriangulation<V,DE,UE,F,L>::add_constraint (spade/src/cdt.rs:550:17)",
"0x55d5861d3a51: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861d3a51: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d5861d3a51: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d5861d3a51: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new_unchecked (truck-topology/src/edge.rs:45:20)",
"0x55d5861d3a51: truck_topology::edge::<impl truck_topology::Edge<P,C>>::try_new (truck-topology/src/edge.rs:20:16)",
"0x55d5861d3a51: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new (truck-topology/src/edge.rs:33:9)",
"0x55d5861d3a51: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}}::{{closure}} (transversal/loops_store/mod.rs:560:33)",
"0x55d58621ede6: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d58621ede6: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d58621ede6: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d58621ede6: truck_topology::vertex::<impl truck_topology::Vertex<P>>::new (truck-topology/src/vertex.rs:17:20)",
"0x55d58621ede6: truck_topology::vertex::<impl truck_topology::Vertex<P>>::mapped (truck-topology/src/vertex.rs:90:9)",
"0x55d58621ede6: truck_modeling::closed_sweep::<impl truck_modeling::topo_traits::ClosedSweep<P,C,S> for truck_topology::Vertex<P>>::closed_sweep::{{closure}} (truck-modeling/src/closed_sweep.rs:24:34)",
"0x55d58621ede6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d58621ede6: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d58621ede6: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d58621ede6: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d58621ede6: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d58621ede6: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d58621ede6: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d58621ede6: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d58621ede6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d58621ede6: <alloc::collections::vec_deque::VecDeque<T> as alloc::collections::vec_deque::spec_from_iter::SpecFromIter<T,I>>::spec_from_iter (collections/vec_deque/spec_from_iter.rs:17:9)",
"0x55d58621ede6: <alloc::collections::vec_deque::VecDeque<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (collections/vec_deque/mod.rs:2863:9)",
"0x55d58621ede6: truck_topology::wire::<impl core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>> for truck_topology::Wire<P,C>>::from_iter (truck-topology/src/wire.rs:599:20)",
"0x55d58621ede6: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d58621ede6: truck_modeling::closed_sweep::<impl truck_modeling::topo_traits::ClosedSweep<P,C,S> for truck_topology::Vertex<P>>::closed_sweep (truck-modeling/src/closed_sweep.rs:29:14)",
"0x55d58621ede6: truck_modeling::builder::whole_rsweep (truck-modeling/src/builder.rs:679:5)",
"0x55d58621ede6: truck_modeling::builder::rsweep (truck-modeling/src/builder.rs:636:9)",
"0x55d58621ede6: test_truck::main (test-truck/src/main.rs:53:18)",
"0x55d5861a5143: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861a5143: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861a5143: truck_meshalgo::analyzers::collision::collision (src/analyzers/collision.rs:217:47)",
"0x55d5861a5143: <truck_polymesh::PolygonMesh as truck_meshalgo::analyzers::collision::Collision>::extract_interference (src/analyzers/collision.rs:34:9)",
"0x55d5861a5143: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:157:34)",
"0x55d5861a5143: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d5861a5143: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d5861a5143: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861a5143: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d5861a5143: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861a5143: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d5861a5143: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d5861c845d: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5861c845d: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5861c845d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5861c845d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5861c845d: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d5861c845d: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d5861c845d: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d5861c845d: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d5861c845d: <truck_geometry::nurbs::BSplineCurve<P> as core::clone::Clone>::clone (src/nurbs/mod.rs:50:5)",
"0x55d5861c845d: truck_modeling::builder::tsweep::{{closure}} (truck-modeling/src/builder.rs:521:21)",
"0x55d5861c845d: truck_modeling::topo_impls::create_surface (truck-modeling/src/topo_impls.rs:25:5)",
"0x55d5861c845d: truck_modeling::topo_impls::sub_connect_wires (truck-modeling/src/topo_impls.rs:74:19)",
"0x55d5861c845d: truck_modeling::topo_impls::connect_raw_wires::{{closure}} (truck-modeling/src/topo_impls.rs:118:9)",
"0x55d5861c845d: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d5861c845d: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d5861c845d: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d5861c845d: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d5861c845d: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d5861c845d: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d5861c845d: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (truck-modeling/src/sweep.rs:235:15)",
"0x55d5861c845d: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d5861db59c: truck_shapeops::transversal::loops_store::Loops<P,C>::swap_edge_into_wire::{{closure}} (transversal/loops_store/mod.rs:214:21)",
"0x55d5861db59c: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d5861db59c: truck_shapeops::transversal::loops_store::Loops<P,C>::swap_edge_into_wire (transversal/loops_store/mod.rs:208:9)",
"0x55d5861db59c: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::swap_edge_into_wire::{{closure}} (transversal/loops_store/mod.rs:301:31)",
"0x55d5861db59c: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::swap_edge_into_wire (transversal/loops_store/mod.rs:300:9)",
"0x55d5861db59c: truck_shapeops::transversal::loops_store::LoopsStore<cgmath::point::Point3<f64>,C>::add_geom_vertex (transversal/loops_store/mod.rs:377:22)",
"0x55d586220028: truck_topology::wire::<impl core::clone::Clone for truck_topology::Wire<P,C>>::clone (truck-topology/src/wire.rs:778:24)",
"0x55d586220028: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x55d586220028: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d586220028: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d586220028: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:437:14)",
"0x55d586220028: alloc::slice::<impl alloc::borrow::ToOwned for [T]>::to_owned (alloc/src/slice.rs:844:14)",
"0x55d586220028: truck_modeling::builder::try_attach_plane (truck-modeling/src/builder.rs:421:28)",
"0x55d586220028: test_truck::main (test-truck/src/main.rs:59:16)",
"0x55d58621fff3: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d58621fff3: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d58621fff3: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d58621fff3: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d58621fff3: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x55d58621fff3: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d58621fff3: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d58621fff3: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:437:14)",
"0x55d58621fff3: alloc::slice::<impl alloc::borrow::ToOwned for [T]>::to_owned (alloc/src/slice.rs:844:14)",
"0x55d58621fff3: truck_modeling::builder::try_attach_plane (truck-modeling/src/builder.rs:421:28)",
"0x55d58621fff3: test_truck::main (test-truck/src/main.rs:59:16)",
"0x55d5861a6a20: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d5861a6a20: truck_shapeops::transversal::intersection_curve::IntersectionCurveWithParameters<S>::try_new (transversal/intersection_curve/mod.rs:34:13)",
"0x55d5861a6a20: truck_shapeops::transversal::intersection_curve::intersection_curves::{{closure}} (transversal/intersection_curve/mod.rs:162:25)",
"0x55d5861a6a20: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d5861a6a20: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d5861a6a20: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861a6a20: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d5861a6a20: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d5861a6a20: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d5861a6a20: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d5861a6a20: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:246:9)",
"0x55d5861a6a20: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861a6a20: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861a6a20: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:170:10)",
"0x55d5861a6a20: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d5861a6a20: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d5861a6a20: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861a6a20: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d5861a6a20: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861a6a20: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d5861a6a20: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d5862c569f: spade::delaunay_core::triangulation_ext::TriangulationExt::legalize_vertex (src/delaunay_core/triangulation_ext.rs:320:13)",
"0x55d5862c0d52: spade::delaunay_core::triangulation_ext::TriangulationExt::insert_with_hint_option_impl (spade/src/cdt.rs:0:0)",
"0x55d5862c0d52: spade::delaunay_core::triangulation_ext::TriangulationExt::insert_with_hint_option (src/delaunay_core/triangulation_ext.rs:67:22)",
"0x55d5862c5213: spade::delaunay_core::triangulation_ext::TriangulationExt::insert_outside_of_convex_hull (src/delaunay_core/triangulation_ext.rs:257:17)",
"0x55d5861cac3a: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d5861cac3a: truck_shapeops::transversal::divide_face::divide_one_face::{{closure}} (transversal/divide_face/mod.rs:67:22)",
"0x55d5861cac3a: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d5861cac3a: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861cac3a: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d5861cac3a: truck_shapeops::transversal::divide_face::divide_one_face (transversal/divide_face/mod.rs:63:18)",
"0x55d5861cac3a: truck_shapeops::transversal::divide_face::divide_faces::{{closure}} (transversal/divide_face/mod.rs:122:27)",
"0x55d5861cac3a: truck_shapeops::transversal::divide_face::divide_faces (transversal/divide_face/mod.rs:115:10)",
"0x55d5861f582e: truck_topology::wire::<impl core::clone::Clone for truck_topology::Wire<P,C>>::clone (truck-topology/src/wire.rs:778:24)",
"0x55d5861f582e: <truck_shapeops::transversal::loops_store::Loops<P,C> as core::convert::From<&truck_topology::Face<P,C,S>>>::from::{{closure}} (transversal/loops_store/mod.rs:122:48)",
"0x55d5861f582e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d5861f582e: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861f582e: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861f582e: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d5861f582e: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d5861f582e: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d5861f582e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d5861f582e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861f582e: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861f582e: <truck_shapeops::transversal::loops_store::Loops<P,C> as core::iter::traits::collect::FromIterator<truck_shapeops::transversal::loops_store::BoundaryWire<P,C>>>::from_iter (transversal/loops_store/mod.rs:113:14)",
"0x55d5861f582e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861f582e: <truck_shapeops::transversal::loops_store::Loops<P,C> as core::convert::From<&truck_topology::Face<P,C,S>>>::from (transversal/loops_store/mod.rs:123:14)",
"0x55d5861f582e: core::ops::function::FnMut::call_mut (src/ops/function.rs:166:5)",
"0x55d5861f582e: <truck_shapeops::transversal::loops_store::LoopsStore<P,C> as core::iter::traits::collect::FromIterator<&truck_topology::Face<P,C,S>>>::from_iter (transversal/loops_store/mod.rs:129:48)",
"0x55d5861a199a: truck_topology::edge::<impl truck_topology::Edge<P,C>>::oriented_curve (truck-topology/src/edge.rs:322:21)",
"0x55d5861a199a: truck_modeling::builder::try_attach_plane::{{closure}}::{{closure}} (truck-modeling/src/builder.rs:407:21)",
"0x55d5861a199a: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d5861a199a: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d5861a199a: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d5861a199a: <core::iter::adapters::fuse::Fuse<I> as core::iter::adapters::fuse::FuseImpl<I>>::next (iter/adapters/fuse.rs:359:9)",
"0x55d5861a199a: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/fuse.rs:50:9)",
"0x55d5861a199a: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next (iter/adapters/flatten.rs:610:29)",
"0x55d5861a199a: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/flatten.rs:66:9)",
"0x55d58621f470: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:26:32)",
"0x55d58621f470: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d58621f470: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d58621f470: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d58621f470: truck_modeling::builder::try_attach_plane::{{closure}} (truck-modeling/src/builder.rs:414:18)",
"0x55d58621f470: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d58621f470: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d58621f470: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d58621f470: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d58621f470: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d58621f470: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d58621f470: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d58621f470: truck_modeling::builder::try_attach_plane (truck-modeling/src/builder.rs:416:10)",
"0x55d58621f470: test_truck::main (test-truck/src/main.rs:59:16)",
"0x55d5861d7ba4: truck_shapeops::transversal::loops_store::Loops<P,C>::swap_edge_into_wire::{{closure}} (transversal/loops_store/mod.rs:214:21)",
"0x55d5861d7ba4: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d5861d7ba4: truck_shapeops::transversal::loops_store::Loops<P,C>::swap_edge_into_wire (transversal/loops_store/mod.rs:208:9)",
"0x55d5861d7ba4: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::swap_edge_into_wire::{{closure}} (transversal/loops_store/mod.rs:301:31)",
"0x55d5861d7ba4: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::swap_edge_into_wire (transversal/loops_store/mod.rs:300:9)",
"0x55d5861d7ba4: truck_shapeops::transversal::loops_store::LoopsStore<P,C>::add_polygon_vertex (transversal/loops_store/mod.rs:333:22)",
"0x55d5861a1a01: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5861a1a01: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5861a1a01: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5861a1a01: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5861a1a01: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d5861a1a01: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d5861a1a01: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d5861a1a01: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d5861a1a01: truck_modeling::builder::try_attach_plane::{{closure}}::{{closure}} (truck-modeling/src/builder.rs:407:21)",
"0x55d5861a1a01: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d5861a1a01: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d5861a1a01: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d5861a1a01: <core::iter::adapters::fuse::Fuse<I> as core::iter::adapters::fuse::FuseImpl<I>>::next (iter/adapters/fuse.rs:359:9)",
"0x55d5861a1a01: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/fuse.rs:50:9)",
"0x55d5861a1a01: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next (iter/adapters/flatten.rs:610:29)",
"0x55d5861a1a01: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/flatten.rs:66:9)",
"0x55d58626d370: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:355:13)",
"0x55d58626d370: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:972:18)",
"0x55d58626d370: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend_reserve (src/vec/mod.rs:3049:14)",
"0x55d58626d370: <(ExtendA,ExtendB) as core::iter::traits::collect::Extend<(A,B)>>::extend (iter/traits/collect.rs:515:13)",
"0x55d58626d370: core::iter::traits::iterator::Iterator::unzip (iter/traits/iterator.rs:3396:9)",
"0x55d58626d370: rayon_core::registry::Registry::new (rayon-core-1.12.1/src/registry.rs:254:66)",
"0x55d58621f5d7: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d58621f5d7: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d58621f5d7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d58621f5d7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d58621f5d7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d58621f5d7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55d58621f5d7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d58621f5d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d58621f5d7: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d58621f5d7: truck_modeling::builder::try_attach_plane::{{closure}} (truck-modeling/src/builder.rs:414:18)",
"0x55d58621f5d7: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d58621f5d7: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d58621f5d7: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d58621f5d7: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d58621f5d7: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d58621f5d7: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d58621f5d7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d58621f5d7: truck_modeling::builder::try_attach_plane (truck-modeling/src/builder.rs:416:10)",
"0x55d58621f5d7: test_truck::main (test-truck/src/main.rs:59:16)",
"0x55d5861b31f7: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d5861b31f7: truck_geometry::nurbs::bspsurface::<impl truck_geometry::nurbs::BSplineSurface<P>>::homotopy (src/nurbs/bspsurface.rs:1594:13)",
"0x55d5861c8670: truck_modeling::builder::tsweep::{{closure}} (truck-modeling/src/builder.rs:519:35)",
"0x55d5861c8670: truck_modeling::topo_impls::create_surface (truck-modeling/src/topo_impls.rs:25:5)",
"0x55d5861c8670: truck_modeling::topo_impls::sub_connect_wires (truck-modeling/src/topo_impls.rs:74:19)",
"0x55d5861c8670: truck_modeling::topo_impls::connect_raw_wires::{{closure}} (truck-modeling/src/topo_impls.rs:118:9)",
"0x55d5861c8670: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d5861c8670: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d5861c8670: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d5861c8670: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d5861c8670: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d5861c8670: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d5861c8670: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (truck-modeling/src/sweep.rs:235:15)",
"0x55d5861c8670: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d586221b92: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d586221b92: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d586221b92: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d586221b92: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d586221b92: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x55d586221b92: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d586221b92: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d586221b92: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d586221b92: <truck_topology::Solid<P,C,S> as core::clone::Clone>::clone (truck-topology/src/lib.rs:172:10)",
"0x55d586221b92: test_truck::main (test-truck/src/main.rs:83:37)",
"0x55d586214e23: alloc::alloc::alloc (alloc/src/alloc.rs:100:9)",
"0x55d586214e23: smallvec::SmallVec<A>::try_grow (smallvec-1.13.2/src/lib.rs:1191:46)",
"0x55d586214e23: smallvec::SmallVec<A>::reserve_one_unchecked (smallvec-1.13.2/src/lib.rs:1231:20)",
"0x55d58620c3ce: smallvec::SmallVec<A>::push (smallvec-1.13.2/src/lib.rs:1118:17)",
"0x55d58620c3ce: spade::delaunay_core::triangulation_ext::TriangulationExt::legalize_edge (src/delaunay_core/triangulation_ext.rs:386:25)",
"0x55d58620ce4f: spade::delaunay_core::triangulation_ext::TriangulationExt::legalize_vertex (src/delaunay_core/triangulation_ext.rs:320:13)",
"0x55d5861c136d: spade::delaunay_core::triangulation_ext::TriangulationExt::insert_into_face (src/delaunay_core/triangulation_ext.rs:290:9)",
"0x55d5861c136d: spade::delaunay_core::triangulation_ext::TriangulationExt::insert_with_hint_option_impl (src/delaunay_core/triangulation_ext.rs:97:60)",
"0x55d5861c136d: spade::delaunay_core::triangulation_ext::TriangulationExt::insert_with_hint_option (src/delaunay_core/triangulation_ext.rs:67:22)",
"0x55d5861c136d: spade::triangulation::Triangulation::insert (spade/src/triangulation.rs:552:9)",
"0x55d5861c136d: truck_meshalgo::tessellation::triangulation::insert_surface::{{closure}}::{{closure}} (src/tessellation/triangulation.rs:553:43)",
"0x55d5861c136d: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d5861c136d: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5861c136d: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861c136d: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d5861c136d: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d5861c136d: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d5861c136d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d5861c136d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d5861c136d: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861c136d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861c136d: truck_meshalgo::tessellation::triangulation::insert_surface::{{closure}} (src/tessellation/triangulation.rs:556:18)",
"0x55d5861c136d: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d5861c136d: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:246:9)",
"0x55d5861c136d: truck_meshalgo::tessellation::triangulation::insert_surface (src/tessellation/triangulation.rs:558:10)",
"0x55d5861c136d: truck_meshalgo::tessellation::triangulation::trimming_tessellation (src/tessellation/triangulation.rs:527:5)",
"0x55d5861c136d: truck_meshalgo::tessellation::triangulation::shell_create_polygon::{{closure}} (src/tessellation/triangulation.rs:218:14)",
"0x55d5861a6a72: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d5861a6a72: truck_shapeops::transversal::intersection_curve::IntersectionCurveWithParameters<S>::try_new (transversal/intersection_curve/mod.rs:35:13)",
"0x55d5861a6a72: truck_shapeops::transversal::intersection_curve::intersection_curves::{{closure}} (transversal/intersection_curve/mod.rs:162:25)",
"0x55d5861a6a72: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d5861a6a72: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::fold (src/vec/into_iter.rs:312:25)",
"0x55d5861a6a72: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d5861a6a72: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d5861a6a72: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d5861a6a72: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d5861a6a72: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d5861a6a72: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:246:9)",
"0x55d5861a6a72: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d5861a6a72: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d5861a6a72: truck_shapeops::transversal::intersection_curve::intersection_curves (transversal/intersection_curve/mod.rs:170:10)",
"0x55d5861a6a72: truck_shapeops::transversal::loops_store::create_loops_stores::{{closure}} (transversal/loops_store/mod.rs:471:13)",
"0x55d5861a6a72: core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (iter/traits/iterator.rs:2469:26)",
"0x55d5861a6a72: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d5861a6a72: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:21)",
"0x55d5861a6a72: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d5861a6a72: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d5861a6a72: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold::flatten::{{closure}} (iter/adapters/flatten.rs:650:30)",
"0x55d58626f25f: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d58626f25f: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d58626f25f: <T as crossbeam_epoch::atomic::Pointable>::init (crossbeam-epoch-0.9.18/src/atomic.rs:200:23)",
"0x55d58626f25f: crossbeam_epoch::atomic::Owned<T>::init (crossbeam-epoch-0.9.18/src/atomic.rs:1147:35)",
"0x55d58626f25f: crossbeam_epoch::atomic::Atomic<T>::init (crossbeam-epoch-0.9.18/src/atomic.rs:330:20)",
"0x55d58626f25f: crossbeam_epoch::atomic::Atomic<T>::new (crossbeam-epoch-0.9.18/src/atomic.rs:314:9)",
"0x55d58626f25f: crossbeam_deque::deque::Worker<T>::new_fifo (crossbeam-deque-0.8.5/src/deque.rs:226:38)",
"0x55d58626d3e7: rayon_core::registry::Registry::new::{{closure}} (rayon-core-1.12.1/src/registry.rs:256:30)",
"0x55d58626d3e7: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d58626d3e7: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d58626d3e7: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d58626d3e7: <(ExtendA,ExtendB) as core::iter::traits::collect::Extend<(A,B)>>::extend (iter/traits/collect.rs:519:9)",
"0x55d58626d3e7: core::iter::traits::iterator::Iterator::unzip (iter/traits/iterator.rs:3396:9)",
"0x55d58626d3e7: rayon_core::registry::Registry::new (rayon-core-1.12.1/src/registry.rs:254:66)",
"0x55d58628876c: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d58628876c: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d58628876c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d58628876c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d58628876c: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d58628876c: std::sys::os_str::bytes::Buf::with_capacity (sys/os_str/bytes.rs:112:22)",
"0x55d58628876c: std::ffi::os_str::OsString::with_capacity (src/ffi/os_str.rs:291:27)",
"0x55d58628876c: std::path::PathBuf::with_capacity (std/src/path.rs:1204:26)",
"0x55d58628876c: std::sys::pal::unix::thread::cgroups::quota_v2 (pal/unix/thread.rs:547:24)",
"0x55d58628876c: std::sys::pal::unix::thread::cgroups::quota (pal/unix/thread.rs:537:31)",
"0x55d58628876c: std::sys::pal::unix::thread::available_parallelism (pal/unix/thread.rs:328:25)",
"0x55d58628876c: std::thread::available_parallelism (src/thread/mod.rs:1855:5)",
"0x55d58621c55f: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d58621c55f: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d58621c55f: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d58621c55f: truck_topology::vertex::<impl truck_topology::Vertex<P>>::new (truck-topology/src/vertex.rs:17:20)",
"0x55d58621c55f: truck_modeling::builder::vertex (truck-modeling/src/builder.rs:15:39)",
"0x55d58621c55f: test_truck::main (test-truck/src/main.rs:41:18)",
"0x55d58621e0ac: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d58621e0ac: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d58621e0ac: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d58621e0ac: truck_topology::face::<impl truck_topology::Face<P,C,S>>::new_unchecked (truck-topology/src/face.rs:64:22)",
"0x55d58621e0ac: truck_topology::face::<impl truck_topology::Face<P,C,S>>::debug_new (truck-topology/src/face.rs:76:22)",
"0x55d58621e0ac: truck_modeling::topo_impls::connect_edges (truck-modeling/src/topo_impls.rs:47:20)",
"0x55d58621e0ac: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Edge<P,C>>::sweep (truck-modeling/src/sweep.rs:99:9)",
"0x55d58621e0ac: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d58621e0ac: test_truck::main (test-truck/src/main.rs:43:21)",
"0x55d58626f2af: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d58626f2af: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d58626f2af: alloc::sync::Arc<T>::new (alloc/src/sync.rs:393:25)",
"0x55d58626f2af: crossbeam_deque::deque::Worker<T>::new_fifo (crossbeam-deque-0.8.5/src/deque.rs:223:21)",
"0x55d5861c823d: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5861c823d: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5861c823d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5861c823d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5861c823d: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d5861c823d: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d5861c823d: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d5861c823d: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d5861c823d: <truck_geometry::nurbs::BSplineCurve<P> as core::clone::Clone>::clone (src/nurbs/mod.rs:50:5)",
"0x55d5861c823d: truck_modeling::builder::tsweep::{{closure}} (truck-modeling/src/builder.rs:520:21)",
"0x55d5861c823d: truck_modeling::topo_impls::create_surface (truck-modeling/src/topo_impls.rs:25:5)",
"0x55d5861c823d: truck_modeling::topo_impls::sub_connect_wires (truck-modeling/src/topo_impls.rs:74:19)",
"0x55d5861c823d: truck_modeling::topo_impls::connect_raw_wires::{{closure}} (truck-modeling/src/topo_impls.rs:118:9)",
"0x55d5861c823d: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d5861c823d: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d5861c823d: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d5861c823d: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d5861c823d: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d5861c823d: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d5861c823d: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (truck-modeling/src/sweep.rs:235:15)",
"0x55d5861c823d: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d5862887a1: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5862887a1: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5862887a1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5862887a1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5862887a1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d5862887a1: alloc::string::String::with_capacity (alloc/src/string.rs:492:23)",
"0x55d5862887a1: std::sys::pal::unix::thread::cgroups::quota_v2 (pal/unix/thread.rs:548:28)",
"0x55d5862887a1: std::sys::pal::unix::thread::cgroups::quota (pal/unix/thread.rs:537:31)",
"0x55d5862887a1: std::sys::pal::unix::thread::available_parallelism (pal/unix/thread.rs:328:25)",
"0x55d5862887a1: std::thread::available_parallelism (src/thread/mod.rs:1855:5)",
"0x55d5861c66cb: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5861c66cb: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (alloc/src/macros.rs:54:13)",
"0x55d5861c66cb: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d586221cc1: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d586221cc1: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d586221cc1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d586221cc1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d586221cc1: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x55d586221cc1: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d586221cc1: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d586221cc1: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d586221cc1: truck_topology::shell::<impl core::clone::Clone for truck_topology::Shell<P,C,S>>::clone (truck-topology/src/shell.rs:833:24)",
"0x55d586221cc1: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x55d586221cc1: <truck_topology::Solid<P,C,S> as core::clone::Clone>::clone (truck-topology/src/lib.rs:172:10)",
"0x55d586221cc1: test_truck::main (test-truck/src/main.rs:83:37)",
"0x55d5861c8d57: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d5861c8d57: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d5861c8d57: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.14.5/src/rustc_entry.rs:46:18)",
"0x55d5861c8d57: std::collections::hash::map::HashMap<K,V,S>::entry (collections/hash/map.rs:856:19)",
"0x55d5861c8d57: truck_modeling::topo_impls::sub_connect_wires (truck-modeling/src/topo_impls.rs:62:10)",
"0x55d5861c8d57: truck_modeling::topo_impls::connect_raw_wires::{{closure}} (truck-modeling/src/topo_impls.rs:118:9)",
"0x55d5861c8d57: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d5861c8d57: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d5861c8d57: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d5861c8d57: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d5861c8d57: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d5861c8d57: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d5861c8d57: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (truck-modeling/src/sweep.rs:235:15)",
"0x55d5861c8d57: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d586220473: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d586220473: hashbrown::raw::RawTable<T,A>::find_or_find_insert_slot (src/raw/mod.rs:1413:9)",
"0x55d586220473: hashbrown::map::HashMap<K,V,S,A>::insert (hashbrown-0.14.5/src/map.rs:1754:15)",
"0x55d586220473: hashbrown::set::HashSet<T,S,A>::insert (hashbrown-0.14.5/src/set.rs:1115:9)",
"0x55d586220473: std::collections::hash::set::HashSet<T,S>::insert (collections/hash/set.rs:890:19)",
"0x55d586220473: truck_topology::wire::<impl truck_topology::Wire<P,C>>::is_simple::{{closure}} (truck-topology/src/wire.rs:277:36)",
"0x55d586220473: core::iter::traits::iterator::Iterator::all::check::{{closure}} (iter/traits/iterator.rs:2758:20)",
"0x55d586220473: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d586220473: core::iter::traits::iterator::Iterator::all (iter/traits/iterator.rs:2761:9)",
"0x55d586220473: truck_topology::wire::<impl truck_topology::Wire<P,C>>::is_simple (truck-topology/src/wire.rs:277:14)",
"0x55d586220473: truck_topology::face::<impl truck_topology::Face<P,C,S>>::try_new (truck-topology/src/face.rs:35:24)",
"0x55d586220473: truck_modeling::builder::try_attach_plane (truck-modeling/src/builder.rs:421:8)",
"0x55d586220473: test_truck::main (test-truck/src/main.rs:59:16)",
"0x55d58626d778: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d58626d778: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d58626d778: <crossbeam_deque::deque::Injector<T> as core::default::Default>::default (crossbeam-deque-0.8.5/src/deque.rs:1316:35)",
"0x55d58626d778: crossbeam_deque::deque::Injector<T>::new (crossbeam-deque-0.8.5/src/deque.rs:1342:9)",
"0x55d58626d778: rayon_core::registry::Registry::new (rayon-core-1.12.1/src/registry.rs:265:28)",
"0x55d5862caa49: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d5862caa49: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d5862caa49: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d5862caa49: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d5862caa49: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d5862caa49: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d5862caa49: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:462:9)",
"0x55d5862caa49: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2837:9)",
"0x55d5862caa49: <truck_geometry::nurbs::BSplineCurve<P> as core::clone::Clone>::clone (src/nurbs/mod.rs:50:5)",
"0x55d5862caa49: <truck_geometry::nurbs::NurbsCurve<V> as core::clone::Clone>::clone (src/nurbs/mod.rs:119:26)",
"0x55d5862caa49: truck_geotrait::traits::Transformed::transformed (src/traits/mod.rs:62:23)",
"0x55d5862caa49: <truck_modeling::geometry::Curve as truck_geotrait::traits::Transformed<cgmath::matrix::Matrix4<f64>>>::transformed (truck-modeling/src/geometry.rs:75:57)",
"0x55d586215ada: truck_modeling::builder::tsweep::{{closure}} (truck-modeling/src/builder.rs:508:23)",
"0x55d586215ada: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut (src/ops/function.rs:272:13)",
"0x55d586215ada: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d586215ada: truck_topology::wire::edge_entry_map_closure::{{closure}} (truck-topology/src/wire.rs:580:21)",
"0x55d586215ada: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert::{{closure}} (truck-base/src/entry_map.rs:60:32)",
"0x55d586215ada: std::collections::hash::map::Entry<K,V>::or_insert_with (collections/hash/map.rs:2666:43)",
"0x55d586215ada: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert (truck-base/src/entry_map.rs:58:9)",
"0x55d586215ada: truck_topology::wire::<impl truck_topology::Wire<P,C>>::sub_mapped::{{closure}} (truck-topology/src/wire.rs:433:32)",
"0x55d586215ada: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d586215ada: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d58626d8f5: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d58626d8f5: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d58626d8f5: alloc::sync::Arc<T>::new (alloc/src/sync.rs:393:25)",
"0x55d58626d8f5: rayon_core::registry::Registry::new (rayon-core-1.12.1/src/registry.rs:262:24)",
"0x55d58621ecd0: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d58621ecd0: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d58621ecd0: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d58621ecd0: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new_unchecked (truck-topology/src/edge.rs:45:20)",
"0x55d58621ecd0: truck_topology::edge::<impl truck_topology::Edge<P,C>>::debug_new (truck-topology/src/edge.rs:57:22)",
"0x55d58621ecd0: truck_modeling::topo_impls::connect_vertices (truck-modeling/src/topo_impls.rs:17:5)",
"0x55d58621ecd0: truck_modeling::closed_sweep::<impl truck_modeling::topo_traits::ClosedSweep<P,C,S> for truck_topology::Vertex<P>>::closed_sweep::{{closure}} (truck-modeling/src/closed_sweep.rs:25:28)",
"0x55d58621ecd0: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d58621ecd0: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d58621ecd0: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d58621ecd0: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d58621ecd0: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d58621ecd0: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d58621ecd0: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d58621ecd0: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d58621ecd0: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d58621ecd0: <alloc::collections::vec_deque::VecDeque<T> as alloc::collections::vec_deque::spec_from_iter::SpecFromIter<T,I>>::spec_from_iter (collections/vec_deque/spec_from_iter.rs:17:9)",
"0x55d58621ecd0: <alloc::collections::vec_deque::VecDeque<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (collections/vec_deque/mod.rs:2863:9)",
"0x55d58621ecd0: truck_topology::wire::<impl core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>> for truck_topology::Wire<P,C>>::from_iter (truck-topology/src/wire.rs:599:20)",
"0x55d58621ecd0: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d58621ecd0: truck_modeling::closed_sweep::<impl truck_modeling::topo_traits::ClosedSweep<P,C,S> for truck_topology::Vertex<P>>::closed_sweep (truck-modeling/src/closed_sweep.rs:29:14)",
"0x55d58621ecd0: truck_modeling::builder::whole_rsweep (truck-modeling/src/builder.rs:679:5)",
"0x55d58621ecd0: truck_modeling::builder::rsweep (truck-modeling/src/builder.rs:636:9)",
"0x55d58621ecd0: test_truck::main (test-truck/src/main.rs:53:18)",
"0x55d58619c1aa: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d58619c1aa: truck_meshalgo::tessellation::triangulation::PolyBoundaryPiece::try_new::{{closure}} (alloc/src/macros.rs:54:13)",
"0x55d58619c1aa: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:96:28)",
"0x55d58619c1aa: <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::try_fold (src/vec/into_iter.rs:340:25)",
"0x55d58619c1aa: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:122:9)",
"0x55d58619c1aa: <core::iter::adapters::fuse::Fuse<I> as core::iter::adapters::fuse::FuseImpl<I>>::try_fold (iter/adapters/fuse.rs:375:19)",
"0x55d58619c1aa: <core::iter::adapters::fuse::Fuse<I> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/fuse.rs:89:9)",
"0x55d58619c1aa: core::iter::adapters::flatten::FlattenCompat<I,U>::iter_try_fold (iter/adapters/flatten.rs:515:25)",
"0x55d58619c1aa: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/flatten.rs:653:9)",
"0x55d58619c1aa: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/flatten.rs:81:9)",
"0x55d58619c1aa: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/mod.rs:204:9)",
"0x55d58619c1aa: core::iter::traits::iterator::Iterator::try_for_each (iter/traits/iterator.rs:2472:9)",
"0x55d58619c1aa: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::next (iter/adapters/mod.rs:187:14)",
"0x55d58621ef10: truck_modeling::topo_impls::connect_vertices (truck-modeling/src/topo_impls.rs:17:29)",
"0x55d58621ef10: truck_modeling::closed_sweep::<impl truck_modeling::topo_traits::ClosedSweep<P,C,S> for truck_topology::Vertex<P>>::closed_sweep::{{closure}} (truck-modeling/src/closed_sweep.rs:25:28)",
"0x55d58621ef10: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d58621ef10: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d58621ef10: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d58621ef10: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d58621ef10: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d58621ef10: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d58621ef10: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d58621ef10: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d58621ef10: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d58621ef10: <alloc::collections::vec_deque::VecDeque<T> as alloc::collections::vec_deque::spec_from_iter::SpecFromIter<T,I>>::spec_from_iter (collections/vec_deque/spec_from_iter.rs:17:9)",
"0x55d58621ef10: <alloc::collections::vec_deque::VecDeque<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (collections/vec_deque/mod.rs:2863:9)",
"0x55d58621ef10: truck_topology::wire::<impl core::iter::traits::collect::FromIterator<truck_topology::Edge<P,C>> for truck_topology::Wire<P,C>>::from_iter (truck-topology/src/wire.rs:599:20)",
"0x55d58621ef10: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d58621ef10: truck_modeling::closed_sweep::<impl truck_modeling::topo_traits::ClosedSweep<P,C,S> for truck_topology::Vertex<P>>::closed_sweep (truck-modeling/src/closed_sweep.rs:29:14)",
"0x55d58621ef10: truck_modeling::builder::whole_rsweep (truck-modeling/src/builder.rs:679:5)",
"0x55d58621ef10: truck_modeling::builder::rsweep (truck-modeling/src/builder.rs:636:9)",
"0x55d58621ef10: test_truck::main (test-truck/src/main.rs:53:18)",
"0x55d5861b3262: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d5861b3262: truck_geometry::nurbs::bspsurface::<impl truck_geometry::nurbs::BSplineSurface<P>>::homotopy (src/nurbs/bspsurface.rs:1595:13)",
"0x55d58621f6a1: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d58621f6a1: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d58621f6a1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:43:9)",
"0x55d58621f6a1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d58621f6a1: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d58621f6a1: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d58621f6a1: truck_modeling::builder::try_attach_plane::{{closure}} (truck-modeling/src/builder.rs:414:18)",
"0x55d58621f6a1: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d58621f6a1: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d58621f6a1: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d58621f6a1: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:818:9)",
"0x55d58621f6a1: alloc::vec::Vec<T,A>::extend_trusted (src/vec/mod.rs:3097:17)",
"0x55d58621f6a1: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:26:9)",
"0x55d58621f6a1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x55d58621f6a1: truck_modeling::builder::try_attach_plane (truck-modeling/src/builder.rs:416:10)",
"0x55d58621f6a1: test_truck::main (test-truck/src/main.rs:59:16)",
"0x55d586215e93: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:1179:20)",
"0x55d586215e93: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.14.5/src/map.rs:1106:9)",
"0x55d586215e93: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.14.5/src/rustc_entry.rs:46:18)",
"0x55d586215e93: std::collections::hash::map::HashMap<K,V,S>::entry (collections/hash/map.rs:856:19)",
"0x55d586215e93: truck_base::entry_map::EntryMap<K,V,KF,VF,P,S>::entry_or_insert (truck-base/src/entry_map.rs:59:14)",
"0x55d586215e93: truck_topology::wire::<impl truck_topology::Wire<P,C>>::sub_mapped::{{closure}} (truck-topology/src/wire.rs:433:32)",
"0x55d586215e93: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d586215e93: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:294:13)",
"0x55d586215e93: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d5862524c5: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d5862524c5: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d5862524c5: alloc::sync::Arc<T>::new (alloc/src/sync.rs:393:25)",
"0x55d5862524c5: <crossbeam_epoch::collector::Collector as core::default::Default>::default (crossbeam-epoch-0.9.18/src/collector.rs:32:21)",
"0x55d5862524c5: crossbeam_epoch::collector::Collector::new (crossbeam-epoch-0.9.18/src/collector.rs:40:9)",
"0x55d5862524c5: core::ops::function::FnOnce::call_once (src/ops/function.rs:250:5)",
"0x55d5862524c5: crossbeam_epoch::sync::once_lock::OnceLock<T>::initialize::{{closure}} (src/sync/once_lock.rs:67:25)",
"0x55d5862524c5: std::sync::once::Once::call_once::{{closure}} (src/sync/once.rs:158:41)",
"0x55d5862524c5: std::sys::sync::once::futex::Once::call (sync/once/futex.rs:124:21)",
"0x55d58626e1d4: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d58626e1d4: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d58626e1d4: alloc::sync::Arc<T>::new (alloc/src/sync.rs:393:25)",
"0x55d58626e1d4: std::thread::Builder::spawn_unchecked_ (src/thread/mod.rs:497:49)",
"0x55d58626e1d4: std::thread::Builder::spawn_unchecked (src/thread/mod.rs:456:32)",
"0x55d58626e1d4: std::thread::Builder::spawn (src/thread/mod.rs:388:18)",
"0x55d58626e1d4: <rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn (rayon-core-1.12.1/src/registry.rs:98:11)",
"0x55d58626e1d4: rayon_core::registry::Registry::new (rayon-core-1.12.1/src/registry.rs:304:29)",
"0x55d586221057: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d586221057: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d586221057: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d586221057: truck_topology::face::<impl truck_topology::Face<P,C,S>>::new_unchecked (truck-topology/src/face.rs:64:22)",
"0x55d586221057: truck_topology::face::<impl truck_topology::Face<P,C,S>>::try_new (truck-topology/src/face.rs:42:16)",
"0x55d586221057: truck_modeling::builder::try_attach_plane (truck-modeling/src/builder.rs:421:8)",
"0x55d586221057: test_truck::main (test-truck/src/main.rs:59:16)",
"0x55d586285933: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d586285933: alloc::sync::Arc<T>::new_uninit::{{closure}} (alloc/src/sync.rs:536:33)",
"0x55d586285933: alloc::sync::Arc<T>::allocate_for_layout (alloc/src/sync.rs:1889:19)",
"0x55d586285933: alloc::sync::Arc<T>::new_uninit (alloc/src/sync.rs:534:27)",
"0x55d586285933: std::thread::Thread::new_inner (src/thread/mod.rs:1344:27)",
"0x55d58626dddc: std::thread::Thread::new_unnamed (src/thread/mod.rs:1327:18)",
"0x55d58626dddc: core::ops::function::FnOnce::call_once (src/ops/function.rs:250:5)",
"0x55d58626dddc: core::option::Option<T>::map_or_else (core/src/option.rs:1209:21)",
"0x55d58626dddc: std::thread::Builder::spawn_unchecked_ (src/thread/mod.rs:490:25)",
"0x55d58626dddc: std::thread::Builder::spawn_unchecked (src/thread/mod.rs:456:32)",
"0x55d58626dddc: std::thread::Builder::spawn (src/thread/mod.rs:388:18)",
"0x55d58626dddc: <rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn (rayon-core-1.12.1/src/registry.rs:98:11)",
"0x55d58626dddc: rayon_core::registry::Registry::new (rayon-core-1.12.1/src/registry.rs:304:29)",
"0x55d58621cdaf: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d58621cdaf: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d58621cdaf: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d58621cdaf: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new_unchecked (truck-topology/src/edge.rs:45:20)",
"0x55d58621cdaf: truck_topology::edge::<impl truck_topology::Edge<P,C>>::debug_new (truck-topology/src/edge.rs:57:22)",
"0x55d58621cdaf: truck_topology::edge::<impl truck_topology::Edge<P,C>>::mapped (truck-topology/src/edge.rs:379:24)",
"0x55d58621cdaf: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Edge<P,C>>::sweep (truck-modeling/src/sweep.rs:98:20)",
"0x55d58621cdaf: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d58621cdaf: test_truck::main (test-truck/src/main.rs:43:21)",
"0x55d58621e015: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d58621e015: truck_modeling::topo_impls::connect_edges (alloc/src/macros.rs:54:13)",
"0x55d58621e015: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Edge<P,C>>::sweep (truck-modeling/src/sweep.rs:99:9)",
"0x55d58621e015: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d58621e015: test_truck::main (test-truck/src/main.rs:43:21)",
"0x55d58626aeaf: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d58626aeaf: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d58626aeaf: <crossbeam_deque::deque::Injector<T> as core::default::Default>::default (crossbeam-deque-0.8.5/src/deque.rs:1316:35)",
"0x55d58626aeaf: crossbeam_deque::deque::Injector<T>::new (crossbeam-deque-0.8.5/src/deque.rs:1342:9)",
"0x55d58626aeaf: rayon_core::job::JobFifo::new (rayon-core-1.12.1/src/job.rs:245:20)",
"0x55d58626aeaf: <rayon_core::registry::WorkerThread as core::convert::From<rayon_core::registry::ThreadBuilder>>::from (rayon-core-1.12.1/src/registry.rs:673:19)",
"0x55d58626befb: rayon_core::registry::main_loop (rayon-core-1.12.1/src/registry.rs:905:26)",
"0x55d58626befb: rayon_core::registry::ThreadBuilder::run (rayon-core-1.12.1/src/registry.rs:53:18)",
"0x55d58626befb: <rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn::{{closure}} (rayon-core-1.12.1/src/registry.rs:98:20)",
"0x55d58626befb: std::sys::backtrace::__rust_begin_short_backtrace (src/sys/backtrace.rs:155:18)",
"0x55d5862077c6: rayon_core::registry::in_worker (rayon-core-1.12.1/src/registry.rs:0:0)",
"0x55d5862077c6: rayon_core::join::join_context (src/join/mod.rs:132:5)",
"0x55d5862077c6: rayon::iter::plumbing::bridge_producer_consumer::helper (iter/plumbing/mod.rs:415:47)",
"0x55d586220d56: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:2000:13)",
"0x55d586220d56: truck_topology::wire::<impl truck_topology::Wire<P,C>>::disjoint_wires::{{closure}}::{{closure}} (truck-topology/src/wire.rs:303:17)",
"0x55d586220d56: core::iter::traits::iterator::Iterator::all::check::{{closure}} (iter/traits/iterator.rs:2758:20)",
"0x55d586220d56: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2410:21)",
"0x55d586220d56: core::iter::traits::iterator::Iterator::all (iter/traits/iterator.rs:2761:9)",
"0x55d586220d56: truck_topology::wire::<impl truck_topology::Wire<P,C>>::disjoint_wires::{{closure}} (truck-topology/src/wire.rs:302:42)",
"0x55d586220d56: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::all (slice/iter/macros.rs:268:25)",
"0x55d586220d56: truck_topology::wire::<impl truck_topology::Wire<P,C>>::disjoint_wires (truck-topology/src/wire.rs:300:9)",
"0x55d586220d56: truck_topology::face::<impl truck_topology::Face<P,C,S>>::try_new (truck-topology/src/face.rs:39:13)",
"0x55d586220d56: truck_modeling::builder::try_attach_plane (truck-modeling/src/builder.rs:421:8)",
"0x55d586220d56: test_truck::main (test-truck/src/main.rs:59:16)",
"0x55d58626d0b9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d58626d0b9: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d58626d0b9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d58626d0b9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d58626d0b9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d58626d0b9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d58626d0b9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d58626d0b9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d58626d0b9: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d58626d0b9: <alloc::boxed::Box<[I]> as core::iter::traits::collect::FromIterator<I>>::from_iter (alloc/src/boxed.rs:2121:9)",
"0x55d58626d0b9: crossbeam_deque::deque::Buffer<T>::alloc (crossbeam-deque-0.8.5/src/deque.rs:44:18)",
"0x55d58626d0b9: crossbeam_deque::deque::Worker<T>::new_lifo (crossbeam-deque-0.8.5/src/deque.rs:249:22)",
"0x55d58626d0b9: rayon_core::registry::Registry::new::{{closure}} (rayon-core-1.12.1/src/registry.rs:246:21)",
"0x55d58626d0b9: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:89:28)",
"0x55d58626d0b9: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2588:21)",
"0x55d58626d0b9: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:129:9)",
"0x55d58626d0b9: <(ExtendA,ExtendB) as core::iter::traits::collect::Extend<(A,B)>>::extend (iter/traits/collect.rs:519:9)",
"0x55d58626d0b9: core::iter::traits::iterator::Iterator::unzip (iter/traits/iterator.rs:3396:9)",
"0x55d58626d0b9: rayon_core::registry::Registry::new (rayon-core-1.12.1/src/registry.rs:241:53)",
"0x55d58621d3ba: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d58621d3ba: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d58621d3ba: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d58621d3ba: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new_unchecked (truck-topology/src/edge.rs:45:20)",
"0x55d58621d3ba: truck_topology::edge::<impl truck_topology::Edge<P,C>>::debug_new (truck-topology/src/edge.rs:57:22)",
"0x55d58621d3ba: truck_modeling::topo_impls::connect_vertices (truck-modeling/src/topo_impls.rs:17:5)",
"0x55d58621d3ba: truck_modeling::topo_impls::connect_edges (truck-modeling/src/topo_impls.rs:41:17)",
"0x55d58621d3ba: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Edge<P,C>>::sweep (truck-modeling/src/sweep.rs:99:9)",
"0x55d58621d3ba: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d58621d3ba: test_truck::main (test-truck/src/main.rs:43:21)",
"0x55d58621dc3e: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d58621dc3e: truck_modeling::topo_impls::connect_edges (alloc/src/macros.rs:54:13)",
"0x55d58621dc3e: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Edge<P,C>>::sweep (truck-modeling/src/sweep.rs:99:9)",
"0x55d58621dc3e: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d58621dc3e: test_truck::main (test-truck/src/main.rs:43:21)",
"0x55d5861c80ac: truck_topology::edge::<impl truck_topology::Edge<P,C>>::curve (truck-topology/src/edge.rs:255:9)",
"0x55d5861c80ac: truck_modeling::topo_impls::create_surface (truck-modeling/src/topo_impls.rs:25:37)",
"0x55d5861c80ac: truck_modeling::topo_impls::sub_connect_wires (truck-modeling/src/topo_impls.rs:74:19)",
"0x55d5861c80ac: truck_modeling::topo_impls::connect_raw_wires::{{closure}} (truck-modeling/src/topo_impls.rs:118:9)",
"0x55d5861c80ac: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:305:13)",
"0x55d5861c80ac: core::option::Option<T>::map (core/src/option.rs:1103:29)",
"0x55d5861c80ac: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:108:26)",
"0x55d5861c80ac: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:3065:35)",
"0x55d5861c80ac: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:17:9)",
"0x55d5861c80ac: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (src/vec/mod.rs:3039:9)",
"0x55d5861c80ac: truck_modeling::sweep::<impl truck_modeling::topo_traits::Sweep<P,C,S> for truck_topology::Face<P,C,S>>::sweep (truck-modeling/src/sweep.rs:235:15)",
"0x55d5861c80ac: truck_modeling::builder::tsweep (truck-modeling/src/builder.rs:506:5)",
"0x55d58626f23d: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:243:9)",
"0x55d58626f23d: alloc::raw_vec::RawVec<T,A>::try_allocate_in (alloc/src/raw_vec.rs:230:45)",
"0x55d58626f23d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:158:15)",
"0x55d58626f23d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:699:20)",
"0x55d58626f23d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d58626f23d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d58626f23d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d58626f23d: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2971:9)",
"0x55d58626f23d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2005:9)",
"0x55d58626f23d: <alloc::boxed::Box<[I]> as core::iter::traits::collect::FromIterator<I>>::from_iter (alloc/src/boxed.rs:2121:9)",
"0x55d58626f23d: crossbeam_deque::deque::Buffer<T>::alloc (crossbeam-deque-0.8.5/src/deque.rs:44:18)",
"0x55d58626f23d: crossbeam_deque::deque::Worker<T>::new_fifo (crossbeam-deque-0.8.5/src/deque.rs:221:22)",
"0x55d58621f274: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:332:18)",
"0x55d58621f274: alloc::boxed::Box<T>::new (alloc/src/boxed.rs:260:9)",
"0x55d58621f274: rclite::arc::Arc<T>::new (rclite-0.2.4/src/arc.rs:114:21)",
"0x55d58621f274: truck_topology::edge::<impl truck_topology::Edge<P,C>>::new_unchecked (truck-topology/src/edge.rs:45:20)",
"0x55d58621f274: truck_topology::edge::<impl truck_topology::Edge<P,C>>::debug_new (truck-topology/src/edge.rs:57:22)",
"0x55d58621f274: truck_modeling::topo_impls::connect_vertices (truck-modeling/src/topo_impls.rs:17:5)",
"0x55d58621f274: truck_modeling::closed_sweep::<impl truck_modeling::topo_traits::ClosedSweep<P,C,S> for truck_topology::Vertex<P>>::closed_sweep (truck-modeling/src/closed_sweep.rs:30:24)",
"0x55d58621f274: truck_modeling::builder::whole_rsweep (truck-modeling/src/builder.rs:679:5)",
"0x55d58621f274: truck_modeling::builder::rsweep (truck-modeling/src/builder.rs:636:9)",
"0x55d58621f274: test_truck::main (test-truck/src/main.rs:53:18)"
]
}