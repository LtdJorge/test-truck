<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="406" onload="init(evt)" viewBox="0 0 1200 406" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="406" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="389.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="389.00"> </text><svg id="frames" x="10" width="1180" total_samples="31060"><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (11 samples, 0.04%)</title><rect x="0.0708%" y="293" width="0.0354%" height="15" fill="rgb(227,0,7)" fg:x="22" fg:w="11"/><text x="0.3208%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (11 samples, 0.04%)</title><rect x="0.0708%" y="277" width="0.0354%" height="15" fill="rgb(217,0,24)" fg:x="22" fg:w="11"/><text x="0.3208%" y="287.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (4 samples, 0.01%)</title><rect x="0.0934%" y="261" width="0.0129%" height="15" fill="rgb(221,193,54)" fg:x="29" fg:w="4"/><text x="0.3434%" y="271.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (4 samples, 0.01%)</title><rect x="0.0934%" y="245" width="0.0129%" height="15" fill="rgb(248,212,6)" fg:x="29" fg:w="4"/><text x="0.3434%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (26 samples, 0.08%)</title><rect x="0.0483%" y="309" width="0.0837%" height="15" fill="rgb(208,68,35)" fg:x="15" fg:w="26"/><text x="0.2983%" y="319.50"></text></g><g><title>core::slice::raw::from_raw_parts (8 samples, 0.03%)</title><rect x="0.1062%" y="293" width="0.0258%" height="15" fill="rgb(232,128,0)" fg:x="33" fg:w="8"/><text x="0.3562%" y="303.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;&amp;T&gt;&gt;::from (4 samples, 0.01%)</title><rect x="0.1513%" y="277" width="0.0129%" height="15" fill="rgb(207,160,47)" fg:x="47" fg:w="4"/><text x="0.4013%" y="287.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (56 samples, 0.18%)</title><rect x="0.0064%" y="325" width="0.1803%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="56"/><text x="0.2564%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (17 samples, 0.05%)</title><rect x="0.1320%" y="309" width="0.0547%" height="15" fill="rgb(218,30,26)" fg:x="41" fg:w="17"/><text x="0.3820%" y="319.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (17 samples, 0.05%)</title><rect x="0.1320%" y="293" width="0.0547%" height="15" fill="rgb(220,122,19)" fg:x="41" fg:w="17"/><text x="0.3820%" y="303.50"></text></g><g><title>&lt;&amp;cgmath::point::Point2&lt;S&gt; as core::ops::arith::Sub&lt;cgmath::point::Point2&lt;S&gt;&gt;&gt;::sub (21 samples, 0.07%)</title><rect x="0.1867%" y="325" width="0.0676%" height="15" fill="rgb(250,228,42)" fg:x="58" fg:w="21"/><text x="0.4367%" y="335.50"></text></g><g><title>&lt;&amp;f64 as core::ops::arith::Sub&lt;&amp;f64&gt;&gt;::sub (60 samples, 0.19%)</title><rect x="0.2543%" y="325" width="0.1932%" height="15" fill="rgb(240,193,28)" fg:x="79" fg:w="60"/><text x="0.5043%" y="335.50"></text></g><g><title>&lt;f64 as core::ops::arith::Sub&gt;::sub (7 samples, 0.02%)</title><rect x="0.4250%" y="309" width="0.0225%" height="15" fill="rgb(216,20,37)" fg:x="132" fg:w="7"/><text x="0.6750%" y="319.50"></text></g><g><title>&lt;(A,A) as itertools::tuple_impl::TupleCollect&gt;::left_shift_push (6 samples, 0.02%)</title><rect x="0.4475%" y="325" width="0.0193%" height="15" fill="rgb(206,188,39)" fg:x="139" fg:w="6"/><text x="0.6975%" y="335.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.03%)</title><rect x="0.4701%" y="325" width="0.0322%" height="15" fill="rgb(217,207,13)" fg:x="146" fg:w="10"/><text x="0.7201%" y="335.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (20 samples, 0.06%)</title><rect x="0.5023%" y="325" width="0.0644%" height="15" fill="rgb(231,73,38)" fg:x="156" fg:w="20"/><text x="0.7523%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (49 samples, 0.16%)</title><rect x="0.7469%" y="309" width="0.1578%" height="15" fill="rgb(225,20,46)" fg:x="232" fg:w="49"/><text x="0.9969%" y="319.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (107 samples, 0.34%)</title><rect x="0.5699%" y="325" width="0.3445%" height="15" fill="rgb(210,31,41)" fg:x="177" fg:w="107"/><text x="0.8199%" y="335.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (6 samples, 0.02%)</title><rect x="0.9144%" y="325" width="0.0193%" height="15" fill="rgb(221,200,47)" fg:x="284" fg:w="6"/><text x="1.1644%" y="335.50"></text></g><g><title>&lt;[S: 3] as truck_base::hash::HashGen&lt;S&gt;&gt;::hash1 (4 samples, 0.01%)</title><rect x="0.9337%" y="325" width="0.0129%" height="15" fill="rgb(226,26,5)" fg:x="290" fg:w="4"/><text x="1.1837%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (18 samples, 0.06%)</title><rect x="0.9466%" y="325" width="0.0580%" height="15" fill="rgb(249,33,26)" fg:x="294" fg:w="18"/><text x="1.1966%" y="335.50"></text></g><g><title>&lt;cgmath::vector::Vector4&lt;S&gt; as core::ops::arith::Mul&lt;S&gt;&gt;::mul (6 samples, 0.02%)</title><rect x="1.0496%" y="293" width="0.0193%" height="15" fill="rgb(235,183,28)" fg:x="326" fg:w="6"/><text x="1.2996%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (4 samples, 0.01%)</title><rect x="1.0689%" y="293" width="0.0129%" height="15" fill="rgb(221,5,38)" fg:x="332" fg:w="4"/><text x="1.3189%" y="303.50"></text></g><g><title>&lt;f64 as approx::abs_diff_eq::AbsDiffEq&gt;::abs_diff_eq (5 samples, 0.02%)</title><rect x="1.0882%" y="293" width="0.0161%" height="15" fill="rgb(247,18,42)" fg:x="338" fg:w="5"/><text x="1.3382%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (6 samples, 0.02%)</title><rect x="1.1494%" y="261" width="0.0193%" height="15" fill="rgb(241,131,45)" fg:x="357" fg:w="6"/><text x="1.3994%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (4 samples, 0.01%)</title><rect x="1.1558%" y="245" width="0.0129%" height="15" fill="rgb(249,31,29)" fg:x="359" fg:w="4"/><text x="1.4058%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (16 samples, 0.05%)</title><rect x="1.1204%" y="277" width="0.0515%" height="15" fill="rgb(225,111,53)" fg:x="348" fg:w="16"/><text x="1.3704%" y="287.50"></text></g><g><title>&lt;f64 as approx::abs_diff_eq::AbsDiffEq&gt;::abs_diff_eq (4 samples, 0.01%)</title><rect x="1.1912%" y="277" width="0.0129%" height="15" fill="rgb(238,160,17)" fg:x="370" fg:w="4"/><text x="1.4412%" y="287.50"></text></g><g><title>&lt;cgmath::vector::Vector4&lt;S&gt; as core::ops::arith::Mul&lt;S&gt;&gt;::mul (6 samples, 0.02%)</title><rect x="1.2106%" y="261" width="0.0193%" height="15" fill="rgb(214,148,48)" fg:x="376" fg:w="6"/><text x="1.4606%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::get_unchecked (4 samples, 0.01%)</title><rect x="1.2331%" y="261" width="0.0129%" height="15" fill="rgb(232,36,49)" fg:x="383" fg:w="4"/><text x="1.4831%" y="271.50"></text></g><g><title>[unknown] (15 samples, 0.05%)</title><rect x="1.2106%" y="277" width="0.0483%" height="15" fill="rgb(209,103,24)" fg:x="376" fg:w="15"/><text x="1.4606%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (9 samples, 0.03%)</title><rect x="1.2653%" y="277" width="0.0290%" height="15" fill="rgb(229,88,8)" fg:x="393" fg:w="9"/><text x="1.5153%" y="287.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add::precondition_check (12 samples, 0.04%)</title><rect x="1.3039%" y="277" width="0.0386%" height="15" fill="rgb(213,181,19)" fg:x="405" fg:w="12"/><text x="1.5539%" y="287.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (8 samples, 0.03%)</title><rect x="1.3168%" y="261" width="0.0258%" height="15" fill="rgb(254,191,54)" fg:x="409" fg:w="8"/><text x="1.5668%" y="271.50"></text></g><g><title>cfree (80 samples, 0.26%)</title><rect x="1.1075%" y="293" width="0.2576%" height="15" fill="rgb(241,83,37)" fg:x="344" fg:w="80"/><text x="1.3575%" y="303.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (5 samples, 0.02%)</title><rect x="1.3490%" y="277" width="0.0161%" height="15" fill="rgb(233,36,39)" fg:x="419" fg:w="5"/><text x="1.5990%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (117 samples, 0.38%)</title><rect x="1.0109%" y="309" width="0.3767%" height="15" fill="rgb(226,3,54)" fg:x="314" fg:w="117"/><text x="1.2609%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (122 samples, 0.39%)</title><rect x="1.0045%" y="325" width="0.3928%" height="15" fill="rgb(245,192,40)" fg:x="312" fg:w="122"/><text x="1.2545%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.09%)</title><rect x="1.3973%" y="325" width="0.0869%" height="15" fill="rgb(238,167,29)" fg:x="434" fg:w="27"/><text x="1.6473%" y="335.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (5 samples, 0.02%)</title><rect x="1.4939%" y="309" width="0.0161%" height="15" fill="rgb(232,182,51)" fg:x="464" fg:w="5"/><text x="1.7439%" y="319.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (10 samples, 0.03%)</title><rect x="1.4842%" y="325" width="0.0322%" height="15" fill="rgb(231,60,39)" fg:x="461" fg:w="10"/><text x="1.7342%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::non_null (4 samples, 0.01%)</title><rect x="1.5840%" y="309" width="0.0129%" height="15" fill="rgb(208,69,12)" fg:x="492" fg:w="4"/><text x="1.8340%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (30 samples, 0.10%)</title><rect x="1.5164%" y="325" width="0.0966%" height="15" fill="rgb(235,93,37)" fg:x="471" fg:w="30"/><text x="1.7664%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (9 samples, 0.03%)</title><rect x="1.7740%" y="309" width="0.0290%" height="15" fill="rgb(213,116,39)" fg:x="551" fg:w="9"/><text x="2.0240%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (4 samples, 0.01%)</title><rect x="1.7901%" y="293" width="0.0129%" height="15" fill="rgb(222,207,29)" fg:x="556" fg:w="4"/><text x="2.0401%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (71 samples, 0.23%)</title><rect x="1.6130%" y="325" width="0.2286%" height="15" fill="rgb(206,96,30)" fg:x="501" fg:w="71"/><text x="1.8630%" y="335.50"></text></g><g><title>core::slice::raw::from_raw_parts (11 samples, 0.04%)</title><rect x="1.8062%" y="309" width="0.0354%" height="15" fill="rgb(218,138,4)" fg:x="561" fg:w="11"/><text x="2.0562%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (229 samples, 0.74%)</title><rect x="3.1005%" y="293" width="0.7373%" height="15" fill="rgb(250,191,14)" fg:x="963" fg:w="229"/><text x="3.3505%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (189 samples, 0.61%)</title><rect x="3.2292%" y="277" width="0.6085%" height="15" fill="rgb(239,60,40)" fg:x="1003" fg:w="189"/><text x="3.4792%" y="287.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (62 samples, 0.20%)</title><rect x="3.6381%" y="261" width="0.1996%" height="15" fill="rgb(206,27,48)" fg:x="1130" fg:w="62"/><text x="3.8881%" y="271.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (62 samples, 0.20%)</title><rect x="3.6381%" y="245" width="0.1996%" height="15" fill="rgb(225,35,8)" fg:x="1130" fg:w="62"/><text x="3.8881%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (6 samples, 0.02%)</title><rect x="4.4784%" y="277" width="0.0193%" height="15" fill="rgb(250,213,24)" fg:x="1391" fg:w="6"/><text x="4.7284%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (33 samples, 0.11%)</title><rect x="4.5782%" y="261" width="0.1062%" height="15" fill="rgb(247,123,22)" fg:x="1422" fg:w="33"/><text x="4.8282%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (62 samples, 0.20%)</title><rect x="4.4977%" y="277" width="0.1996%" height="15" fill="rgb(231,138,38)" fg:x="1397" fg:w="62"/><text x="4.7477%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (6 samples, 0.02%)</title><rect x="4.9581%" y="261" width="0.0193%" height="15" fill="rgb(231,145,46)" fg:x="1540" fg:w="6"/><text x="5.2081%" y="271.50"></text></g><g><title>core::ptr::read (6 samples, 0.02%)</title><rect x="4.9775%" y="245" width="0.0193%" height="15" fill="rgb(251,118,11)" fg:x="1546" fg:w="6"/><text x="5.2275%" y="255.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_next (97 samples, 0.31%)</title><rect x="4.6974%" y="277" width="0.3123%" height="15" fill="rgb(217,147,25)" fg:x="1459" fg:w="97"/><text x="4.9474%" y="287.50"></text></g><g><title>core::mem::replace (10 samples, 0.03%)</title><rect x="4.9775%" y="261" width="0.0322%" height="15" fill="rgb(247,81,37)" fg:x="1546" fg:w="10"/><text x="5.2275%" y="271.50"></text></g><g><title>core::ptr::write (4 samples, 0.01%)</title><rect x="4.9968%" y="245" width="0.0129%" height="15" fill="rgb(209,12,38)" fg:x="1552" fg:w="4"/><text x="5.2468%" y="255.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (45 samples, 0.14%)</title><rect x="5.0097%" y="277" width="0.1449%" height="15" fill="rgb(227,1,9)" fg:x="1556" fg:w="45"/><text x="5.2597%" y="287.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (9 samples, 0.03%)</title><rect x="5.1256%" y="261" width="0.0290%" height="15" fill="rgb(248,47,43)" fg:x="1592" fg:w="9"/><text x="5.3756%" y="271.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::next (18 samples, 0.06%)</title><rect x="5.1545%" y="277" width="0.0580%" height="15" fill="rgb(221,10,30)" fg:x="1601" fg:w="18"/><text x="5.4045%" y="287.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::new (5 samples, 0.02%)</title><rect x="5.2125%" y="277" width="0.0161%" height="15" fill="rgb(210,229,1)" fg:x="1619" fg:w="5"/><text x="5.4625%" y="287.50"></text></g><g><title>core::ptr::slice_from_raw_parts (57 samples, 0.18%)</title><rect x="5.2286%" y="277" width="0.1835%" height="15" fill="rgb(222,148,37)" fg:x="1624" fg:w="57"/><text x="5.4786%" y="287.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (57 samples, 0.18%)</title><rect x="5.2286%" y="261" width="0.1835%" height="15" fill="rgb(234,67,33)" fg:x="1624" fg:w="57"/><text x="5.4786%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (903 samples, 2.91%)</title><rect x="2.5402%" y="309" width="2.9073%" height="15" fill="rgb(247,98,35)" fg:x="789" fg:w="903"/><text x="2.7902%" y="319.50">&lt;a..</text></g><g><title>core::slice::raw::from_raw_parts (500 samples, 1.61%)</title><rect x="3.8377%" y="293" width="1.6098%" height="15" fill="rgb(247,138,52)" fg:x="1192" fg:w="500"/><text x="4.0877%" y="303.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::abs (5 samples, 0.02%)</title><rect x="5.4314%" y="277" width="0.0161%" height="15" fill="rgb(213,79,30)" fg:x="1687" fg:w="5"/><text x="5.6814%" y="287.50"></text></g><g><title>core::ub_checks::is_aligned_and_not_null (4 samples, 0.01%)</title><rect x="6.8609%" y="277" width="0.0129%" height="15" fill="rgb(246,177,23)" fg:x="2131" fg:w="4"/><text x="7.1109%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_aligned_to (4 samples, 0.01%)</title><rect x="6.8609%" y="261" width="0.0129%" height="15" fill="rgb(230,62,27)" fg:x="2131" fg:w="4"/><text x="7.1109%" y="271.50"></text></g><g><title>core::fmt::Arguments::new_const (4 samples, 0.01%)</title><rect x="6.8609%" y="245" width="0.0129%" height="15" fill="rgb(216,154,8)" fg:x="2131" fg:w="4"/><text x="7.1109%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1,567 samples, 5.05%)</title><rect x="1.8513%" y="325" width="5.0451%" height="15" fill="rgb(244,35,45)" fg:x="575" fg:w="1567"/><text x="2.1013%" y="335.50">&lt;alloc..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (448 samples, 1.44%)</title><rect x="5.4540%" y="309" width="1.4424%" height="15" fill="rgb(251,115,12)" fg:x="1694" fg:w="448"/><text x="5.7040%" y="319.50"></text></g><g><title>core::slice::raw::from_raw_parts::precondition_check (13 samples, 0.04%)</title><rect x="6.8545%" y="293" width="0.0419%" height="15" fill="rgb(240,54,50)" fg:x="2129" fg:w="13"/><text x="7.1045%" y="303.50"></text></g><g><title>core::ub_checks::is_valid_allocation_size (7 samples, 0.02%)</title><rect x="6.8738%" y="277" width="0.0225%" height="15" fill="rgb(233,84,52)" fg:x="2135" fg:w="7"/><text x="7.1238%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (31 samples, 0.10%)</title><rect x="7.3825%" y="293" width="0.0998%" height="15" fill="rgb(207,117,47)" fg:x="2293" fg:w="31"/><text x="7.6325%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (26 samples, 0.08%)</title><rect x="7.3986%" y="277" width="0.0837%" height="15" fill="rgb(249,43,39)" fg:x="2298" fg:w="26"/><text x="7.6486%" y="287.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (10 samples, 0.03%)</title><rect x="7.4501%" y="261" width="0.0322%" height="15" fill="rgb(209,38,44)" fg:x="2314" fg:w="10"/><text x="7.7001%" y="271.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (10 samples, 0.03%)</title><rect x="7.4501%" y="245" width="0.0322%" height="15" fill="rgb(236,212,23)" fg:x="2314" fg:w="10"/><text x="7.7001%" y="255.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_next (22 samples, 0.07%)</title><rect x="7.5499%" y="277" width="0.0708%" height="15" fill="rgb(242,79,21)" fg:x="2345" fg:w="22"/><text x="7.7999%" y="287.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::next (9 samples, 0.03%)</title><rect x="7.6272%" y="277" width="0.0290%" height="15" fill="rgb(211,96,35)" fg:x="2369" fg:w="9"/><text x="7.8772%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (121 samples, 0.39%)</title><rect x="7.2795%" y="309" width="0.3896%" height="15" fill="rgb(253,215,40)" fg:x="2261" fg:w="121"/><text x="7.5295%" y="319.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (58 samples, 0.19%)</title><rect x="7.4823%" y="293" width="0.1867%" height="15" fill="rgb(211,81,21)" fg:x="2324" fg:w="58"/><text x="7.7323%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (329 samples, 1.06%)</title><rect x="6.8963%" y="325" width="1.0592%" height="15" fill="rgb(208,190,38)" fg:x="2142" fg:w="329"/><text x="7.1463%" y="335.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (89 samples, 0.29%)</title><rect x="7.6690%" y="309" width="0.2865%" height="15" fill="rgb(235,213,38)" fg:x="2382" fg:w="89"/><text x="7.9190%" y="319.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (23 samples, 0.07%)</title><rect x="8.0425%" y="309" width="0.0741%" height="15" fill="rgb(237,122,38)" fg:x="2498" fg:w="23"/><text x="8.2925%" y="319.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (51 samples, 0.16%)</title><rect x="7.9588%" y="325" width="0.1642%" height="15" fill="rgb(244,218,35)" fg:x="2472" fg:w="51"/><text x="8.2088%" y="335.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.03%)</title><rect x="8.1230%" y="325" width="0.0258%" height="15" fill="rgb(240,68,47)" fg:x="2523" fg:w="8"/><text x="8.3730%" y="335.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (54 samples, 0.17%)</title><rect x="8.1487%" y="325" width="0.1739%" height="15" fill="rgb(210,16,53)" fg:x="2531" fg:w="54"/><text x="8.3987%" y="335.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (13 samples, 0.04%)</title><rect x="8.2807%" y="309" width="0.0419%" height="15" fill="rgb(235,124,12)" fg:x="2572" fg:w="13"/><text x="8.5307%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (7 samples, 0.02%)</title><rect x="8.3001%" y="293" width="0.0225%" height="15" fill="rgb(224,169,11)" fg:x="2578" fg:w="7"/><text x="8.5501%" y="303.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.08%)</title><rect x="8.3226%" y="325" width="0.0805%" height="15" fill="rgb(250,166,2)" fg:x="2585" fg:w="25"/><text x="8.5726%" y="335.50"></text></g><g><title>&lt;cgmath::matrix::Matrix3&lt;S&gt; as core::ops::arith::Mul&lt;cgmath::vector::Vector3&lt;S&gt;&gt;&gt;::mul (4 samples, 0.01%)</title><rect x="8.4224%" y="325" width="0.0129%" height="15" fill="rgb(242,216,29)" fg:x="2616" fg:w="4"/><text x="8.6724%" y="335.50"></text></g><g><title>&lt;cgmath::matrix::Matrix3&lt;S&gt; as core::ops::index::Index&lt;usize&gt;&gt;::index (4 samples, 0.01%)</title><rect x="8.4353%" y="325" width="0.0129%" height="15" fill="rgb(230,116,27)" fg:x="2620" fg:w="4"/><text x="8.6853%" y="335.50"></text></g><g><title>&lt;cgmath::point::Point3&lt;S&gt; as cgmath::structure::EuclideanSpace&gt;::from_vec (16 samples, 0.05%)</title><rect x="8.4482%" y="325" width="0.0515%" height="15" fill="rgb(228,99,48)" fg:x="2624" fg:w="16"/><text x="8.6982%" y="335.50"></text></g><g><title>&lt;cgmath::point::Point3&lt;S&gt; as cgmath::structure::MetricSpace&gt;::distance2 (23 samples, 0.07%)</title><rect x="8.5029%" y="325" width="0.0741%" height="15" fill="rgb(253,11,6)" fg:x="2641" fg:w="23"/><text x="8.7529%" y="335.50"></text></g><g><title>&lt;cgmath::point::Point3&lt;S&gt; as core::ops::arith::Sub&gt;::sub (22 samples, 0.07%)</title><rect x="8.5769%" y="325" width="0.0708%" height="15" fill="rgb(247,143,39)" fg:x="2664" fg:w="22"/><text x="8.8269%" y="335.50"></text></g><g><title>&lt;cgmath::vector::Vector3&lt;S&gt; as cgmath::structure::Array&gt;::sum (18 samples, 0.06%)</title><rect x="8.6542%" y="325" width="0.0580%" height="15" fill="rgb(236,97,10)" fg:x="2688" fg:w="18"/><text x="8.9042%" y="335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (5 samples, 0.02%)</title><rect x="8.8055%" y="309" width="0.0161%" height="15" fill="rgb(233,208,19)" fg:x="2735" fg:w="5"/><text x="9.0555%" y="319.50"></text></g><g><title>&lt;cgmath::vector::Vector3&lt;S&gt; as cgmath::structure::ElementWise&gt;::mul_element_wise (36 samples, 0.12%)</title><rect x="8.7122%" y="325" width="0.1159%" height="15" fill="rgb(216,164,2)" fg:x="2706" fg:w="36"/><text x="8.9622%" y="335.50"></text></g><g><title>&lt;cgmath::vector::Vector3&lt;S&gt; as cgmath::structure::InnerSpace&gt;::dot (32 samples, 0.10%)</title><rect x="8.8281%" y="325" width="0.1030%" height="15" fill="rgb(220,129,5)" fg:x="2742" fg:w="32"/><text x="9.0781%" y="335.50"></text></g><g><title>&lt;cgmath::vector::Vector3&lt;S&gt; as core::ops::arith::Div&lt;S&gt;&gt;::div (23 samples, 0.07%)</title><rect x="8.9343%" y="325" width="0.0741%" height="15" fill="rgb(242,17,10)" fg:x="2775" fg:w="23"/><text x="9.1843%" y="335.50"></text></g><g><title>&lt;cgmath::vector::Vector4&lt;S&gt; as core::convert::AsRef&lt;[S: 4]&gt;&gt;::as_ref (4 samples, 0.01%)</title><rect x="9.0180%" y="325" width="0.0129%" height="15" fill="rgb(242,107,0)" fg:x="2801" fg:w="4"/><text x="9.2680%" y="335.50"></text></g><g><title>&lt;cgmath::vector::Vector4&lt;S&gt; as core::ops::arith::Add&gt;::add (468 samples, 1.51%)</title><rect x="9.0309%" y="325" width="1.5068%" height="15" fill="rgb(251,28,31)" fg:x="2805" fg:w="468"/><text x="9.2809%" y="335.50"></text></g><g><title>&lt;cgmath::vector::Vector4&lt;S&gt; as core::ops::arith::Mul&lt;S&gt;&gt;::mul (337 samples, 1.08%)</title><rect x="10.5377%" y="325" width="1.0850%" height="15" fill="rgb(233,223,10)" fg:x="3273" fg:w="337"/><text x="10.7877%" y="335.50"></text></g><g><title>core::slice::raw::from_raw_parts::precondition_check (12 samples, 0.04%)</title><rect x="11.5840%" y="309" width="0.0386%" height="15" fill="rgb(215,21,27)" fg:x="3598" fg:w="12"/><text x="11.8340%" y="319.50"></text></g><g><title>core::ub_checks::is_valid_allocation_size (5 samples, 0.02%)</title><rect x="11.6066%" y="293" width="0.0161%" height="15" fill="rgb(232,23,21)" fg:x="3605" fg:w="5"/><text x="11.8566%" y="303.50"></text></g><g><title>&lt;cgmath::vector::Vector4&lt;S&gt; as core::ops::arith::Sub&gt;::sub (22 samples, 0.07%)</title><rect x="11.6227%" y="325" width="0.0708%" height="15" fill="rgb(244,5,23)" fg:x="3610" fg:w="22"/><text x="11.8727%" y="335.50"></text></g><g><title>&lt;cgmath::vector::Vector4&lt;S&gt; as core::ops::index::Index&lt;usize&gt;&gt;::index (17 samples, 0.05%)</title><rect x="11.6935%" y="325" width="0.0547%" height="15" fill="rgb(226,81,46)" fg:x="3632" fg:w="17"/><text x="11.9435%" y="335.50"></text></g><g><title>&lt;cgmath::vector::Vector4&lt;S&gt; as num_traits::identities::Zero&gt;::zero (10 samples, 0.03%)</title><rect x="11.7482%" y="325" width="0.0322%" height="15" fill="rgb(247,70,30)" fg:x="3649" fg:w="10"/><text x="11.9982%" y="335.50"></text></g><g><title>&lt;cgmath::vector::Vector4&lt;S&gt; as truck_base::cgmath_extend_traits::control_point::ControlPoint&lt;S&gt;&gt;::origin (14 samples, 0.05%)</title><rect x="11.7804%" y="325" width="0.0451%" height="15" fill="rgb(212,68,19)" fg:x="3659" fg:w="14"/><text x="12.0304%" y="335.50"></text></g><g><title>&lt;cgmath::vector::Vector4&lt;S&gt; as truck_base::cgmath_extend_traits::control_point::ControlPoint&lt;S&gt;&gt;::to_vec (65 samples, 0.21%)</title><rect x="11.8255%" y="325" width="0.2093%" height="15" fill="rgb(240,187,13)" fg:x="3673" fg:w="65"/><text x="12.0755%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::cycle::Cycle&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.02%)</title><rect x="12.0380%" y="325" width="0.0161%" height="15" fill="rgb(223,113,26)" fg:x="3739" fg:w="5"/><text x="12.2880%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.01%)</title><rect x="12.0541%" y="325" width="0.0129%" height="15" fill="rgb(206,192,2)" fg:x="3744" fg:w="4"/><text x="12.3041%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (12 samples, 0.04%)</title><rect x="12.0670%" y="325" width="0.0386%" height="15" fill="rgb(241,108,4)" fg:x="3748" fg:w="12"/><text x="12.3170%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.03%)</title><rect x="12.1056%" y="325" width="0.0322%" height="15" fill="rgb(247,173,49)" fg:x="3760" fg:w="10"/><text x="12.3556%" y="335.50"></text></g><g><title>truck_geometry::nurbs::bspsurface::&lt;impl truck_geotrait::traits::surface::ParametricSurface for truck_geometry::nurbs::BSplineSurface&lt;P&gt;&gt;::vder::{{closure}}::{{closure}} (8 samples, 0.03%)</title><rect x="12.1120%" y="309" width="0.0258%" height="15" fill="rgb(224,114,35)" fg:x="3762" fg:w="8"/><text x="12.3620%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (5 samples, 0.02%)</title><rect x="12.1475%" y="325" width="0.0161%" height="15" fill="rgb(245,159,27)" fg:x="3773" fg:w="5"/><text x="12.3975%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (4 samples, 0.01%)</title><rect x="12.1636%" y="325" width="0.0129%" height="15" fill="rgb(245,172,44)" fg:x="3778" fg:w="4"/><text x="12.4136%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::flatten::{{closure}} (4 samples, 0.01%)</title><rect x="12.1861%" y="325" width="0.0129%" height="15" fill="rgb(236,23,11)" fg:x="3785" fg:w="4"/><text x="12.4361%" y="335.50"></text></g><g><title>&lt;&amp;f64 as core::ops::arith::Sub&lt;&amp;f64&gt;&gt;::sub (8 samples, 0.03%)</title><rect x="14.2241%" y="309" width="0.0258%" height="15" fill="rgb(205,117,38)" fg:x="4418" fg:w="8"/><text x="14.4741%" y="319.50"></text></g><g><title>&lt;cgmath::vector::Vector4&lt;S&gt; as core::ops::arith::Add&gt;::add (4 samples, 0.01%)</title><rect x="14.2595%" y="309" width="0.0129%" height="15" fill="rgb(237,72,25)" fg:x="4429" fg:w="4"/><text x="14.5095%" y="319.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (277 samples, 0.89%)</title><rect x="14.3142%" y="309" width="0.8918%" height="15" fill="rgb(244,70,9)" fg:x="4446" fg:w="277"/><text x="14.5642%" y="319.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (277 samples, 0.89%)</title><rect x="14.3142%" y="293" width="0.8918%" height="15" fill="rgb(217,125,39)" fg:x="4446" fg:w="277"/><text x="14.5642%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (35 samples, 0.11%)</title><rect x="15.0934%" y="277" width="0.1127%" height="15" fill="rgb(235,36,10)" fg:x="4688" fg:w="35"/><text x="15.3434%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (944 samples, 3.04%)</title><rect x="12.1990%" y="325" width="3.0393%" height="15" fill="rgb(251,123,47)" fg:x="3789" fg:w="944"/><text x="12.4490%" y="335.50">&lt;co..</text></g><g><title>truck_base::tolerance::Tolerance::near (5 samples, 0.02%)</title><rect x="15.2222%" y="309" width="0.0161%" height="15" fill="rgb(221,13,13)" fg:x="4728" fg:w="5"/><text x="15.4722%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::rposition (6 samples, 0.02%)</title><rect x="16.0496%" y="309" width="0.0193%" height="15" fill="rgb(238,131,9)" fg:x="4985" fg:w="6"/><text x="16.2996%" y="319.50"></text></g><g><title>core::ub_checks::is_aligned_and_not_null (8 samples, 0.03%)</title><rect x="16.1075%" y="293" width="0.0258%" height="15" fill="rgb(211,50,8)" fg:x="5003" fg:w="8"/><text x="16.3575%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_aligned_to (8 samples, 0.03%)</title><rect x="16.1075%" y="277" width="0.0258%" height="15" fill="rgb(245,182,24)" fg:x="5003" fg:w="8"/><text x="16.3575%" y="287.50"></text></g><g><title>core::fmt::Arguments::new_const (8 samples, 0.03%)</title><rect x="16.1075%" y="261" width="0.0258%" height="15" fill="rgb(242,14,37)" fg:x="5003" fg:w="8"/><text x="16.3575%" y="271.50"></text></g><g><title>core::slice::raw::from_raw_parts::precondition_check (24 samples, 0.08%)</title><rect x="16.0850%" y="309" width="0.0773%" height="15" fill="rgb(246,228,12)" fg:x="4996" fg:w="24"/><text x="16.3350%" y="319.50"></text></g><g><title>core::ub_checks::is_valid_allocation_size (9 samples, 0.03%)</title><rect x="16.1333%" y="293" width="0.0290%" height="15" fill="rgb(213,55,15)" fg:x="5011" fg:w="9"/><text x="16.3833%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::get_unchecked (290 samples, 0.93%)</title><rect x="15.2382%" y="325" width="0.9337%" height="15" fill="rgb(209,9,3)" fg:x="4733" fg:w="290"/><text x="15.4882%" y="335.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (9 samples, 0.03%)</title><rect x="16.7289%" y="309" width="0.0290%" height="15" fill="rgb(230,59,30)" fg:x="5196" fg:w="9"/><text x="16.9789%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::get_unchecked (6 samples, 0.02%)</title><rect x="16.8416%" y="277" width="0.0193%" height="15" fill="rgb(209,121,21)" fg:x="5231" fg:w="6"/><text x="17.0916%" y="287.50"></text></g><g><title>core::cmp::min_by (5 samples, 0.02%)</title><rect x="16.8738%" y="277" width="0.0161%" height="15" fill="rgb(220,109,13)" fg:x="5241" fg:w="5"/><text x="17.1238%" y="287.50"></text></g><g><title>core::num::&lt;impl usize&gt;::is_power_of_two (11 samples, 0.04%)</title><rect x="16.9285%" y="229" width="0.0354%" height="15" fill="rgb(232,18,1)" fg:x="5258" fg:w="11"/><text x="17.1785%" y="239.50"></text></g><g><title>core::num::&lt;impl usize&gt;::count_ones (11 samples, 0.04%)</title><rect x="16.9285%" y="213" width="0.0354%" height="15" fill="rgb(215,41,42)" fg:x="5258" fg:w="11"/><text x="17.1785%" y="223.50"></text></g><g><title>core::cmp::min (66 samples, 0.21%)</title><rect x="16.7579%" y="309" width="0.2125%" height="15" fill="rgb(224,123,36)" fg:x="5205" fg:w="66"/><text x="17.0079%" y="319.50"></text></g><g><title>core::cmp::Ord::min (66 samples, 0.21%)</title><rect x="16.7579%" y="293" width="0.2125%" height="15" fill="rgb(240,125,3)" fg:x="5205" fg:w="66"/><text x="17.0079%" y="303.50"></text></g><g><title>core::slice::raw::from_raw_parts::precondition_check (24 samples, 0.08%)</title><rect x="16.8931%" y="277" width="0.0773%" height="15" fill="rgb(205,98,50)" fg:x="5247" fg:w="24"/><text x="17.1431%" y="287.50"></text></g><g><title>core::ub_checks::is_aligned_and_not_null (17 samples, 0.05%)</title><rect x="16.9156%" y="261" width="0.0547%" height="15" fill="rgb(205,185,37)" fg:x="5254" fg:w="17"/><text x="17.1656%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_aligned_to (15 samples, 0.05%)</title><rect x="16.9221%" y="245" width="0.0483%" height="15" fill="rgb(238,207,15)" fg:x="5256" fg:w="15"/><text x="17.1721%" y="255.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::next (4 samples, 0.01%)</title><rect x="16.9704%" y="309" width="0.0129%" height="15" fill="rgb(213,199,42)" fg:x="5271" fg:w="4"/><text x="17.2204%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (255 samples, 0.82%)</title><rect x="16.1719%" y="325" width="0.8210%" height="15" fill="rgb(235,201,11)" fg:x="5023" fg:w="255"/><text x="16.4219%" y="335.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_next (12 samples, 0.04%)</title><rect x="17.1958%" y="309" width="0.0386%" height="15" fill="rgb(207,46,11)" fg:x="5341" fg:w="12"/><text x="17.4458%" y="319.50"></text></g><g><title>core::cmp::min (10 samples, 0.03%)</title><rect x="17.2344%" y="309" width="0.0322%" height="15" fill="rgb(241,35,35)" fg:x="5353" fg:w="10"/><text x="17.4844%" y="319.50"></text></g><g><title>core::cmp::Ord::min (10 samples, 0.03%)</title><rect x="17.2344%" y="293" width="0.0322%" height="15" fill="rgb(243,32,47)" fg:x="5353" fg:w="10"/><text x="17.4844%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::size_hint (88 samples, 0.28%)</title><rect x="16.9929%" y="325" width="0.2833%" height="15" fill="rgb(247,202,23)" fg:x="5278" fg:w="88"/><text x="17.2429%" y="335.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_next (14 samples, 0.05%)</title><rect x="17.5563%" y="277" width="0.0451%" height="15" fill="rgb(219,102,11)" fg:x="5453" fg:w="14"/><text x="17.8063%" y="287.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::next (5 samples, 0.02%)</title><rect x="17.6079%" y="277" width="0.0161%" height="15" fill="rgb(243,110,44)" fg:x="5469" fg:w="5"/><text x="17.8579%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (29 samples, 0.09%)</title><rect x="17.5435%" y="309" width="0.0934%" height="15" fill="rgb(222,74,54)" fg:x="5449" fg:w="29"/><text x="17.7935%" y="319.50"></text></g><g><title>core::slice::raw::from_raw_parts (25 samples, 0.08%)</title><rect x="17.5563%" y="293" width="0.0805%" height="15" fill="rgb(216,99,12)" fg:x="5453" fg:w="25"/><text x="17.8063%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr::precondition_check (9 samples, 0.03%)</title><rect x="17.6626%" y="309" width="0.0290%" height="15" fill="rgb(226,22,26)" fg:x="5486" fg:w="9"/><text x="17.9126%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (133 samples, 0.43%)</title><rect x="17.2762%" y="325" width="0.4282%" height="15" fill="rgb(217,163,10)" fg:x="5366" fg:w="133"/><text x="17.5262%" y="335.50"></text></g><g><title>core::slice::raw::from_raw_parts::precondition_check (4 samples, 0.01%)</title><rect x="17.6916%" y="309" width="0.0129%" height="15" fill="rgb(213,25,53)" fg:x="5495" fg:w="4"/><text x="17.9416%" y="319.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (7 samples, 0.02%)</title><rect x="17.7077%" y="325" width="0.0225%" height="15" fill="rgb(252,105,26)" fg:x="5500" fg:w="7"/><text x="17.9577%" y="335.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.01%)</title><rect x="17.7302%" y="325" width="0.0129%" height="15" fill="rgb(220,39,43)" fg:x="5507" fg:w="4"/><text x="17.9802%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::get_unchecked (4 samples, 0.01%)</title><rect x="18.4353%" y="309" width="0.0129%" height="15" fill="rgb(229,68,48)" fg:x="5726" fg:w="4"/><text x="18.6853%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (10 samples, 0.03%)</title><rect x="18.4482%" y="309" width="0.0322%" height="15" fill="rgb(252,8,32)" fg:x="5730" fg:w="10"/><text x="18.6982%" y="319.50"></text></g><g><title>core::ptr::read (7 samples, 0.02%)</title><rect x="18.4804%" y="293" width="0.0225%" height="15" fill="rgb(223,20,43)" fg:x="5740" fg:w="7"/><text x="18.7304%" y="303.50"></text></g><g><title>core::mem::replace (12 samples, 0.04%)</title><rect x="18.4804%" y="309" width="0.0386%" height="15" fill="rgb(229,81,49)" fg:x="5740" fg:w="12"/><text x="18.7304%" y="319.50"></text></g><g><title>core::ptr::write (5 samples, 0.02%)</title><rect x="18.5029%" y="293" width="0.0161%" height="15" fill="rgb(236,28,36)" fg:x="5747" fg:w="5"/><text x="18.7529%" y="303.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_next (282 samples, 0.91%)</title><rect x="17.7527%" y="325" width="0.9079%" height="15" fill="rgb(249,185,26)" fg:x="5514" fg:w="282"/><text x="18.0027%" y="335.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::is_empty (44 samples, 0.14%)</title><rect x="18.5190%" y="309" width="0.1417%" height="15" fill="rgb(249,174,33)" fg:x="5752" fg:w="44"/><text x="18.7690%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::le (8 samples, 0.03%)</title><rect x="18.6349%" y="293" width="0.0258%" height="15" fill="rgb(233,201,37)" fg:x="5788" fg:w="8"/><text x="18.8849%" y="303.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (51 samples, 0.16%)</title><rect x="18.9987%" y="309" width="0.1642%" height="15" fill="rgb(221,78,26)" fg:x="5901" fg:w="51"/><text x="19.2487%" y="319.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (9 samples, 0.03%)</title><rect x="19.1726%" y="293" width="0.0290%" height="15" fill="rgb(250,127,30)" fg:x="5955" fg:w="9"/><text x="19.4226%" y="303.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (4 samples, 0.01%)</title><rect x="19.1887%" y="277" width="0.0129%" height="15" fill="rgb(230,49,44)" fg:x="5960" fg:w="4"/><text x="19.4387%" y="287.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (7 samples, 0.02%)</title><rect x="19.5332%" y="245" width="0.0225%" height="15" fill="rgb(229,67,23)" fg:x="6067" fg:w="7"/><text x="19.7832%" y="255.50"></text></g><g><title>core::num::&lt;impl isize&gt;::unchecked_neg (40 samples, 0.13%)</title><rect x="19.4398%" y="261" width="0.1288%" height="15" fill="rgb(249,83,47)" fg:x="6038" fg:w="40"/><text x="19.6898%" y="271.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (289 samples, 0.93%)</title><rect x="18.6735%" y="325" width="0.9305%" height="15" fill="rgb(215,43,3)" fg:x="5800" fg:w="289"/><text x="18.9235%" y="335.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::next_back_unchecked (137 samples, 0.44%)</title><rect x="19.1629%" y="309" width="0.4411%" height="15" fill="rgb(238,154,13)" fg:x="5952" fg:w="137"/><text x="19.4129%" y="319.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::pre_dec_end (125 samples, 0.40%)</title><rect x="19.2015%" y="293" width="0.4024%" height="15" fill="rgb(219,56,2)" fg:x="5964" fg:w="125"/><text x="19.4515%" y="303.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub (69 samples, 0.22%)</title><rect x="19.3818%" y="277" width="0.2222%" height="15" fill="rgb(233,0,4)" fg:x="6020" fg:w="69"/><text x="19.6318%" y="287.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::offset (11 samples, 0.04%)</title><rect x="19.5686%" y="261" width="0.0354%" height="15" fill="rgb(235,30,7)" fg:x="6078" fg:w="11"/><text x="19.8186%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (56 samples, 0.18%)</title><rect x="19.9453%" y="309" width="0.1803%" height="15" fill="rgb(250,79,13)" fg:x="6195" fg:w="56"/><text x="20.1953%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (179 samples, 0.58%)</title><rect x="19.6040%" y="325" width="0.5763%" height="15" fill="rgb(211,146,34)" fg:x="6089" fg:w="179"/><text x="19.8540%" y="335.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (17 samples, 0.05%)</title><rect x="20.1256%" y="309" width="0.0547%" height="15" fill="rgb(228,22,38)" fg:x="6251" fg:w="17"/><text x="20.3756%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (29 samples, 0.09%)</title><rect x="20.1835%" y="325" width="0.0934%" height="15" fill="rgb(235,168,5)" fg:x="6269" fg:w="29"/><text x="20.4335%" y="335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.04%)</title><rect x="20.2769%" y="325" width="0.0354%" height="15" fill="rgb(221,155,16)" fg:x="6298" fg:w="11"/><text x="20.5269%" y="335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (5 samples, 0.02%)</title><rect x="20.2962%" y="309" width="0.0161%" height="15" fill="rgb(215,215,53)" fg:x="6304" fg:w="5"/><text x="20.5462%" y="319.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (4 samples, 0.01%)</title><rect x="20.2994%" y="293" width="0.0129%" height="15" fill="rgb(223,4,10)" fg:x="6305" fg:w="4"/><text x="20.5494%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (6 samples, 0.02%)</title><rect x="20.7373%" y="309" width="0.0193%" height="15" fill="rgb(234,103,6)" fg:x="6441" fg:w="6"/><text x="20.9873%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (11 samples, 0.04%)</title><rect x="20.7695%" y="309" width="0.0354%" height="15" fill="rgb(227,97,0)" fg:x="6451" fg:w="11"/><text x="21.0195%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (7 samples, 0.02%)</title><rect x="20.8081%" y="293" width="0.0225%" height="15" fill="rgb(234,150,53)" fg:x="6463" fg:w="7"/><text x="21.0581%" y="303.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (6 samples, 0.02%)</title><rect x="20.8113%" y="277" width="0.0193%" height="15" fill="rgb(228,201,54)" fg:x="6464" fg:w="6"/><text x="21.0613%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (6 samples, 0.02%)</title><rect x="20.8113%" y="261" width="0.0193%" height="15" fill="rgb(222,22,37)" fg:x="6464" fg:w="6"/><text x="21.0613%" y="271.50"></text></g><g><title>core::hint::assert_unchecked (18 samples, 0.06%)</title><rect x="20.8049%" y="309" width="0.0580%" height="15" fill="rgb(237,53,32)" fg:x="6462" fg:w="18"/><text x="21.0549%" y="319.50"></text></g><g><title>core::ub_checks::is_aligned_and_not_null (6 samples, 0.02%)</title><rect x="20.8822%" y="293" width="0.0193%" height="15" fill="rgb(233,25,53)" fg:x="6486" fg:w="6"/><text x="21.1322%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_aligned_to (6 samples, 0.02%)</title><rect x="20.8822%" y="277" width="0.0193%" height="15" fill="rgb(210,40,34)" fg:x="6486" fg:w="6"/><text x="21.1322%" y="287.50"></text></g><g><title>core::fmt::Arguments::new_const (6 samples, 0.02%)</title><rect x="20.8822%" y="261" width="0.0193%" height="15" fill="rgb(241,220,44)" fg:x="6486" fg:w="6"/><text x="21.1322%" y="271.50"></text></g><g><title>core::slice::raw::from_raw_parts::precondition_check (14 samples, 0.05%)</title><rect x="20.8757%" y="309" width="0.0451%" height="15" fill="rgb(235,28,35)" fg:x="6484" fg:w="14"/><text x="21.1257%" y="319.50"></text></g><g><title>core::ub_checks::is_valid_allocation_size (6 samples, 0.02%)</title><rect x="20.9015%" y="293" width="0.0193%" height="15" fill="rgb(210,56,17)" fg:x="6492" fg:w="6"/><text x="21.1515%" y="303.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::rposition (191 samples, 0.61%)</title><rect x="20.3123%" y="325" width="0.6149%" height="15" fill="rgb(224,130,29)" fg:x="6309" fg:w="191"/><text x="20.5623%" y="335.50"></text></g><g><title>core::mem::size_of (16 samples, 0.05%)</title><rect x="22.3020%" y="277" width="0.0515%" height="15" fill="rgb(235,212,8)" fg:x="6927" fg:w="16"/><text x="22.5520%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (446 samples, 1.44%)</title><rect x="20.9272%" y="325" width="1.4359%" height="15" fill="rgb(223,33,50)" fg:x="6500" fg:w="446"/><text x="21.1772%" y="335.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (116 samples, 0.37%)</title><rect x="21.9897%" y="309" width="0.3735%" height="15" fill="rgb(219,149,13)" fg:x="6830" fg:w="116"/><text x="22.2397%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (77 samples, 0.25%)</title><rect x="22.1153%" y="293" width="0.2479%" height="15" fill="rgb(250,156,29)" fg:x="6869" fg:w="77"/><text x="22.3653%" y="303.50"></text></g><g><title>&lt;crossbeam_epoch::epoch::Epoch as core::default::Default&gt;::default (4 samples, 0.01%)</title><rect x="22.3696%" y="325" width="0.0129%" height="15" fill="rgb(216,193,19)" fg:x="6948" fg:w="4"/><text x="22.6196%" y="335.50"></text></g><g><title>&lt;crossbeam_epoch::guard::Guard as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="22.3825%" y="325" width="0.0129%" height="15" fill="rgb(216,135,14)" fg:x="6952" fg:w="4"/><text x="22.6325%" y="335.50"></text></g><g><title>&lt;crossbeam_utils::cache_padded::CachePadded&lt;T&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.02%)</title><rect x="22.3954%" y="325" width="0.0161%" height="15" fill="rgb(241,47,5)" fg:x="6956" fg:w="5"/><text x="22.6454%" y="335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (17 samples, 0.05%)</title><rect x="22.8300%" y="309" width="0.0547%" height="15" fill="rgb(233,42,35)" fg:x="7091" fg:w="17"/><text x="23.0800%" y="319.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (6 samples, 0.02%)</title><rect x="22.8654%" y="293" width="0.0193%" height="15" fill="rgb(231,13,6)" fg:x="7102" fg:w="6"/><text x="23.1154%" y="303.50"></text></g><g><title>core::ub_checks::is_aligned_and_not_null (8 samples, 0.03%)</title><rect x="22.9427%" y="293" width="0.0258%" height="15" fill="rgb(207,181,40)" fg:x="7126" fg:w="8"/><text x="23.1927%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_aligned_to (8 samples, 0.03%)</title><rect x="22.9427%" y="277" width="0.0258%" height="15" fill="rgb(254,173,49)" fg:x="7126" fg:w="8"/><text x="23.1927%" y="287.50"></text></g><g><title>core::fmt::Arguments::new_const (8 samples, 0.03%)</title><rect x="22.9427%" y="261" width="0.0258%" height="15" fill="rgb(221,1,38)" fg:x="7126" fg:w="8"/><text x="23.1927%" y="271.50"></text></g><g><title>&lt;f64 as approx::abs_diff_eq::AbsDiffEq&gt;::abs_diff_eq (183 samples, 0.59%)</title><rect x="22.4115%" y="325" width="0.5892%" height="15" fill="rgb(206,124,46)" fg:x="6961" fg:w="183"/><text x="22.6615%" y="335.50"></text></g><g><title>core::slice::raw::from_raw_parts::precondition_check (30 samples, 0.10%)</title><rect x="22.9041%" y="309" width="0.0966%" height="15" fill="rgb(249,21,11)" fg:x="7114" fg:w="30"/><text x="23.1541%" y="319.50"></text></g><g><title>core::ub_checks::is_valid_allocation_size (10 samples, 0.03%)</title><rect x="22.9684%" y="293" width="0.0322%" height="15" fill="rgb(222,201,40)" fg:x="7134" fg:w="10"/><text x="23.2184%" y="303.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (84 samples, 0.27%)</title><rect x="23.0006%" y="325" width="0.2704%" height="15" fill="rgb(235,61,29)" fg:x="7144" fg:w="84"/><text x="23.2506%" y="335.50"></text></g><g><title>&lt;f64 as core::ops::arith::Div&gt;::div (8 samples, 0.03%)</title><rect x="23.2711%" y="325" width="0.0258%" height="15" fill="rgb(219,207,3)" fg:x="7228" fg:w="8"/><text x="23.5211%" y="335.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&lt;&amp;f64&gt;&gt;::mul (48 samples, 0.15%)</title><rect x="23.2968%" y="325" width="0.1545%" height="15" fill="rgb(222,56,46)" fg:x="7236" fg:w="48"/><text x="23.5468%" y="335.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (6 samples, 0.02%)</title><rect x="23.4321%" y="309" width="0.0193%" height="15" fill="rgb(239,76,54)" fg:x="7278" fg:w="6"/><text x="23.6821%" y="319.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (92 samples, 0.30%)</title><rect x="23.4514%" y="325" width="0.2962%" height="15" fill="rgb(231,124,27)" fg:x="7284" fg:w="92"/><text x="23.7014%" y="335.50"></text></g><g><title>&lt;f64 as core::ops::arith::Sub&gt;::sub (19 samples, 0.06%)</title><rect x="23.7476%" y="325" width="0.0612%" height="15" fill="rgb(249,195,6)" fg:x="7376" fg:w="19"/><text x="23.9976%" y="335.50"></text></g><g><title>&lt;f64 as num_traits::identities::Zero&gt;::zero (16 samples, 0.05%)</title><rect x="23.8216%" y="325" width="0.0515%" height="15" fill="rgb(237,174,47)" fg:x="7399" fg:w="16"/><text x="24.0716%" y="335.50"></text></g><g><title>&lt;itertools::tuple_impl::CircularTupleWindows&lt;I,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.04%)</title><rect x="23.8731%" y="325" width="0.0386%" height="15" fill="rgb(206,201,31)" fg:x="7415" fg:w="12"/><text x="24.1231%" y="335.50"></text></g><g><title>&lt;itertools::tuple_impl::TupleWindows&lt;I,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.06%)</title><rect x="23.9118%" y="325" width="0.0580%" height="15" fill="rgb(231,57,52)" fg:x="7427" fg:w="18"/><text x="24.1618%" y="335.50"></text></g><g><title>&lt;spade::delaunay_core::handles::public_handles::InnerTag as core::default::Default&gt;::default (4 samples, 0.01%)</title><rect x="23.9891%" y="325" width="0.0129%" height="15" fill="rgb(248,177,22)" fg:x="7451" fg:w="4"/><text x="24.2391%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (8 samples, 0.03%)</title><rect x="24.0341%" y="293" width="0.0258%" height="15" fill="rgb(215,211,37)" fg:x="7465" fg:w="8"/><text x="24.2841%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_swap (7 samples, 0.02%)</title><rect x="24.0373%" y="277" width="0.0225%" height="15" fill="rgb(241,128,51)" fg:x="7466" fg:w="7"/><text x="24.2873%" y="287.50"></text></g><g><title>get_futex_key (4 samples, 0.01%)</title><rect x="24.1017%" y="197" width="0.0129%" height="15" fill="rgb(227,165,31)" fg:x="7486" fg:w="4"/><text x="24.3517%" y="207.50"></text></g><g><title>select_task_rq (4 samples, 0.01%)</title><rect x="24.1146%" y="165" width="0.0129%" height="15" fill="rgb(228,167,24)" fg:x="7490" fg:w="4"/><text x="24.3646%" y="175.50"></text></g><g><title>select_task_rq_fair.llvm.10348145901613167685 (4 samples, 0.01%)</title><rect x="24.1146%" y="149" width="0.0129%" height="15" fill="rgb(228,143,12)" fg:x="7490" fg:w="4"/><text x="24.3646%" y="159.50"></text></g><g><title>__se_sys_futex (23 samples, 0.07%)</title><rect x="24.0663%" y="245" width="0.0741%" height="15" fill="rgb(249,149,8)" fg:x="7475" fg:w="23"/><text x="24.3163%" y="255.50"></text></g><g><title>do_futex (23 samples, 0.07%)</title><rect x="24.0663%" y="229" width="0.0741%" height="15" fill="rgb(243,35,44)" fg:x="7475" fg:w="23"/><text x="24.3163%" y="239.50"></text></g><g><title>futex_wake (23 samples, 0.07%)</title><rect x="24.0663%" y="213" width="0.0741%" height="15" fill="rgb(246,89,9)" fg:x="7475" fg:w="23"/><text x="24.3163%" y="223.50"></text></g><g><title>wake_up_q (8 samples, 0.03%)</title><rect x="24.1146%" y="197" width="0.0258%" height="15" fill="rgb(233,213,13)" fg:x="7490" fg:w="8"/><text x="24.3646%" y="207.50"></text></g><g><title>try_to_wake_up (8 samples, 0.03%)</title><rect x="24.1146%" y="181" width="0.0258%" height="15" fill="rgb(233,141,41)" fg:x="7490" fg:w="8"/><text x="24.3646%" y="191.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.12%)</title><rect x="24.0277%" y="325" width="0.1191%" height="15" fill="rgb(239,167,4)" fg:x="7463" fg:w="37"/><text x="24.2777%" y="335.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (35 samples, 0.11%)</title><rect x="24.0341%" y="309" width="0.1127%" height="15" fill="rgb(209,217,16)" fg:x="7465" fg:w="35"/><text x="24.2841%" y="319.50"></text></g><g><title>syscall (27 samples, 0.09%)</title><rect x="24.0599%" y="293" width="0.0869%" height="15" fill="rgb(219,88,35)" fg:x="7473" fg:w="27"/><text x="24.3099%" y="303.50"></text></g><g><title>entry_SYSCALL_64 (26 samples, 0.08%)</title><rect x="24.0631%" y="277" width="0.0837%" height="15" fill="rgb(220,193,23)" fg:x="7474" fg:w="26"/><text x="24.3131%" y="287.50"></text></g><g><title>do_syscall_64 (25 samples, 0.08%)</title><rect x="24.0663%" y="261" width="0.0805%" height="15" fill="rgb(230,90,52)" fg:x="7475" fg:w="25"/><text x="24.3163%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (18 samples, 0.06%)</title><rect x="24.6394%" y="293" width="0.0580%" height="15" fill="rgb(252,106,19)" fg:x="7653" fg:w="18"/><text x="24.8894%" y="303.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (169 samples, 0.54%)</title><rect x="24.1597%" y="325" width="0.5441%" height="15" fill="rgb(206,74,20)" fg:x="7504" fg:w="169"/><text x="24.4097%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (62 samples, 0.20%)</title><rect x="24.5042%" y="309" width="0.1996%" height="15" fill="rgb(230,138,44)" fg:x="7611" fg:w="62"/><text x="24.7542%" y="319.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (5 samples, 0.02%)</title><rect x="24.7038%" y="325" width="0.0161%" height="15" fill="rgb(235,182,43)" fg:x="7673" fg:w="5"/><text x="24.9538%" y="335.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (739 samples, 2.38%)</title><rect x="24.7199%" y="325" width="2.3793%" height="15" fill="rgb(242,16,51)" fg:x="7678" fg:w="739"/><text x="24.9699%" y="335.50">&lt;u..</text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (136 samples, 0.44%)</title><rect x="27.0992%" y="325" width="0.4379%" height="15" fill="rgb(248,9,4)" fg:x="8417" fg:w="136"/><text x="27.3492%" y="335.50"></text></g><g><title>core::fmt::write (7 samples, 0.02%)</title><rect x="27.5467%" y="261" width="0.0225%" height="15" fill="rgb(210,31,22)" fg:x="8556" fg:w="7"/><text x="27.7967%" y="271.50"></text></g><g><title>core::fmt::run (7 samples, 0.02%)</title><rect x="27.5467%" y="245" width="0.0225%" height="15" fill="rgb(239,54,39)" fg:x="8556" fg:w="7"/><text x="27.7967%" y="255.50"></text></g><g><title>core::fmt::rt::Argument::fmt (7 samples, 0.02%)</title><rect x="27.5467%" y="229" width="0.0225%" height="15" fill="rgb(230,99,41)" fg:x="8556" fg:w="7"/><text x="27.7967%" y="239.50"></text></g><g><title>core::fmt::float::float_to_exponential_common_exact (7 samples, 0.02%)</title><rect x="27.5467%" y="213" width="0.0225%" height="15" fill="rgb(253,106,12)" fg:x="8556" fg:w="7"/><text x="27.7967%" y="223.50"></text></g><g><title>[test-truck] (9 samples, 0.03%)</title><rect x="27.5435%" y="293" width="0.0290%" height="15" fill="rgb(213,46,41)" fg:x="8555" fg:w="9"/><text x="27.7935%" y="303.50"></text></g><g><title>std::io::Write::write_fmt (9 samples, 0.03%)</title><rect x="27.5435%" y="277" width="0.0290%" height="15" fill="rgb(215,133,35)" fg:x="8555" fg:w="9"/><text x="27.7935%" y="287.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (6 samples, 0.02%)</title><rect x="27.5821%" y="213" width="0.0193%" height="15" fill="rgb(213,28,5)" fg:x="8567" fg:w="6"/><text x="27.8321%" y="223.50"></text></g><g><title>syscall (5 samples, 0.02%)</title><rect x="27.5853%" y="197" width="0.0161%" height="15" fill="rgb(215,77,49)" fg:x="8568" fg:w="5"/><text x="27.8353%" y="207.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.01%)</title><rect x="27.5885%" y="181" width="0.0129%" height="15" fill="rgb(248,100,22)" fg:x="8569" fg:w="4"/><text x="27.8385%" y="191.50"></text></g><g><title>do_syscall_64 (4 samples, 0.01%)</title><rect x="27.5885%" y="165" width="0.0129%" height="15" fill="rgb(208,67,9)" fg:x="8569" fg:w="4"/><text x="27.8385%" y="175.50"></text></g><g><title>[test-truck] (7 samples, 0.02%)</title><rect x="27.5821%" y="277" width="0.0225%" height="15" fill="rgb(219,133,21)" fg:x="8567" fg:w="7"/><text x="27.8321%" y="287.50"></text></g><g><title>std::sync::condvar::Condvar::wait (7 samples, 0.02%)</title><rect x="27.5821%" y="261" width="0.0225%" height="15" fill="rgb(246,46,29)" fg:x="8567" fg:w="7"/><text x="27.8321%" y="271.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (7 samples, 0.02%)</title><rect x="27.5821%" y="245" width="0.0225%" height="15" fill="rgb(246,185,52)" fg:x="8567" fg:w="7"/><text x="27.8321%" y="255.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_optional_timeout (7 samples, 0.02%)</title><rect x="27.5821%" y="229" width="0.0225%" height="15" fill="rgb(252,136,11)" fg:x="8567" fg:w="7"/><text x="27.8321%" y="239.50"></text></g><g><title>[unknown] (17 samples, 0.05%)</title><rect x="27.5724%" y="293" width="0.0547%" height="15" fill="rgb(219,138,53)" fg:x="8564" fg:w="17"/><text x="27.8224%" y="303.50"></text></g><g><title>[ld-linux-x86-64.so.2] (36 samples, 0.12%)</title><rect x="27.5370%" y="325" width="0.1159%" height="15" fill="rgb(211,51,23)" fg:x="8553" fg:w="36"/><text x="27.7870%" y="335.50"></text></g><g><title>std::rt::lang_start (36 samples, 0.12%)</title><rect x="27.5370%" y="309" width="0.1159%" height="15" fill="rgb(247,221,28)" fg:x="8553" fg:w="36"/><text x="27.7870%" y="319.50"></text></g><g><title>std::rt::lang_start_internal (5 samples, 0.02%)</title><rect x="27.6368%" y="293" width="0.0161%" height="15" fill="rgb(251,222,45)" fg:x="8584" fg:w="5"/><text x="27.8868%" y="303.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.02%)</title><rect x="27.6368%" y="277" width="0.0161%" height="15" fill="rgb(217,162,53)" fg:x="8584" fg:w="5"/><text x="27.8868%" y="287.50"></text></g><g><title>std::panicking::try (5 samples, 0.02%)</title><rect x="27.6368%" y="261" width="0.0161%" height="15" fill="rgb(229,93,14)" fg:x="8584" fg:w="5"/><text x="27.8868%" y="271.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.02%)</title><rect x="27.6368%" y="245" width="0.0161%" height="15" fill="rgb(209,67,49)" fg:x="8584" fg:w="5"/><text x="27.8868%" y="255.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (5 samples, 0.02%)</title><rect x="27.6368%" y="229" width="0.0161%" height="15" fill="rgb(213,87,29)" fg:x="8584" fg:w="5"/><text x="27.8868%" y="239.50"></text></g><g><title>std::rt::init (5 samples, 0.02%)</title><rect x="27.6368%" y="213" width="0.0161%" height="15" fill="rgb(205,151,52)" fg:x="8584" fg:w="5"/><text x="27.8868%" y="223.50"></text></g><g><title>std::sys::pal::unix::init (5 samples, 0.02%)</title><rect x="27.6368%" y="197" width="0.0161%" height="15" fill="rgb(253,215,39)" fg:x="8584" fg:w="5"/><text x="27.8868%" y="207.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::init (5 samples, 0.02%)</title><rect x="27.6368%" y="181" width="0.0161%" height="15" fill="rgb(221,220,41)" fg:x="8584" fg:w="5"/><text x="27.8868%" y="191.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::install_main_guard (5 samples, 0.02%)</title><rect x="27.6368%" y="165" width="0.0161%" height="15" fill="rgb(218,133,21)" fg:x="8584" fg:w="5"/><text x="27.8868%" y="175.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::get_stack_start_aligned (5 samples, 0.02%)</title><rect x="27.6368%" y="149" width="0.0161%" height="15" fill="rgb(221,193,43)" fg:x="8584" fg:w="5"/><text x="27.8868%" y="159.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::get_stack_start (5 samples, 0.02%)</title><rect x="27.6368%" y="133" width="0.0161%" height="15" fill="rgb(240,128,52)" fg:x="8584" fg:w="5"/><text x="27.8868%" y="143.50"></text></g><g><title>pthread_getattr_np (5 samples, 0.02%)</title><rect x="27.6368%" y="117" width="0.0161%" height="15" fill="rgb(253,114,12)" fg:x="8584" fg:w="5"/><text x="27.8868%" y="127.50"></text></g><g><title>fopen (5 samples, 0.02%)</title><rect x="27.6368%" y="101" width="0.0161%" height="15" fill="rgb(215,223,47)" fg:x="8584" fg:w="5"/><text x="27.8868%" y="111.50"></text></g><g><title>malloc (5 samples, 0.02%)</title><rect x="27.6368%" y="85" width="0.0161%" height="15" fill="rgb(248,225,23)" fg:x="8584" fg:w="5"/><text x="27.8868%" y="95.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="27.6368%" y="69" width="0.0161%" height="15" fill="rgb(250,108,0)" fg:x="8584" fg:w="5"/><text x="27.8868%" y="79.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (6 samples, 0.02%)</title><rect x="28.4031%" y="245" width="0.0193%" height="15" fill="rgb(228,208,7)" fg:x="8822" fg:w="6"/><text x="28.6531%" y="255.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4 samples, 0.01%)</title><rect x="28.4095%" y="229" width="0.0129%" height="15" fill="rgb(244,45,10)" fg:x="8824" fg:w="4"/><text x="28.6595%" y="239.50"></text></g><g><title>&lt;itertools::tuple_impl::TupleWindows&lt;I,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.02%)</title><rect x="28.4932%" y="245" width="0.0161%" height="15" fill="rgb(207,125,25)" fg:x="8850" fg:w="5"/><text x="28.7432%" y="255.50"></text></g><g><title>&lt;truck_modeling::geometry::Curve as truck_geotrait::traits::curve::BoundedCurve&gt;::range_tuple (4 samples, 0.01%)</title><rect x="28.5319%" y="245" width="0.0129%" height="15" fill="rgb(210,195,18)" fg:x="8862" fg:w="4"/><text x="28.7819%" y="255.50"></text></g><g><title>asm_exc_page_fault (4 samples, 0.01%)</title><rect x="28.5319%" y="229" width="0.0129%" height="15" fill="rgb(249,80,12)" fg:x="8862" fg:w="4"/><text x="28.7819%" y="239.50"></text></g><g><title>exc_page_fault (4 samples, 0.01%)</title><rect x="28.5319%" y="213" width="0.0129%" height="15" fill="rgb(221,65,9)" fg:x="8862" fg:w="4"/><text x="28.7819%" y="223.50"></text></g><g><title>do_user_addr_fault (4 samples, 0.01%)</title><rect x="28.5319%" y="197" width="0.0129%" height="15" fill="rgb(235,49,36)" fg:x="8862" fg:w="4"/><text x="28.7819%" y="207.50"></text></g><g><title>handle_mm_fault (4 samples, 0.01%)</title><rect x="28.5319%" y="181" width="0.0129%" height="15" fill="rgb(225,32,20)" fg:x="8862" fg:w="4"/><text x="28.7819%" y="191.50"></text></g><g><title>[test-truck] (4 samples, 0.01%)</title><rect x="28.5544%" y="245" width="0.0129%" height="15" fill="rgb(215,141,46)" fg:x="8869" fg:w="4"/><text x="28.8044%" y="255.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (4 samples, 0.01%)</title><rect x="28.5963%" y="245" width="0.0129%" height="15" fill="rgb(250,160,47)" fg:x="8882" fg:w="4"/><text x="28.8463%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (5 samples, 0.02%)</title><rect x="28.6252%" y="245" width="0.0161%" height="15" fill="rgb(216,222,40)" fg:x="8891" fg:w="5"/><text x="28.8752%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.02%)</title><rect x="28.6413%" y="245" width="0.0161%" height="15" fill="rgb(234,217,39)" fg:x="8896" fg:w="5"/><text x="28.8913%" y="255.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5 samples, 0.02%)</title><rect x="28.6703%" y="245" width="0.0161%" height="15" fill="rgb(207,178,40)" fg:x="8905" fg:w="5"/><text x="28.9203%" y="255.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (5 samples, 0.02%)</title><rect x="28.6929%" y="245" width="0.0161%" height="15" fill="rgb(221,136,13)" fg:x="8912" fg:w="5"/><text x="28.9429%" y="255.50"></text></g><g><title>core::fmt::Arguments::new_const (5 samples, 0.02%)</title><rect x="28.7411%" y="197" width="0.0161%" height="15" fill="rgb(249,199,10)" fg:x="8927" fg:w="5"/><text x="28.9911%" y="207.50"></text></g><g><title>core::ub_checks::is_aligned_and_not_null (11 samples, 0.04%)</title><rect x="28.7315%" y="229" width="0.0354%" height="15" fill="rgb(249,222,13)" fg:x="8924" fg:w="11"/><text x="28.9815%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_aligned_to (8 samples, 0.03%)</title><rect x="28.7411%" y="213" width="0.0258%" height="15" fill="rgb(244,185,38)" fg:x="8927" fg:w="8"/><text x="28.9911%" y="223.50"></text></g><g><title>core::slice::raw::from_raw_parts::precondition_check (15 samples, 0.05%)</title><rect x="28.7218%" y="245" width="0.0483%" height="15" fill="rgb(236,202,9)" fg:x="8921" fg:w="15"/><text x="28.9718%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicIsize::load (6 samples, 0.02%)</title><rect x="28.7701%" y="245" width="0.0193%" height="15" fill="rgb(250,229,37)" fg:x="8936" fg:w="6"/><text x="29.0201%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (11 samples, 0.04%)</title><rect x="28.8120%" y="245" width="0.0354%" height="15" fill="rgb(206,174,23)" fg:x="8949" fg:w="11"/><text x="29.0620%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_store (5 samples, 0.02%)</title><rect x="28.8538%" y="245" width="0.0161%" height="15" fill="rgb(211,33,43)" fg:x="8962" fg:w="5"/><text x="29.1038%" y="255.50"></text></g><g><title>core::sync::atomic::compiler_fence (4 samples, 0.01%)</title><rect x="28.8699%" y="245" width="0.0129%" height="15" fill="rgb(245,58,50)" fg:x="8967" fg:w="4"/><text x="29.1199%" y="255.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4 samples, 0.01%)</title><rect x="28.9569%" y="229" width="0.0129%" height="15" fill="rgb(244,68,36)" fg:x="8994" fg:w="4"/><text x="29.2069%" y="239.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (33 samples, 0.11%)</title><rect x="28.8828%" y="245" width="0.1062%" height="15" fill="rgb(232,229,15)" fg:x="8971" fg:w="33"/><text x="29.1328%" y="255.50"></text></g><g><title>crossbeam_epoch::internal::Local::unpin (4 samples, 0.01%)</title><rect x="29.0695%" y="245" width="0.0129%" height="15" fill="rgb(254,30,23)" fg:x="9029" fg:w="4"/><text x="29.3195%" y="255.50"></text></g><g><title>crossbeam_epoch::primitive::cell::UnsafeCell&lt;T&gt;::with (4 samples, 0.01%)</title><rect x="29.0824%" y="245" width="0.0129%" height="15" fill="rgb(235,160,14)" fg:x="9033" fg:w="4"/><text x="29.3324%" y="255.50"></text></g><g><title>rayon_core::latch::CoreLatch::probe (4 samples, 0.01%)</title><rect x="29.1017%" y="245" width="0.0129%" height="15" fill="rgb(212,155,44)" fg:x="9039" fg:w="4"/><text x="29.3517%" y="255.50"></text></g><g><title>rayon_core::latch::CoreLatch::wake_up (6 samples, 0.02%)</title><rect x="29.1146%" y="245" width="0.0193%" height="15" fill="rgb(226,2,50)" fg:x="9043" fg:w="6"/><text x="29.3646%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.02%)</title><rect x="29.1146%" y="229" width="0.0193%" height="15" fill="rgb(234,177,6)" fg:x="9043" fg:w="6"/><text x="29.3646%" y="239.50"></text></g><g><title>robust::orient2d (5 samples, 0.02%)</title><rect x="29.1565%" y="245" width="0.0161%" height="15" fill="rgb(217,24,9)" fg:x="9056" fg:w="5"/><text x="29.4065%" y="255.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (4 samples, 0.01%)</title><rect x="29.1726%" y="245" width="0.0129%" height="15" fill="rgb(220,13,46)" fg:x="9061" fg:w="4"/><text x="29.4226%" y="255.50"></text></g><g><title>spade::delaunay_core::dcel_operations::flip_cw (4 samples, 0.01%)</title><rect x="29.2305%" y="245" width="0.0129%" height="15" fill="rgb(239,221,27)" fg:x="9079" fg:w="4"/><text x="29.4805%" y="255.50"></text></g><g><title>spade::delaunay_core::handles::handle_defs::FixedHandleImpl&lt;Type,InnerOuter&gt;::new (10 samples, 0.03%)</title><rect x="29.2498%" y="245" width="0.0322%" height="15" fill="rgb(222,198,25)" fg:x="9085" fg:w="10"/><text x="29.4998%" y="255.50"></text></g><g><title>spade::delaunay_core::handles::handle_impls::&lt;impl spade::delaunay_core::handles::handle_defs::FixedHandleImpl&lt;spade::delaunay_core::handles::handle_defs::DirectedEdgeTag,spade::delaunay_core::handles::public_handles::InnerTag&gt;&gt;::as_undirected (7 samples, 0.02%)</title><rect x="29.3046%" y="245" width="0.0225%" height="15" fill="rgb(211,99,13)" fg:x="9102" fg:w="7"/><text x="29.5546%" y="255.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (7 samples, 0.02%)</title><rect x="29.3625%" y="245" width="0.0225%" height="15" fill="rgb(232,111,31)" fg:x="9120" fg:w="7"/><text x="29.6125%" y="255.50"></text></g><g><title>[unknown] (323 samples, 1.04%)</title><rect x="28.3677%" y="261" width="1.0399%" height="15" fill="rgb(245,82,37)" fg:x="8811" fg:w="323"/><text x="28.6177%" y="271.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5 samples, 0.02%)</title><rect x="29.4173%" y="261" width="0.0161%" height="15" fill="rgb(227,149,46)" fg:x="9137" fg:w="5"/><text x="29.6673%" y="271.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (5 samples, 0.02%)</title><rect x="29.4462%" y="261" width="0.0161%" height="15" fill="rgb(218,36,50)" fg:x="9146" fg:w="5"/><text x="29.6962%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.01%)</title><rect x="29.4688%" y="261" width="0.0129%" height="15" fill="rgb(226,80,48)" fg:x="9153" fg:w="4"/><text x="29.7188%" y="271.50"></text></g><g><title>core::sync::atomic::compiler_fence (4 samples, 0.01%)</title><rect x="29.4913%" y="261" width="0.0129%" height="15" fill="rgb(238,224,15)" fg:x="9160" fg:w="4"/><text x="29.7413%" y="271.50"></text></g><g><title>crossbeam_epoch::default::with_handle (8 samples, 0.03%)</title><rect x="29.5299%" y="261" width="0.0258%" height="15" fill="rgb(241,136,10)" fg:x="9172" fg:w="8"/><text x="29.7799%" y="271.50"></text></g><g><title>crossbeam_epoch::internal::Local::is_pinned (4 samples, 0.01%)</title><rect x="29.5654%" y="261" width="0.0129%" height="15" fill="rgb(208,32,45)" fg:x="9183" fg:w="4"/><text x="29.8154%" y="271.50"></text></g><g><title>crossbeam_epoch::internal::Local::unpin (6 samples, 0.02%)</title><rect x="29.5879%" y="261" width="0.0193%" height="15" fill="rgb(207,135,9)" fg:x="9190" fg:w="6"/><text x="29.8379%" y="271.50"></text></g><g><title>crossbeam_epoch::primitive::cell::UnsafeCell&lt;T&gt;::with (4 samples, 0.01%)</title><rect x="29.6072%" y="261" width="0.0129%" height="15" fill="rgb(206,86,44)" fg:x="9196" fg:w="4"/><text x="29.8572%" y="271.50"></text></g><g><title>rayon_core::registry::Registry::pop_injected_job (9 samples, 0.03%)</title><rect x="29.6233%" y="261" width="0.0290%" height="15" fill="rgb(245,177,15)" fg:x="9201" fg:w="9"/><text x="29.8733%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_load (9 samples, 0.03%)</title><rect x="29.6233%" y="245" width="0.0290%" height="15" fill="rgb(206,64,50)" fg:x="9201" fg:w="9"/><text x="29.8733%" y="255.50"></text></g><g><title>[unknown] (437 samples, 1.41%)</title><rect x="28.3033%" y="293" width="1.4070%" height="15" fill="rgb(234,36,40)" fg:x="8791" fg:w="437"/><text x="28.5533%" y="303.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (437 samples, 1.41%)</title><rect x="28.3033%" y="277" width="1.4070%" height="15" fill="rgb(213,64,8)" fg:x="8791" fg:w="437"/><text x="28.5533%" y="287.50"></text></g><g><title>mas_store_prealloc (4 samples, 0.01%)</title><rect x="29.7263%" y="53" width="0.0129%" height="15" fill="rgb(210,75,36)" fg:x="9233" fg:w="4"/><text x="29.9763%" y="63.50"></text></g><g><title>mas_wr_modify (4 samples, 0.01%)</title><rect x="29.7263%" y="37" width="0.0129%" height="15" fill="rgb(229,88,21)" fg:x="9233" fg:w="4"/><text x="29.9763%" y="47.50"></text></g><g><title>perf_event_mmap (6 samples, 0.02%)</title><rect x="29.7392%" y="53" width="0.0193%" height="15" fill="rgb(252,204,47)" fg:x="9237" fg:w="6"/><text x="29.9892%" y="63.50"></text></g><g><title>perf_iterate_sb (6 samples, 0.02%)</title><rect x="29.7392%" y="37" width="0.0193%" height="15" fill="rgb(208,77,27)" fg:x="9237" fg:w="6"/><text x="29.9892%" y="47.50"></text></g><g><title>do_mmap (12 samples, 0.04%)</title><rect x="29.7231%" y="85" width="0.0386%" height="15" fill="rgb(221,76,26)" fg:x="9232" fg:w="12"/><text x="29.9731%" y="95.50"></text></g><g><title>mmap_region (11 samples, 0.04%)</title><rect x="29.7263%" y="69" width="0.0354%" height="15" fill="rgb(225,139,18)" fg:x="9233" fg:w="11"/><text x="29.9763%" y="79.50"></text></g><g><title>__mmap (14 samples, 0.05%)</title><rect x="29.7231%" y="149" width="0.0451%" height="15" fill="rgb(230,137,11)" fg:x="9232" fg:w="14"/><text x="29.9731%" y="159.50"></text></g><g><title>entry_SYSCALL_64 (14 samples, 0.05%)</title><rect x="29.7231%" y="133" width="0.0451%" height="15" fill="rgb(212,28,1)" fg:x="9232" fg:w="14"/><text x="29.9731%" y="143.50"></text></g><g><title>do_syscall_64 (14 samples, 0.05%)</title><rect x="29.7231%" y="117" width="0.0451%" height="15" fill="rgb(248,164,17)" fg:x="9232" fg:w="14"/><text x="29.9731%" y="127.50"></text></g><g><title>vm_mmap_pgoff (14 samples, 0.05%)</title><rect x="29.7231%" y="101" width="0.0451%" height="15" fill="rgb(222,171,42)" fg:x="9232" fg:w="14"/><text x="29.9731%" y="111.50"></text></g><g><title>[libc.so.6] (19 samples, 0.06%)</title><rect x="29.7231%" y="165" width="0.0612%" height="15" fill="rgb(243,84,45)" fg:x="9232" fg:w="19"/><text x="29.9731%" y="175.50"></text></g><g><title>[libc.so.6] (463 samples, 1.49%)</title><rect x="28.2968%" y="309" width="1.4907%" height="15" fill="rgb(252,49,23)" fg:x="8789" fg:w="463"/><text x="28.5468%" y="319.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (23 samples, 0.07%)</title><rect x="29.7135%" y="293" width="0.0741%" height="15" fill="rgb(215,19,7)" fg:x="9229" fg:w="23"/><text x="29.9635%" y="303.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::Handler::new (22 samples, 0.07%)</title><rect x="29.7167%" y="277" width="0.0708%" height="15" fill="rgb(238,81,41)" fg:x="9230" fg:w="22"/><text x="29.9667%" y="287.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::make_handler (22 samples, 0.07%)</title><rect x="29.7167%" y="261" width="0.0708%" height="15" fill="rgb(210,199,37)" fg:x="9230" fg:w="22"/><text x="29.9667%" y="271.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::current_guard (21 samples, 0.07%)</title><rect x="29.7199%" y="245" width="0.0676%" height="15" fill="rgb(244,192,49)" fg:x="9231" fg:w="21"/><text x="29.9699%" y="255.50"></text></g><g><title>pthread_getattr_np (21 samples, 0.07%)</title><rect x="29.7199%" y="229" width="0.0676%" height="15" fill="rgb(226,211,11)" fg:x="9231" fg:w="21"/><text x="29.9699%" y="239.50"></text></g><g><title>malloc (21 samples, 0.07%)</title><rect x="29.7199%" y="213" width="0.0676%" height="15" fill="rgb(236,162,54)" fg:x="9231" fg:w="21"/><text x="29.9699%" y="223.50"></text></g><g><title>[libc.so.6] (20 samples, 0.06%)</title><rect x="29.7231%" y="197" width="0.0644%" height="15" fill="rgb(220,229,9)" fg:x="9232" fg:w="20"/><text x="29.9731%" y="207.50"></text></g><g><title>[libc.so.6] (20 samples, 0.06%)</title><rect x="29.7231%" y="181" width="0.0644%" height="15" fill="rgb(250,87,22)" fg:x="9232" fg:w="20"/><text x="29.9731%" y="191.50"></text></g><g><title>[libc.so.6] (668 samples, 2.15%)</title><rect x="27.6529%" y="325" width="2.1507%" height="15" fill="rgb(239,43,17)" fg:x="8589" fg:w="668"/><text x="27.9029%" y="335.50">[..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.02%)</title><rect x="29.8133%" y="309" width="0.0161%" height="15" fill="rgb(231,177,25)" fg:x="9260" fg:w="5"/><text x="30.0633%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (5 samples, 0.02%)</title><rect x="29.8133%" y="293" width="0.0161%" height="15" fill="rgb(219,179,1)" fg:x="9260" fg:w="5"/><text x="30.0633%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.02%)</title><rect x="29.8133%" y="277" width="0.0161%" height="15" fill="rgb(238,219,53)" fg:x="9260" fg:w="5"/><text x="30.0633%" y="287.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="29.8133%" y="261" width="0.0161%" height="15" fill="rgb(232,167,36)" fg:x="9260" fg:w="5"/><text x="30.0633%" y="271.50"></text></g><g><title>&lt;cgmath::vector::Vector4&lt;S&gt; as core::ops::arith::Mul&lt;S&gt;&gt;::mul (7 samples, 0.02%)</title><rect x="29.8519%" y="309" width="0.0225%" height="15" fill="rgb(244,19,51)" fg:x="9272" fg:w="7"/><text x="30.1019%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (9 samples, 0.03%)</title><rect x="29.8744%" y="309" width="0.0290%" height="15" fill="rgb(224,6,22)" fg:x="9279" fg:w="9"/><text x="30.1244%" y="319.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (8 samples, 0.03%)</title><rect x="29.8777%" y="293" width="0.0258%" height="15" fill="rgb(224,145,5)" fg:x="9280" fg:w="8"/><text x="30.1277%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (8 samples, 0.03%)</title><rect x="29.8777%" y="277" width="0.0258%" height="15" fill="rgb(234,130,49)" fg:x="9280" fg:w="8"/><text x="30.1277%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (26 samples, 0.08%)</title><rect x="29.9388%" y="309" width="0.0837%" height="15" fill="rgb(254,6,2)" fg:x="9299" fg:w="26"/><text x="30.1888%" y="319.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (4 samples, 0.01%)</title><rect x="30.0097%" y="293" width="0.0129%" height="15" fill="rgb(208,96,46)" fg:x="9321" fg:w="4"/><text x="30.2597%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (4 samples, 0.01%)</title><rect x="30.0097%" y="277" width="0.0129%" height="15" fill="rgb(239,3,39)" fg:x="9321" fg:w="4"/><text x="30.2597%" y="287.50"></text></g><g><title>core::ub_checks::is_aligned_and_not_null (9 samples, 0.03%)</title><rect x="30.1320%" y="293" width="0.0290%" height="15" fill="rgb(233,210,1)" fg:x="9359" fg:w="9"/><text x="30.3820%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_aligned_to (9 samples, 0.03%)</title><rect x="30.1320%" y="277" width="0.0290%" height="15" fill="rgb(244,137,37)" fg:x="9359" fg:w="9"/><text x="30.3820%" y="287.50"></text></g><g><title>core::fmt::Arguments::new_const (9 samples, 0.03%)</title><rect x="30.1320%" y="261" width="0.0290%" height="15" fill="rgb(240,136,2)" fg:x="9359" fg:w="9"/><text x="30.3820%" y="271.50"></text></g><g><title>core::slice::raw::from_raw_parts::precondition_check (48 samples, 0.15%)</title><rect x="30.0644%" y="309" width="0.1545%" height="15" fill="rgb(239,18,37)" fg:x="9338" fg:w="48"/><text x="30.3144%" y="319.50"></text></g><g><title>core::ub_checks::is_valid_allocation_size (18 samples, 0.06%)</title><rect x="30.1610%" y="293" width="0.0580%" height="15" fill="rgb(218,185,22)" fg:x="9368" fg:w="18"/><text x="30.4110%" y="303.50"></text></g><g><title>[test-truck] (152 samples, 0.49%)</title><rect x="29.8100%" y="325" width="0.4894%" height="15" fill="rgb(225,218,4)" fg:x="9259" fg:w="152"/><text x="30.0600%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (6 samples, 0.02%)</title><rect x="30.3574%" y="277" width="0.0193%" height="15" fill="rgb(230,182,32)" fg:x="9429" fg:w="6"/><text x="30.6074%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (49 samples, 0.16%)</title><rect x="30.3284%" y="293" width="0.1578%" height="15" fill="rgb(242,56,43)" fg:x="9420" fg:w="49"/><text x="30.5784%" y="303.50"></text></g><g><title>core::slice::raw::from_raw_parts (34 samples, 0.11%)</title><rect x="30.3767%" y="277" width="0.1095%" height="15" fill="rgb(233,99,24)" fg:x="9435" fg:w="34"/><text x="30.6267%" y="287.50"></text></g><g><title>core::ptr::slice_from_raw_parts (9 samples, 0.03%)</title><rect x="30.4572%" y="261" width="0.0290%" height="15" fill="rgb(234,209,42)" fg:x="9460" fg:w="9"/><text x="30.7072%" y="271.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (9 samples, 0.03%)</title><rect x="30.4572%" y="245" width="0.0290%" height="15" fill="rgb(227,7,12)" fg:x="9460" fg:w="9"/><text x="30.7072%" y="255.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;&amp;T&gt;&gt;::from (15 samples, 0.05%)</title><rect x="30.5248%" y="261" width="0.0483%" height="15" fill="rgb(245,203,43)" fg:x="9481" fg:w="15"/><text x="30.7748%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (11 samples, 0.04%)</title><rect x="30.5731%" y="261" width="0.0354%" height="15" fill="rgb(238,205,33)" fg:x="9496" fg:w="11"/><text x="30.8231%" y="271.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (104 samples, 0.33%)</title><rect x="30.2994%" y="309" width="0.3348%" height="15" fill="rgb(231,56,7)" fg:x="9411" fg:w="104"/><text x="30.5494%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (46 samples, 0.15%)</title><rect x="30.4862%" y="293" width="0.1481%" height="15" fill="rgb(244,186,29)" fg:x="9469" fg:w="46"/><text x="30.7362%" y="303.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (46 samples, 0.15%)</title><rect x="30.4862%" y="277" width="0.1481%" height="15" fill="rgb(234,111,31)" fg:x="9469" fg:w="46"/><text x="30.7362%" y="287.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::cast (5 samples, 0.02%)</title><rect x="30.6182%" y="261" width="0.0161%" height="15" fill="rgb(241,149,10)" fg:x="9510" fg:w="5"/><text x="30.8682%" y="271.50"></text></g><g><title>&lt;&amp;f64 as core::ops::arith::Sub&lt;&amp;f64&gt;&gt;::sub (65 samples, 0.21%)</title><rect x="30.6439%" y="309" width="0.2093%" height="15" fill="rgb(249,206,44)" fg:x="9518" fg:w="65"/><text x="30.8939%" y="319.50"></text></g><g><title>&lt;f64 as core::ops::arith::Sub&gt;::sub (17 samples, 0.05%)</title><rect x="30.7985%" y="293" width="0.0547%" height="15" fill="rgb(251,153,30)" fg:x="9566" fg:w="17"/><text x="31.0485%" y="303.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.06%)</title><rect x="30.8628%" y="309" width="0.0644%" height="15" fill="rgb(239,152,38)" fg:x="9586" fg:w="20"/><text x="31.1128%" y="319.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (12 samples, 0.04%)</title><rect x="30.9272%" y="309" width="0.0386%" height="15" fill="rgb(249,139,47)" fg:x="9606" fg:w="12"/><text x="31.1772%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (28 samples, 0.09%)</title><rect x="31.0270%" y="293" width="0.0901%" height="15" fill="rgb(244,64,35)" fg:x="9637" fg:w="28"/><text x="31.2770%" y="303.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (48 samples, 0.15%)</title><rect x="30.9659%" y="309" width="0.1545%" height="15" fill="rgb(216,46,15)" fg:x="9618" fg:w="48"/><text x="31.2159%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.02%)</title><rect x="31.1751%" y="293" width="0.0225%" height="15" fill="rgb(250,74,19)" fg:x="9683" fg:w="7"/><text x="31.4251%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (26 samples, 0.08%)</title><rect x="31.1236%" y="309" width="0.0837%" height="15" fill="rgb(249,42,33)" fg:x="9667" fg:w="26"/><text x="31.3736%" y="319.50"></text></g><g><title>&lt;cgmath::vector::Vector4&lt;S&gt; as core::ops::arith::Mul&lt;S&gt;&gt;::mul (13 samples, 0.04%)</title><rect x="31.3780%" y="293" width="0.0419%" height="15" fill="rgb(242,149,17)" fg:x="9746" fg:w="13"/><text x="31.6280%" y="303.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (8 samples, 0.03%)</title><rect x="31.4198%" y="293" width="0.0258%" height="15" fill="rgb(244,29,21)" fg:x="9759" fg:w="8"/><text x="31.6698%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (77 samples, 0.25%)</title><rect x="31.2073%" y="309" width="0.2479%" height="15" fill="rgb(220,130,37)" fg:x="9693" fg:w="77"/><text x="31.4573%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::non_null (9 samples, 0.03%)</title><rect x="31.5454%" y="293" width="0.0290%" height="15" fill="rgb(211,67,2)" fg:x="9798" fg:w="9"/><text x="31.7954%" y="303.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (4 samples, 0.01%)</title><rect x="31.5744%" y="293" width="0.0129%" height="15" fill="rgb(235,68,52)" fg:x="9807" fg:w="4"/><text x="31.8244%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (49 samples, 0.16%)</title><rect x="31.4552%" y="309" width="0.1578%" height="15" fill="rgb(246,142,3)" fg:x="9770" fg:w="49"/><text x="31.7052%" y="319.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (5 samples, 0.02%)</title><rect x="31.5969%" y="293" width="0.0161%" height="15" fill="rgb(241,25,7)" fg:x="9814" fg:w="5"/><text x="31.8469%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (17 samples, 0.05%)</title><rect x="31.7418%" y="293" width="0.0547%" height="15" fill="rgb(242,119,39)" fg:x="9859" fg:w="17"/><text x="31.9918%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (11 samples, 0.04%)</title><rect x="31.7611%" y="277" width="0.0354%" height="15" fill="rgb(241,98,45)" fg:x="9865" fg:w="11"/><text x="32.0111%" y="287.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (5 samples, 0.02%)</title><rect x="31.7804%" y="261" width="0.0161%" height="15" fill="rgb(254,28,30)" fg:x="9871" fg:w="5"/><text x="32.0304%" y="271.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (5 samples, 0.02%)</title><rect x="31.7804%" y="245" width="0.0161%" height="15" fill="rgb(241,142,54)" fg:x="9871" fg:w="5"/><text x="32.0304%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (67 samples, 0.22%)</title><rect x="31.6130%" y="309" width="0.2157%" height="15" fill="rgb(222,85,15)" fg:x="9819" fg:w="67"/><text x="31.8630%" y="319.50"></text></g><g><title>core::slice::raw::from_raw_parts (10 samples, 0.03%)</title><rect x="31.7965%" y="293" width="0.0322%" height="15" fill="rgb(210,85,47)" fg:x="9876" fg:w="10"/><text x="32.0465%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (165 samples, 0.53%)</title><rect x="32.7302%" y="277" width="0.5312%" height="15" fill="rgb(224,206,25)" fg:x="10166" fg:w="165"/><text x="32.9802%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (138 samples, 0.44%)</title><rect x="32.8171%" y="261" width="0.4443%" height="15" fill="rgb(243,201,19)" fg:x="10193" fg:w="138"/><text x="33.0671%" y="271.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (35 samples, 0.11%)</title><rect x="33.1487%" y="245" width="0.1127%" height="15" fill="rgb(236,59,4)" fg:x="10296" fg:w="35"/><text x="33.3987%" y="255.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (35 samples, 0.11%)</title><rect x="33.1487%" y="229" width="0.1127%" height="15" fill="rgb(254,179,45)" fg:x="10296" fg:w="35"/><text x="33.3987%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (466 samples, 1.50%)</title><rect x="32.2923%" y="293" width="1.5003%" height="15" fill="rgb(226,14,10)" fg:x="10030" fg:w="466"/><text x="32.5423%" y="303.50"></text></g><g><title>core::slice::raw::from_raw_parts (165 samples, 0.53%)</title><rect x="33.2614%" y="277" width="0.5312%" height="15" fill="rgb(244,27,41)" fg:x="10331" fg:w="165"/><text x="33.5114%" y="287.50"></text></g><g><title>core::ptr::slice_from_raw_parts (33 samples, 0.11%)</title><rect x="33.6864%" y="261" width="0.1062%" height="15" fill="rgb(235,35,32)" fg:x="10463" fg:w="33"/><text x="33.9364%" y="271.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (33 samples, 0.11%)</title><rect x="33.6864%" y="245" width="0.1062%" height="15" fill="rgb(218,68,31)" fg:x="10463" fg:w="33"/><text x="33.9364%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (873 samples, 2.81%)</title><rect x="31.8352%" y="309" width="2.8107%" height="15" fill="rgb(207,120,37)" fg:x="9888" fg:w="873"/><text x="32.0852%" y="319.50">&lt;a..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (265 samples, 0.85%)</title><rect x="33.7927%" y="293" width="0.8532%" height="15" fill="rgb(227,98,0)" fg:x="10496" fg:w="265"/><text x="34.0427%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (15 samples, 0.05%)</title><rect x="34.9292%" y="277" width="0.0483%" height="15" fill="rgb(207,7,3)" fg:x="10849" fg:w="15"/><text x="35.1792%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (12 samples, 0.04%)</title><rect x="34.9388%" y="261" width="0.0386%" height="15" fill="rgb(206,98,19)" fg:x="10852" fg:w="12"/><text x="35.1888%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (37 samples, 0.12%)</title><rect x="34.8809%" y="293" width="0.1191%" height="15" fill="rgb(217,5,26)" fg:x="10834" fg:w="37"/><text x="35.1309%" y="303.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (7 samples, 0.02%)</title><rect x="34.9775%" y="277" width="0.0225%" height="15" fill="rgb(235,190,38)" fg:x="10864" fg:w="7"/><text x="35.2275%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (146 samples, 0.47%)</title><rect x="34.6458%" y="309" width="0.4701%" height="15" fill="rgb(247,86,24)" fg:x="10761" fg:w="146"/><text x="34.8958%" y="319.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (36 samples, 0.12%)</title><rect x="35.0000%" y="293" width="0.1159%" height="15" fill="rgb(205,101,16)" fg:x="10871" fg:w="36"/><text x="35.2500%" y="303.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (19 samples, 0.06%)</title><rect x="35.1159%" y="309" width="0.0612%" height="15" fill="rgb(246,168,33)" fg:x="10907" fg:w="19"/><text x="35.3659%" y="319.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (5 samples, 0.02%)</title><rect x="35.1610%" y="293" width="0.0161%" height="15" fill="rgb(231,114,1)" fg:x="10921" fg:w="5"/><text x="35.4110%" y="303.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (25 samples, 0.08%)</title><rect x="35.1867%" y="309" width="0.0805%" height="15" fill="rgb(207,184,53)" fg:x="10929" fg:w="25"/><text x="35.4367%" y="319.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (7 samples, 0.02%)</title><rect x="35.2447%" y="293" width="0.0225%" height="15" fill="rgb(224,95,51)" fg:x="10947" fg:w="7"/><text x="35.4947%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (5 samples, 0.02%)</title><rect x="35.2511%" y="277" width="0.0161%" height="15" fill="rgb(212,188,45)" fg:x="10949" fg:w="5"/><text x="35.5011%" y="287.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.05%)</title><rect x="35.2704%" y="309" width="0.0451%" height="15" fill="rgb(223,154,38)" fg:x="10955" fg:w="14"/><text x="35.5204%" y="319.50"></text></g><g><title>&lt;cgmath::point::Point3&lt;S&gt; as cgmath::structure::EuclideanSpace&gt;::from_vec (12 samples, 0.04%)</title><rect x="35.3220%" y="309" width="0.0386%" height="15" fill="rgb(251,22,52)" fg:x="10971" fg:w="12"/><text x="35.5720%" y="319.50"></text></g><g><title>core::slice::raw::from_raw_parts::precondition_check (4 samples, 0.01%)</title><rect x="35.3477%" y="293" width="0.0129%" height="15" fill="rgb(229,209,22)" fg:x="10979" fg:w="4"/><text x="35.5977%" y="303.50"></text></g><g><title>&lt;cgmath::point::Point3&lt;S&gt; as cgmath::structure::MetricSpace&gt;::distance2 (28 samples, 0.09%)</title><rect x="35.3606%" y="309" width="0.0901%" height="15" fill="rgb(234,138,34)" fg:x="10983" fg:w="28"/><text x="35.6106%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (6 samples, 0.02%)</title><rect x="35.6536%" y="293" width="0.0193%" height="15" fill="rgb(212,95,11)" fg:x="11074" fg:w="6"/><text x="35.9036%" y="303.50"></text></g><g><title>&lt;cgmath::point::Point3&lt;S&gt; as core::ops::arith::Sub&gt;::sub (71 samples, 0.23%)</title><rect x="35.4507%" y="309" width="0.2286%" height="15" fill="rgb(240,179,47)" fg:x="11011" fg:w="71"/><text x="35.7007%" y="319.50"></text></g><g><title>&lt;cgmath::vector::Vector3&lt;S&gt; as cgmath::structure::Array&gt;::sum (10 samples, 0.03%)</title><rect x="35.6825%" y="309" width="0.0322%" height="15" fill="rgb(240,163,11)" fg:x="11083" fg:w="10"/><text x="35.9325%" y="319.50"></text></g><g><title>&lt;cgmath::vector::Vector3&lt;S&gt; as cgmath::structure::ElementWise&gt;::mul_element_wise (19 samples, 0.06%)</title><rect x="35.7147%" y="309" width="0.0612%" height="15" fill="rgb(236,37,12)" fg:x="11093" fg:w="19"/><text x="35.9647%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (5 samples, 0.02%)</title><rect x="35.8049%" y="293" width="0.0161%" height="15" fill="rgb(232,164,16)" fg:x="11121" fg:w="5"/><text x="36.0549%" y="303.50"></text></g><g><title>&lt;cgmath::vector::Vector3&lt;S&gt; as cgmath::structure::InnerSpace&gt;::dot (17 samples, 0.05%)</title><rect x="35.7759%" y="309" width="0.0547%" height="15" fill="rgb(244,205,15)" fg:x="11112" fg:w="17"/><text x="36.0259%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (9 samples, 0.03%)</title><rect x="35.9337%" y="293" width="0.0290%" height="15" fill="rgb(223,117,47)" fg:x="11161" fg:w="9"/><text x="36.1837%" y="303.50"></text></g><g><title>core::ub_checks::is_aligned_and_not_null (6 samples, 0.02%)</title><rect x="35.9691%" y="277" width="0.0193%" height="15" fill="rgb(244,107,35)" fg:x="11172" fg:w="6"/><text x="36.2191%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_aligned_to (6 samples, 0.02%)</title><rect x="35.9691%" y="261" width="0.0193%" height="15" fill="rgb(205,140,8)" fg:x="11172" fg:w="6"/><text x="36.2191%" y="271.50"></text></g><g><title>core::fmt::Arguments::new_const (6 samples, 0.02%)</title><rect x="35.9691%" y="245" width="0.0193%" height="15" fill="rgb(228,84,46)" fg:x="11172" fg:w="6"/><text x="36.2191%" y="255.50"></text></g><g><title>&lt;cgmath::vector::Vector3&lt;S&gt; as core::ops::arith::Div&lt;S&gt;&gt;::div (56 samples, 0.18%)</title><rect x="35.8307%" y="309" width="0.1803%" height="15" fill="rgb(254,188,9)" fg:x="11129" fg:w="56"/><text x="36.0807%" y="319.50"></text></g><g><title>core::slice::raw::from_raw_parts::precondition_check (15 samples, 0.05%)</title><rect x="35.9627%" y="293" width="0.0483%" height="15" fill="rgb(206,112,54)" fg:x="11170" fg:w="15"/><text x="36.2127%" y="303.50"></text></g><g><title>core::ub_checks::is_valid_allocation_size (7 samples, 0.02%)</title><rect x="35.9884%" y="277" width="0.0225%" height="15" fill="rgb(216,84,49)" fg:x="11178" fg:w="7"/><text x="36.2384%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (9 samples, 0.03%)</title><rect x="37.7270%" y="293" width="0.0290%" height="15" fill="rgb(214,194,35)" fg:x="11718" fg:w="9"/><text x="37.9770%" y="303.50"></text></g><g><title>asm_sysvec_reschedule_ipi (4 samples, 0.01%)</title><rect x="37.7592%" y="293" width="0.0129%" height="15" fill="rgb(249,28,3)" fg:x="11728" fg:w="4"/><text x="38.0092%" y="303.50"></text></g><g><title>irqentry_exit_to_user_mode (4 samples, 0.01%)</title><rect x="37.7592%" y="277" width="0.0129%" height="15" fill="rgb(222,56,52)" fg:x="11728" fg:w="4"/><text x="38.0092%" y="287.50"></text></g><g><title>core::ub_checks::is_aligned_and_not_null (12 samples, 0.04%)</title><rect x="37.8075%" y="277" width="0.0386%" height="15" fill="rgb(245,217,50)" fg:x="11743" fg:w="12"/><text x="38.0575%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_aligned_to (12 samples, 0.04%)</title><rect x="37.8075%" y="261" width="0.0386%" height="15" fill="rgb(213,201,24)" fg:x="11743" fg:w="12"/><text x="38.0575%" y="271.50"></text></g><g><title>core::fmt::Arguments::new_const (12 samples, 0.04%)</title><rect x="37.8075%" y="245" width="0.0386%" height="15" fill="rgb(248,116,28)" fg:x="11743" fg:w="12"/><text x="38.0575%" y="255.50"></text></g><g><title>core::slice::raw::from_raw_parts::precondition_check (37 samples, 0.12%)</title><rect x="37.7721%" y="293" width="0.1191%" height="15" fill="rgb(219,72,43)" fg:x="11732" fg:w="37"/><text x="38.0221%" y="303.50"></text></g><g><title>core::ub_checks::is_valid_allocation_size (14 samples, 0.05%)</title><rect x="37.8461%" y="277" width="0.0451%" height="15" fill="rgb(209,138,14)" fg:x="11755" fg:w="14"/><text x="38.0961%" y="287.50"></text></g><g><title>&lt;cgmath::vector::Vector4&lt;S&gt; as core::ops::arith::Add&gt;::add (585 samples, 1.88%)</title><rect x="36.0142%" y="309" width="1.8835%" height="15" fill="rgb(222,18,33)" fg:x="11186" fg:w="585"/><text x="36.2642%" y="319.50">&lt;..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (4 samples, 0.01%)</title><rect x="39.4591%" y="293" width="0.0129%" height="15" fill="rgb(213,199,7)" fg:x="12256" fg:w="4"/><text x="39.7091%" y="303.50"></text></g><g><title>&lt;cgmath::vector::Vector4&lt;S&gt; as core::ops::arith::Mul&lt;S&gt;&gt;::mul (500 samples, 1.61%)</title><rect x="37.8976%" y="309" width="1.6098%" height="15" fill="rgb(250,110,10)" fg:x="11771" fg:w="500"/><text x="38.1476%" y="319.50"></text></g><g><title>core::slice::raw::from_raw_parts::precondition_check (9 samples, 0.03%)</title><rect x="39.4784%" y="293" width="0.0290%" height="15" fill="rgb(248,123,6)" fg:x="12262" fg:w="9"/><text x="39.7284%" y="303.50"></text></g><g><title>core::ub_checks::is_valid_allocation_size (4 samples, 0.01%)</title><rect x="39.4945%" y="277" width="0.0129%" height="15" fill="rgb(206,91,31)" fg:x="12267" fg:w="4"/><text x="39.7445%" y="287.50"></text></g><g><title>&lt;cgmath::vector::Vector4&lt;S&gt; as core::ops::arith::Sub&gt;::sub (4 samples, 0.01%)</title><rect x="39.5074%" y="309" width="0.0129%" height="15" fill="rgb(211,154,13)" fg:x="12271" fg:w="4"/><text x="39.7574%" y="319.50"></text></g><g><title>&lt;cgmath::vector::Vector4&lt;S&gt; as core::ops::index::Index&lt;usize&gt;&gt;::index (12 samples, 0.04%)</title><rect x="39.5203%" y="309" width="0.0386%" height="15" fill="rgb(225,148,7)" fg:x="12275" fg:w="12"/><text x="39.7703%" y="319.50"></text></g><g><title>&lt;cgmath::vector::Vector4&lt;S&gt; as num_traits::identities::Zero&gt;::zero (4 samples, 0.01%)</title><rect x="39.5589%" y="309" width="0.0129%" height="15" fill="rgb(220,160,43)" fg:x="12287" fg:w="4"/><text x="39.8089%" y="319.50"></text></g><g><title>core::ub_checks::is_aligned_and_not_null (4 samples, 0.01%)</title><rect x="39.6137%" y="277" width="0.0129%" height="15" fill="rgb(213,52,39)" fg:x="12304" fg:w="4"/><text x="39.8637%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_aligned_to (4 samples, 0.01%)</title><rect x="39.6137%" y="261" width="0.0129%" height="15" fill="rgb(243,137,7)" fg:x="12304" fg:w="4"/><text x="39.8637%" y="271.50"></text></g><g><title>core::fmt::Arguments::new_const (4 samples, 0.01%)</title><rect x="39.6137%" y="245" width="0.0129%" height="15" fill="rgb(230,79,13)" fg:x="12304" fg:w="4"/><text x="39.8637%" y="255.50"></text></g><g><title>core::slice::raw::from_raw_parts::precondition_check (5 samples, 0.02%)</title><rect x="39.6137%" y="293" width="0.0161%" height="15" fill="rgb(247,105,23)" fg:x="12304" fg:w="5"/><text x="39.8637%" y="303.50"></text></g><g><title>&lt;cgmath::vector::Vector4&lt;S&gt; as truck_base::cgmath_extend_traits::control_point::ControlPoint&lt;S&gt;&gt;::origin (19 samples, 0.06%)</title><rect x="39.5718%" y="309" width="0.0612%" height="15" fill="rgb(223,179,41)" fg:x="12291" fg:w="19"/><text x="39.8218%" y="319.50"></text></g><g><title>&lt;cgmath::vector::Vector4&lt;S&gt; as truck_base::cgmath_extend_traits::control_point::ControlPoint&lt;S&gt;&gt;::to_vec (31 samples, 0.10%)</title><rect x="39.6330%" y="309" width="0.0998%" height="15" fill="rgb(218,9,34)" fg:x="12310" fg:w="31"/><text x="39.8830%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.01%)</title><rect x="39.7392%" y="309" width="0.0129%" height="15" fill="rgb(222,106,8)" fg:x="12343" fg:w="4"/><text x="39.9892%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (17 samples, 0.05%)</title><rect x="39.7521%" y="309" width="0.0547%" height="15" fill="rgb(211,220,0)" fg:x="12347" fg:w="17"/><text x="40.0021%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (16 samples, 0.05%)</title><rect x="41.4456%" y="293" width="0.0515%" height="15" fill="rgb(229,52,16)" fg:x="12873" fg:w="16"/><text x="41.6956%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (4 samples, 0.01%)</title><rect x="41.4971%" y="293" width="0.0129%" height="15" fill="rgb(212,155,18)" fg:x="12889" fg:w="4"/><text x="41.7471%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (16 samples, 0.05%)</title><rect x="42.0058%" y="261" width="0.0515%" height="15" fill="rgb(242,21,14)" fg:x="13047" fg:w="16"/><text x="42.2558%" y="271.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (168 samples, 0.54%)</title><rect x="41.5196%" y="293" width="0.5409%" height="15" fill="rgb(222,19,48)" fg:x="12896" fg:w="168"/><text x="41.7696%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (168 samples, 0.54%)</title><rect x="41.5196%" y="277" width="0.5409%" height="15" fill="rgb(232,45,27)" fg:x="12896" fg:w="168"/><text x="41.7696%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr::precondition_check (7 samples, 0.02%)</title><rect x="42.0605%" y="293" width="0.0225%" height="15" fill="rgb(249,103,42)" fg:x="13064" fg:w="7"/><text x="42.3105%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (703 samples, 2.26%)</title><rect x="39.8261%" y="309" width="2.2634%" height="15" fill="rgb(246,81,33)" fg:x="12370" fg:w="703"/><text x="40.0761%" y="319.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::get_unchecked (222 samples, 0.71%)</title><rect x="42.0895%" y="309" width="0.7147%" height="15" fill="rgb(252,33,42)" fg:x="13073" fg:w="222"/><text x="42.3395%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (119 samples, 0.38%)</title><rect x="42.8042%" y="309" width="0.3831%" height="15" fill="rgb(209,212,41)" fg:x="13295" fg:w="119"/><text x="43.0542%" y="319.50"></text></g><g><title>core::cmp::min (27 samples, 0.09%)</title><rect x="43.1005%" y="293" width="0.0869%" height="15" fill="rgb(207,154,6)" fg:x="13387" fg:w="27"/><text x="43.3505%" y="303.50"></text></g><g><title>core::cmp::Ord::min (27 samples, 0.09%)</title><rect x="43.1005%" y="277" width="0.0869%" height="15" fill="rgb(223,64,47)" fg:x="13387" fg:w="27"/><text x="43.3505%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::size_hint (74 samples, 0.24%)</title><rect x="43.1874%" y="309" width="0.2382%" height="15" fill="rgb(211,161,38)" fg:x="13414" fg:w="74"/><text x="43.4374%" y="319.50"></text></g><g><title>core::cmp::min (4 samples, 0.01%)</title><rect x="43.4127%" y="293" width="0.0129%" height="15" fill="rgb(219,138,40)" fg:x="13484" fg:w="4"/><text x="43.6627%" y="303.50"></text></g><g><title>core::cmp::Ord::min (4 samples, 0.01%)</title><rect x="43.4127%" y="277" width="0.0129%" height="15" fill="rgb(241,228,46)" fg:x="13484" fg:w="4"/><text x="43.6627%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 0.05%)</title><rect x="43.4256%" y="309" width="0.0547%" height="15" fill="rgb(223,209,38)" fg:x="13488" fg:w="17"/><text x="43.6756%" y="319.50"></text></g><g><title>core::mem::replace (7 samples, 0.02%)</title><rect x="43.9987%" y="293" width="0.0225%" height="15" fill="rgb(236,164,45)" fg:x="13666" fg:w="7"/><text x="44.2487%" y="303.50"></text></g><g><title>core::ptr::write (4 samples, 0.01%)</title><rect x="44.0084%" y="277" width="0.0129%" height="15" fill="rgb(231,15,5)" fg:x="13669" fg:w="4"/><text x="44.2584%" y="287.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_next (246 samples, 0.79%)</title><rect x="43.4900%" y="309" width="0.7920%" height="15" fill="rgb(252,35,15)" fg:x="13508" fg:w="246"/><text x="43.7400%" y="319.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::is_empty (81 samples, 0.26%)</title><rect x="44.0212%" y="293" width="0.2608%" height="15" fill="rgb(248,181,18)" fg:x="13673" fg:w="81"/><text x="44.2712%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::le (15 samples, 0.05%)</title><rect x="44.2337%" y="277" width="0.0483%" height="15" fill="rgb(233,39,42)" fg:x="13739" fg:w="15"/><text x="44.4837%" y="287.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.01%)</title><rect x="44.4945%" y="293" width="0.0129%" height="15" fill="rgb(238,110,33)" fg:x="13820" fg:w="4"/><text x="44.7445%" y="303.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (30 samples, 0.10%)</title><rect x="44.5815%" y="277" width="0.0966%" height="15" fill="rgb(233,195,10)" fg:x="13847" fg:w="30"/><text x="44.8315%" y="287.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (11 samples, 0.04%)</title><rect x="44.6426%" y="261" width="0.0354%" height="15" fill="rgb(254,105,3)" fg:x="13866" fg:w="11"/><text x="44.8926%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (10 samples, 0.03%)</title><rect x="44.8455%" y="261" width="0.0322%" height="15" fill="rgb(221,225,9)" fg:x="13929" fg:w="10"/><text x="45.0955%" y="271.50"></text></g><g><title>core::num::&lt;impl isize&gt;::unchecked_neg (27 samples, 0.09%)</title><rect x="44.8905%" y="245" width="0.0869%" height="15" fill="rgb(224,227,45)" fg:x="13943" fg:w="27"/><text x="45.1405%" y="255.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (225 samples, 0.72%)</title><rect x="44.2917%" y="309" width="0.7244%" height="15" fill="rgb(229,198,43)" fg:x="13757" fg:w="225"/><text x="44.5417%" y="319.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::next_back_unchecked (156 samples, 0.50%)</title><rect x="44.5138%" y="293" width="0.5023%" height="15" fill="rgb(206,209,35)" fg:x="13826" fg:w="156"/><text x="44.7638%" y="303.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::pre_dec_end (105 samples, 0.34%)</title><rect x="44.6780%" y="277" width="0.3381%" height="15" fill="rgb(245,195,53)" fg:x="13877" fg:w="105"/><text x="44.9280%" y="287.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub (43 samples, 0.14%)</title><rect x="44.8777%" y="261" width="0.1384%" height="15" fill="rgb(240,92,26)" fg:x="13939" fg:w="43"/><text x="45.1277%" y="271.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::offset (12 samples, 0.04%)</title><rect x="44.9775%" y="245" width="0.0386%" height="15" fill="rgb(207,40,23)" fg:x="13970" fg:w="12"/><text x="45.2275%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (82 samples, 0.26%)</title><rect x="45.5312%" y="293" width="0.2640%" height="15" fill="rgb(223,111,35)" fg:x="14142" fg:w="82"/><text x="45.7812%" y="303.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (259 samples, 0.83%)</title><rect x="45.0161%" y="309" width="0.8339%" height="15" fill="rgb(229,147,28)" fg:x="13982" fg:w="259"/><text x="45.2661%" y="319.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (17 samples, 0.05%)</title><rect x="45.7952%" y="293" width="0.0547%" height="15" fill="rgb(211,29,28)" fg:x="14224" fg:w="17"/><text x="46.0452%" y="303.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (23 samples, 0.07%)</title><rect x="45.8500%" y="309" width="0.0741%" height="15" fill="rgb(228,72,33)" fg:x="14241" fg:w="23"/><text x="46.1000%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::rposition (231 samples, 0.74%)</title><rect x="45.9305%" y="309" width="0.7437%" height="15" fill="rgb(205,214,31)" fg:x="14266" fg:w="231"/><text x="46.1805%" y="319.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (14 samples, 0.05%)</title><rect x="46.6291%" y="293" width="0.0451%" height="15" fill="rgb(224,111,15)" fg:x="14483" fg:w="14"/><text x="46.8791%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (11 samples, 0.04%)</title><rect x="46.6388%" y="277" width="0.0354%" height="15" fill="rgb(253,21,26)" fg:x="14486" fg:w="11"/><text x="46.8888%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (160 samples, 0.52%)</title><rect x="46.6742%" y="309" width="0.5151%" height="15" fill="rgb(245,139,43)" fg:x="14497" fg:w="160"/><text x="46.9242%" y="319.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (46 samples, 0.15%)</title><rect x="47.0412%" y="293" width="0.1481%" height="15" fill="rgb(252,170,7)" fg:x="14611" fg:w="46"/><text x="47.2912%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (33 samples, 0.11%)</title><rect x="47.0831%" y="277" width="0.1062%" height="15" fill="rgb(231,118,14)" fg:x="14624" fg:w="33"/><text x="47.3331%" y="287.50"></text></g><g><title>&lt;f64 as alloc::vec::is_zero::IsZero&gt;::is_zero (6 samples, 0.02%)</title><rect x="47.1893%" y="309" width="0.0193%" height="15" fill="rgb(238,83,0)" fg:x="14657" fg:w="6"/><text x="47.4393%" y="319.50"></text></g><g><title>&lt;f64 as approx::abs_diff_eq::AbsDiffEq&gt;::abs_diff_eq (117 samples, 0.38%)</title><rect x="47.2086%" y="309" width="0.3767%" height="15" fill="rgb(221,39,39)" fg:x="14663" fg:w="117"/><text x="47.4586%" y="319.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (88 samples, 0.28%)</title><rect x="47.5853%" y="309" width="0.2833%" height="15" fill="rgb(222,119,46)" fg:x="14780" fg:w="88"/><text x="47.8353%" y="319.50"></text></g><g><title>&lt;f64 as core::ops::arith::Div&gt;::div (24 samples, 0.08%)</title><rect x="47.8686%" y="309" width="0.0773%" height="15" fill="rgb(222,165,49)" fg:x="14868" fg:w="24"/><text x="48.1186%" y="319.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&lt;&amp;f64&gt;&gt;::mul (19 samples, 0.06%)</title><rect x="47.9459%" y="309" width="0.0612%" height="15" fill="rgb(219,113,52)" fg:x="14892" fg:w="19"/><text x="48.1959%" y="319.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (138 samples, 0.44%)</title><rect x="48.0071%" y="309" width="0.4443%" height="15" fill="rgb(214,7,15)" fg:x="14911" fg:w="138"/><text x="48.2571%" y="319.50"></text></g><g><title>&lt;f64 as core::ops::arith::Sub&gt;::sub (9 samples, 0.03%)</title><rect x="48.4514%" y="309" width="0.0290%" height="15" fill="rgb(235,32,4)" fg:x="15049" fg:w="9"/><text x="48.7014%" y="319.50"></text></g><g><title>&lt;f64 as num_traits::cast::FromPrimitive&gt;::from_f64 (4 samples, 0.01%)</title><rect x="48.4804%" y="309" width="0.0129%" height="15" fill="rgb(238,90,54)" fg:x="15058" fg:w="4"/><text x="48.7304%" y="319.50"></text></g><g><title>&lt;f64 as num_traits::identities::Zero&gt;::zero (11 samples, 0.04%)</title><rect x="48.4965%" y="309" width="0.0354%" height="15" fill="rgb(213,208,19)" fg:x="15063" fg:w="11"/><text x="48.7465%" y="319.50"></text></g><g><title>&lt;itertools::tuple_impl::TupleWindows&lt;I,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.03%)</title><rect x="48.5319%" y="309" width="0.0322%" height="15" fill="rgb(233,156,4)" fg:x="15074" fg:w="10"/><text x="48.7819%" y="319.50"></text></g><g><title>&lt;truck_modeling::geometry::Surface as truck_geotrait::traits::search_parameter::SearchNearestParameter&lt;truck_geotrait::traits::search_parameter::D2&gt;&gt;::search_nearest_parameter (4 samples, 0.01%)</title><rect x="48.5737%" y="309" width="0.0129%" height="15" fill="rgb(207,194,5)" fg:x="15087" fg:w="4"/><text x="48.8237%" y="319.50"></text></g><g><title>truck_geometry::nurbs::nurbssurface::&lt;impl truck_geotrait::traits::search_parameter::SearchNearestParameter&lt;truck_geotrait::traits::search_parameter::D2&gt; for truck_geometry::nurbs::NurbsSurface&lt;V&gt;&gt;::search_nearest_parameter (4 samples, 0.01%)</title><rect x="48.5737%" y="293" width="0.0129%" height="15" fill="rgb(206,111,30)" fg:x="15087" fg:w="4"/><text x="48.8237%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (4 samples, 0.01%)</title><rect x="49.0599%" y="277" width="0.0129%" height="15" fill="rgb(243,70,54)" fg:x="15238" fg:w="4"/><text x="49.3099%" y="287.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (152 samples, 0.49%)</title><rect x="48.5866%" y="309" width="0.4894%" height="15" fill="rgb(242,28,8)" fg:x="15091" fg:w="152"/><text x="48.8366%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (39 samples, 0.13%)</title><rect x="48.9504%" y="293" width="0.1256%" height="15" fill="rgb(219,106,18)" fg:x="15204" fg:w="39"/><text x="49.2004%" y="303.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (261 samples, 0.84%)</title><rect x="49.0760%" y="309" width="0.8403%" height="15" fill="rgb(244,222,10)" fg:x="15243" fg:w="261"/><text x="49.3260%" y="319.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (41 samples, 0.13%)</title><rect x="49.9163%" y="309" width="0.1320%" height="15" fill="rgb(236,179,52)" fg:x="15504" fg:w="41"/><text x="50.1663%" y="319.50"></text></g><g><title>[libc.so.6] (87 samples, 0.28%)</title><rect x="50.0483%" y="309" width="0.2801%" height="15" fill="rgb(213,23,39)" fg:x="15545" fg:w="87"/><text x="50.2983%" y="319.50"></text></g><g><title>&lt;cgmath::vector::Vector4&lt;S&gt; as core::ops::arith::Add&gt;::add (22 samples, 0.07%)</title><rect x="50.3381%" y="293" width="0.0708%" height="15" fill="rgb(238,48,10)" fg:x="15635" fg:w="22"/><text x="50.5881%" y="303.50"></text></g><g><title>[test-truck] (28 samples, 0.09%)</title><rect x="50.3348%" y="309" width="0.0901%" height="15" fill="rgb(251,196,23)" fg:x="15634" fg:w="28"/><text x="50.5848%" y="319.50"></text></g><g><title>__libc_calloc (122 samples, 0.39%)</title><rect x="50.4314%" y="309" width="0.3928%" height="15" fill="rgb(250,152,24)" fg:x="15664" fg:w="122"/><text x="50.6814%" y="319.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.01%)</title><rect x="50.9884%" y="293" width="0.0129%" height="15" fill="rgb(209,150,17)" fg:x="15837" fg:w="4"/><text x="51.2384%" y="303.50"></text></g><g><title>&lt;core::result::Result&lt;T,F&gt; as core::ops::try_trait::FromResidual&lt;core::result::Result&lt;core::convert::Infallible,E&gt;&gt;&gt;::from_residual (14 samples, 0.05%)</title><rect x="51.0013%" y="293" width="0.0451%" height="15" fill="rgb(234,202,34)" fg:x="15841" fg:w="14"/><text x="51.2513%" y="303.50"></text></g><g><title>&lt;T as core::convert::From&lt;T&gt;&gt;::from (14 samples, 0.05%)</title><rect x="51.0013%" y="277" width="0.0451%" height="15" fill="rgb(253,148,53)" fg:x="15841" fg:w="14"/><text x="51.2513%" y="287.50"></text></g><g><title>alloc::alloc::alloc_zeroed (33 samples, 0.11%)</title><rect x="51.0464%" y="293" width="0.1062%" height="15" fill="rgb(218,129,16)" fg:x="15855" fg:w="33"/><text x="51.2964%" y="303.50"></text></g><g><title>core::alloc::layout::Layout::align (7 samples, 0.02%)</title><rect x="51.1301%" y="277" width="0.0225%" height="15" fill="rgb(216,85,19)" fg:x="15881" fg:w="7"/><text x="51.3801%" y="287.50"></text></g><g><title>core::ptr::alignment::Alignment::as_usize (5 samples, 0.02%)</title><rect x="51.1365%" y="261" width="0.0161%" height="15" fill="rgb(235,228,7)" fg:x="15883" fg:w="5"/><text x="51.3865%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (7 samples, 0.02%)</title><rect x="51.1623%" y="293" width="0.0225%" height="15" fill="rgb(245,175,0)" fg:x="15891" fg:w="7"/><text x="51.4123%" y="303.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (21 samples, 0.07%)</title><rect x="51.1848%" y="293" width="0.0676%" height="15" fill="rgb(208,168,36)" fg:x="15898" fg:w="21"/><text x="51.4348%" y="303.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (14 samples, 0.05%)</title><rect x="51.2073%" y="277" width="0.0451%" height="15" fill="rgb(246,171,24)" fg:x="15905" fg:w="14"/><text x="51.4573%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (142 samples, 0.46%)</title><rect x="50.8339%" y="309" width="0.4572%" height="15" fill="rgb(215,142,24)" fg:x="15789" fg:w="142"/><text x="51.0839%" y="319.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (12 samples, 0.04%)</title><rect x="51.2524%" y="293" width="0.0386%" height="15" fill="rgb(250,187,7)" fg:x="15919" fg:w="12"/><text x="51.5024%" y="303.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (7 samples, 0.02%)</title><rect x="51.2685%" y="277" width="0.0225%" height="15" fill="rgb(228,66,33)" fg:x="15924" fg:w="7"/><text x="51.5185%" y="287.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (5 samples, 0.02%)</title><rect x="51.2750%" y="261" width="0.0161%" height="15" fill="rgb(234,215,21)" fg:x="15926" fg:w="5"/><text x="51.5250%" y="271.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked (4 samples, 0.01%)</title><rect x="51.3458%" y="293" width="0.0129%" height="15" fill="rgb(222,191,20)" fg:x="15948" fg:w="4"/><text x="51.5958%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (34 samples, 0.11%)</title><rect x="51.2910%" y="309" width="0.1095%" height="15" fill="rgb(245,79,54)" fg:x="15931" fg:w="34"/><text x="51.5410%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (11 samples, 0.04%)</title><rect x="51.3651%" y="293" width="0.0354%" height="15" fill="rgb(240,10,37)" fg:x="15954" fg:w="11"/><text x="51.6151%" y="303.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (11 samples, 0.04%)</title><rect x="51.7901%" y="293" width="0.0354%" height="15" fill="rgb(214,192,32)" fg:x="16086" fg:w="11"/><text x="52.0401%" y="303.50"></text></g><g><title>&lt;alloc::collections::TryReserveError as core::convert::From&lt;alloc::collections::TryReserveErrorKind&gt;&gt;::from (8 samples, 0.03%)</title><rect x="51.7997%" y="277" width="0.0258%" height="15" fill="rgb(209,36,54)" fg:x="16089" fg:w="8"/><text x="52.0497%" y="287.50"></text></g><g><title>alloc::raw_vec::alloc_guard (16 samples, 0.05%)</title><rect x="51.8255%" y="293" width="0.0515%" height="15" fill="rgb(220,10,11)" fg:x="16097" fg:w="16"/><text x="52.0755%" y="303.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (16 samples, 0.05%)</title><rect x="51.8255%" y="277" width="0.0515%" height="15" fill="rgb(221,106,17)" fg:x="16097" fg:w="16"/><text x="52.0755%" y="287.50"></text></g><g><title>&lt;alloc::collections::TryReserveError as core::convert::From&lt;alloc::collections::TryReserveErrorKind&gt;&gt;::from (9 samples, 0.03%)</title><rect x="51.8480%" y="261" width="0.0290%" height="15" fill="rgb(251,142,44)" fg:x="16104" fg:w="9"/><text x="52.0980%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (156 samples, 0.50%)</title><rect x="51.4005%" y="309" width="0.5023%" height="15" fill="rgb(238,13,15)" fg:x="15965" fg:w="156"/><text x="51.6505%" y="319.50"></text></g><g><title>core::alloc::layout::Layout::array (8 samples, 0.03%)</title><rect x="51.8770%" y="293" width="0.0258%" height="15" fill="rgb(208,107,27)" fg:x="16113" fg:w="8"/><text x="52.1270%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (4 samples, 0.01%)</title><rect x="51.9028%" y="309" width="0.0129%" height="15" fill="rgb(205,136,37)" fg:x="16121" fg:w="4"/><text x="52.1528%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::truncate (14 samples, 0.05%)</title><rect x="51.9189%" y="309" width="0.0451%" height="15" fill="rgb(250,205,27)" fg:x="16126" fg:w="14"/><text x="52.1689%" y="319.50"></text></g><g><title>alloc::vec::from_elem (26 samples, 0.08%)</title><rect x="51.9639%" y="309" width="0.0837%" height="15" fill="rgb(210,80,43)" fg:x="16140" fg:w="26"/><text x="52.2139%" y="319.50"></text></g><g><title>cfree (31 samples, 0.10%)</title><rect x="52.0476%" y="309" width="0.0998%" height="15" fill="rgb(247,160,36)" fg:x="16166" fg:w="31"/><text x="52.2976%" y="319.50"></text></g><g><title>cgmath::structure::InnerSpace::magnitude2 (8 samples, 0.03%)</title><rect x="52.1603%" y="309" width="0.0258%" height="15" fill="rgb(234,13,49)" fg:x="16201" fg:w="8"/><text x="52.4103%" y="319.50"></text></g><g><title>cgmath::vector::Vector3&lt;S&gt;::new (28 samples, 0.09%)</title><rect x="52.1958%" y="309" width="0.0901%" height="15" fill="rgb(234,122,0)" fg:x="16212" fg:w="28"/><text x="52.4458%" y="319.50"></text></g><g><title>cgmath::vector::Vector4&lt;S&gt;::new (124 samples, 0.40%)</title><rect x="52.2859%" y="309" width="0.3992%" height="15" fill="rgb(207,146,38)" fg:x="16240" fg:w="124"/><text x="52.5359%" y="319.50"></text></g><g><title>cgmath::vector::Vector4&lt;S&gt;::truncate (9 samples, 0.03%)</title><rect x="52.6851%" y="309" width="0.0290%" height="15" fill="rgb(207,177,25)" fg:x="16364" fg:w="9"/><text x="52.9351%" y="319.50"></text></g><g><title>core::alloc::layout::Layout::max_size_for_align (7 samples, 0.02%)</title><rect x="52.8300%" y="293" width="0.0225%" height="15" fill="rgb(211,178,42)" fg:x="16409" fg:w="7"/><text x="53.0800%" y="303.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (51 samples, 0.16%)</title><rect x="52.7141%" y="309" width="0.1642%" height="15" fill="rgb(230,69,54)" fg:x="16373" fg:w="51"/><text x="52.9641%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (8 samples, 0.03%)</title><rect x="52.8525%" y="293" width="0.0258%" height="15" fill="rgb(214,135,41)" fg:x="16416" fg:w="8"/><text x="53.1025%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (19 samples, 0.06%)</title><rect x="52.8880%" y="309" width="0.0612%" height="15" fill="rgb(237,67,25)" fg:x="16427" fg:w="19"/><text x="53.1380%" y="319.50"></text></g><g><title>core::cmp::min_by (87 samples, 0.28%)</title><rect x="52.9491%" y="309" width="0.2801%" height="15" fill="rgb(222,189,50)" fg:x="16446" fg:w="87"/><text x="53.1991%" y="319.50"></text></g><g><title>core::hint::assert_unchecked::precondition_check (7 samples, 0.02%)</title><rect x="53.2389%" y="309" width="0.0225%" height="15" fill="rgb(245,148,34)" fg:x="16536" fg:w="7"/><text x="53.4889%" y="319.50"></text></g><g><title>core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (166 samples, 0.53%)</title><rect x="53.2775%" y="309" width="0.5344%" height="15" fill="rgb(222,29,6)" fg:x="16548" fg:w="166"/><text x="53.5275%" y="319.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::next (34 samples, 0.11%)</title><rect x="53.8120%" y="309" width="0.1095%" height="15" fill="rgb(221,189,43)" fg:x="16714" fg:w="34"/><text x="54.0620%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (8 samples, 0.03%)</title><rect x="53.8957%" y="293" width="0.0258%" height="15" fill="rgb(207,36,27)" fg:x="16740" fg:w="8"/><text x="54.1457%" y="303.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (75 samples, 0.24%)</title><rect x="53.9214%" y="309" width="0.2415%" height="15" fill="rgb(217,90,24)" fg:x="16748" fg:w="75"/><text x="54.1714%" y="319.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (30 samples, 0.10%)</title><rect x="54.0663%" y="293" width="0.0966%" height="15" fill="rgb(224,66,35)" fg:x="16793" fg:w="30"/><text x="54.3163%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.02%)</title><rect x="54.1726%" y="309" width="0.0193%" height="15" fill="rgb(221,13,50)" fg:x="16826" fg:w="6"/><text x="54.4226%" y="319.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_next (19 samples, 0.06%)</title><rect x="54.4849%" y="245" width="0.0612%" height="15" fill="rgb(236,68,49)" fg:x="16923" fg:w="19"/><text x="54.7349%" y="255.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (5 samples, 0.02%)</title><rect x="54.5460%" y="245" width="0.0161%" height="15" fill="rgb(229,146,28)" fg:x="16942" fg:w="5"/><text x="54.7960%" y="255.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::next (5 samples, 0.02%)</title><rect x="54.5621%" y="245" width="0.0161%" height="15" fill="rgb(225,31,38)" fg:x="16947" fg:w="5"/><text x="54.8121%" y="255.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (32 samples, 0.10%)</title><rect x="54.4849%" y="293" width="0.1030%" height="15" fill="rgb(250,208,3)" fg:x="16923" fg:w="32"/><text x="54.7349%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (32 samples, 0.10%)</title><rect x="54.4849%" y="277" width="0.1030%" height="15" fill="rgb(246,54,23)" fg:x="16923" fg:w="32"/><text x="54.7349%" y="287.50"></text></g><g><title>core::slice::raw::from_raw_parts (32 samples, 0.10%)</title><rect x="54.4849%" y="261" width="0.1030%" height="15" fill="rgb(243,76,11)" fg:x="16923" fg:w="32"/><text x="54.7349%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (12 samples, 0.04%)</title><rect x="54.6716%" y="261" width="0.0386%" height="15" fill="rgb(245,21,50)" fg:x="16981" fg:w="12"/><text x="54.9216%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (10 samples, 0.03%)</title><rect x="54.6780%" y="245" width="0.0322%" height="15" fill="rgb(228,9,43)" fg:x="16983" fg:w="10"/><text x="54.9280%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (50 samples, 0.16%)</title><rect x="54.6362%" y="277" width="0.1610%" height="15" fill="rgb(208,100,47)" fg:x="16970" fg:w="50"/><text x="54.8862%" y="287.50"></text></g><g><title>core::slice::raw::from_raw_parts (27 samples, 0.09%)</title><rect x="54.7102%" y="261" width="0.0869%" height="15" fill="rgb(232,26,8)" fg:x="16993" fg:w="27"/><text x="54.9602%" y="271.50"></text></g><g><title>core::ptr::slice_from_raw_parts (6 samples, 0.02%)</title><rect x="54.7778%" y="245" width="0.0193%" height="15" fill="rgb(216,166,38)" fg:x="17014" fg:w="6"/><text x="55.0278%" y="255.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (6 samples, 0.02%)</title><rect x="54.7778%" y="229" width="0.0193%" height="15" fill="rgb(251,202,51)" fg:x="17014" fg:w="6"/><text x="55.0278%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (78 samples, 0.25%)</title><rect x="54.5911%" y="293" width="0.2511%" height="15" fill="rgb(254,216,34)" fg:x="16956" fg:w="78"/><text x="54.8411%" y="303.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (14 samples, 0.05%)</title><rect x="54.7972%" y="277" width="0.0451%" height="15" fill="rgb(251,32,27)" fg:x="17020" fg:w="14"/><text x="55.0472%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (5 samples, 0.02%)</title><rect x="54.8777%" y="277" width="0.0161%" height="15" fill="rgb(208,127,28)" fg:x="17045" fg:w="5"/><text x="55.1277%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (23 samples, 0.07%)</title><rect x="54.8422%" y="293" width="0.0741%" height="15" fill="rgb(224,137,22)" fg:x="17034" fg:w="23"/><text x="55.0922%" y="303.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (7 samples, 0.02%)</title><rect x="54.8938%" y="277" width="0.0225%" height="15" fill="rgb(254,70,32)" fg:x="17050" fg:w="7"/><text x="55.1438%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (7 samples, 0.02%)</title><rect x="55.0064%" y="245" width="0.0225%" height="15" fill="rgb(229,75,37)" fg:x="17085" fg:w="7"/><text x="55.2564%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (6 samples, 0.02%)</title><rect x="55.0097%" y="229" width="0.0193%" height="15" fill="rgb(252,64,23)" fg:x="17086" fg:w="6"/><text x="55.2597%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (32 samples, 0.10%)</title><rect x="54.9775%" y="261" width="0.1030%" height="15" fill="rgb(232,162,48)" fg:x="17076" fg:w="32"/><text x="55.2275%" y="271.50"></text></g><g><title>core::slice::raw::from_raw_parts (16 samples, 0.05%)</title><rect x="55.0290%" y="245" width="0.0515%" height="15" fill="rgb(246,160,12)" fg:x="17092" fg:w="16"/><text x="55.2790%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (66 samples, 0.21%)</title><rect x="54.9646%" y="277" width="0.2125%" height="15" fill="rgb(247,166,0)" fg:x="17072" fg:w="66"/><text x="55.2146%" y="287.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (30 samples, 0.10%)</title><rect x="55.0805%" y="261" width="0.0966%" height="15" fill="rgb(249,219,21)" fg:x="17108" fg:w="30"/><text x="55.3305%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (12 samples, 0.04%)</title><rect x="55.1771%" y="277" width="0.0386%" height="15" fill="rgb(205,209,3)" fg:x="17138" fg:w="12"/><text x="55.4271%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_aligned_to (5 samples, 0.02%)</title><rect x="55.2382%" y="245" width="0.0161%" height="15" fill="rgb(243,44,1)" fg:x="17157" fg:w="5"/><text x="55.4882%" y="255.50"></text></g><g><title>core::num::&lt;impl usize&gt;::is_power_of_two (4 samples, 0.01%)</title><rect x="55.2415%" y="229" width="0.0129%" height="15" fill="rgb(206,159,16)" fg:x="17158" fg:w="4"/><text x="55.4915%" y="239.50"></text></g><g><title>core::num::&lt;impl usize&gt;::count_ones (4 samples, 0.01%)</title><rect x="55.2415%" y="213" width="0.0129%" height="15" fill="rgb(244,77,30)" fg:x="17158" fg:w="4"/><text x="55.4915%" y="223.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (103 samples, 0.33%)</title><rect x="54.9259%" y="293" width="0.3316%" height="15" fill="rgb(218,69,12)" fg:x="17060" fg:w="103"/><text x="55.1759%" y="303.50"></text></g><g><title>core::slice::raw::from_raw_parts::precondition_check (7 samples, 0.02%)</title><rect x="55.2350%" y="277" width="0.0225%" height="15" fill="rgb(212,87,7)" fg:x="17156" fg:w="7"/><text x="55.4850%" y="287.50"></text></g><g><title>core::ub_checks::is_aligned_and_not_null (6 samples, 0.02%)</title><rect x="55.2382%" y="261" width="0.0193%" height="15" fill="rgb(245,114,25)" fg:x="17157" fg:w="6"/><text x="55.4882%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (335 samples, 1.08%)</title><rect x="54.1919%" y="309" width="1.0786%" height="15" fill="rgb(210,61,42)" fg:x="16832" fg:w="335"/><text x="54.4419%" y="319.50"></text></g><g><title>core::slice::raw::from_raw_parts::precondition_check (4 samples, 0.01%)</title><rect x="55.2576%" y="293" width="0.0129%" height="15" fill="rgb(211,52,33)" fg:x="17163" fg:w="4"/><text x="55.5076%" y="303.50"></text></g><g><title>core::num::&lt;impl isize&gt;::unchecked_neg::precondition_check (37 samples, 0.12%)</title><rect x="55.2704%" y="309" width="0.1191%" height="15" fill="rgb(234,58,33)" fg:x="17167" fg:w="37"/><text x="55.5204%" y="319.50"></text></g><g><title>core::num::&lt;impl isize&gt;::overflowing_neg (15 samples, 0.05%)</title><rect x="55.3413%" y="293" width="0.0483%" height="15" fill="rgb(220,115,36)" fg:x="17189" fg:w="15"/><text x="55.5913%" y="303.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add::precondition_check (110 samples, 0.35%)</title><rect x="55.3896%" y="309" width="0.3542%" height="15" fill="rgb(243,153,54)" fg:x="17204" fg:w="110"/><text x="55.6396%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (49 samples, 0.16%)</title><rect x="55.5860%" y="293" width="0.1578%" height="15" fill="rgb(251,47,18)" fg:x="17265" fg:w="49"/><text x="55.8360%" y="303.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul::precondition_check (23 samples, 0.07%)</title><rect x="55.7437%" y="309" width="0.0741%" height="15" fill="rgb(242,102,42)" fg:x="17314" fg:w="23"/><text x="55.9937%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (13 samples, 0.04%)</title><rect x="55.7759%" y="293" width="0.0419%" height="15" fill="rgb(234,31,38)" fg:x="17324" fg:w="13"/><text x="56.0259%" y="303.50"></text></g><g><title>core::ub_checks::is_aligned_and_not_null (4 samples, 0.01%)</title><rect x="55.9305%" y="277" width="0.0129%" height="15" fill="rgb(221,117,51)" fg:x="17372" fg:w="4"/><text x="56.1805%" y="287.50"></text></g><g><title>core::ops::function::FnOnce::call_once (42 samples, 0.14%)</title><rect x="55.8178%" y="309" width="0.1352%" height="15" fill="rgb(212,20,18)" fg:x="17337" fg:w="42"/><text x="56.0678%" y="319.50"></text></g><g><title>core::slice::raw::from_raw_parts::precondition_check (8 samples, 0.03%)</title><rect x="55.9272%" y="293" width="0.0258%" height="15" fill="rgb(245,133,36)" fg:x="17371" fg:w="8"/><text x="56.1772%" y="303.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (6 samples, 0.02%)</title><rect x="55.9530%" y="309" width="0.0193%" height="15" fill="rgb(212,6,19)" fg:x="17379" fg:w="6"/><text x="56.2030%" y="319.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::new (5 samples, 0.02%)</title><rect x="55.9723%" y="309" width="0.0161%" height="15" fill="rgb(218,1,36)" fg:x="17385" fg:w="5"/><text x="56.2223%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (15 samples, 0.05%)</title><rect x="55.9916%" y="309" width="0.0483%" height="15" fill="rgb(246,84,54)" fg:x="17391" fg:w="15"/><text x="56.2416%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr::precondition_check (87 samples, 0.28%)</title><rect x="56.0399%" y="309" width="0.2801%" height="15" fill="rgb(242,110,6)" fg:x="17406" fg:w="87"/><text x="56.2899%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr::runtime_ptr_ge (12 samples, 0.04%)</title><rect x="56.2814%" y="293" width="0.0386%" height="15" fill="rgb(214,47,5)" fg:x="17481" fg:w="12"/><text x="56.5314%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr::runtime_ptr_ge::runtime (12 samples, 0.04%)</title><rect x="56.2814%" y="277" width="0.0386%" height="15" fill="rgb(218,159,25)" fg:x="17481" fg:w="12"/><text x="56.5314%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (8 samples, 0.03%)</title><rect x="56.3297%" y="293" width="0.0258%" height="15" fill="rgb(215,211,28)" fg:x="17496" fg:w="8"/><text x="56.5797%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (12 samples, 0.04%)</title><rect x="56.3297%" y="309" width="0.0386%" height="15" fill="rgb(238,59,32)" fg:x="17496" fg:w="12"/><text x="56.5797%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (4 samples, 0.01%)</title><rect x="56.3812%" y="293" width="0.0129%" height="15" fill="rgb(226,82,3)" fg:x="17512" fg:w="4"/><text x="56.6312%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (9 samples, 0.03%)</title><rect x="56.3715%" y="309" width="0.0290%" height="15" fill="rgb(240,164,32)" fg:x="17509" fg:w="9"/><text x="56.6215%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;f64&gt;&gt; (4 samples, 0.01%)</title><rect x="56.4005%" y="309" width="0.0129%" height="15" fill="rgb(232,46,7)" fg:x="17518" fg:w="4"/><text x="56.6505%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;alloc::vec::Vec&lt;cgmath::vector::Vector4&lt;f64&gt;&gt;&gt;,alloc::vec::into_iter::IntoIter&lt;f64&gt;&gt;&gt; (24 samples, 0.08%)</title><rect x="56.4134%" y="309" width="0.0773%" height="15" fill="rgb(229,129,53)" fg:x="17522" fg:w="24"/><text x="56.6634%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;truck_geometry::nurbs::bspsurface::&lt;impl truck_geotrait::traits::surface::ParametricSurface for truck_geometry::nurbs::BSplineSurface&lt;cgmath::vector::Vector4&lt;f64&gt;&gt;&gt;::subs::{{closure}}&gt; (43 samples, 0.14%)</title><rect x="56.4907%" y="309" width="0.1384%" height="15" fill="rgb(234,188,29)" fg:x="17546" fg:w="43"/><text x="56.7407%" y="319.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked::precondition_check (26 samples, 0.08%)</title><rect x="56.6323%" y="309" width="0.0837%" height="15" fill="rgb(246,141,4)" fg:x="17590" fg:w="26"/><text x="56.8823%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (14 samples, 0.05%)</title><rect x="56.8899%" y="277" width="0.0451%" height="15" fill="rgb(229,23,39)" fg:x="17670" fg:w="14"/><text x="57.1399%" y="287.50"></text></g><g><title>core::slice::raw::from_raw_parts (8 samples, 0.03%)</title><rect x="56.9092%" y="261" width="0.0258%" height="15" fill="rgb(206,12,3)" fg:x="17676" fg:w="8"/><text x="57.1592%" y="271.50"></text></g><g><title>core::ptr::slice_from_raw_parts (5 samples, 0.02%)</title><rect x="56.9189%" y="245" width="0.0161%" height="15" fill="rgb(252,226,20)" fg:x="17679" fg:w="5"/><text x="57.1689%" y="255.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (5 samples, 0.02%)</title><rect x="56.9189%" y="229" width="0.0161%" height="15" fill="rgb(216,123,35)" fg:x="17679" fg:w="5"/><text x="57.1689%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (26 samples, 0.08%)</title><rect x="56.8867%" y="293" width="0.0837%" height="15" fill="rgb(212,68,40)" fg:x="17669" fg:w="26"/><text x="57.1367%" y="303.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (11 samples, 0.04%)</title><rect x="56.9350%" y="277" width="0.0354%" height="15" fill="rgb(254,125,32)" fg:x="17684" fg:w="11"/><text x="57.1850%" y="287.50"></text></g><g><title>core::ub_checks::is_aligned_and_not_null (9 samples, 0.03%)</title><rect x="57.0348%" y="277" width="0.0290%" height="15" fill="rgb(253,97,22)" fg:x="17715" fg:w="9"/><text x="57.2848%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_aligned_to (8 samples, 0.03%)</title><rect x="57.0380%" y="261" width="0.0258%" height="15" fill="rgb(241,101,14)" fg:x="17716" fg:w="8"/><text x="57.2880%" y="271.50"></text></g><g><title>core::num::&lt;impl usize&gt;::is_power_of_two (7 samples, 0.02%)</title><rect x="57.0412%" y="245" width="0.0225%" height="15" fill="rgb(238,103,29)" fg:x="17717" fg:w="7"/><text x="57.2912%" y="255.50"></text></g><g><title>core::num::&lt;impl usize&gt;::count_ones (7 samples, 0.02%)</title><rect x="57.0412%" y="229" width="0.0225%" height="15" fill="rgb(233,195,47)" fg:x="17717" fg:w="7"/><text x="57.2912%" y="239.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (113 samples, 0.36%)</title><rect x="56.7225%" y="309" width="0.3638%" height="15" fill="rgb(246,218,30)" fg:x="17618" fg:w="113"/><text x="56.9725%" y="319.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut::precondition_check (24 samples, 0.08%)</title><rect x="57.0090%" y="293" width="0.0773%" height="15" fill="rgb(219,145,47)" fg:x="17707" fg:w="24"/><text x="57.2590%" y="303.50"></text></g><g><title>core::ub_checks::is_valid_allocation_size (7 samples, 0.02%)</title><rect x="57.0637%" y="277" width="0.0225%" height="15" fill="rgb(243,12,26)" fg:x="17724" fg:w="7"/><text x="57.3137%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (6 samples, 0.02%)</title><rect x="57.2086%" y="293" width="0.0193%" height="15" fill="rgb(214,87,16)" fg:x="17769" fg:w="6"/><text x="57.4586%" y="303.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (5 samples, 0.02%)</title><rect x="57.2279%" y="293" width="0.0161%" height="15" fill="rgb(208,99,42)" fg:x="17775" fg:w="5"/><text x="57.4779%" y="303.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (55 samples, 0.18%)</title><rect x="57.0863%" y="309" width="0.1771%" height="15" fill="rgb(253,99,2)" fg:x="17731" fg:w="55"/><text x="57.3363%" y="319.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::cast (6 samples, 0.02%)</title><rect x="57.2440%" y="293" width="0.0193%" height="15" fill="rgb(220,168,23)" fg:x="17780" fg:w="6"/><text x="57.4940%" y="303.50"></text></g><g><title>core::fmt::Arguments::new_const (175 samples, 0.56%)</title><rect x="58.6671%" y="261" width="0.5634%" height="15" fill="rgb(242,38,24)" fg:x="18222" fg:w="175"/><text x="58.9171%" y="271.50"></text></g><g><title>core::num::&lt;impl usize&gt;::is_power_of_two (564 samples, 1.82%)</title><rect x="59.2305%" y="261" width="1.8158%" height="15" fill="rgb(225,182,9)" fg:x="18397" fg:w="564"/><text x="59.4805%" y="271.50">c..</text></g><g><title>core::num::&lt;impl usize&gt;::count_ones (564 samples, 1.82%)</title><rect x="59.2305%" y="245" width="1.8158%" height="15" fill="rgb(243,178,37)" fg:x="18397" fg:w="564"/><text x="59.4805%" y="255.50">c..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_aligned_to (897 samples, 2.89%)</title><rect x="58.4321%" y="277" width="2.8880%" height="15" fill="rgb(232,139,19)" fg:x="18149" fg:w="897"/><text x="58.6821%" y="287.50">co..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_aligned_to::runtime_impl (85 samples, 0.27%)</title><rect x="61.0464%" y="261" width="0.2737%" height="15" fill="rgb(225,201,24)" fg:x="18961" fg:w="85"/><text x="61.2964%" y="271.50"></text></g><g><title>core::ub_checks::is_aligned_and_not_null (1,042 samples, 3.35%)</title><rect x="58.1938%" y="293" width="3.3548%" height="15" fill="rgb(221,47,46)" fg:x="18075" fg:w="1042"/><text x="58.4438%" y="303.50">cor..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (71 samples, 0.23%)</title><rect x="61.3200%" y="277" width="0.2286%" height="15" fill="rgb(249,23,13)" fg:x="19046" fg:w="71"/><text x="61.5700%" y="287.50"></text></g><g><title>core::slice::raw::from_raw_parts::precondition_check (1,520 samples, 4.89%)</title><rect x="57.2634%" y="309" width="4.8938%" height="15" fill="rgb(219,9,5)" fg:x="17786" fg:w="1520"/><text x="57.5134%" y="319.50">core::..</text></g><g><title>core::ub_checks::is_valid_allocation_size (189 samples, 0.61%)</title><rect x="61.5486%" y="293" width="0.6085%" height="15" fill="rgb(254,171,16)" fg:x="19117" fg:w="189"/><text x="61.7986%" y="303.50"></text></g><g><title>core::fmt::Arguments::new_const (16 samples, 0.05%)</title><rect x="62.3278%" y="261" width="0.0515%" height="15" fill="rgb(230,171,20)" fg:x="19359" fg:w="16"/><text x="62.5778%" y="271.50"></text></g><g><title>core::num::&lt;impl usize&gt;::is_power_of_two (36 samples, 0.12%)</title><rect x="62.3793%" y="261" width="0.1159%" height="15" fill="rgb(210,71,41)" fg:x="19375" fg:w="36"/><text x="62.6293%" y="271.50"></text></g><g><title>core::num::&lt;impl usize&gt;::count_ones (36 samples, 0.12%)</title><rect x="62.3793%" y="245" width="0.1159%" height="15" fill="rgb(206,173,20)" fg:x="19375" fg:w="36"/><text x="62.6293%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_aligned_to (58 samples, 0.19%)</title><rect x="62.3245%" y="277" width="0.1867%" height="15" fill="rgb(233,88,34)" fg:x="19358" fg:w="58"/><text x="62.5745%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_aligned_to::runtime_impl (5 samples, 0.02%)</title><rect x="62.4952%" y="261" width="0.0161%" height="15" fill="rgb(223,209,46)" fg:x="19411" fg:w="5"/><text x="62.7452%" y="271.50"></text></g><g><title>core::ub_checks::is_aligned_and_not_null (66 samples, 0.21%)</title><rect x="62.3052%" y="293" width="0.2125%" height="15" fill="rgb(250,43,18)" fg:x="19352" fg:w="66"/><text x="62.5552%" y="303.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut::precondition_check (151 samples, 0.49%)</title><rect x="62.1571%" y="309" width="0.4862%" height="15" fill="rgb(208,13,10)" fg:x="19306" fg:w="151"/><text x="62.4071%" y="319.50"></text></g><g><title>core::ub_checks::is_valid_allocation_size (39 samples, 0.13%)</title><rect x="62.5177%" y="293" width="0.1256%" height="15" fill="rgb(212,200,36)" fg:x="19418" fg:w="39"/><text x="62.7677%" y="303.50"></text></g><g><title>core::slice::raw::from_raw_parts::precondition_check (5 samples, 0.02%)</title><rect x="62.7077%" y="277" width="0.0161%" height="15" fill="rgb(225,90,30)" fg:x="19477" fg:w="5"/><text x="62.9577%" y="287.50"></text></g><g><title>core::ub_checks::is_aligned_and_not_null (5 samples, 0.02%)</title><rect x="62.7077%" y="261" width="0.0161%" height="15" fill="rgb(236,182,39)" fg:x="19477" fg:w="5"/><text x="62.9577%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_aligned_to (4 samples, 0.01%)</title><rect x="62.7109%" y="245" width="0.0129%" height="15" fill="rgb(212,144,35)" fg:x="19478" fg:w="4"/><text x="62.9609%" y="255.50"></text></g><g><title>spade::delaunay_core::handles::handle_defs::FixedHandleImpl&lt;Type,InnerOuter&gt;::new (4 samples, 0.01%)</title><rect x="62.7592%" y="277" width="0.0129%" height="15" fill="rgb(228,63,44)" fg:x="19493" fg:w="4"/><text x="63.0092%" y="287.50"></text></g><g><title>spade::delaunay_core::handles::handle_defs::FixedHandleImpl&lt;Type,InnerOuter&gt;::new_internal (5 samples, 0.02%)</title><rect x="62.7721%" y="277" width="0.0161%" height="15" fill="rgb(228,109,6)" fg:x="19497" fg:w="5"/><text x="63.0221%" y="287.50"></text></g><g><title>[unknown] (55 samples, 0.18%)</title><rect x="62.6529%" y="293" width="0.1771%" height="15" fill="rgb(238,117,24)" fg:x="19460" fg:w="55"/><text x="62.9029%" y="303.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (62 samples, 0.20%)</title><rect x="62.6465%" y="309" width="0.1996%" height="15" fill="rgb(242,26,26)" fg:x="19458" fg:w="62"/><text x="62.8965%" y="319.50"></text></g><g><title>robust::incircleadapt (5 samples, 0.02%)</title><rect x="62.8590%" y="309" width="0.0161%" height="15" fill="rgb(221,92,48)" fg:x="19524" fg:w="5"/><text x="63.1090%" y="319.50"></text></g><g><title>spade::delaunay_core::dcel_operations::flip_cw (6 samples, 0.02%)</title><rect x="62.9202%" y="309" width="0.0193%" height="15" fill="rgb(209,209,32)" fg:x="19543" fg:w="6"/><text x="63.1702%" y="319.50"></text></g><g><title>spade::delaunay_core::handles::handle_defs::FixedHandleImpl&lt;Type,InnerOuter&gt;::new (5 samples, 0.02%)</title><rect x="62.9491%" y="309" width="0.0161%" height="15" fill="rgb(221,70,22)" fg:x="19552" fg:w="5"/><text x="63.1991%" y="319.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::abs (18 samples, 0.06%)</title><rect x="63.0393%" y="309" width="0.0580%" height="15" fill="rgb(248,145,5)" fg:x="19580" fg:w="18"/><text x="63.2893%" y="319.50"></text></g><g><title>truck_base::tolerance::Tolerance::near (22 samples, 0.07%)</title><rect x="63.0972%" y="309" width="0.0708%" height="15" fill="rgb(226,116,26)" fg:x="19598" fg:w="22"/><text x="63.3472%" y="319.50"></text></g><g><title>truck_geometry::nurbs::bspsurface::&lt;impl truck_geotrait::traits::surface::ParametricSurface for truck_geometry::nurbs::BSplineSurface&lt;P&gt;&gt;::uuder::{{closure}}::{{closure}} (13 samples, 0.04%)</title><rect x="63.1713%" y="309" width="0.0419%" height="15" fill="rgb(244,5,17)" fg:x="19621" fg:w="13"/><text x="63.4213%" y="319.50"></text></g><g><title>truck_geometry::nurbs::bspsurface::&lt;impl truck_geometry::nurbs::BSplineSurface&lt;P&gt;&gt;::udelta2_control_points (9 samples, 0.03%)</title><rect x="63.1842%" y="293" width="0.0290%" height="15" fill="rgb(252,159,33)" fg:x="19625" fg:w="9"/><text x="63.4342%" y="303.50"></text></g><g><title>truck_geometry::nurbs::bspsurface::&lt;impl truck_geotrait::traits::surface::ParametricSurface for truck_geometry::nurbs::BSplineSurface&lt;P&gt;&gt;::uvder::{{closure}}::{{closure}} (4 samples, 0.01%)</title><rect x="63.2196%" y="309" width="0.0129%" height="15" fill="rgb(206,71,0)" fg:x="19636" fg:w="4"/><text x="63.4696%" y="319.50"></text></g><g><title>&lt;cgmath::vector::Vector4&lt;S&gt; as core::ops::arith::Add&gt;::add (7 samples, 0.02%)</title><rect x="63.4771%" y="293" width="0.0225%" height="15" fill="rgb(233,118,54)" fg:x="19716" fg:w="7"/><text x="63.7271%" y="303.50"></text></g><g><title>truck_geometry::nurbs::knot_vec::&lt;impl truck_geometry::nurbs::KnotVec&gt;::bspline_basis_functions (79 samples, 0.25%)</title><rect x="63.2486%" y="309" width="0.2543%" height="15" fill="rgb(234,83,48)" fg:x="19645" fg:w="79"/><text x="63.4986%" y="319.50"></text></g><g><title>truck_geometry::nurbs::knot_vec::&lt;impl truck_geometry::nurbs::KnotVec&gt;::floor::{{closure}} (65 samples, 0.21%)</title><rect x="63.5029%" y="309" width="0.2093%" height="15" fill="rgb(228,3,54)" fg:x="19724" fg:w="65"/><text x="63.7529%" y="319.50"></text></g><g><title>truck_geometry::nurbs::knot_vec::&lt;impl truck_geometry::nurbs::KnotVec&gt;::multiplicity::{{closure}} (10 samples, 0.03%)</title><rect x="63.7122%" y="309" width="0.0322%" height="15" fill="rgb(226,155,13)" fg:x="19789" fg:w="10"/><text x="63.9622%" y="319.50"></text></g><g><title>&lt;cgmath::vector::Vector4&lt;S&gt; as core::ops::arith::Mul&lt;S&gt;&gt;::mul (6 samples, 0.02%)</title><rect x="68.4224%" y="293" width="0.0193%" height="15" fill="rgb(241,28,37)" fg:x="21252" fg:w="6"/><text x="68.6724%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (11 samples, 0.04%)</title><rect x="68.4417%" y="293" width="0.0354%" height="15" fill="rgb(233,93,10)" fg:x="21258" fg:w="11"/><text x="68.6917%" y="303.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_next (5 samples, 0.02%)</title><rect x="68.4900%" y="293" width="0.0161%" height="15" fill="rgb(225,113,19)" fg:x="21273" fg:w="5"/><text x="68.7400%" y="303.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (4 samples, 0.01%)</title><rect x="68.5093%" y="293" width="0.0129%" height="15" fill="rgb(241,2,18)" fg:x="21279" fg:w="4"/><text x="68.7593%" y="303.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (6 samples, 0.02%)</title><rect x="68.5222%" y="293" width="0.0193%" height="15" fill="rgb(228,207,21)" fg:x="21283" fg:w="6"/><text x="68.7722%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (4 samples, 0.01%)</title><rect x="68.5512%" y="293" width="0.0129%" height="15" fill="rgb(213,211,35)" fg:x="21292" fg:w="4"/><text x="68.8012%" y="303.50"></text></g><g><title>core::fmt::Arguments::new_const (18 samples, 0.06%)</title><rect x="68.6446%" y="245" width="0.0580%" height="15" fill="rgb(209,83,10)" fg:x="21321" fg:w="18"/><text x="68.8946%" y="255.50"></text></g><g><title>core::num::&lt;impl usize&gt;::is_power_of_two (15 samples, 0.05%)</title><rect x="68.7025%" y="245" width="0.0483%" height="15" fill="rgb(209,164,1)" fg:x="21339" fg:w="15"/><text x="68.9525%" y="255.50"></text></g><g><title>core::num::&lt;impl usize&gt;::count_ones (15 samples, 0.05%)</title><rect x="68.7025%" y="229" width="0.0483%" height="15" fill="rgb(213,184,43)" fg:x="21339" fg:w="15"/><text x="68.9525%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_aligned_to (36 samples, 0.12%)</title><rect x="68.6446%" y="261" width="0.1159%" height="15" fill="rgb(231,61,34)" fg:x="21321" fg:w="36"/><text x="68.8946%" y="271.50"></text></g><g><title>core::ub_checks::is_aligned_and_not_null (38 samples, 0.12%)</title><rect x="68.6413%" y="277" width="0.1223%" height="15" fill="rgb(235,75,3)" fg:x="21320" fg:w="38"/><text x="68.8913%" y="287.50"></text></g><g><title>core::slice::raw::from_raw_parts::precondition_check (68 samples, 0.22%)</title><rect x="68.5769%" y="293" width="0.2189%" height="15" fill="rgb(220,106,47)" fg:x="21300" fg:w="68"/><text x="68.8269%" y="303.50"></text></g><g><title>core::ub_checks::is_valid_allocation_size (10 samples, 0.03%)</title><rect x="68.7637%" y="277" width="0.0322%" height="15" fill="rgb(210,196,33)" fg:x="21358" fg:w="10"/><text x="69.0137%" y="287.50"></text></g><g><title>truck_geometry::nurbs::inv_or_zero (221 samples, 0.71%)</title><rect x="68.8023%" y="293" width="0.7115%" height="15" fill="rgb(229,154,42)" fg:x="21370" fg:w="221"/><text x="69.0523%" y="303.50"></text></g><g><title>truck_base::tolerance::Origin::so_small (106 samples, 0.34%)</title><rect x="69.1726%" y="277" width="0.3413%" height="15" fill="rgb(228,114,26)" fg:x="21485" fg:w="106"/><text x="69.4226%" y="287.50"></text></g><g><title>truck_geometry::nurbs::knot_vec::&lt;impl truck_geometry::nurbs::KnotVec&gt;::floor (100 samples, 0.32%)</title><rect x="69.5138%" y="293" width="0.3220%" height="15" fill="rgb(208,144,1)" fg:x="21591" fg:w="100"/><text x="69.7638%" y="303.50"></text></g><g><title>truck_geometry::nurbs::knot_vec::&lt;impl truck_geometry::nurbs::KnotVec&gt;::try_bspline_basis_functions (1,897 samples, 6.11%)</title><rect x="63.7444%" y="309" width="6.1075%" height="15" fill="rgb(239,112,37)" fg:x="19799" fg:w="1897"/><text x="63.9944%" y="319.50">truck_ge..</text></g><g><title>truck_geometry::nurbs::knot_vec::&lt;impl truck_geometry::nurbs::KnotVec&gt;::multiplicity (5 samples, 0.02%)</title><rect x="69.8358%" y="293" width="0.0161%" height="15" fill="rgb(210,96,50)" fg:x="21691" fg:w="5"/><text x="70.0858%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (4 samples, 0.01%)</title><rect x="70.1803%" y="293" width="0.0129%" height="15" fill="rgb(222,178,2)" fg:x="21798" fg:w="4"/><text x="70.4303%" y="303.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (4 samples, 0.01%)</title><rect x="70.2028%" y="293" width="0.0129%" height="15" fill="rgb(226,74,18)" fg:x="21805" fg:w="4"/><text x="70.4528%" y="303.50"></text></g><g><title>&lt;cgmath::vector::Vector4&lt;S&gt; as truck_base::cgmath_extend_traits::Homogeneous&lt;S&gt;&gt;::truncate (25 samples, 0.08%)</title><rect x="70.4282%" y="245" width="0.0805%" height="15" fill="rgb(225,67,54)" fg:x="21875" fg:w="25"/><text x="70.6782%" y="255.50"></text></g><g><title>&lt;cgmath::vector::Vector4&lt;S&gt; as truck_base::cgmath_extend_traits::Homogeneous&lt;S&gt;&gt;::weight (14 samples, 0.05%)</title><rect x="70.5087%" y="245" width="0.0451%" height="15" fill="rgb(251,92,32)" fg:x="21900" fg:w="14"/><text x="70.7587%" y="255.50"></text></g><g><title>truck_base::cgmath_extend_traits::Homogeneous::to_point (105 samples, 0.34%)</title><rect x="70.2286%" y="261" width="0.3381%" height="15" fill="rgb(228,149,22)" fg:x="21813" fg:w="105"/><text x="70.4786%" y="271.50"></text></g><g><title>core::slice::raw::from_raw_parts::precondition_check (4 samples, 0.01%)</title><rect x="70.5538%" y="245" width="0.0129%" height="15" fill="rgb(243,54,13)" fg:x="21914" fg:w="4"/><text x="70.8038%" y="255.50"></text></g><g><title>&lt;cgmath::vector::Vector4&lt;S&gt; as core::ops::arith::Add&gt;::add (7 samples, 0.02%)</title><rect x="70.8500%" y="245" width="0.0225%" height="15" fill="rgb(243,180,28)" fg:x="22006" fg:w="7"/><text x="71.1000%" y="255.50"></text></g><g><title>core::slice::raw::from_raw_parts::precondition_check (4 samples, 0.01%)</title><rect x="70.8950%" y="245" width="0.0129%" height="15" fill="rgb(208,167,24)" fg:x="22020" fg:w="4"/><text x="71.1450%" y="255.50"></text></g><g><title>truck_geometry::nurbs::bspsurface::&lt;impl truck_geometry::nurbs::BSplineSurface&lt;P&gt;&gt;::udegree (33 samples, 0.11%)</title><rect x="70.9144%" y="229" width="0.1062%" height="15" fill="rgb(245,73,45)" fg:x="22026" fg:w="33"/><text x="71.1644%" y="239.50"></text></g><g><title>truck_geotrait::algo::surface::presearch (402 samples, 1.29%)</title><rect x="69.8519%" y="309" width="1.2943%" height="15" fill="rgb(237,203,48)" fg:x="21696" fg:w="402"/><text x="70.1019%" y="319.50"></text></g><g><title>truck_geometry::nurbs::nurbssurface::&lt;impl truck_geotrait::traits::surface::ParametricSurface for truck_geometry::nurbs::NurbsSurface&lt;V&gt;&gt;::subs (285 samples, 0.92%)</title><rect x="70.2286%" y="293" width="0.9176%" height="15" fill="rgb(211,197,16)" fg:x="21813" fg:w="285"/><text x="70.4786%" y="303.50"></text></g><g><title>truck_geometry::nurbs::nurbssurface::&lt;impl truck_geometry::nurbs::NurbsSurface&lt;V&gt;&gt;::subs (285 samples, 0.92%)</title><rect x="70.2286%" y="277" width="0.9176%" height="15" fill="rgb(243,99,51)" fg:x="21813" fg:w="285"/><text x="70.4786%" y="287.50"></text></g><g><title>truck_geometry::nurbs::bspsurface::&lt;impl truck_geotrait::traits::surface::ParametricSurface for truck_geometry::nurbs::BSplineSurface&lt;P&gt;&gt;::subs (180 samples, 0.58%)</title><rect x="70.5666%" y="261" width="0.5795%" height="15" fill="rgb(215,123,29)" fg:x="21918" fg:w="180"/><text x="70.8166%" y="271.50"></text></g><g><title>truck_geometry::nurbs::bspsurface::&lt;impl truck_geometry::nurbs::BSplineSurface&lt;P&gt;&gt;::degrees (74 samples, 0.24%)</title><rect x="70.9079%" y="245" width="0.2382%" height="15" fill="rgb(239,186,37)" fg:x="22024" fg:w="74"/><text x="71.1579%" y="255.50"></text></g><g><title>truck_geometry::nurbs::bspsurface::&lt;impl truck_geometry::nurbs::BSplineSurface&lt;P&gt;&gt;::vdegree (39 samples, 0.13%)</title><rect x="71.0206%" y="229" width="0.1256%" height="15" fill="rgb(252,136,39)" fg:x="22059" fg:w="39"/><text x="71.2706%" y="239.50"></text></g><g><title>truck_geotrait::algo::surface::search_nearest_parameter (4 samples, 0.01%)</title><rect x="71.1462%" y="309" width="0.0129%" height="15" fill="rgb(223,213,32)" fg:x="22098" fg:w="4"/><text x="71.3962%" y="319.50"></text></g><g><title>truck_meshalgo::tessellation::triangulation::PolyBoundary::include::{{closure}} (5 samples, 0.02%)</title><rect x="71.1590%" y="309" width="0.0161%" height="15" fill="rgb(233,115,5)" fg:x="22102" fg:w="5"/><text x="71.4090%" y="319.50"></text></g><g><title>[unknown] (12,697 samples, 40.88%)</title><rect x="30.2994%" y="325" width="40.8789%" height="15" fill="rgb(207,226,44)" fg:x="9411" fg:w="12697"/><text x="30.5494%" y="335.50">[unknown]</text></g><g><title>__libc_calloc (96 samples, 0.31%)</title><rect x="71.1848%" y="325" width="0.3091%" height="15" fill="rgb(208,126,0)" fg:x="22110" fg:w="96"/><text x="71.4348%" y="335.50"></text></g><g><title>__rdl_alloc_zeroed (31 samples, 0.10%)</title><rect x="71.4939%" y="325" width="0.0998%" height="15" fill="rgb(244,66,21)" fg:x="22206" fg:w="31"/><text x="71.7439%" y="335.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (21 samples, 0.07%)</title><rect x="71.5261%" y="309" width="0.0676%" height="15" fill="rgb(222,97,12)" fg:x="22216" fg:w="21"/><text x="71.7761%" y="319.50"></text></g><g><title>__rdl_dealloc (16 samples, 0.05%)</title><rect x="71.5937%" y="325" width="0.0515%" height="15" fill="rgb(219,213,19)" fg:x="22237" fg:w="16"/><text x="71.8437%" y="335.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (8 samples, 0.03%)</title><rect x="71.6194%" y="309" width="0.0258%" height="15" fill="rgb(252,169,30)" fg:x="22245" fg:w="8"/><text x="71.8694%" y="319.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (7 samples, 0.02%)</title><rect x="71.8030%" y="309" width="0.0225%" height="15" fill="rgb(206,32,51)" fg:x="22302" fg:w="7"/><text x="72.0530%" y="319.50"></text></g><g><title>&lt;cgmath::vector::Vector4&lt;S&gt; as core::ops::arith::Mul&lt;S&gt;&gt;::mul (10 samples, 0.03%)</title><rect x="71.9092%" y="277" width="0.0322%" height="15" fill="rgb(250,172,42)" fg:x="22335" fg:w="10"/><text x="72.1592%" y="287.50"></text></g><g><title>__libc_calloc (18 samples, 0.06%)</title><rect x="71.8963%" y="293" width="0.0580%" height="15" fill="rgb(209,34,43)" fg:x="22331" fg:w="18"/><text x="72.1463%" y="303.50"></text></g><g><title>cgmath::vector::Vector4&lt;S&gt;::new (10 samples, 0.03%)</title><rect x="71.9543%" y="293" width="0.0322%" height="15" fill="rgb(223,11,35)" fg:x="22349" fg:w="10"/><text x="72.2043%" y="303.50"></text></g><g><title>core::alloc::layout::Layout::align (5 samples, 0.02%)</title><rect x="71.9865%" y="293" width="0.0161%" height="15" fill="rgb(251,219,26)" fg:x="22359" fg:w="5"/><text x="72.2365%" y="303.50"></text></g><g><title>core::ptr::alignment::Alignment::as_usize (4 samples, 0.01%)</title><rect x="71.9897%" y="277" width="0.0129%" height="15" fill="rgb(231,119,3)" fg:x="22360" fg:w="4"/><text x="72.2397%" y="287.50"></text></g><g><title>alloc::alloc::alloc_zeroed (54 samples, 0.17%)</title><rect x="71.8352%" y="309" width="0.1739%" height="15" fill="rgb(216,97,11)" fg:x="22312" fg:w="54"/><text x="72.0852%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (6 samples, 0.02%)</title><rect x="72.0219%" y="309" width="0.0193%" height="15" fill="rgb(223,59,9)" fg:x="22370" fg:w="6"/><text x="72.2719%" y="319.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (22 samples, 0.07%)</title><rect x="72.0412%" y="309" width="0.0708%" height="15" fill="rgb(233,93,31)" fg:x="22376" fg:w="22"/><text x="72.2912%" y="319.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (15 samples, 0.05%)</title><rect x="72.0637%" y="293" width="0.0483%" height="15" fill="rgb(239,81,33)" fg:x="22383" fg:w="15"/><text x="72.3137%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (158 samples, 0.51%)</title><rect x="71.6613%" y="325" width="0.5087%" height="15" fill="rgb(213,120,34)" fg:x="22258" fg:w="158"/><text x="71.9113%" y="335.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (18 samples, 0.06%)</title><rect x="72.1120%" y="309" width="0.0580%" height="15" fill="rgb(243,49,53)" fg:x="22398" fg:w="18"/><text x="72.3620%" y="319.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (9 samples, 0.03%)</title><rect x="72.1410%" y="293" width="0.0290%" height="15" fill="rgb(247,216,33)" fg:x="22407" fg:w="9"/><text x="72.3910%" y="303.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (5 samples, 0.02%)</title><rect x="72.1539%" y="277" width="0.0161%" height="15" fill="rgb(226,26,14)" fg:x="22411" fg:w="5"/><text x="72.4039%" y="287.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (5 samples, 0.02%)</title><rect x="72.2376%" y="309" width="0.0161%" height="15" fill="rgb(215,49,53)" fg:x="22437" fg:w="5"/><text x="72.4876%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (25 samples, 0.08%)</title><rect x="72.1797%" y="325" width="0.0805%" height="15" fill="rgb(245,162,40)" fg:x="22419" fg:w="25"/><text x="72.4297%" y="335.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (10 samples, 0.03%)</title><rect x="72.5596%" y="309" width="0.0322%" height="15" fill="rgb(229,68,17)" fg:x="22537" fg:w="10"/><text x="72.8096%" y="319.50"></text></g><g><title>&lt;alloc::collections::TryReserveError as core::convert::From&lt;alloc::collections::TryReserveErrorKind&gt;&gt;::from (6 samples, 0.02%)</title><rect x="72.5724%" y="293" width="0.0193%" height="15" fill="rgb(213,182,10)" fg:x="22541" fg:w="6"/><text x="72.8224%" y="303.50"></text></g><g><title>alloc::raw_vec::alloc_guard (12 samples, 0.04%)</title><rect x="72.5982%" y="309" width="0.0386%" height="15" fill="rgb(245,125,30)" fg:x="22549" fg:w="12"/><text x="72.8482%" y="319.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (12 samples, 0.04%)</title><rect x="72.5982%" y="293" width="0.0386%" height="15" fill="rgb(232,202,2)" fg:x="22549" fg:w="12"/><text x="72.8482%" y="303.50"></text></g><g><title>&lt;alloc::collections::TryReserveError as core::convert::From&lt;alloc::collections::TryReserveErrorKind&gt;&gt;::from (5 samples, 0.02%)</title><rect x="72.6207%" y="277" width="0.0161%" height="15" fill="rgb(237,140,51)" fg:x="22556" fg:w="5"/><text x="72.8707%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (5 samples, 0.02%)</title><rect x="72.6690%" y="293" width="0.0161%" height="15" fill="rgb(236,157,25)" fg:x="22571" fg:w="5"/><text x="72.9190%" y="303.50"></text></g><g><title>core::alloc::layout::Layout::array (17 samples, 0.05%)</title><rect x="72.6368%" y="309" width="0.0547%" height="15" fill="rgb(219,209,0)" fg:x="22561" fg:w="17"/><text x="72.8868%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (135 samples, 0.43%)</title><rect x="72.2601%" y="325" width="0.4346%" height="15" fill="rgb(240,116,54)" fg:x="22444" fg:w="135"/><text x="72.5101%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (4 samples, 0.01%)</title><rect x="72.7012%" y="325" width="0.0129%" height="15" fill="rgb(216,10,36)" fg:x="22581" fg:w="4"/><text x="72.9512%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (8 samples, 0.03%)</title><rect x="72.7817%" y="309" width="0.0258%" height="15" fill="rgb(222,72,44)" fg:x="22606" fg:w="8"/><text x="73.0317%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::truncate (33 samples, 0.11%)</title><rect x="72.7205%" y="325" width="0.1062%" height="15" fill="rgb(232,159,9)" fg:x="22587" fg:w="33"/><text x="72.9705%" y="335.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (6 samples, 0.02%)</title><rect x="72.8075%" y="309" width="0.0193%" height="15" fill="rgb(210,39,32)" fg:x="22614" fg:w="6"/><text x="73.0575%" y="319.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (6 samples, 0.02%)</title><rect x="72.8075%" y="293" width="0.0193%" height="15" fill="rgb(216,194,45)" fg:x="22614" fg:w="6"/><text x="73.0575%" y="303.50"></text></g><g><title>alloc::vec::from_elem (49 samples, 0.16%)</title><rect x="72.8268%" y="325" width="0.1578%" height="15" fill="rgb(218,18,35)" fg:x="22620" fg:w="49"/><text x="73.0768%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (13 samples, 0.04%)</title><rect x="72.9427%" y="309" width="0.0419%" height="15" fill="rgb(207,83,51)" fg:x="22656" fg:w="13"/><text x="73.1927%" y="319.50"></text></g><g><title>__alloc_pages_noprof (18 samples, 0.06%)</title><rect x="73.0425%" y="197" width="0.0580%" height="15" fill="rgb(225,63,43)" fg:x="22687" fg:w="18"/><text x="73.2925%" y="207.50"></text></g><g><title>get_page_from_freelist (14 samples, 0.05%)</title><rect x="73.0554%" y="181" width="0.0451%" height="15" fill="rgb(207,57,36)" fg:x="22691" fg:w="14"/><text x="73.3054%" y="191.50"></text></g><g><title>prep_new_page (12 samples, 0.04%)</title><rect x="73.0618%" y="165" width="0.0386%" height="15" fill="rgb(216,99,33)" fg:x="22693" fg:w="12"/><text x="73.3118%" y="175.50"></text></g><g><title>clear_page_rep (12 samples, 0.04%)</title><rect x="73.0618%" y="149" width="0.0386%" height="15" fill="rgb(225,42,16)" fg:x="22693" fg:w="12"/><text x="73.3118%" y="159.50"></text></g><g><title>alloc_pages_mpol_noprof (21 samples, 0.07%)</title><rect x="73.0425%" y="213" width="0.0676%" height="15" fill="rgb(220,201,45)" fg:x="22687" fg:w="21"/><text x="73.2925%" y="223.50"></text></g><g><title>__pte_alloc (26 samples, 0.08%)</title><rect x="73.0328%" y="245" width="0.0837%" height="15" fill="rgb(225,33,4)" fg:x="22684" fg:w="26"/><text x="73.2828%" y="255.50"></text></g><g><title>pte_alloc_one (26 samples, 0.08%)</title><rect x="73.0328%" y="229" width="0.0837%" height="15" fill="rgb(224,33,50)" fg:x="22684" fg:w="26"/><text x="73.2828%" y="239.50"></text></g><g><title>handle_mm_fault (43 samples, 0.14%)</title><rect x="73.0039%" y="277" width="0.1384%" height="15" fill="rgb(246,198,51)" fg:x="22675" fg:w="43"/><text x="73.2539%" y="287.50"></text></g><g><title>do_pte_missing (38 samples, 0.12%)</title><rect x="73.0200%" y="261" width="0.1223%" height="15" fill="rgb(205,22,4)" fg:x="22680" fg:w="38"/><text x="73.2700%" y="271.50"></text></g><g><title>vma_alloc_folio_noprof (7 samples, 0.02%)</title><rect x="73.1198%" y="245" width="0.0225%" height="15" fill="rgb(206,3,8)" fg:x="22711" fg:w="7"/><text x="73.3698%" y="255.50"></text></g><g><title>alloc_pages_mpol_noprof (7 samples, 0.02%)</title><rect x="73.1198%" y="229" width="0.0225%" height="15" fill="rgb(251,23,15)" fg:x="22711" fg:w="7"/><text x="73.3698%" y="239.50"></text></g><g><title>__alloc_pages_noprof (7 samples, 0.02%)</title><rect x="73.1198%" y="213" width="0.0225%" height="15" fill="rgb(252,88,28)" fg:x="22711" fg:w="7"/><text x="73.3698%" y="223.50"></text></g><g><title>get_page_from_freelist (7 samples, 0.02%)</title><rect x="73.1198%" y="197" width="0.0225%" height="15" fill="rgb(212,127,14)" fg:x="22711" fg:w="7"/><text x="73.3698%" y="207.50"></text></g><g><title>prep_new_page (5 samples, 0.02%)</title><rect x="73.1262%" y="181" width="0.0161%" height="15" fill="rgb(247,145,37)" fg:x="22713" fg:w="5"/><text x="73.3762%" y="191.50"></text></g><g><title>clear_page_rep (5 samples, 0.02%)</title><rect x="73.1262%" y="165" width="0.0161%" height="15" fill="rgb(209,117,53)" fg:x="22713" fg:w="5"/><text x="73.3762%" y="175.50"></text></g><g><title>exc_page_fault (80 samples, 0.26%)</title><rect x="73.0039%" y="309" width="0.2576%" height="15" fill="rgb(212,90,42)" fg:x="22675" fg:w="80"/><text x="73.2539%" y="319.50"></text></g><g><title>do_user_addr_fault (80 samples, 0.26%)</title><rect x="73.0039%" y="293" width="0.2576%" height="15" fill="rgb(218,164,37)" fg:x="22675" fg:w="80"/><text x="73.2539%" y="303.50"></text></g><g><title>lock_vma_under_rcu (37 samples, 0.12%)</title><rect x="73.1423%" y="277" width="0.1191%" height="15" fill="rgb(246,65,34)" fg:x="22718" fg:w="37"/><text x="73.3923%" y="287.50"></text></g><g><title>mas_walk (24 samples, 0.08%)</title><rect x="73.1842%" y="261" width="0.0773%" height="15" fill="rgb(231,100,33)" fg:x="22731" fg:w="24"/><text x="73.4342%" y="271.50"></text></g><g><title>mas_state_walk (24 samples, 0.08%)</title><rect x="73.1842%" y="245" width="0.0773%" height="15" fill="rgb(228,126,14)" fg:x="22731" fg:w="24"/><text x="73.4342%" y="255.50"></text></g><g><title>asm_exc_page_fault (87 samples, 0.28%)</title><rect x="72.9845%" y="325" width="0.2801%" height="15" fill="rgb(215,173,21)" fg:x="22669" fg:w="87"/><text x="73.2345%" y="335.50"></text></g><g><title>__hrtimer_run_queues (4 samples, 0.01%)</title><rect x="73.2646%" y="261" width="0.0129%" height="15" fill="rgb(210,6,40)" fg:x="22756" fg:w="4"/><text x="73.5146%" y="271.50"></text></g><g><title>tick_nohz_handler (4 samples, 0.01%)</title><rect x="73.2646%" y="245" width="0.0129%" height="15" fill="rgb(212,48,18)" fg:x="22756" fg:w="4"/><text x="73.5146%" y="255.50"></text></g><g><title>update_process_times (4 samples, 0.01%)</title><rect x="73.2646%" y="229" width="0.0129%" height="15" fill="rgb(230,214,11)" fg:x="22756" fg:w="4"/><text x="73.5146%" y="239.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (8 samples, 0.03%)</title><rect x="73.2646%" y="325" width="0.0258%" height="15" fill="rgb(254,105,39)" fg:x="22756" fg:w="8"/><text x="73.5146%" y="335.50"></text></g><g><title>sysvec_apic_timer_interrupt (8 samples, 0.03%)</title><rect x="73.2646%" y="309" width="0.0258%" height="15" fill="rgb(245,158,5)" fg:x="22756" fg:w="8"/><text x="73.5146%" y="319.50"></text></g><g><title>__sysvec_apic_timer_interrupt (8 samples, 0.03%)</title><rect x="73.2646%" y="293" width="0.0258%" height="15" fill="rgb(249,208,11)" fg:x="22756" fg:w="8"/><text x="73.5146%" y="303.50"></text></g><g><title>hrtimer_interrupt (8 samples, 0.03%)</title><rect x="73.2646%" y="277" width="0.0258%" height="15" fill="rgb(210,39,28)" fg:x="22756" fg:w="8"/><text x="73.5146%" y="287.50"></text></g><g><title>ktime_get_update_offsets_now (4 samples, 0.01%)</title><rect x="73.2775%" y="261" width="0.0129%" height="15" fill="rgb(211,56,53)" fg:x="22760" fg:w="4"/><text x="73.5275%" y="271.50"></text></g><g><title>cfree (27 samples, 0.09%)</title><rect x="73.2904%" y="325" width="0.0869%" height="15" fill="rgb(226,201,30)" fg:x="22764" fg:w="27"/><text x="73.5404%" y="335.50"></text></g><g><title>cgmath::structure::InnerSpace::magnitude2 (15 samples, 0.05%)</title><rect x="73.3902%" y="325" width="0.0483%" height="15" fill="rgb(239,101,34)" fg:x="22795" fg:w="15"/><text x="73.6402%" y="335.50"></text></g><g><title>cgmath::vector::Vector3&lt;S&gt;::new (9 samples, 0.03%)</title><rect x="73.4385%" y="325" width="0.0290%" height="15" fill="rgb(226,209,5)" fg:x="22810" fg:w="9"/><text x="73.6885%" y="335.50"></text></g><g><title>cgmath::vector::Vector4&lt;S&gt;::new (116 samples, 0.37%)</title><rect x="73.4675%" y="325" width="0.3735%" height="15" fill="rgb(250,105,47)" fg:x="22819" fg:w="116"/><text x="73.7175%" y="335.50"></text></g><g><title>cgmath::vector::Vector4&lt;S&gt;::truncate (20 samples, 0.06%)</title><rect x="73.8410%" y="325" width="0.0644%" height="15" fill="rgb(230,72,3)" fg:x="22935" fg:w="20"/><text x="74.0910%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (9 samples, 0.03%)</title><rect x="74.0438%" y="309" width="0.0290%" height="15" fill="rgb(232,218,39)" fg:x="22998" fg:w="9"/><text x="74.2938%" y="319.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (54 samples, 0.17%)</title><rect x="73.9053%" y="325" width="0.1739%" height="15" fill="rgb(248,166,6)" fg:x="22955" fg:w="54"/><text x="74.1553%" y="335.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (17 samples, 0.05%)</title><rect x="74.0856%" y="325" width="0.0547%" height="15" fill="rgb(247,89,20)" fg:x="23011" fg:w="17"/><text x="74.3356%" y="335.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (7 samples, 0.02%)</title><rect x="74.1404%" y="325" width="0.0225%" height="15" fill="rgb(248,130,54)" fg:x="23028" fg:w="7"/><text x="74.3904%" y="335.50"></text></g><g><title>core::clone::Clone::clone (4 samples, 0.01%)</title><rect x="74.1629%" y="325" width="0.0129%" height="15" fill="rgb(234,196,4)" fg:x="23035" fg:w="4"/><text x="74.4129%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (27 samples, 0.09%)</title><rect x="74.1758%" y="325" width="0.0869%" height="15" fill="rgb(250,143,31)" fg:x="23039" fg:w="27"/><text x="74.4258%" y="335.50"></text></g><g><title>core::cmp::min_by (66 samples, 0.21%)</title><rect x="74.2659%" y="325" width="0.2125%" height="15" fill="rgb(211,110,34)" fg:x="23067" fg:w="66"/><text x="74.5159%" y="335.50"></text></g><g><title>core::convert::num::ptr_try_from_impls::&lt;impl core::convert::TryFrom&lt;usize&gt; for u32&gt;::try_from (4 samples, 0.01%)</title><rect x="74.4784%" y="325" width="0.0129%" height="15" fill="rgb(215,124,48)" fg:x="23133" fg:w="4"/><text x="74.7284%" y="335.50"></text></g><g><title>core::hint::assert_unchecked::precondition_check (17 samples, 0.05%)</title><rect x="74.4977%" y="325" width="0.0547%" height="15" fill="rgb(216,46,13)" fg:x="23139" fg:w="17"/><text x="74.7477%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping::precondition_check (8 samples, 0.03%)</title><rect x="74.5525%" y="325" width="0.0258%" height="15" fill="rgb(205,184,25)" fg:x="23156" fg:w="8"/><text x="74.8025%" y="335.50"></text></g><g><title>core::ub_checks::is_aligned_and_not_null (6 samples, 0.02%)</title><rect x="74.5589%" y="309" width="0.0193%" height="15" fill="rgb(228,1,10)" fg:x="23158" fg:w="6"/><text x="74.8089%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_aligned_to (6 samples, 0.02%)</title><rect x="74.5589%" y="293" width="0.0193%" height="15" fill="rgb(213,116,27)" fg:x="23158" fg:w="6"/><text x="74.8089%" y="303.50"></text></g><g><title>core::num::&lt;impl usize&gt;::is_power_of_two (4 samples, 0.01%)</title><rect x="74.5654%" y="277" width="0.0129%" height="15" fill="rgb(241,95,50)" fg:x="23160" fg:w="4"/><text x="74.8154%" y="287.50"></text></g><g><title>core::num::&lt;impl usize&gt;::count_ones (4 samples, 0.01%)</title><rect x="74.5654%" y="261" width="0.0129%" height="15" fill="rgb(238,48,32)" fg:x="23160" fg:w="4"/><text x="74.8154%" y="271.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (16 samples, 0.05%)</title><rect x="74.5815%" y="325" width="0.0515%" height="15" fill="rgb(235,113,49)" fg:x="23165" fg:w="16"/><text x="74.8315%" y="335.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_try_fold::flatten::{{closure}} (4 samples, 0.01%)</title><rect x="74.6362%" y="325" width="0.0129%" height="15" fill="rgb(205,127,43)" fg:x="23182" fg:w="4"/><text x="74.8862%" y="335.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (6 samples, 0.02%)</title><rect x="74.6523%" y="325" width="0.0193%" height="15" fill="rgb(250,162,2)" fg:x="23187" fg:w="6"/><text x="74.9023%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::size_hint (17 samples, 0.05%)</title><rect x="75.0837%" y="309" width="0.0547%" height="15" fill="rgb(220,13,41)" fg:x="23321" fg:w="17"/><text x="75.3337%" y="319.50"></text></g><g><title>core::cmp::min (9 samples, 0.03%)</title><rect x="75.1095%" y="293" width="0.0290%" height="15" fill="rgb(249,221,25)" fg:x="23329" fg:w="9"/><text x="75.3595%" y="303.50"></text></g><g><title>core::cmp::Ord::min (9 samples, 0.03%)</title><rect x="75.1095%" y="277" width="0.0290%" height="15" fill="rgb(215,208,19)" fg:x="23329" fg:w="9"/><text x="75.3595%" y="287.50"></text></g><g><title>core::fmt::Arguments::new_const (5 samples, 0.02%)</title><rect x="75.1900%" y="261" width="0.0161%" height="15" fill="rgb(236,175,2)" fg:x="23354" fg:w="5"/><text x="75.4400%" y="271.50"></text></g><g><title>core::num::&lt;impl usize&gt;::is_power_of_two (28 samples, 0.09%)</title><rect x="75.2061%" y="261" width="0.0901%" height="15" fill="rgb(241,52,2)" fg:x="23359" fg:w="28"/><text x="75.4561%" y="271.50"></text></g><g><title>core::num::&lt;impl usize&gt;::count_ones (28 samples, 0.09%)</title><rect x="75.2061%" y="245" width="0.0901%" height="15" fill="rgb(248,140,14)" fg:x="23359" fg:w="28"/><text x="75.4561%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_aligned_to (46 samples, 0.15%)</title><rect x="75.1771%" y="277" width="0.1481%" height="15" fill="rgb(253,22,42)" fg:x="23350" fg:w="46"/><text x="75.4271%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_aligned_to::runtime_impl (9 samples, 0.03%)</title><rect x="75.2962%" y="261" width="0.0290%" height="15" fill="rgb(234,61,47)" fg:x="23387" fg:w="9"/><text x="75.5462%" y="271.50"></text></g><g><title>core::ub_checks::is_aligned_and_not_null (56 samples, 0.18%)</title><rect x="75.1545%" y="293" width="0.1803%" height="15" fill="rgb(208,226,15)" fg:x="23343" fg:w="56"/><text x="75.4045%" y="303.50"></text></g><g><title>core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (210 samples, 0.68%)</title><rect x="74.6716%" y="325" width="0.6761%" height="15" fill="rgb(217,221,4)" fg:x="23193" fg:w="210"/><text x="74.9216%" y="335.50"></text></g><g><title>core::slice::raw::from_raw_parts::precondition_check (65 samples, 0.21%)</title><rect x="75.1384%" y="309" width="0.2093%" height="15" fill="rgb(212,174,34)" fg:x="23338" fg:w="65"/><text x="75.3884%" y="319.50"></text></g><g><title>core::ub_checks::is_valid_allocation_size (4 samples, 0.01%)</title><rect x="75.3348%" y="293" width="0.0129%" height="15" fill="rgb(253,83,4)" fg:x="23399" fg:w="4"/><text x="75.5848%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (5 samples, 0.02%)</title><rect x="75.3574%" y="309" width="0.0161%" height="15" fill="rgb(250,195,49)" fg:x="23406" fg:w="5"/><text x="75.6074%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.02%)</title><rect x="75.3767%" y="309" width="0.0225%" height="15" fill="rgb(241,192,25)" fg:x="23412" fg:w="7"/><text x="75.6267%" y="319.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (21 samples, 0.07%)</title><rect x="75.3477%" y="325" width="0.0676%" height="15" fill="rgb(208,124,10)" fg:x="23403" fg:w="21"/><text x="75.5977%" y="335.50"></text></g><g><title>&lt;cgmath::vector::Vector3&lt;S&gt; as cgmath::structure::InnerSpace&gt;::dot (6 samples, 0.02%)</title><rect x="75.5409%" y="309" width="0.0193%" height="15" fill="rgb(222,33,0)" fg:x="23463" fg:w="6"/><text x="75.7909%" y="319.50"></text></g><g><title>cgmath::vector::Vector4&lt;S&gt;::new (6 samples, 0.02%)</title><rect x="75.5409%" y="293" width="0.0193%" height="15" fill="rgb(234,209,28)" fg:x="23463" fg:w="6"/><text x="75.7909%" y="303.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::next (51 samples, 0.16%)</title><rect x="75.4153%" y="325" width="0.1642%" height="15" fill="rgb(224,11,23)" fg:x="23424" fg:w="51"/><text x="75.6653%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (6 samples, 0.02%)</title><rect x="75.5602%" y="309" width="0.0193%" height="15" fill="rgb(232,99,1)" fg:x="23469" fg:w="6"/><text x="75.8102%" y="319.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (23 samples, 0.07%)</title><rect x="75.5795%" y="325" width="0.0741%" height="15" fill="rgb(237,95,45)" fg:x="23475" fg:w="23"/><text x="75.8295%" y="335.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (9 samples, 0.03%)</title><rect x="75.6246%" y="309" width="0.0290%" height="15" fill="rgb(208,109,11)" fg:x="23489" fg:w="9"/><text x="75.8746%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::filter (5 samples, 0.02%)</title><rect x="75.6600%" y="325" width="0.0161%" height="15" fill="rgb(216,190,48)" fg:x="23500" fg:w="5"/><text x="75.9100%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (5 samples, 0.02%)</title><rect x="75.6825%" y="325" width="0.0161%" height="15" fill="rgb(251,171,36)" fg:x="23507" fg:w="5"/><text x="75.9325%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (33 samples, 0.11%)</title><rect x="75.7115%" y="325" width="0.1062%" height="15" fill="rgb(230,62,22)" fg:x="23516" fg:w="33"/><text x="75.9615%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (109 samples, 0.35%)</title><rect x="75.8178%" y="325" width="0.3509%" height="15" fill="rgb(225,114,35)" fg:x="23549" fg:w="109"/><text x="76.0678%" y="335.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (10 samples, 0.03%)</title><rect x="76.1365%" y="309" width="0.0322%" height="15" fill="rgb(215,118,42)" fg:x="23648" fg:w="10"/><text x="76.3865%" y="319.50"></text></g><g><title>core::num::&lt;impl isize&gt;::unchecked_neg::precondition_check (51 samples, 0.16%)</title><rect x="76.1912%" y="325" width="0.1642%" height="15" fill="rgb(243,119,21)" fg:x="23665" fg:w="51"/><text x="76.4412%" y="335.50"></text></g><g><title>core::num::&lt;impl isize&gt;::overflowing_neg (28 samples, 0.09%)</title><rect x="76.2653%" y="309" width="0.0901%" height="15" fill="rgb(252,177,53)" fg:x="23688" fg:w="28"/><text x="76.5153%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (9 samples, 0.03%)</title><rect x="76.3554%" y="325" width="0.0290%" height="15" fill="rgb(237,209,29)" fg:x="23716" fg:w="9"/><text x="76.6054%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add::precondition_check (168 samples, 0.54%)</title><rect x="76.3844%" y="325" width="0.5409%" height="15" fill="rgb(212,65,23)" fg:x="23725" fg:w="168"/><text x="76.6344%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (75 samples, 0.24%)</title><rect x="76.6838%" y="309" width="0.2415%" height="15" fill="rgb(230,222,46)" fg:x="23818" fg:w="75"/><text x="76.9338%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul::precondition_check (23 samples, 0.07%)</title><rect x="76.9253%" y="325" width="0.0741%" height="15" fill="rgb(215,135,32)" fg:x="23893" fg:w="23"/><text x="77.1753%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (10 samples, 0.03%)</title><rect x="76.9672%" y="309" width="0.0322%" height="15" fill="rgb(246,101,22)" fg:x="23906" fg:w="10"/><text x="77.2172%" y="319.50"></text></g><g><title>core::ops::function::FnOnce::call_once (38 samples, 0.12%)</title><rect x="77.0058%" y="325" width="0.1223%" height="15" fill="rgb(206,107,13)" fg:x="23918" fg:w="38"/><text x="77.2558%" y="335.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (7 samples, 0.02%)</title><rect x="77.1281%" y="325" width="0.0225%" height="15" fill="rgb(250,100,44)" fg:x="23956" fg:w="7"/><text x="77.3781%" y="335.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::new (26 samples, 0.08%)</title><rect x="77.1539%" y="325" width="0.0837%" height="15" fill="rgb(231,147,38)" fg:x="23964" fg:w="26"/><text x="77.4039%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (17 samples, 0.05%)</title><rect x="77.2569%" y="325" width="0.0547%" height="15" fill="rgb(229,8,40)" fg:x="23996" fg:w="17"/><text x="77.5069%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr::precondition_check (65 samples, 0.21%)</title><rect x="77.3213%" y="325" width="0.2093%" height="15" fill="rgb(221,135,30)" fg:x="24016" fg:w="65"/><text x="77.5713%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr::runtime_ptr_ge (8 samples, 0.03%)</title><rect x="77.5048%" y="309" width="0.0258%" height="15" fill="rgb(249,193,18)" fg:x="24073" fg:w="8"/><text x="77.7548%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr::runtime_ptr_ge::runtime (8 samples, 0.03%)</title><rect x="77.5048%" y="293" width="0.0258%" height="15" fill="rgb(209,133,39)" fg:x="24073" fg:w="8"/><text x="77.7548%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;f64,alloc::alloc::Global&gt;&gt; (13 samples, 0.04%)</title><rect x="77.5306%" y="325" width="0.0419%" height="15" fill="rgb(232,100,14)" fg:x="24081" fg:w="13"/><text x="77.7806%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (4 samples, 0.01%)</title><rect x="77.6980%" y="309" width="0.0129%" height="15" fill="rgb(224,185,1)" fg:x="24133" fg:w="4"/><text x="77.9480%" y="319.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (6 samples, 0.02%)</title><rect x="77.7109%" y="309" width="0.0193%" height="15" fill="rgb(223,139,8)" fg:x="24137" fg:w="6"/><text x="77.9609%" y="319.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (17 samples, 0.05%)</title><rect x="77.7302%" y="309" width="0.0547%" height="15" fill="rgb(232,213,38)" fg:x="24143" fg:w="17"/><text x="77.9802%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (78 samples, 0.25%)</title><rect x="77.5724%" y="325" width="0.2511%" height="15" fill="rgb(207,94,22)" fg:x="24094" fg:w="78"/><text x="77.8224%" y="335.50"></text></g><g><title>truck_geometry::nurbs::knot_vec::&lt;impl truck_geometry::nurbs::KnotVec&gt;::try_bspline_basis_functions (11 samples, 0.04%)</title><rect x="77.7882%" y="309" width="0.0354%" height="15" fill="rgb(219,183,54)" fg:x="24161" fg:w="11"/><text x="78.0382%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (39 samples, 0.13%)</title><rect x="77.8236%" y="325" width="0.1256%" height="15" fill="rgb(216,185,54)" fg:x="24172" fg:w="39"/><text x="78.0736%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;f64&gt;&gt; (15 samples, 0.05%)</title><rect x="77.9491%" y="325" width="0.0483%" height="15" fill="rgb(254,217,39)" fg:x="24211" fg:w="15"/><text x="78.1991%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;alloc::vec::Vec&lt;cgmath::vector::Vector4&lt;f64&gt;&gt;&gt;,alloc::vec::into_iter::IntoIter&lt;f64&gt;&gt;&gt; (14 samples, 0.05%)</title><rect x="78.0006%" y="325" width="0.0451%" height="15" fill="rgb(240,178,23)" fg:x="24227" fg:w="14"/><text x="78.2506%" y="335.50"></text></g><g><title>crossbeam_epoch::internal::Local::unpin (7 samples, 0.02%)</title><rect x="78.0586%" y="309" width="0.0225%" height="15" fill="rgb(218,11,47)" fg:x="24245" fg:w="7"/><text x="78.3086%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::guard::Guard&gt; (11 samples, 0.04%)</title><rect x="78.0489%" y="325" width="0.0354%" height="15" fill="rgb(218,51,51)" fg:x="24242" fg:w="11"/><text x="78.2989%" y="335.50"></text></g><g><title>&lt;cgmath::vector::Vector4&lt;S&gt; as core::ops::arith::Mul&lt;S&gt;&gt;::mul (5 samples, 0.02%)</title><rect x="78.1584%" y="309" width="0.0161%" height="15" fill="rgb(238,126,27)" fg:x="24276" fg:w="5"/><text x="78.4084%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;truck_geometry::nurbs::bspsurface::&lt;impl truck_geotrait::traits::surface::ParametricSurface for truck_geometry::nurbs::BSplineSurface&lt;cgmath::vector::Vector4&lt;f64&gt;&gt;&gt;::subs::{{closure}}&gt; (28 samples, 0.09%)</title><rect x="78.0876%" y="325" width="0.0901%" height="15" fill="rgb(249,202,22)" fg:x="24254" fg:w="28"/><text x="78.3376%" y="335.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked::precondition_check (10 samples, 0.03%)</title><rect x="78.1809%" y="325" width="0.0322%" height="15" fill="rgb(254,195,49)" fg:x="24283" fg:w="10"/><text x="78.4309%" y="335.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (9 samples, 0.03%)</title><rect x="78.2260%" y="325" width="0.0290%" height="15" fill="rgb(208,123,14)" fg:x="24297" fg:w="9"/><text x="78.4760%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.04%)</title><rect x="78.3967%" y="293" width="0.0354%" height="15" fill="rgb(224,200,8)" fg:x="24350" fg:w="11"/><text x="78.6467%" y="303.50"></text></g><g><title>core::slice::raw::from_raw_parts (4 samples, 0.01%)</title><rect x="78.4192%" y="277" width="0.0129%" height="15" fill="rgb(217,61,36)" fg:x="24357" fg:w="4"/><text x="78.6692%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (15 samples, 0.05%)</title><rect x="78.3934%" y="309" width="0.0483%" height="15" fill="rgb(206,35,45)" fg:x="24349" fg:w="15"/><text x="78.6434%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (9 samples, 0.03%)</title><rect x="78.4417%" y="309" width="0.0290%" height="15" fill="rgb(217,65,33)" fg:x="24364" fg:w="9"/><text x="78.6917%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (74 samples, 0.24%)</title><rect x="78.2550%" y="325" width="0.2382%" height="15" fill="rgb(222,158,48)" fg:x="24306" fg:w="74"/><text x="78.5050%" y="335.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut::precondition_check (5 samples, 0.02%)</title><rect x="78.4771%" y="309" width="0.0161%" height="15" fill="rgb(254,2,54)" fg:x="24375" fg:w="5"/><text x="78.7271%" y="319.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;&amp;T&gt;&gt;::from (15 samples, 0.05%)</title><rect x="78.7766%" y="309" width="0.0483%" height="15" fill="rgb(250,143,38)" fg:x="24468" fg:w="15"/><text x="79.0266%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (7 samples, 0.02%)</title><rect x="78.8281%" y="309" width="0.0225%" height="15" fill="rgb(248,25,0)" fg:x="24484" fg:w="7"/><text x="79.0781%" y="319.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (126 samples, 0.41%)</title><rect x="78.4932%" y="325" width="0.4057%" height="15" fill="rgb(206,152,27)" fg:x="24380" fg:w="126"/><text x="78.7432%" y="335.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::cast (12 samples, 0.04%)</title><rect x="78.8603%" y="309" width="0.0386%" height="15" fill="rgb(240,77,30)" fg:x="24494" fg:w="12"/><text x="79.1103%" y="319.50"></text></g><g><title>handle_mm_fault (4 samples, 0.01%)</title><rect x="80.7373%" y="261" width="0.0129%" height="15" fill="rgb(231,5,3)" fg:x="25077" fg:w="4"/><text x="80.9873%" y="271.50"></text></g><g><title>exc_page_fault (5 samples, 0.02%)</title><rect x="80.7373%" y="293" width="0.0161%" height="15" fill="rgb(207,226,32)" fg:x="25077" fg:w="5"/><text x="80.9873%" y="303.50"></text></g><g><title>do_user_addr_fault (5 samples, 0.02%)</title><rect x="80.7373%" y="277" width="0.0161%" height="15" fill="rgb(222,207,47)" fg:x="25077" fg:w="5"/><text x="80.9873%" y="287.50"></text></g><g><title>asm_exc_page_fault (6 samples, 0.02%)</title><rect x="80.7373%" y="309" width="0.0193%" height="15" fill="rgb(229,115,45)" fg:x="25077" fg:w="6"/><text x="80.9873%" y="319.50"></text></g><g><title>core::fmt::Arguments::new_const (477 samples, 1.54%)</title><rect x="80.9755%" y="277" width="1.5357%" height="15" fill="rgb(224,191,6)" fg:x="25151" fg:w="477"/><text x="81.2255%" y="287.50"></text></g><g><title>core::num::&lt;impl usize&gt;::is_power_of_two (262 samples, 0.84%)</title><rect x="82.5113%" y="277" width="0.8435%" height="15" fill="rgb(230,227,24)" fg:x="25628" fg:w="262"/><text x="82.7613%" y="287.50"></text></g><g><title>core::num::&lt;impl usize&gt;::count_ones (262 samples, 0.84%)</title><rect x="82.5113%" y="261" width="0.8435%" height="15" fill="rgb(228,80,19)" fg:x="25628" fg:w="262"/><text x="82.7613%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_aligned_to (829 samples, 2.67%)</title><rect x="80.8628%" y="293" width="2.6690%" height="15" fill="rgb(247,229,0)" fg:x="25116" fg:w="829"/><text x="81.1128%" y="303.50">co..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_aligned_to::runtime_impl (55 samples, 0.18%)</title><rect x="83.3548%" y="277" width="0.1771%" height="15" fill="rgb(237,194,15)" fg:x="25890" fg:w="55"/><text x="83.6048%" y="287.50"></text></g><g><title>core::ub_checks::is_aligned_and_not_null (902 samples, 2.90%)</title><rect x="80.7566%" y="309" width="2.9041%" height="15" fill="rgb(219,203,20)" fg:x="25083" fg:w="902"/><text x="81.0066%" y="319.50">co..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (40 samples, 0.13%)</title><rect x="83.5319%" y="293" width="0.1288%" height="15" fill="rgb(234,128,8)" fg:x="25945" fg:w="40"/><text x="83.7819%" y="303.50"></text></g><g><title>core::slice::raw::from_raw_parts::precondition_check (2,095 samples, 6.75%)</title><rect x="78.8989%" y="325" width="6.7450%" height="15" fill="rgb(248,202,8)" fg:x="24506" fg:w="2095"/><text x="79.1489%" y="335.50">core::sli..</text></g><g><title>core::ub_checks::is_valid_allocation_size (616 samples, 1.98%)</title><rect x="83.6607%" y="309" width="1.9833%" height="15" fill="rgb(206,104,37)" fg:x="25985" fg:w="616"/><text x="83.9107%" y="319.50">c..</text></g><g><title>core::fmt::Arguments::new_const (83 samples, 0.27%)</title><rect x="85.9884%" y="277" width="0.2672%" height="15" fill="rgb(223,8,27)" fg:x="26708" fg:w="83"/><text x="86.2384%" y="287.50"></text></g><g><title>core::num::&lt;impl usize&gt;::is_power_of_two (81 samples, 0.26%)</title><rect x="86.2556%" y="277" width="0.2608%" height="15" fill="rgb(216,217,28)" fg:x="26791" fg:w="81"/><text x="86.5056%" y="287.50"></text></g><g><title>core::num::&lt;impl usize&gt;::count_ones (81 samples, 0.26%)</title><rect x="86.2556%" y="261" width="0.2608%" height="15" fill="rgb(249,199,1)" fg:x="26791" fg:w="81"/><text x="86.5056%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_aligned_to (193 samples, 0.62%)</title><rect x="85.9498%" y="293" width="0.6214%" height="15" fill="rgb(240,85,17)" fg:x="26696" fg:w="193"/><text x="86.1998%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_aligned_to::runtime_impl (17 samples, 0.05%)</title><rect x="86.5164%" y="277" width="0.0547%" height="15" fill="rgb(206,108,45)" fg:x="26872" fg:w="17"/><text x="86.7664%" y="287.50"></text></g><g><title>core::ub_checks::is_aligned_and_not_null (217 samples, 0.70%)</title><rect x="85.9272%" y="309" width="0.6986%" height="15" fill="rgb(245,210,41)" fg:x="26689" fg:w="217"/><text x="86.1772%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (17 samples, 0.05%)</title><rect x="86.5712%" y="293" width="0.0547%" height="15" fill="rgb(206,13,37)" fg:x="26889" fg:w="17"/><text x="86.8212%" y="303.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut::precondition_check (385 samples, 1.24%)</title><rect x="85.6439%" y="325" width="1.2395%" height="15" fill="rgb(250,61,18)" fg:x="26601" fg:w="385"/><text x="85.8939%" y="335.50"></text></g><g><title>core::ub_checks::is_valid_allocation_size (80 samples, 0.26%)</title><rect x="86.6259%" y="309" width="0.2576%" height="15" fill="rgb(235,172,48)" fg:x="26906" fg:w="80"/><text x="86.8759%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicIsize::load (16 samples, 0.05%)</title><rect x="86.8835%" y="325" width="0.0515%" height="15" fill="rgb(249,201,17)" fg:x="26986" fg:w="16"/><text x="87.1335%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (6 samples, 0.02%)</title><rect x="86.9382%" y="325" width="0.0193%" height="15" fill="rgb(219,208,6)" fg:x="27003" fg:w="6"/><text x="87.1882%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (6 samples, 0.02%)</title><rect x="86.9575%" y="325" width="0.0193%" height="15" fill="rgb(248,31,23)" fg:x="27009" fg:w="6"/><text x="87.2075%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (5 samples, 0.02%)</title><rect x="86.9768%" y="325" width="0.0161%" height="15" fill="rgb(245,15,42)" fg:x="27015" fg:w="5"/><text x="87.2268%" y="335.50"></text></g><g><title>asm_sysvec_irq_work (4 samples, 0.01%)</title><rect x="87.1636%" y="309" width="0.0129%" height="15" fill="rgb(222,217,39)" fg:x="27073" fg:w="4"/><text x="87.4136%" y="319.50"></text></g><g><title>sysvec_irq_work (4 samples, 0.01%)</title><rect x="87.1636%" y="293" width="0.0129%" height="15" fill="rgb(210,219,27)" fg:x="27073" fg:w="4"/><text x="87.4136%" y="303.50"></text></g><g><title>__sysvec_irq_work (4 samples, 0.01%)</title><rect x="87.1636%" y="277" width="0.0129%" height="15" fill="rgb(252,166,36)" fg:x="27073" fg:w="4"/><text x="87.4136%" y="287.50"></text></g><g><title>irq_work_run (4 samples, 0.01%)</title><rect x="87.1636%" y="261" width="0.0129%" height="15" fill="rgb(245,132,34)" fg:x="27073" fg:w="4"/><text x="87.4136%" y="271.50"></text></g><g><title>perf_pending_irq (4 samples, 0.01%)</title><rect x="87.1636%" y="245" width="0.0129%" height="15" fill="rgb(236,54,3)" fg:x="27073" fg:w="4"/><text x="87.4136%" y="255.50"></text></g><g><title>__wake_up (4 samples, 0.01%)</title><rect x="87.1636%" y="229" width="0.0129%" height="15" fill="rgb(241,173,43)" fg:x="27073" fg:w="4"/><text x="87.4136%" y="239.50"></text></g><g><title>pollwake (4 samples, 0.01%)</title><rect x="87.1636%" y="213" width="0.0129%" height="15" fill="rgb(215,190,9)" fg:x="27073" fg:w="4"/><text x="87.4136%" y="223.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (62 samples, 0.20%)</title><rect x="86.9929%" y="325" width="0.1996%" height="15" fill="rgb(242,101,16)" fg:x="27020" fg:w="62"/><text x="87.2429%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_load (68 samples, 0.22%)</title><rect x="87.1925%" y="325" width="0.2189%" height="15" fill="rgb(223,190,21)" fg:x="27082" fg:w="68"/><text x="87.4425%" y="335.50"></text></g><g><title>core::fmt::Arguments::new_const (7 samples, 0.02%)</title><rect x="87.3889%" y="309" width="0.0225%" height="15" fill="rgb(215,228,25)" fg:x="27143" fg:w="7"/><text x="87.6389%" y="319.50"></text></g><g><title>core::sync::atomic::compiler_fence (4 samples, 0.01%)</title><rect x="87.4179%" y="325" width="0.0129%" height="15" fill="rgb(225,36,22)" fg:x="27152" fg:w="4"/><text x="87.6679%" y="335.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (28 samples, 0.09%)</title><rect x="87.4437%" y="325" width="0.0901%" height="15" fill="rgb(251,106,46)" fg:x="27160" fg:w="28"/><text x="87.6937%" y="335.50"></text></g><g><title>crossbeam_deque::deque::Worker&lt;T&gt;::pop (9 samples, 0.03%)</title><rect x="87.5338%" y="325" width="0.0290%" height="15" fill="rgb(208,90,1)" fg:x="27188" fg:w="9"/><text x="87.7838%" y="335.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::{{constant}}::{{closure}} (5 samples, 0.02%)</title><rect x="87.5789%" y="325" width="0.0161%" height="15" fill="rgb(243,10,4)" fg:x="27202" fg:w="5"/><text x="87.8289%" y="335.50"></text></g><g><title>crossbeam_epoch::default::with_handle (9 samples, 0.03%)</title><rect x="87.6272%" y="325" width="0.0290%" height="15" fill="rgb(212,137,27)" fg:x="27217" fg:w="9"/><text x="87.8772%" y="335.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (5 samples, 0.02%)</title><rect x="87.6561%" y="325" width="0.0161%" height="15" fill="rgb(231,220,49)" fg:x="27226" fg:w="5"/><text x="87.9061%" y="335.50"></text></g><g><title>crossbeam_epoch::default::with_handle (4 samples, 0.01%)</title><rect x="87.6722%" y="325" width="0.0129%" height="15" fill="rgb(237,96,20)" fg:x="27231" fg:w="4"/><text x="87.9222%" y="335.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::compare_exchange (11 samples, 0.04%)</title><rect x="87.6851%" y="325" width="0.0354%" height="15" fill="rgb(239,229,30)" fg:x="27235" fg:w="11"/><text x="87.9351%" y="335.50"></text></g><g><title>crossbeam_epoch::internal::Local::global (4 samples, 0.01%)</title><rect x="87.7592%" y="325" width="0.0129%" height="15" fill="rgb(219,65,33)" fg:x="27258" fg:w="4"/><text x="88.0092%" y="335.50"></text></g><g><title>crossbeam_epoch::internal::Local::is_pinned (4 samples, 0.01%)</title><rect x="87.7721%" y="325" width="0.0129%" height="15" fill="rgb(243,134,7)" fg:x="27262" fg:w="4"/><text x="88.0221%" y="335.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (47 samples, 0.15%)</title><rect x="87.7849%" y="325" width="0.1513%" height="15" fill="rgb(216,177,54)" fg:x="27266" fg:w="47"/><text x="88.0349%" y="335.50"></text></g><g><title>crossbeam_epoch::internal::Local::unpin (9 samples, 0.03%)</title><rect x="87.9363%" y="325" width="0.0290%" height="15" fill="rgb(211,160,20)" fg:x="27313" fg:w="9"/><text x="88.1863%" y="335.50"></text></g><g><title>crossbeam_epoch::primitive::cell::UnsafeCell&lt;T&gt;::with (8 samples, 0.03%)</title><rect x="87.9652%" y="325" width="0.0258%" height="15" fill="rgb(239,85,39)" fg:x="27322" fg:w="8"/><text x="88.2152%" y="335.50"></text></g><g><title>__se_sys_futex (5 samples, 0.02%)</title><rect x="88.0039%" y="293" width="0.0161%" height="15" fill="rgb(232,125,22)" fg:x="27334" fg:w="5"/><text x="88.2539%" y="303.50"></text></g><g><title>do_futex (5 samples, 0.02%)</title><rect x="88.0039%" y="277" width="0.0161%" height="15" fill="rgb(244,57,34)" fg:x="27334" fg:w="5"/><text x="88.2539%" y="287.50"></text></g><g><title>pick_next_task_fair (4 samples, 0.01%)</title><rect x="88.0554%" y="245" width="0.0129%" height="15" fill="rgb(214,203,32)" fg:x="27350" fg:w="4"/><text x="88.3054%" y="255.50"></text></g><g><title>entry_SYSCALL_64 (24 samples, 0.08%)</title><rect x="88.0006%" y="325" width="0.0773%" height="15" fill="rgb(207,58,43)" fg:x="27333" fg:w="24"/><text x="88.2506%" y="335.50"></text></g><g><title>do_syscall_64 (24 samples, 0.08%)</title><rect x="88.0006%" y="309" width="0.0773%" height="15" fill="rgb(215,193,15)" fg:x="27333" fg:w="24"/><text x="88.2506%" y="319.50"></text></g><g><title>x64_sys_call (11 samples, 0.04%)</title><rect x="88.0425%" y="293" width="0.0354%" height="15" fill="rgb(232,15,44)" fg:x="27346" fg:w="11"/><text x="88.2925%" y="303.50"></text></g><g><title>schedule (9 samples, 0.03%)</title><rect x="88.0489%" y="277" width="0.0290%" height="15" fill="rgb(212,3,48)" fg:x="27348" fg:w="9"/><text x="88.2989%" y="287.50"></text></g><g><title>__sched_text_start (9 samples, 0.03%)</title><rect x="88.0489%" y="261" width="0.0290%" height="15" fill="rgb(218,128,7)" fg:x="27348" fg:w="9"/><text x="88.2989%" y="271.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (5 samples, 0.02%)</title><rect x="88.1165%" y="325" width="0.0161%" height="15" fill="rgb(226,216,39)" fg:x="27369" fg:w="5"/><text x="88.3665%" y="335.50"></text></g><g><title>__sched_yield (8 samples, 0.03%)</title><rect x="88.1745%" y="309" width="0.0258%" height="15" fill="rgb(243,47,51)" fg:x="27387" fg:w="8"/><text x="88.4245%" y="319.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.02%)</title><rect x="88.1809%" y="293" width="0.0193%" height="15" fill="rgb(241,183,40)" fg:x="27389" fg:w="6"/><text x="88.4309%" y="303.50"></text></g><g><title>do_syscall_64 (6 samples, 0.02%)</title><rect x="88.1809%" y="277" width="0.0193%" height="15" fill="rgb(231,217,32)" fg:x="27389" fg:w="6"/><text x="88.4309%" y="287.50"></text></g><g><title>x64_sys_call (4 samples, 0.01%)</title><rect x="88.1874%" y="261" width="0.0129%" height="15" fill="rgb(229,61,38)" fg:x="27391" fg:w="4"/><text x="88.4374%" y="271.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (18 samples, 0.06%)</title><rect x="88.1455%" y="325" width="0.0580%" height="15" fill="rgb(225,210,5)" fg:x="27378" fg:w="18"/><text x="88.3955%" y="335.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.01%)</title><rect x="88.2292%" y="309" width="0.0129%" height="15" fill="rgb(231,79,45)" fg:x="27404" fg:w="4"/><text x="88.4792%" y="319.50"></text></g><g><title>rayon_core::sleep::Sleep::sleep (15 samples, 0.05%)</title><rect x="88.2035%" y="325" width="0.0483%" height="15" fill="rgb(224,100,7)" fg:x="27396" fg:w="15"/><text x="88.4535%" y="335.50"></text></g><g><title>ret_from_fork (5 samples, 0.02%)</title><rect x="88.2550%" y="309" width="0.0161%" height="15" fill="rgb(241,198,18)" fg:x="27412" fg:w="5"/><text x="88.5050%" y="319.50"></text></g><g><title>arch_exit_to_user_mode_prepare (26 samples, 0.08%)</title><rect x="88.2711%" y="293" width="0.0837%" height="15" fill="rgb(252,97,53)" fg:x="27417" fg:w="26"/><text x="88.5211%" y="303.50"></text></g><g><title>fpregs_restore_userregs.llvm.3901678159859813955 (24 samples, 0.08%)</title><rect x="88.2775%" y="277" width="0.0773%" height="15" fill="rgb(220,88,7)" fg:x="27419" fg:w="24"/><text x="88.5275%" y="287.50"></text></g><g><title>restore_fpregs_from_fpstate (23 samples, 0.07%)</title><rect x="88.2807%" y="261" width="0.0741%" height="15" fill="rgb(213,176,14)" fg:x="27420" fg:w="23"/><text x="88.5307%" y="271.50"></text></g><g><title>ret_from_fork_asm (34 samples, 0.11%)</title><rect x="88.2550%" y="325" width="0.1095%" height="15" fill="rgb(246,73,7)" fg:x="27412" fg:w="34"/><text x="88.5050%" y="335.50"></text></g><g><title>syscall_exit_to_user_mode (29 samples, 0.09%)</title><rect x="88.2711%" y="309" width="0.0934%" height="15" fill="rgb(245,64,36)" fg:x="27417" fg:w="29"/><text x="88.5211%" y="319.50"></text></g><g><title>robust::incircleadapt (76 samples, 0.24%)</title><rect x="88.3741%" y="325" width="0.2447%" height="15" fill="rgb(245,80,10)" fg:x="27449" fg:w="76"/><text x="88.6241%" y="335.50"></text></g><g><title>robust::scale_expansion_zeroelim (4 samples, 0.01%)</title><rect x="88.6220%" y="325" width="0.0129%" height="15" fill="rgb(232,107,50)" fg:x="27526" fg:w="4"/><text x="88.8720%" y="335.50"></text></g><g><title>robust::two_product_presplit (6 samples, 0.02%)</title><rect x="88.6413%" y="325" width="0.0193%" height="15" fill="rgb(253,3,0)" fg:x="27532" fg:w="6"/><text x="88.8913%" y="335.50"></text></g><g><title>spade::delaunay_core::dcel::Dcel&lt;V,DE,UE,F&gt;::edge_entry (9 samples, 0.03%)</title><rect x="88.6993%" y="325" width="0.0290%" height="15" fill="rgb(212,99,53)" fg:x="27550" fg:w="9"/><text x="88.9493%" y="335.50"></text></g><g><title>spade::delaunay_core::dcel::Dcel&lt;V,DE,UE,F&gt;::edge_entry_mut (6 samples, 0.02%)</title><rect x="88.7283%" y="325" width="0.0193%" height="15" fill="rgb(249,111,54)" fg:x="27559" fg:w="6"/><text x="88.9783%" y="335.50"></text></g><g><title>spade::delaunay_core::dcel::Dcel&lt;V,DE,UE,F&gt;::half_edge (13 samples, 0.04%)</title><rect x="88.7540%" y="325" width="0.0419%" height="15" fill="rgb(249,55,30)" fg:x="27567" fg:w="13"/><text x="89.0040%" y="335.50"></text></g><g><title>spade::delaunay_core::dcel::Dcel&lt;V,DE,UE,F&gt;::half_edge_mut (4 samples, 0.01%)</title><rect x="88.7959%" y="325" width="0.0129%" height="15" fill="rgb(237,47,42)" fg:x="27580" fg:w="4"/><text x="89.0459%" y="335.50"></text></g><g><title>spade::delaunay_core::handles::handle_defs::FixedHandleImpl&lt;Type,InnerOuter&gt;::new_internal (4 samples, 0.01%)</title><rect x="88.8635%" y="309" width="0.0129%" height="15" fill="rgb(211,20,18)" fg:x="27601" fg:w="4"/><text x="89.1135%" y="319.50"></text></g><g><title>spade::delaunay_core::handles::handle_defs::FixedHandleImpl&lt;Type,InnerOuter&gt;::new (12 samples, 0.04%)</title><rect x="88.8410%" y="325" width="0.0386%" height="15" fill="rgb(231,203,46)" fg:x="27594" fg:w="12"/><text x="89.0910%" y="335.50"></text></g><g><title>spade::delaunay_core::handles::handle_defs::FixedHandleImpl&lt;Type,InnerOuter&gt;::new_internal (10 samples, 0.03%)</title><rect x="88.8796%" y="325" width="0.0322%" height="15" fill="rgb(237,142,3)" fg:x="27606" fg:w="10"/><text x="89.1296%" y="335.50"></text></g><g><title>spade::delaunay_core::handles::handle_impls::&lt;impl spade::delaunay_core::handles::handle_defs::DynamicHandleImpl&lt;V,DE,UE,F,spade::delaunay_core::handles::handle_defs::DirectedEdgeTag,spade::delaunay_core::handles::public_handles::InnerTag&gt;&gt;::side_query (4 samples, 0.01%)</title><rect x="88.9504%" y="325" width="0.0129%" height="15" fill="rgb(241,107,1)" fg:x="27628" fg:w="4"/><text x="89.2004%" y="335.50"></text></g><g><title>spade::delaunay_core::handles::handle_impls::&lt;impl spade::delaunay_core::handles::handle_defs::FixedHandleImpl&lt;spade::delaunay_core::handles::handle_defs::DirectedEdgeTag,spade::delaunay_core::handles::public_handles::InnerTag&gt;&gt;::as_undirected (13 samples, 0.04%)</title><rect x="88.9794%" y="325" width="0.0419%" height="15" fill="rgb(229,83,13)" fg:x="27637" fg:w="13"/><text x="89.2294%" y="335.50"></text></g><g><title>spade::delaunay_core::handles::handle_impls::&lt;impl spade::delaunay_core::handles::handle_defs::FixedHandleImpl&lt;spade::delaunay_core::handles::handle_defs::DirectedEdgeTag,spade::delaunay_core::handles::public_handles::InnerTag&gt;&gt;::normalize_index (9 samples, 0.03%)</title><rect x="89.0245%" y="325" width="0.0290%" height="15" fill="rgb(241,91,40)" fg:x="27651" fg:w="9"/><text x="89.2745%" y="335.50"></text></g><g><title>spade::delaunay_core::triangulation_ext::TriangulationExt::legalize_edge (11 samples, 0.04%)</title><rect x="89.0631%" y="325" width="0.0354%" height="15" fill="rgb(225,3,45)" fg:x="27663" fg:w="11"/><text x="89.3131%" y="335.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::abs (32 samples, 0.10%)</title><rect x="89.1339%" y="325" width="0.1030%" height="15" fill="rgb(244,223,14)" fg:x="27685" fg:w="32"/><text x="89.3839%" y="335.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.01%)</title><rect x="89.2466%" y="293" width="0.0129%" height="15" fill="rgb(224,124,37)" fg:x="27720" fg:w="4"/><text x="89.4966%" y="303.50"></text></g><g><title>std::io::Write::write_fmt (10 samples, 0.03%)</title><rect x="89.2402%" y="325" width="0.0322%" height="15" fill="rgb(251,171,30)" fg:x="27718" fg:w="10"/><text x="89.4902%" y="335.50"></text></g><g><title>core::fmt::write (9 samples, 0.03%)</title><rect x="89.2434%" y="309" width="0.0290%" height="15" fill="rgb(236,46,54)" fg:x="27719" fg:w="9"/><text x="89.4934%" y="319.50"></text></g><g><title>core::fmt::run (4 samples, 0.01%)</title><rect x="89.2595%" y="293" width="0.0129%" height="15" fill="rgb(245,213,5)" fg:x="27724" fg:w="4"/><text x="89.5095%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.01%)</title><rect x="89.2595%" y="277" width="0.0129%" height="15" fill="rgb(230,144,27)" fg:x="27724" fg:w="4"/><text x="89.5095%" y="287.50"></text></g><g><title>core::fmt::float::float_to_exponential_common_exact (4 samples, 0.01%)</title><rect x="89.2595%" y="261" width="0.0129%" height="15" fill="rgb(220,86,6)" fg:x="27724" fg:w="4"/><text x="89.5095%" y="271.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (4 samples, 0.01%)</title><rect x="89.2724%" y="325" width="0.0129%" height="15" fill="rgb(240,20,13)" fg:x="27728" fg:w="4"/><text x="89.5224%" y="335.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (7 samples, 0.02%)</title><rect x="89.3014%" y="261" width="0.0225%" height="15" fill="rgb(217,89,34)" fg:x="27737" fg:w="7"/><text x="89.5514%" y="271.50"></text></g><g><title>__sysvec_irq_work (5 samples, 0.02%)</title><rect x="89.3335%" y="213" width="0.0161%" height="15" fill="rgb(229,13,5)" fg:x="27747" fg:w="5"/><text x="89.5835%" y="223.50"></text></g><g><title>irq_work_run (5 samples, 0.02%)</title><rect x="89.3335%" y="197" width="0.0161%" height="15" fill="rgb(244,67,35)" fg:x="27747" fg:w="5"/><text x="89.5835%" y="207.50"></text></g><g><title>perf_pending_irq (5 samples, 0.02%)</title><rect x="89.3335%" y="181" width="0.0161%" height="15" fill="rgb(221,40,2)" fg:x="27747" fg:w="5"/><text x="89.5835%" y="191.50"></text></g><g><title>__wake_up (5 samples, 0.02%)</title><rect x="89.3335%" y="165" width="0.0161%" height="15" fill="rgb(237,157,21)" fg:x="27747" fg:w="5"/><text x="89.5835%" y="175.50"></text></g><g><title>asm_sysvec_irq_work (6 samples, 0.02%)</title><rect x="89.3335%" y="245" width="0.0193%" height="15" fill="rgb(222,94,11)" fg:x="27747" fg:w="6"/><text x="89.5835%" y="255.50"></text></g><g><title>sysvec_irq_work (6 samples, 0.02%)</title><rect x="89.3335%" y="229" width="0.0193%" height="15" fill="rgb(249,113,6)" fg:x="27747" fg:w="6"/><text x="89.5835%" y="239.50"></text></g><g><title>asm_sysvec_irq_work (7 samples, 0.02%)</title><rect x="89.4173%" y="197" width="0.0225%" height="15" fill="rgb(238,137,36)" fg:x="27773" fg:w="7"/><text x="89.6673%" y="207.50"></text></g><g><title>sysvec_irq_work (7 samples, 0.02%)</title><rect x="89.4173%" y="181" width="0.0225%" height="15" fill="rgb(210,102,26)" fg:x="27773" fg:w="7"/><text x="89.6673%" y="191.50"></text></g><g><title>__sysvec_irq_work (6 samples, 0.02%)</title><rect x="89.4205%" y="165" width="0.0193%" height="15" fill="rgb(218,30,30)" fg:x="27774" fg:w="6"/><text x="89.6705%" y="175.50"></text></g><g><title>irq_work_run (6 samples, 0.02%)</title><rect x="89.4205%" y="149" width="0.0193%" height="15" fill="rgb(214,67,26)" fg:x="27774" fg:w="6"/><text x="89.6705%" y="159.50"></text></g><g><title>perf_pending_irq (5 samples, 0.02%)</title><rect x="89.4237%" y="133" width="0.0161%" height="15" fill="rgb(251,9,53)" fg:x="27775" fg:w="5"/><text x="89.6737%" y="143.50"></text></g><g><title>__wake_up (5 samples, 0.02%)</title><rect x="89.4237%" y="117" width="0.0161%" height="15" fill="rgb(228,204,25)" fg:x="27775" fg:w="5"/><text x="89.6737%" y="127.50"></text></g><g><title>pollwake (5 samples, 0.02%)</title><rect x="89.4237%" y="101" width="0.0161%" height="15" fill="rgb(207,153,8)" fg:x="27775" fg:w="5"/><text x="89.6737%" y="111.50"></text></g><g><title>try_to_wake_up (4 samples, 0.01%)</title><rect x="89.4269%" y="85" width="0.0129%" height="15" fill="rgb(242,9,16)" fg:x="27776" fg:w="4"/><text x="89.6769%" y="95.50"></text></g><g><title>_raw_spin_lock (4 samples, 0.01%)</title><rect x="89.4945%" y="133" width="0.0129%" height="15" fill="rgb(217,211,10)" fg:x="27797" fg:w="4"/><text x="89.7445%" y="143.50"></text></g><g><title>futex_unqueue (10 samples, 0.03%)</title><rect x="89.4816%" y="149" width="0.0322%" height="15" fill="rgb(219,228,52)" fg:x="27793" fg:w="10"/><text x="89.7316%" y="159.50"></text></g><g><title>__perf_event_task_sched_in (10 samples, 0.03%)</title><rect x="89.5428%" y="101" width="0.0322%" height="15" fill="rgb(231,92,29)" fg:x="27812" fg:w="10"/><text x="89.7928%" y="111.50"></text></g><g><title>ctx_groups_sched_in (9 samples, 0.03%)</title><rect x="89.5460%" y="85" width="0.0290%" height="15" fill="rgb(232,8,23)" fg:x="27813" fg:w="9"/><text x="89.7960%" y="95.50"></text></g><g><title>visit_groups_merge (9 samples, 0.03%)</title><rect x="89.5460%" y="69" width="0.0290%" height="15" fill="rgb(216,211,34)" fg:x="27813" fg:w="9"/><text x="89.7960%" y="79.50"></text></g><g><title>asm_sysvec_call_function_single (4 samples, 0.01%)</title><rect x="89.5750%" y="101" width="0.0129%" height="15" fill="rgb(236,151,0)" fg:x="27822" fg:w="4"/><text x="89.8250%" y="111.50"></text></g><g><title>sysvec_call_function_single (4 samples, 0.01%)</title><rect x="89.5750%" y="85" width="0.0129%" height="15" fill="rgb(209,168,3)" fg:x="27822" fg:w="4"/><text x="89.8250%" y="95.50"></text></g><g><title>__sysvec_call_function_single (4 samples, 0.01%)</title><rect x="89.5750%" y="69" width="0.0129%" height="15" fill="rgb(208,129,28)" fg:x="27822" fg:w="4"/><text x="89.8250%" y="79.50"></text></g><g><title>__flush_smp_call_function_queue.llvm.12183006790992678751 (4 samples, 0.01%)</title><rect x="89.5750%" y="53" width="0.0129%" height="15" fill="rgb(229,78,22)" fg:x="27822" fg:w="4"/><text x="89.8250%" y="63.50"></text></g><g><title>finish_task_switch (19 samples, 0.06%)</title><rect x="89.5299%" y="117" width="0.0612%" height="15" fill="rgb(228,187,13)" fg:x="27808" fg:w="19"/><text x="89.7799%" y="127.50"></text></g><g><title>__se_sys_futex (65 samples, 0.21%)</title><rect x="89.3851%" y="213" width="0.2093%" height="15" fill="rgb(240,119,24)" fg:x="27763" fg:w="65"/><text x="89.6351%" y="223.50"></text></g><g><title>do_futex (48 samples, 0.15%)</title><rect x="89.4398%" y="197" width="0.1545%" height="15" fill="rgb(209,194,42)" fg:x="27780" fg:w="48"/><text x="89.6898%" y="207.50"></text></g><g><title>futex_wait (47 samples, 0.15%)</title><rect x="89.4430%" y="181" width="0.1513%" height="15" fill="rgb(247,200,46)" fg:x="27781" fg:w="47"/><text x="89.6930%" y="191.50"></text></g><g><title>__futex_wait (39 samples, 0.13%)</title><rect x="89.4688%" y="165" width="0.1256%" height="15" fill="rgb(218,76,16)" fg:x="27789" fg:w="39"/><text x="89.7188%" y="175.50"></text></g><g><title>schedule (24 samples, 0.08%)</title><rect x="89.5171%" y="149" width="0.0773%" height="15" fill="rgb(225,21,48)" fg:x="27804" fg:w="24"/><text x="89.7671%" y="159.50"></text></g><g><title>__sched_text_start (22 samples, 0.07%)</title><rect x="89.5235%" y="133" width="0.0708%" height="15" fill="rgb(239,223,50)" fg:x="27806" fg:w="22"/><text x="89.7735%" y="143.50"></text></g><g><title>__get_user_8 (32 samples, 0.10%)</title><rect x="89.6491%" y="181" width="0.1030%" height="15" fill="rgb(244,45,21)" fg:x="27845" fg:w="32"/><text x="89.8991%" y="191.50"></text></g><g><title>__rseq_handle_notify_resume (48 samples, 0.15%)</title><rect x="89.6008%" y="197" width="0.1545%" height="15" fill="rgb(232,33,43)" fg:x="27830" fg:w="48"/><text x="89.8508%" y="207.50"></text></g><g><title>queued_spin_lock_slowpath (10 samples, 0.03%)</title><rect x="89.7907%" y="133" width="0.0322%" height="15" fill="rgb(209,8,3)" fg:x="27889" fg:w="10"/><text x="90.0407%" y="143.50"></text></g><g><title>do_group_exit (18 samples, 0.06%)</title><rect x="89.7746%" y="165" width="0.0580%" height="15" fill="rgb(214,25,53)" fg:x="27884" fg:w="18"/><text x="90.0246%" y="175.50"></text></g><g><title>do_exit (18 samples, 0.06%)</title><rect x="89.7746%" y="149" width="0.0580%" height="15" fill="rgb(254,186,54)" fg:x="27884" fg:w="18"/><text x="90.0246%" y="159.50"></text></g><g><title>queued_spin_lock_slowpath (31 samples, 0.10%)</title><rect x="89.8326%" y="165" width="0.0998%" height="15" fill="rgb(208,174,49)" fg:x="27902" fg:w="31"/><text x="90.0826%" y="175.50"></text></g><g><title>arch_do_signal_or_restart (56 samples, 0.18%)</title><rect x="89.7553%" y="197" width="0.1803%" height="15" fill="rgb(233,191,51)" fg:x="27878" fg:w="56"/><text x="90.0053%" y="207.50"></text></g><g><title>get_signal (56 samples, 0.18%)</title><rect x="89.7553%" y="181" width="0.1803%" height="15" fill="rgb(222,134,10)" fg:x="27878" fg:w="56"/><text x="90.0053%" y="191.50"></text></g><g><title>arch_exit_to_user_mode_prepare (59 samples, 0.19%)</title><rect x="89.9356%" y="197" width="0.1900%" height="15" fill="rgb(230,226,20)" fg:x="27934" fg:w="59"/><text x="90.1856%" y="207.50"></text></g><g><title>fpregs_restore_userregs.llvm.3901678159859813955 (58 samples, 0.19%)</title><rect x="89.9388%" y="181" width="0.1867%" height="15" fill="rgb(251,111,25)" fg:x="27935" fg:w="58"/><text x="90.1888%" y="191.50"></text></g><g><title>restore_fpregs_from_fpstate (47 samples, 0.15%)</title><rect x="89.9742%" y="165" width="0.1513%" height="15" fill="rgb(224,40,46)" fg:x="27946" fg:w="47"/><text x="90.2242%" y="175.50"></text></g><g><title>blkcg_maybe_throttle_current (11 samples, 0.04%)</title><rect x="90.1674%" y="181" width="0.0354%" height="15" fill="rgb(236,108,47)" fg:x="28006" fg:w="11"/><text x="90.4174%" y="191.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (287 samples, 0.92%)</title><rect x="89.2917%" y="277" width="0.9240%" height="15" fill="rgb(234,93,0)" fg:x="27734" fg:w="287"/><text x="89.5417%" y="287.50"></text></g><g><title>syscall (277 samples, 0.89%)</title><rect x="89.3239%" y="261" width="0.8918%" height="15" fill="rgb(224,213,32)" fg:x="27744" fg:w="277"/><text x="89.5739%" y="271.50"></text></g><g><title>entry_SYSCALL_64 (268 samples, 0.86%)</title><rect x="89.3529%" y="245" width="0.8628%" height="15" fill="rgb(251,11,48)" fg:x="27753" fg:w="268"/><text x="89.6029%" y="255.50"></text></g><g><title>do_syscall_64 (261 samples, 0.84%)</title><rect x="89.3754%" y="229" width="0.8403%" height="15" fill="rgb(236,173,5)" fg:x="27760" fg:w="261"/><text x="89.6254%" y="239.50"></text></g><g><title>syscall_exit_to_user_mode (193 samples, 0.62%)</title><rect x="89.5943%" y="213" width="0.6214%" height="15" fill="rgb(230,95,12)" fg:x="27828" fg:w="193"/><text x="89.8443%" y="223.50"></text></g><g><title>resume_user_mode_work (26 samples, 0.08%)</title><rect x="90.1320%" y="197" width="0.0837%" height="15" fill="rgb(232,209,1)" fg:x="27995" fg:w="26"/><text x="90.3820%" y="207.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (21 samples, 0.07%)</title><rect x="90.2157%" y="261" width="0.0676%" height="15" fill="rgb(232,6,1)" fg:x="28021" fg:w="21"/><text x="90.4657%" y="271.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (21 samples, 0.07%)</title><rect x="90.2157%" y="245" width="0.0676%" height="15" fill="rgb(210,224,50)" fg:x="28021" fg:w="21"/><text x="90.4657%" y="255.50"></text></g><g><title>std::sync::condvar::Condvar::wait (313 samples, 1.01%)</title><rect x="89.2853%" y="325" width="1.0077%" height="15" fill="rgb(228,127,35)" fg:x="27732" fg:w="313"/><text x="89.5353%" y="335.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (311 samples, 1.00%)</title><rect x="89.2917%" y="309" width="1.0013%" height="15" fill="rgb(245,102,45)" fg:x="27734" fg:w="311"/><text x="89.5417%" y="319.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_optional_timeout (311 samples, 1.00%)</title><rect x="89.2917%" y="293" width="1.0013%" height="15" fill="rgb(214,1,49)" fg:x="27734" fg:w="311"/><text x="89.5417%" y="303.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (24 samples, 0.08%)</title><rect x="90.2157%" y="277" width="0.0773%" height="15" fill="rgb(226,163,40)" fg:x="28021" fg:w="24"/><text x="90.4657%" y="287.50"></text></g><g><title>finish_task_switch (5 samples, 0.02%)</title><rect x="90.3220%" y="117" width="0.0161%" height="15" fill="rgb(239,212,28)" fg:x="28054" fg:w="5"/><text x="90.5720%" y="127.50"></text></g><g><title>asm_sysvec_call_function_single (4 samples, 0.01%)</title><rect x="90.3252%" y="101" width="0.0129%" height="15" fill="rgb(220,20,13)" fg:x="28055" fg:w="4"/><text x="90.5752%" y="111.50"></text></g><g><title>__se_sys_futex (13 samples, 0.04%)</title><rect x="90.3091%" y="213" width="0.0419%" height="15" fill="rgb(210,164,35)" fg:x="28050" fg:w="13"/><text x="90.5591%" y="223.50"></text></g><g><title>do_futex (12 samples, 0.04%)</title><rect x="90.3123%" y="197" width="0.0386%" height="15" fill="rgb(248,109,41)" fg:x="28051" fg:w="12"/><text x="90.5623%" y="207.50"></text></g><g><title>futex_wait (12 samples, 0.04%)</title><rect x="90.3123%" y="181" width="0.0386%" height="15" fill="rgb(238,23,50)" fg:x="28051" fg:w="12"/><text x="90.5623%" y="191.50"></text></g><g><title>__futex_wait (10 samples, 0.03%)</title><rect x="90.3187%" y="165" width="0.0322%" height="15" fill="rgb(211,48,49)" fg:x="28053" fg:w="10"/><text x="90.5687%" y="175.50"></text></g><g><title>schedule (9 samples, 0.03%)</title><rect x="90.3220%" y="149" width="0.0290%" height="15" fill="rgb(223,36,21)" fg:x="28054" fg:w="9"/><text x="90.5720%" y="159.50"></text></g><g><title>__sched_text_start (9 samples, 0.03%)</title><rect x="90.3220%" y="133" width="0.0290%" height="15" fill="rgb(207,123,46)" fg:x="28054" fg:w="9"/><text x="90.5720%" y="143.50"></text></g><g><title>pick_next_task_fair (4 samples, 0.01%)</title><rect x="90.3381%" y="117" width="0.0129%" height="15" fill="rgb(240,218,32)" fg:x="28059" fg:w="4"/><text x="90.5881%" y="127.50"></text></g><g><title>sched_balance_newidle (4 samples, 0.01%)</title><rect x="90.3381%" y="101" width="0.0129%" height="15" fill="rgb(252,5,43)" fg:x="28059" fg:w="4"/><text x="90.5881%" y="111.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (23 samples, 0.07%)</title><rect x="90.2962%" y="277" width="0.0741%" height="15" fill="rgb(252,84,19)" fg:x="28046" fg:w="23"/><text x="90.5462%" y="287.50"></text></g><g><title>syscall (21 samples, 0.07%)</title><rect x="90.3026%" y="261" width="0.0676%" height="15" fill="rgb(243,152,39)" fg:x="28048" fg:w="21"/><text x="90.5526%" y="271.50"></text></g><g><title>entry_SYSCALL_64 (20 samples, 0.06%)</title><rect x="90.3059%" y="245" width="0.0644%" height="15" fill="rgb(234,160,15)" fg:x="28049" fg:w="20"/><text x="90.5559%" y="255.50"></text></g><g><title>do_syscall_64 (19 samples, 0.06%)</title><rect x="90.3091%" y="229" width="0.0612%" height="15" fill="rgb(237,34,20)" fg:x="28050" fg:w="19"/><text x="90.5591%" y="239.50"></text></g><g><title>syscall_exit_to_user_mode (6 samples, 0.02%)</title><rect x="90.3509%" y="213" width="0.0193%" height="15" fill="rgb(229,97,13)" fg:x="28063" fg:w="6"/><text x="90.6009%" y="223.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (25 samples, 0.08%)</title><rect x="90.2930%" y="325" width="0.0805%" height="15" fill="rgb(234,71,50)" fg:x="28045" fg:w="25"/><text x="90.5430%" y="335.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (25 samples, 0.08%)</title><rect x="90.2930%" y="309" width="0.0805%" height="15" fill="rgb(253,155,4)" fg:x="28045" fg:w="25"/><text x="90.5430%" y="319.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (24 samples, 0.08%)</title><rect x="90.2962%" y="293" width="0.0773%" height="15" fill="rgb(222,185,37)" fg:x="28046" fg:w="24"/><text x="90.5462%" y="303.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (4 samples, 0.01%)</title><rect x="90.4379%" y="293" width="0.0129%" height="15" fill="rgb(251,177,13)" fg:x="28090" fg:w="4"/><text x="90.6879%" y="303.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (24 samples, 0.08%)</title><rect x="90.3799%" y="325" width="0.0773%" height="15" fill="rgb(250,179,40)" fg:x="28072" fg:w="24"/><text x="90.6299%" y="335.50"></text></g><g><title>core::ptr::null (6 samples, 0.02%)</title><rect x="90.4379%" y="309" width="0.0193%" height="15" fill="rgb(242,44,2)" fg:x="28090" fg:w="6"/><text x="90.6879%" y="319.50"></text></g><g><title>asm_sysvec_reschedule_ipi (4 samples, 0.01%)</title><rect x="90.5216%" y="309" width="0.0129%" height="15" fill="rgb(216,177,13)" fg:x="28116" fg:w="4"/><text x="90.7716%" y="319.50"></text></g><g><title>irqentry_exit_to_user_mode (4 samples, 0.01%)</title><rect x="90.5216%" y="293" width="0.0129%" height="15" fill="rgb(216,106,43)" fg:x="28116" fg:w="4"/><text x="90.7716%" y="303.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (33 samples, 0.11%)</title><rect x="90.4572%" y="325" width="0.1062%" height="15" fill="rgb(216,183,2)" fg:x="28096" fg:w="33"/><text x="90.7072%" y="335.50"></text></g><g><title>truck_base::tolerance::Tolerance::near (117 samples, 0.38%)</title><rect x="90.5666%" y="325" width="0.3767%" height="15" fill="rgb(249,75,3)" fg:x="28130" fg:w="117"/><text x="90.8166%" y="335.50"></text></g><g><title>core::slice::raw::from_raw_parts::precondition_check (7 samples, 0.02%)</title><rect x="90.9208%" y="309" width="0.0225%" height="15" fill="rgb(219,67,39)" fg:x="28240" fg:w="7"/><text x="91.1708%" y="319.50"></text></g><g><title>truck_geometry::nurbs::bspsurface::&lt;impl truck_geotrait::traits::surface::ParametricSurface for truck_geometry::nurbs::BSplineSurface&lt;P&gt;&gt;::subs::{{closure}} (658 samples, 2.12%)</title><rect x="90.9466%" y="325" width="2.1185%" height="15" fill="rgb(253,228,2)" fg:x="28248" fg:w="658"/><text x="91.1966%" y="335.50">t..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (10 samples, 0.03%)</title><rect x="96.3168%" y="293" width="0.0322%" height="15" fill="rgb(235,138,27)" fg:x="29916" fg:w="10"/><text x="96.5668%" y="303.50"></text></g><g><title>core::ub_checks::is_aligned_and_not_null (13 samples, 0.04%)</title><rect x="96.3812%" y="277" width="0.0419%" height="15" fill="rgb(236,97,51)" fg:x="29936" fg:w="13"/><text x="96.6312%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_aligned_to (13 samples, 0.04%)</title><rect x="96.3812%" y="261" width="0.0419%" height="15" fill="rgb(240,80,30)" fg:x="29936" fg:w="13"/><text x="96.6312%" y="271.50"></text></g><g><title>core::fmt::Arguments::new_const (13 samples, 0.04%)</title><rect x="96.3812%" y="245" width="0.0419%" height="15" fill="rgb(230,178,19)" fg:x="29936" fg:w="13"/><text x="96.6312%" y="255.50"></text></g><g><title>&lt;cgmath::vector::Vector4&lt;S&gt; as core::ops::arith::Mul&lt;S&gt;&gt;::mul (66 samples, 0.21%)</title><rect x="96.2331%" y="309" width="0.2125%" height="15" fill="rgb(210,190,27)" fg:x="29890" fg:w="66"/><text x="96.4831%" y="319.50"></text></g><g><title>core::slice::raw::from_raw_parts::precondition_check (26 samples, 0.08%)</title><rect x="96.3619%" y="293" width="0.0837%" height="15" fill="rgb(222,107,31)" fg:x="29930" fg:w="26"/><text x="96.6119%" y="303.50"></text></g><g><title>core::ub_checks::is_valid_allocation_size (7 samples, 0.02%)</title><rect x="96.4231%" y="277" width="0.0225%" height="15" fill="rgb(216,127,34)" fg:x="29949" fg:w="7"/><text x="96.6731%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (17 samples, 0.05%)</title><rect x="96.4456%" y="309" width="0.0547%" height="15" fill="rgb(234,116,52)" fg:x="29956" fg:w="17"/><text x="96.6956%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (12 samples, 0.04%)</title><rect x="96.5035%" y="309" width="0.0386%" height="15" fill="rgb(222,124,15)" fg:x="29974" fg:w="12"/><text x="96.7535%" y="319.50"></text></g><g><title>core::cmp::min (4 samples, 0.01%)</title><rect x="96.5293%" y="293" width="0.0129%" height="15" fill="rgb(231,179,28)" fg:x="29982" fg:w="4"/><text x="96.7793%" y="303.50"></text></g><g><title>core::cmp::Ord::min (4 samples, 0.01%)</title><rect x="96.5293%" y="277" width="0.0129%" height="15" fill="rgb(226,93,45)" fg:x="29982" fg:w="4"/><text x="96.7793%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.02%)</title><rect x="96.5454%" y="309" width="0.0161%" height="15" fill="rgb(215,8,51)" fg:x="29987" fg:w="5"/><text x="96.7954%" y="319.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_next (17 samples, 0.05%)</title><rect x="96.5615%" y="309" width="0.0547%" height="15" fill="rgb(223,106,5)" fg:x="29992" fg:w="17"/><text x="96.8115%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (7 samples, 0.02%)</title><rect x="96.6227%" y="309" width="0.0225%" height="15" fill="rgb(250,191,5)" fg:x="30011" fg:w="7"/><text x="96.8727%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::rposition (19 samples, 0.06%)</title><rect x="96.6452%" y="309" width="0.0612%" height="15" fill="rgb(242,132,44)" fg:x="30018" fg:w="19"/><text x="96.8952%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (16 samples, 0.05%)</title><rect x="96.7064%" y="309" width="0.0515%" height="15" fill="rgb(251,152,29)" fg:x="30037" fg:w="16"/><text x="96.9564%" y="319.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (9 samples, 0.03%)</title><rect x="96.7643%" y="309" width="0.0290%" height="15" fill="rgb(218,179,5)" fg:x="30055" fg:w="9"/><text x="97.0143%" y="319.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="96.7933%" y="309" width="0.0161%" height="15" fill="rgb(227,67,19)" fg:x="30064" fg:w="5"/><text x="97.0433%" y="319.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::next (6 samples, 0.02%)</title><rect x="96.8158%" y="309" width="0.0193%" height="15" fill="rgb(233,119,31)" fg:x="30071" fg:w="6"/><text x="97.0658%" y="319.50"></text></g><g><title>core::ub_checks::is_aligned_and_not_null (13 samples, 0.04%)</title><rect x="96.9060%" y="293" width="0.0419%" height="15" fill="rgb(241,120,22)" fg:x="30099" fg:w="13"/><text x="97.1560%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_aligned_to (13 samples, 0.04%)</title><rect x="96.9060%" y="277" width="0.0419%" height="15" fill="rgb(224,102,30)" fg:x="30099" fg:w="13"/><text x="97.1560%" y="287.50"></text></g><g><title>core::fmt::Arguments::new_const (13 samples, 0.04%)</title><rect x="96.9060%" y="261" width="0.0419%" height="15" fill="rgb(210,164,37)" fg:x="30099" fg:w="13"/><text x="97.1560%" y="271.50"></text></g><g><title>core::slice::raw::from_raw_parts::precondition_check (55 samples, 0.18%)</title><rect x="96.8384%" y="309" width="0.1771%" height="15" fill="rgb(226,191,16)" fg:x="30078" fg:w="55"/><text x="97.0884%" y="319.50"></text></g><g><title>core::ub_checks::is_valid_allocation_size (21 samples, 0.07%)</title><rect x="96.9478%" y="293" width="0.0676%" height="15" fill="rgb(214,40,45)" fg:x="30112" fg:w="21"/><text x="97.1978%" y="303.50"></text></g><g><title>truck_geometry::nurbs::bspsurface::&lt;impl truck_geotrait::traits::surface::ParametricSurface for truck_geometry::nurbs::BSplineSurface&lt;P&gt;&gt;::subs::{{closure}}::{{closure}} (1,229 samples, 3.96%)</title><rect x="93.0650%" y="325" width="3.9569%" height="15" fill="rgb(244,29,26)" fg:x="28906" fg:w="1229"/><text x="93.3150%" y="335.50">truc..</text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add::precondition_check (4 samples, 0.01%)</title><rect x="97.0702%" y="309" width="0.0129%" height="15" fill="rgb(216,16,5)" fg:x="30150" fg:w="4"/><text x="97.3202%" y="319.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (7 samples, 0.02%)</title><rect x="97.0895%" y="309" width="0.0225%" height="15" fill="rgb(249,76,35)" fg:x="30156" fg:w="7"/><text x="97.3395%" y="319.50"></text></g><g><title>core::slice::raw::from_raw_parts::precondition_check (11 samples, 0.04%)</title><rect x="97.1120%" y="309" width="0.0354%" height="15" fill="rgb(207,11,44)" fg:x="30163" fg:w="11"/><text x="97.3620%" y="319.50"></text></g><g><title>truck_geometry::nurbs::bspsurface::&lt;impl truck_geotrait::traits::surface::ParametricSurface for truck_geometry::nurbs::BSplineSurface&lt;P&gt;&gt;::subs::{{closure}} (40 samples, 0.13%)</title><rect x="97.0219%" y="325" width="0.1288%" height="15" fill="rgb(228,190,49)" fg:x="30135" fg:w="40"/><text x="97.2719%" y="335.50"></text></g><g><title>truck_geometry::nurbs::bspsurface::&lt;impl truck_geotrait::traits::surface::ParametricSurface for truck_geometry::nurbs::BSplineSurface&lt;P&gt;&gt;::uder::{{closure}} (11 samples, 0.04%)</title><rect x="97.1507%" y="325" width="0.0354%" height="15" fill="rgb(214,173,12)" fg:x="30175" fg:w="11"/><text x="97.4007%" y="335.50"></text></g><g><title>truck_geometry::nurbs::bspsurface::&lt;impl truck_geotrait::traits::surface::ParametricSurface for truck_geometry::nurbs::BSplineSurface&lt;P&gt;&gt;::uder::{{closure}}::{{closure}} (44 samples, 0.14%)</title><rect x="97.1861%" y="325" width="0.1417%" height="15" fill="rgb(218,26,35)" fg:x="30186" fg:w="44"/><text x="97.4361%" y="335.50"></text></g><g><title>truck_geometry::nurbs::bspsurface::&lt;impl truck_geometry::nurbs::BSplineSurface&lt;P&gt;&gt;::udelta_control_points (24 samples, 0.08%)</title><rect x="97.2505%" y="309" width="0.0773%" height="15" fill="rgb(220,200,19)" fg:x="30206" fg:w="24"/><text x="97.5005%" y="319.50"></text></g><g><title>truck_geometry::nurbs::bspsurface::&lt;impl truck_geometry::nurbs::BSplineSurface&lt;P&gt;&gt;::control_point (8 samples, 0.03%)</title><rect x="97.3020%" y="293" width="0.0258%" height="15" fill="rgb(239,95,49)" fg:x="30222" fg:w="8"/><text x="97.5520%" y="303.50"></text></g><g><title>truck_geometry::nurbs::bspsurface::&lt;impl truck_geotrait::traits::surface::ParametricSurface for truck_geometry::nurbs::BSplineSurface&lt;P&gt;&gt;::uuder::{{closure}}::{{closure}} (14 samples, 0.05%)</title><rect x="97.3310%" y="325" width="0.0451%" height="15" fill="rgb(235,85,53)" fg:x="30231" fg:w="14"/><text x="97.5810%" y="335.50"></text></g><g><title>truck_geometry::nurbs::bspsurface::&lt;impl truck_geometry::nurbs::BSplineSurface&lt;P&gt;&gt;::udelta2_control_points (10 samples, 0.03%)</title><rect x="97.3439%" y="309" width="0.0322%" height="15" fill="rgb(233,133,31)" fg:x="30235" fg:w="10"/><text x="97.5939%" y="319.50"></text></g><g><title>truck_geometry::nurbs::bspsurface::&lt;impl truck_geometry::nurbs::BSplineSurface&lt;P&gt;&gt;::udelta_control_points (8 samples, 0.03%)</title><rect x="97.3503%" y="293" width="0.0258%" height="15" fill="rgb(218,25,20)" fg:x="30237" fg:w="8"/><text x="97.6003%" y="303.50"></text></g><g><title>&lt;cgmath::vector::Vector4&lt;S&gt; as core::ops::arith::Mul&lt;S&gt;&gt;::mul (6 samples, 0.02%)</title><rect x="97.4308%" y="309" width="0.0193%" height="15" fill="rgb(252,210,38)" fg:x="30262" fg:w="6"/><text x="97.6808%" y="319.50"></text></g><g><title>truck_geometry::nurbs::bspsurface::&lt;impl truck_geotrait::traits::surface::ParametricSurface for truck_geometry::nurbs::BSplineSurface&lt;P&gt;&gt;::vder::{{closure}}::{{closure}} (29 samples, 0.09%)</title><rect x="97.3986%" y="325" width="0.0934%" height="15" fill="rgb(242,134,21)" fg:x="30252" fg:w="29"/><text x="97.6486%" y="335.50"></text></g><g><title>truck_geometry::nurbs::bspsurface::&lt;impl truck_geometry::nurbs::BSplineSurface&lt;P&gt;&gt;::vdelta_control_points (9 samples, 0.03%)</title><rect x="97.4630%" y="309" width="0.0290%" height="15" fill="rgb(213,28,48)" fg:x="30272" fg:w="9"/><text x="97.7130%" y="319.50"></text></g><g><title>truck_geometry::nurbs::knot_vec::&lt;impl truck_geometry::nurbs::KnotVec&gt;::bspline_basis_functions (21 samples, 0.07%)</title><rect x="97.5016%" y="325" width="0.0676%" height="15" fill="rgb(250,196,2)" fg:x="30284" fg:w="21"/><text x="97.7516%" y="335.50"></text></g><g><title>truck_geometry::nurbs::knot_vec::&lt;impl truck_geometry::nurbs::KnotVec&gt;::floor::{{closure}} (4 samples, 0.01%)</title><rect x="97.5692%" y="325" width="0.0129%" height="15" fill="rgb(227,5,17)" fg:x="30305" fg:w="4"/><text x="97.8192%" y="335.50"></text></g><g><title>truck_geometry::nurbs::inv_or_zero (58 samples, 0.19%)</title><rect x="99.0856%" y="309" width="0.1867%" height="15" fill="rgb(221,226,24)" fg:x="30776" fg:w="58"/><text x="99.3356%" y="319.50"></text></g><g><title>truck_base::tolerance::Origin::so_small (31 samples, 0.10%)</title><rect x="99.1726%" y="293" width="0.0998%" height="15" fill="rgb(211,5,48)" fg:x="30803" fg:w="31"/><text x="99.4226%" y="303.50"></text></g><g><title>truck_geometry::nurbs::knot_vec::&lt;impl truck_geometry::nurbs::KnotVec&gt;::floor (23 samples, 0.07%)</title><rect x="99.2724%" y="309" width="0.0741%" height="15" fill="rgb(219,150,6)" fg:x="30834" fg:w="23"/><text x="99.5224%" y="319.50"></text></g><g><title>truck_geometry::nurbs::knot_vec::&lt;impl truck_geometry::nurbs::KnotVec&gt;::try_bspline_basis_functions (548 samples, 1.76%)</title><rect x="97.5853%" y="325" width="1.7643%" height="15" fill="rgb(251,46,16)" fg:x="30310" fg:w="548"/><text x="97.8353%" y="335.50"></text></g><g><title>&lt;cgmath::vector::Vector4&lt;S&gt; as truck_base::cgmath_extend_traits::Homogeneous&lt;S&gt;&gt;::weight (6 samples, 0.02%)</title><rect x="99.5428%" y="261" width="0.0193%" height="15" fill="rgb(220,204,40)" fg:x="30918" fg:w="6"/><text x="99.7928%" y="271.50"></text></g><g><title>truck_base::cgmath_extend_traits::Homogeneous::to_point (24 samples, 0.08%)</title><rect x="99.4881%" y="277" width="0.0773%" height="15" fill="rgb(211,85,2)" fg:x="30901" fg:w="24"/><text x="99.7381%" y="287.50"></text></g><g><title>truck_geometry::nurbs::bspsurface::&lt;impl truck_geometry::nurbs::BSplineSurface&lt;P&gt;&gt;::udegree (7 samples, 0.02%)</title><rect x="99.7102%" y="245" width="0.0225%" height="15" fill="rgb(229,17,7)" fg:x="30970" fg:w="7"/><text x="99.9602%" y="255.50"></text></g><g><title>truck_geotrait::algo::surface::presearch (129 samples, 0.42%)</title><rect x="99.3529%" y="325" width="0.4153%" height="15" fill="rgb(239,72,28)" fg:x="30859" fg:w="129"/><text x="99.6029%" y="335.50"></text></g><g><title>truck_geometry::nurbs::nurbssurface::&lt;impl truck_geotrait::traits::surface::ParametricSurface for truck_geometry::nurbs::NurbsSurface&lt;V&gt;&gt;::subs (87 samples, 0.28%)</title><rect x="99.4881%" y="309" width="0.2801%" height="15" fill="rgb(230,47,54)" fg:x="30901" fg:w="87"/><text x="99.7381%" y="319.50"></text></g><g><title>truck_geometry::nurbs::nurbssurface::&lt;impl truck_geometry::nurbs::NurbsSurface&lt;V&gt;&gt;::subs (87 samples, 0.28%)</title><rect x="99.4881%" y="293" width="0.2801%" height="15" fill="rgb(214,50,8)" fg:x="30901" fg:w="87"/><text x="99.7381%" y="303.50"></text></g><g><title>truck_geometry::nurbs::bspsurface::&lt;impl truck_geotrait::traits::surface::ParametricSurface for truck_geometry::nurbs::BSplineSurface&lt;P&gt;&gt;::subs (63 samples, 0.20%)</title><rect x="99.5654%" y="277" width="0.2028%" height="15" fill="rgb(216,198,43)" fg:x="30925" fg:w="63"/><text x="99.8154%" y="287.50"></text></g><g><title>truck_geometry::nurbs::bspsurface::&lt;impl truck_geometry::nurbs::BSplineSurface&lt;P&gt;&gt;::degrees (18 samples, 0.06%)</title><rect x="99.7102%" y="261" width="0.0580%" height="15" fill="rgb(234,20,35)" fg:x="30970" fg:w="18"/><text x="99.9602%" y="271.50"></text></g><g><title>truck_geometry::nurbs::bspsurface::&lt;impl truck_geometry::nurbs::BSplineSurface&lt;P&gt;&gt;::vdegree (11 samples, 0.04%)</title><rect x="99.7328%" y="245" width="0.0354%" height="15" fill="rgb(254,45,19)" fg:x="30977" fg:w="11"/><text x="99.9828%" y="255.50"></text></g><g><title>truck_geometry::nurbs::nurbssurface::&lt;impl truck_geotrait::traits::surface::ParametricSurface for truck_geometry::nurbs::NurbsSurface&lt;V&gt;&gt;::uvder (4 samples, 0.01%)</title><rect x="99.7778%" y="309" width="0.0129%" height="15" fill="rgb(219,14,44)" fg:x="30991" fg:w="4"/><text x="100.0278%" y="319.50"></text></g><g><title>truck_geometry::nurbs::nurbssurface::&lt;impl truck_geometry::nurbs::NurbsSurface&lt;V&gt;&gt;::uvder (4 samples, 0.01%)</title><rect x="99.7778%" y="293" width="0.0129%" height="15" fill="rgb(217,220,26)" fg:x="30991" fg:w="4"/><text x="100.0278%" y="303.50"></text></g><g><title>truck_geotrait::algo::surface::search_nearest_parameter (13 samples, 0.04%)</title><rect x="99.7682%" y="325" width="0.0419%" height="15" fill="rgb(213,158,28)" fg:x="30988" fg:w="13"/><text x="100.0182%" y="335.50"></text></g><g><title>truck_geotrait::algo::surface::sub_parameter_division (8 samples, 0.03%)</title><rect x="99.8100%" y="325" width="0.0258%" height="15" fill="rgb(252,51,52)" fg:x="31001" fg:w="8"/><text x="100.0600%" y="335.50"></text></g><g><title>truck_geotrait::algo::surface::sub_parameter_division (4 samples, 0.01%)</title><rect x="99.8229%" y="309" width="0.0129%" height="15" fill="rgb(246,89,16)" fg:x="31005" fg:w="4"/><text x="100.0729%" y="319.50"></text></g><g><title>truck_meshalgo::tessellation::triangulation::PolyBoundary::include::{{closure}} (33 samples, 0.11%)</title><rect x="99.8390%" y="325" width="0.1062%" height="15" fill="rgb(216,158,49)" fg:x="31010" fg:w="33"/><text x="100.0890%" y="335.50"></text></g><g><title>truck_base::tolerance::Origin::so_small (8 samples, 0.03%)</title><rect x="99.9195%" y="309" width="0.0258%" height="15" fill="rgb(236,107,19)" fg:x="31035" fg:w="8"/><text x="100.1695%" y="319.50"></text></g><g><title>truck_meshalgo::tessellation::triangulation::PolyBoundary::include (4 samples, 0.01%)</title><rect x="99.9453%" y="325" width="0.0129%" height="15" fill="rgb(228,185,30)" fg:x="31043" fg:w="4"/><text x="100.1953%" y="335.50"></text></g><g><title>truck_meshalgo::tessellation::triangulation::triangulation_into_polymesh::{{closure}} (8 samples, 0.03%)</title><rect x="99.9581%" y="325" width="0.0258%" height="15" fill="rgb(246,134,8)" fg:x="31047" fg:w="8"/><text x="100.2081%" y="335.50"></text></g><g><title>all (31,060 samples, 100%)</title><rect x="0.0000%" y="357" width="100.0000%" height="15" fill="rgb(214,143,50)" fg:x="0" fg:w="31060"/><text x="0.2500%" y="367.50"></text></g><g><title>test-truck (31,058 samples, 99.99%)</title><rect x="0.0064%" y="341" width="99.9936%" height="15" fill="rgb(228,75,8)" fg:x="2" fg:w="31058"/><text x="0.2564%" y="351.50">test-truck</text></g></svg></svg>